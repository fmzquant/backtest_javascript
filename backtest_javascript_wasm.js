"undefined"==typeof __ctx&&(__ctx={}),__ctx.INITIAL_MEMORY=335544320,"undefined"!=typeof module&&(__ctx.module=module),"undefined"!=typeof exports&&(__ctx.exports=exports),"undefined"==typeof module&&"undefined"==typeof exports||(module=void 0,exports=void 0,print=console.log),!function(n){"use strict";function e(n){var e,i,t,r=n.length-1,s="",o=n[0];if(0<r){for(s+=o,e=1;e<r;e++)t=n[e]+"",(i=Sn-t.length)&&(s+=l(i)),s+=t;o=n[e],(i=Sn-(t=o+"").length)&&(s+=l(i))}else if(0===o)return"0";for(;o%10==0;)o/=10;return s+o}function i(n,e,i){if(n!==~~n||n<e||i<n)throw Error(yn+n)}function t(n,e,i,t){for(var r,u,s=n[0];10<=s;s/=10)--e;return--e<0?(e+=Sn,r=0):(r=Math.ceil((e+1)/Sn),e%=Sn),s=qn(10,Sn-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),i<4&&99999==u||3<i&&49999==u||5e4==u||0==u):(i<4&&u+1==s||3<i&&u+1==s/2)&&(n[r+1]/s/100|0)==qn(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),(t||i<4)&&9999==u||!t&&3<i&&4999==u):((t||i<4)&&u+1==s||!t&&3<i&&u+1==s/2)&&(n[r+1]/s/1e3|0)==qn(10,e-3)-1}function r(n,e,i){for(var t,r,s=[0],o=0,u=n.length;o<u;){for(r=s.length;r--;)s[r]*=e;for(s[0]+=mn.indexOf(n.charAt(o++)),t=0;t<s.length;t++)i-1<s[t]&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i)}return s.reverse()}function o(n,e,i,t){var r,s,o,u,c,h,a,l,d=n.constructor;n:if(null!=e){if(!(a=n.d))return n;for(r=1,u=a[0];10<=u;u/=10)r++;if((s=e-r)<0)s+=Sn,o=e,c=(h=a[l=0])/qn(10,r-o-1)%10|0;else if(l=Math.ceil((s+1)/Sn),(u=a.length)<=l){if(!t)break n;for(;u++<=l;)a.push(0);h=c=0,o=(s%=Sn)-Sn+(r=1)}else{for(h=u=a[l],r=1;10<=u;u/=10)r++;c=(o=(s%=Sn)-Sn+r)<0?0:h/qn(10,r-o-1)%10|0}if(t=t||e<0||void 0!==a[l+1]||(o<0?h:h%qn(10,r-o-1)),c=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):5<c||5==c&&(4==i||t||6==i&&(0<s?0<o?h/qn(10,r-o):0:a[l-1])%10&1||i==(n.s<0?8:7)),e<1||!a[0])return a.length=0,c?(e-=n.e+1,a[0]=qn(10,(Sn-e%Sn)%Sn),n.e=-e||0):a[0]=n.e=0,n;if(0==s?(a.length=l,u=1,l--):(a.length=l+1,u=qn(10,Sn-s),a[l]=0<o?(h/qn(10,r-o)%qn(10,o)|0)*u:0),c)for(;;){if(0==l){for(s=1,o=a[0];10<=o;o/=10)s++;for(o=a[0]+=u,u=1;10<=o;o/=10)u++;s!=u&&(n.e++,a[0]==Rn)&&(a[0]=1);break}if(a[l]+=u,a[l]!=Rn)break;a[l--]=0,u=1}for(s=a.length;0===a[--s];)a.pop()}return En&&(n.e>d.maxE?(n.d=null,n.e=NaN):n.e<d.minE&&(n.e=0,n.d=[0])),n}function u(n,i,t){var r,s,o,u;return n.isFinite()?(s=n.e,u=(o=e(n.d)).length,i?(t&&0<(r=t-u)?o=o.charAt(0)+"."+o.slice(1)+l(r):1<u&&(o=o.charAt(0)+"."+o.slice(1)),o=o+(n.e<0?"e":"e+")+n.e):s<0?(o="0."+l(-s-1)+o,t&&0<(r=t-u)&&(o+=l(r))):u<=s?(o+=l(s+1-u),t&&0<(r=t-s-1)&&(o=o+"."+l(r))):((r=s+1)<u&&(o=o.slice(0,r)+"."+o.slice(r)),t&&0<(r=t-u)&&(s+1===u&&(o+="."),o+=l(r))),o):v(n)}function c(n,e){for(var i=1,t=n[0];10<=t;t/=10)i++;return i+e*Sn-1}function f(n,e,i){if(Un<e)throw En=!0,i&&(n.precision=i),Error(An);return o(new n(vn),e,1,!0)}function h(n,e,i){if(_n<e)throw Error(An);return o(new n(Nn),e,i,!0)}function a(n){var e=n.length-1,i=e*Sn+1;if(e=n[e]){for(;e%10==0;e/=10)i--;for(e=n[0];10<=e;e/=10)i++}return i}function l(n){for(var e="";n--;)e+="0";return e}function d(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/Sn+4);for(En=!1;;){if(i%2&&A((s=s.times(e)).d,o)&&(r=!0),0===(i=On(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break}A((e=e.times(e)).d,o)}return En=!0,s}function g(n){return 1&n.d[n.d.length-1]}function p(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break}r[i](t)&&(r=t)}return r}function w(n,i){var r,s,u,c,f,h,a,l=0,d=0,g=0,p=n.constructor,w=p.rounding,m=p.precision;if(!n.d||!n.d[0]||17<n.e)return new p(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(a=null==i?(En=!1,m):i,h=new p(.03125);-2<n.e;)n=n.times(h),g+=5;for(a+=s=Math.log(qn(2,g))/Math.LN10*2+5|0,r=c=f=new p(1),p.precision=a;;){if(c=o(c.times(n),a,1),r=r.times(++d),e((h=f.plus(Tn(c,r,a,1))).d).slice(0,a)===e(f.d).slice(0,a)){for(u=g;u--;)f=o(f.times(f),a,1);if(null!=i)return p.precision=m,f;if(!(l<3&&t(f.d,a-s,w,l)))return o(f,p.precision=m,w,En=!0);p.precision=a+=10,r=c=h=new p(1),d=0,l++}f=h}}function m(n,i){var r,s,u,c,h,a,l,d,g,p,w,v=1,x=n,b=x.d,E=x.constructor,M=E.rounding,y=E.precision;if(x.s<0||!b||!b[0]||!x.e&&1==b[0]&&1==b.length)return new E(b&&!b[0]?-1/0:1!=x.s?NaN:b?0:x);if(g=null==i?(En=!1,y):i,E.precision=g+=10,s=(r=e(b)).charAt(0),!(Math.abs(c=x.e)<15e14))return d=f(E,g+2,y).times(c+""),x=m(new E(s+"."+r.slice(1)),g-10).plus(d),E.precision=y,null==i?o(x,y,M,En=!0):x;for(;s<7&&1!=s||1==s&&3<r.charAt(1);)s=(r=e((x=x.times(n)).d)).charAt(0),v++;for(c=x.e,1<s?(x=new E("0."+r),c++):x=new E(s+"."+r.slice(1)),l=h=x=Tn((p=x).minus(1),x.plus(1),g,1),w=o(x.times(x),g,1),u=3;;){if(h=o(h.times(w),g,1),e((d=l.plus(Tn(h,new E(u),g,1))).d).slice(0,g)===e(l.d).slice(0,g)){if(l=l.times(2),0!==c&&(l=l.plus(f(E,g+2,y).times(c+""))),l=Tn(l,new E(v),g,1),null!=i)return E.precision=y,l;if(!t(l.d,g-10,M,a))return o(l,E.precision=y,M,En=!0);E.precision=g+=10,d=h=x=Tn(p.minus(1),p.plus(1),g,1),w=o(x.times(x),g,1),u=a=1}l=d,u+=2}}function v(n){return String(n.s*n.s/0)}function N(n,e){var i,t,r;for(0<(t=(e=-1<(i=e.indexOf("."))?e.replace(".",""):e).search(/e/i))?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++);for(r=e.length;48===e.charCodeAt(r-1);--r);if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%Sn,i<0&&(t+=Sn),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=Sn;t<r;)n.d.push(+e.slice(t,t+=Sn));e=e.slice(t),t=Sn-e.length}else t-=r;for(;t--;)e+="0";n.d.push(+e),En&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function x(n,e){var i,t,s,o,u,f,h,a;if("Infinity"===e||"NaN"===e)return+e||(n.s=NaN),n.e=NaN,n.d=null,n;if(Dn.test(e))i=16,e=e.toLowerCase();else if(Fn.test(e))i=2;else{if(!Zn.test(e))throw Error(yn+e);i=8}for(o=(e=0<(o=e.search(/p/i))?(h=+e.slice(o+1),e.substring(2,o)):e.slice(2)).indexOf("."),t=n.constructor,(u=0<=o)&&(o=(f=(e=e.replace(".","")).length)-o,s=d(t,new t(i),o,2*o)),o=e=(a=r(e,i,Rn)).length-1;0===a[o];--o)a.pop();return o<0?new t(0*n.s):(n.e=c(a,e),n.d=a,En=!1,u&&(n=Tn(n,s,4*f)),h&&(n=n.times((Math.abs(h)<54?Math:xn).pow(2,h))),En=!0,n)}function E(n,e,i,t,r){var s,o,u,c,h=n.precision,a=Math.ceil(h/Sn);for(En=!1,c=i.times(i),u=new n(t);;){if(o=Tn(u.times(c),new n(e++*e++),h,1),u=r?t.plus(o):t.minus(o),t=Tn(o.times(c),new n(e++*e++),h,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;);if(-1==s)break}s=u,u=t,t=o,o=s,0}return En=!0,o.d.length=a+1,o}function M(n,e){var i,t=e.s<0,n=h(n,n.precision,1),s=n.times(.5);if((e=e.abs()).lte(s))return gn=t?4:1,e;if((i=e.divToInt(n)).isZero())gn=t?3:2;else{if((e=e.minus(i.times(n))).lte(s))return gn=g(i)?t?2:3:t?4:1,e;gn=g(i)?t?1:4:t?3:2}return e.minus(n).abs()}function y(n,e,t,s){var o,c,f,a,l,d,g,p,w=n.constructor,m=void 0!==t;if(m?(i(t,1,wn),void 0===s?s=w.rounding:i(s,0,8)):(t=w.precision,s=w.rounding),n.isFinite()){for(m?(o=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):o=e,0<=(f=(d=u(n)).indexOf("."))&&(d=d.replace(".",""),(p=new w(1)).e=d.length-f,p.d=r(u(p),10,o),p.e=p.d.length),c=a=(g=r(d,10,o)).length;0==g[--a];)g.pop();if(g[0]){if(f<0?c--:((n=new w(n)).d=g,n.e=c,g=(n=Tn(n,p,t,s,0,o)).d,c=n.e,l=ln),f=g[t],w=o/2,l=l||void 0!==g[t+1],l=s<4?(void 0!==f||l)&&(0===s||s===(n.s<0?3:2)):w<f||f===w&&(4===s||l||6===s&&1&g[t-1]||s===(n.s<0?8:7)),g.length=t,l)for(;++g[--t]>o-1;)g[t]=0,t||(++c,g.unshift(1));for(a=g.length;!g[a-1];--a);for(f=0,d="";f<a;f++)d+=mn.charAt(g[f]);if(m){if(1<a)if(16==e||8==e){for(f=16==e?4:3,--a;a%f;a++)d+="0";for(a=(g=r(d,o,e)).length;!g[a-1];--a);for(f=1,d="1.";f<a;f++)d+=mn.charAt(g[f])}else d=d.charAt(0)+"."+d.slice(1);d=d+(c<0?"p":"p+")+c}else if(c<0){for(;++c;)d="0"+d;d="0."+d}else if(++c>a)for(c-=a;c--;)d+="0";else c<a&&(d=d.slice(0,c)+"."+d.slice(c))}else d=m?"0p+0":"0";d=(16==e?"0x":2==e?"0b":8==e?"0o":"")+d}else d=v(n);return n.s<0?"-"+d:d}function A(n,e){return n.length>e&&(n.length=e,1)}function O(n){return new this(n).abs()}function q(n){return new this(n).acos()}function F(n){return new this(n).acosh()}function D(n,e){return new this(n).plus(e)}function Z(n){return new this(n).asin()}function P(n){return new this(n).asinh()}function R(n){return new this(n).atan()}function S(n){return new this(n).atanh()}function L(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?h(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=h(this,s,1).times(.5)).s=n.s:i=e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Tn(n,e,s,1)),e=h(this,s,1),this.precision=t,this.rounding=r,n.s<0?i.minus(e):i.plus(e)):this.atan(Tn(n,e,s,1)):(i=h(this,s,1).times(0<e.s?.25:.75)).s=n.s:i=new this(NaN),i}function U(n){return new this(n).cbrt()}function _(n){return o(n=new this(n),n.e+1,2)}function k(n){if(!n||"object"!=typeof n)throw Error(Mn+"Object expected");for(var i,t,r=["precision",1,wn,"rounding",0,8,"toExpNeg",-pn,0,"toExpPos",0,pn,"maxE",0,pn,"minE",-pn,0,"modulo",0,9],e=0;e<r.length;e+=3)if(void 0!==(t=n[i=r[e]])){if(!(On(t)===t&&r[e+1]<=t&&t<=r[e+2]))throw Error(yn+i+": "+t);this[i]=t}if(n.hasOwnProperty(i="crypto"))if(void 0===(t=n[i]))this[i]=t;else{if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(yn+i+": "+t);this[i]=!(!t||!bn||!bn.getRandomValues&&!bn.randomBytes)}return this}function T(n){return new this(n).cos()}function C(n){return new this(n).cosh()}function H(n,e){return new this(n).div(e)}function B(n){return new this(n).exp()}function V(n){return o(n=new this(n),n.e+1,3)}function j(n){var e,i,t,s;if("string"!=typeof n||!n)throw Error(yn+n);if(t=n.length,s=mn.indexOf(n.charAt(0)),1===t)return new this(81<s?[-1/0,1/0,NaN][s-82]:40<s?-(s-41):s);if(64&s)e=(i=16&s)?(7&s)-3:(15&s)-7,t=1;else{if(2===t)return new this(2816<=(s=88*s+mn.indexOf(n.charAt(1)))?-(s-2816)-41:s+41);if(i=32&s,!(31&s))return n=r(n.slice(1),88,10).join(""),new this(i?"-"+n:n);t=(e=15&s)+1,e=1===e?mn.indexOf(n.charAt(1)):2===e?88*mn.indexOf(n.charAt(1))+mn.indexOf(n.charAt(2)):+r(n.slice(1,t),88,10).join(""),16&s&&(e=-e)}return n=(n=r(n.slice(t),88,10).join(""))+"e"+(e=e-n.length+1),new this(i?"-"+n:n)}function $(){var n,e,i=new this(0);for(En=!1,n=0;n<arguments.length;)if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return En=!0,new this(1/0);i=e}return En=!0,i.sqrt()}function J(n){return new this(n).ln()}function W(n,e){return new this(n).log(e)}function z(n){return new this(n).log(2)}function G(n){return new this(n).log(10)}function K(){return p(this,arguments,"lt")}function Q(){return p(this,arguments,"gt")}function X(n,e){return new this(n).mod(e)}function Y(n,e){return new this(n).mul(e)}function nn(n,e){return new this(n).pow(e)}function en(n){var e,t,r,s,o=0,u=new this(1),c=[];if(void 0===n?n=this.precision:i(n,1,wn),r=Math.ceil(n/Sn),!1===this.crypto)for(;o<r;)c[o++]=1e7*Math.random()|0;else if(bn&&bn.getRandomValues)for(e=bn.getRandomValues(new Uint32Array(r));o<r;)429e7<=(s=e[o])?e[o]=bn.getRandomValues(new Uint32Array(1))[0]:c[o++]=s%1e7;else if(bn&&bn.randomBytes){for(e=bn.randomBytes(r*=4);o<r;)214e7<=(s=e[o]+(e[o+1]<<8)+(e[o+2]<<16)+((127&e[o+3])<<24))?bn.randomBytes(4).copy(e,o):(c.push(s%1e7),o+=4);o=r/4}else{if(this.crypto)throw Error(Mn+"crypto unavailable");for(;o<r;)c[o++]=1e7*Math.random()|0}for(r=c[--o],n%=Sn,r&&n&&(s=qn(10,Sn-n),c[o]=(r/s|0)*s);0===c[o];o--)c.pop();if(o<0)c=[t=0];else{for(t=-1;0===c[0];t-=Sn)c.shift();for(r=1,s=c[0];10<=s;s/=10)r++;r<Sn&&(t-=Sn-r)}return u.e=t,u.d=c,u}function tn(n){return o(n=new this(n),n.e+1,this.rounding)}function rn(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN}function sn(n){return new this(n).sin()}function on(n){return new this(n).sinh()}function un(n){return new this(n).sqrt()}function cn(n,e){return new this(n).sub(e)}function fn(n){return new this(n).tan()}function hn(n){return new this(n).tanh()}function an(n){return o(n=new this(n),n.e+1,1)}var ln,dn,gn,pn=9e15,wn=1e9,mn="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%()*+,-./:;=?@[]^_`{|}~",vn="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",Nn="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",xn={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-pn,maxE:pn,crypto:void 0},bn=void 0!==crypto?crypto:null,En=!0,Mn="[DecimalError] ",yn=Mn+"Invalid argument: ",An=Mn+"Precision limit exceeded",On=Math.floor,qn=Math.pow,Fn=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,Dn=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,Zn=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,Pn=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,Rn=1e7,Sn=7,Un=vn.length-1,_n=Nn.length-1,kn={},Tn=(kn.absoluteValue=kn.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),o(n)},kn.ceil=function(){return o(new this.constructor(this),this.e+1,2)},kn.comparedTo=kn.cmp=function(n){var e,i,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(f=o.length)<(s=u.length)?f:s;e<i;++e)if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;return f===s?0:s<f^c<0?1:-1},kn.cosine=kn.cos=function(){var n,e,i=this,t=i.constructor;return i.d?i.d[0]?(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+Sn,t.rounding=1,i=function(n,e){var i,r=(r=e.d.length)<32?(i=Math.ceil(r/3),Math.pow(4,-i).toString()):(i=16,"2.3283064365386962890625e-10");n.precision+=i,e=E(n,1,e.times(r),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1)}return n.precision-=i,e}(t,M(t,i)),t.precision=n,t.rounding=e,o(2==gn||3==gn?i.neg():i,n,e,!0)):new t(1):new t(NaN)},kn.cubeRoot=kn.cbrt=function(){var n,i,t,r,s,u,c,f,h,a,l=this,d=l.constructor;if(!l.isFinite()||l.isZero())return new d(l);for(En=!1,(u=l.s*Math.pow(l.s*l,1/3))&&Math.abs(u)!=1/0?r=new d(u.toString()):(t=e(l.d),(u=((n=l.e)-t.length+1)%3)&&(t+=1==u||-2==u?"0":"00"),u=Math.pow(t,1/3),n=On((n+1)/3)-(n%3==(n<0?-1:2)),(r=new d(t=u==1/0?"5e"+n:(t=u.toExponential()).slice(0,t.indexOf("e")+1)+n)).s=l.s),c=(n=d.precision)+3;;)if(a=(h=(f=r).times(f).times(f)).plus(l),r=Tn(a.plus(l).times(f),a.plus(h),c+2,1),e(f.d).slice(0,c)===(t=e(r.d)).slice(0,c)){if("9999"!=(t=t.slice(c-3,c+1))&&(s||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(o(r,n+1,1),i=!r.times(r).times(r).eq(l));break}if(!s&&(o(f,n+1,0),f.times(f).times(f).eq(l))){r=f;break}c+=4,s=1}return En=!0,o(r,n,d.rounding,i)},kn.decimalPlaces=kn.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-On(this.e/Sn))*Sn,n=e[n])for(;n%10==0;n/=10)i--;i<0&&(i=0)}return i},kn.dividedBy=kn.div=function(n){return Tn(this,new this.constructor(n))},kn.dividedToIntegerBy=kn.divToInt=function(n){var i=this.constructor;return o(Tn(this,new i(n),0,1,1),i.precision,i.rounding)},kn.equals=kn.eq=function(n){return 0===this.cmp(n)},kn.floor=function(){return o(new this.constructor(this),this.e+1,3)},kn.greaterThan=kn.gt=function(n){return 0<this.cmp(n)},kn.greaterThanOrEqualTo=kn.gte=function(n){n=this.cmp(n);return 1==n||0===n},kn.hyperbolicCosine=kn.cosh=function(){var n,i,t,u=(s=this).constructor,c=new u(1);if(!s.isFinite())return new u(s.s?1/0:NaN);if(s.isZero())return c;i=u.precision,t=u.rounding,u.precision=i+Math.max(s.e,s.sd())+4,u.rounding=1;for(var f,r=(r=s.d.length)<32?(n=Math.ceil(r/3),Math.pow(4,-n).toString()):(n=16,"2.3283064365386962890625e-10"),s=E(u,1,s.times(r),new u(1),!0),h=n,a=new u(8);h--;)f=s.times(s),s=c.minus(f.times(a.minus(f.times(a))));return o(s,u.precision=i,u.rounding=t,!0)},kn.hyperbolicSine=kn.sinh=function(){var e,i,t,s=(r=this).constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=E(s,2,r,r,!0);else for(var u,n=16<(n=1.4*Math.sqrt(t))?16:0|n,r=E(s,2,r=r.times(Math.pow(5,-n)),r,!0),c=new s(5),f=new s(16),h=new s(20);n--;)u=r.times(r),r=r.times(c.plus(u.times(f.times(u).plus(h))));return o(r,s.precision=e,s.rounding=i,!0)},kn.hyperbolicTangent=kn.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Tn(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s)},kn.inverseCosine=kn.acos=function(){var e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?h(i,r,s):new i(0):new i(NaN):e.isZero()?h(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),t=h(i,r+4,s).times(.5),i.precision=r,i.rounding=s,t.minus(e))},kn.inverseHyperbolicCosine=kn.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,En=!1,i=i.times(i).minus(1).sqrt().plus(i),En=!0,t.precision=n,t.rounding=e,i.ln()):new t(i)},kn.inverseHyperbolicSine=kn.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,En=!1,i=i.times(i).plus(1).sqrt().plus(i),En=!0,t.precision=n,t.rounding=e,i.ln())},kn.inverseHyperbolicTangent=kn.atanh=function(){var n,e,t,r=this,s=r.constructor;return r.isFinite()?0<=r.e?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?o(new s(r),n,e,!0):(s.precision=t=t-r.e,r=Tn(r.plus(1),new s(1).minus(r),t+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN)},kn.inverseSine=kn.asin=function(){var e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((e=h(s,i+4,t).times(.5)).s=r.s,e):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)))},kn.inverseTangent=kn.atan=function(){var n,e,i,t,r,s,u,c,f,a=this,l=a.constructor,d=l.precision,g=l.rounding;if(a.isFinite()){if(a.isZero())return new l(a);if(a.abs().eq(1)&&d+4<=_n)return(u=h(l,d+4,g).times(.25)).s=a.s,u}else{if(!a.s)return new l(NaN);if(d+4<=_n)return(u=h(l,d+4,g).times(.5)).s=a.s,u}for(l.precision=c=d+10,l.rounding=1,n=i=Math.min(28,c/Sn+2|0);n;--n)a=a.div(a.times(a).plus(1).sqrt().plus(1));for(En=!1,e=Math.ceil(c/Sn),t=1,f=a.times(a),u=new l(a),r=a;-1!==n;)if(r=r.times(f),s=u.minus(r.div(t+=2)),r=r.times(f),void 0!==(u=s.plus(r.div(t+=2))).d[e])for(n=e;u.d[n]===s.d[n]&&n--;);return i&&(u=u.times(2<<i-1)),En=!0,o(u,l.precision=d,l.rounding=g,!0)},kn.isFinite=function(){return!!this.d},kn.isInteger=kn.isInt=function(){return!!this.d&&On(this.e/Sn)>this.d.length-2},kn.isNaN=function(){return!this.s},kn.isNegative=kn.isNeg=function(){return this.s<0},kn.isPositive=kn.isPos=function(){return 0<this.s},kn.isZero=function(){return!!this.d&&0===this.d[0]},kn.lessThan=kn.lt=function(n){return this.cmp(n)<0},kn.lessThanOrEqualTo=kn.lte=function(n){return this.cmp(n)<1},kn.logarithm=kn.log=function(n){var i,r,s,u,c,h,a,l,d=this,g=d.constructor,p=g.precision,w=g.rounding;if(null==n)n=new g(10),i=!0;else{if(r=(n=new g(n)).d,n.s<0||!r||!r[0]||n.eq(1))return new g(NaN);i=n.eq(10)}if(r=d.d,d.s<0||!r||!r[0]||d.eq(1))return new g(r&&!r[0]?-1/0:1!=d.s?NaN:r?0:1/0);if(i)if(1<r.length)c=!0;else{for(u=r[0];u%10==0;)u/=10;c=1!==u}if(En=!1,h=m(d,a=p+5),s=i?f(g,a+10):m(n,a),t((l=Tn(h,s,a,1)).d,u=p,w))do{if(h=m(d,a+=10),s=i?f(g,a+10):m(n,a),l=Tn(h,s,a,1),!c){+e(l.d).slice(u+1,u+15)+1==1e14&&(l=o(l,p+1,0));break}}while(t(l.d,u+=10,w));return En=!0,o(l,p,w)},kn.minus=kn.sub=function(n){var e,i,t,r,s,u,f,h,a,d,g,p=this,w=p.constructor;if(n=new w(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new w(n.d||p.s!==n.s?p:NaN):n=new w(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(a=p.d,g=n.d,f=w.precision,h=w.rounding,!a[0]||!g[0]){if(g[0])n.s=-n.s;else{if(!a[0])return new w(3===h?-0:0);n=new w(p)}return En?o(n,f,h):n}if(i=On(n.e/Sn),p=On(p.e/Sn),a=a.slice(),s=p-i){for(u=((d=s<0)?(e=a,s=-s,g):(e=g,i=p,a)).length,(t=Math.max(Math.ceil(f/Sn),u)+2)<s&&(s=t,e.length=1),e.reverse(),t=s;t--;)e.push(0);e.reverse()}else{for((d=(t=a.length)<(u=g.length))&&(u=t),t=0;t<u;t++)if(a[t]!=g[t]){d=a[t]<g[t];break}s=0}for(d&&(e=a,a=g,g=e,n.s=-n.s),u=a.length,t=g.length-u;0<t;--t)a[u++]=0;for(t=g.length;s<t;){if(a[--t]<g[t]){for(r=t;r&&0===a[--r];)a[r]=Rn-1;--a[r],a[t]+=Rn}a[t]-=g[t]}for(;0===a[--u];)a.pop();for(;0===a[0];a.shift())--i;return a[0]?(n.d=a,n.e=c(a,i),En?o(n,f,h):n):new w(3===h?-0:0)},kn.modulo=kn.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?o(new t(i),t.precision,t.rounding):(En=!1,9==t.modulo?(e=Tn(i,n.abs(),0,3,1)).s*=n.s:e=Tn(i,n,0,t.modulo,1),e=e.times(n),En=!0,i.minus(e))},kn.naturalExponential=kn.exp=function(){return w(this)},kn.naturalLogarithm=kn.ln=function(){return m(this)},kn.negated=kn.neg=function(){var n=new this.constructor(this);return n.s=-n.s,o(n)},kn.plus=kn.add=function(n){var e,i,t,r,s,u,f,h,a,l,d=this,g=d.constructor;if(n=new g(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new g(n.d||d.s===n.s?d:NaN)):n=new g(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(a=d.d,l=n.d,f=g.precision,h=g.rounding,a[0]&&l[0]){if(s=On(d.e/Sn),t=On(n.e/Sn),a=a.slice(),r=s-t){for((u=(u=(r<0?(i=a,r=-r,l):(i=l,t=s,a)).length)<(s=Math.ceil(f/Sn))?s+1:u+1)<r&&(r=u,i.length=1),i.reverse();r--;)i.push(0);i.reverse()}for((u=a.length)-(r=l.length)<0&&(r=u,i=l,l=a,a=i),e=0;r;)e=(a[--r]=a[r]+l[r]+e)/Rn|0,a[r]%=Rn;for(e&&(a.unshift(e),++t),u=a.length;0==a[--u];)a.pop();n.d=a,n.e=c(a,t)}else l[0]||(n=new g(d));return En?o(n,f,h):n},kn.precision=kn.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(yn+n);return i.d?(e=a(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e},kn.round=function(){var n=this,e=n.constructor;return o(new e(n),n.e+1,e.rounding)},kn.sine=kn.sin=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+Sn,t.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return E(n,2,e,e);i=16<(i=1.4*Math.sqrt(t))?16:0|i,e=E(n,2,e=e.times(Math.pow(5,-i)),e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;)r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));return e}(t,M(t,i)),t.precision=n,t.rounding=e,o(2<gn?i.neg():i,n,e,!0)):new t(NaN)},kn.squareRoot=kn.sqrt=function(){var n,i,t,r,s,u,c=this,f=c.d,h=c.e,a=c.s,l=c.constructor;if(1!==a||!f||!f[0])return new l(!a||a<0&&(!f||f[0])?NaN:f?c:1/0);for(En=!1,r=0==(a=Math.sqrt(+c))||a==1/0?(((i=e(f)).length+h)%2==0&&(i+="0"),a=Math.sqrt(i),h=On((h+1)/2)-(h<0||h%2),new l(i=a==1/0?"1e"+h:(i=a.toExponential()).slice(0,i.indexOf("e")+1)+h)):new l(a.toString()),t=(h=l.precision)+3;;)if(r=(u=r).plus(Tn(c,u,t+2,1)).times(.5),e(u.d).slice(0,t)===(i=e(r.d)).slice(0,t)){if("9999"!=(i=i.slice(t-3,t+1))&&(s||"4999"!=i)){+i&&(+i.slice(1)||"5"!=i.charAt(0))||(o(r,h+1,1),n=!r.times(r).eq(c));break}if(!s&&(o(u,h+1,0),u.times(u).eq(c))){r=u;break}t+=4,s=1}return En=!0,o(r,h,l.rounding,n)},kn.tangent=kn.tan=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+10,t.rounding=1,(i=i.sin()).s=1,i=Tn(i,new t(1).minus(i.times(i)).sqrt(),n+10,0),t.precision=n,t.rounding=e,o(2==gn||4==gn?i.neg():i,n,e,!0)):new t(NaN)},kn.times=kn.mul=function(n){var e,t,r,s,u,f,h,a,l=this,d=l.constructor,g=l.d,p=(n=new d(n)).d;if(n.s*=l.s,!(g&&g[0]&&p&&p[0]))return new d(!n.s||g&&!g[0]&&!p||p&&!p[0]&&!g?NaN:g&&p?0*n.s:n.s/0);for(l=On(l.e/Sn)+On(n.e/Sn),(h=g.length)<(a=p.length)&&(s=g,g=p,p=s,u=h,h=a,a=u),s=[],t=u=h+a;t--;)s.push(0);for(t=a;0<=--t;){for(e=0,r=h+t;t<r;)f=s[r]+p[t]*g[r-t-1]+e,s[r--]=f%Rn|0,e=f/Rn|0;s[r]=(s[r]+e)%Rn|0}for(;!s[--u];)s.pop();for(e?++l:s.shift(),t=s.length;!s[--t];)s.pop();return n.d=s,n.e=c(s,l),En?o(n,d.precision,d.rounding):n},kn.toBinary=function(n,e){return y(this,2,n,e)},kn.toDecimalPlaces=kn.toDP=function(n,e){var r=this.constructor,t=new r(this);return void 0===n?t:(i(n,0,wn),void 0===e?e=r.rounding:i(e,0,8),o(t,n+t.e+1,e))},kn.toExponential=function(n,e){var r=this,s=r.constructor,s=void 0===n?u(r,!0):(i(n,0,wn),void 0===e?e=s.rounding:i(e,0,8),u(r=o(new s(r),n+1,e),!0,n+1));return r.isNeg()&&!r.isZero()?"-"+s:s},kn.toFixed=function(n,e){var s=this,c=s.constructor,e=void 0===n?u(s):(i(n,0,wn),void 0===e?e=c.rounding:i(e,0,8),u(c=o(new c(s),n+s.e+1,e),!1,n+c.e+1));return s.isNeg()&&!s.isZero()?"-"+e:e},kn.toFraction=function(n){var i,t,r,s,o,c,f,h,u,d,p=this,w=p.d,m=p.constructor;if(!w)return new m(p);if(h=t=new m(1),r=f=new m(0),o=(i=new m(r)).e=a(w)-p.e-1,i.d[0]=qn(10,(u=o%Sn)<0?Sn+u:u),null==n)n=0<o?i:h;else{if(!(c=new m(n)).isInt()||c.lt(h))throw Error(yn+c);n=c.gt(i)?0<o?i:h:c}for(En=!1,c=new m(e(w)),u=m.precision,m.precision=o=w.length*Sn*2;d=Tn(c,i,0,1,1),1!=(s=t.plus(d.times(r))).cmp(n);)t=r,r=s,s=h,h=f.plus(d.times(s)),f=s,s=i,i=c.minus(d.times(s)),c=s;return s=Tn(n.minus(t),r,0,1,1),f=f.plus(s.times(h)),t=t.plus(s.times(r)),f.s=h.s=p.s,w=Tn(h,r,o,1).minus(p).abs().cmp(Tn(f,t,o,1).minus(p).abs())<1?[h,r]:[f,t],m.precision=u,En=!0,w},kn.toHexadecimal=kn.toHex=function(n,e){return y(this,16,n,e)},kn.toJSON=function(){var n,i,t,s,o,u,c,h=this,a=h.s<0;if(!h.d)return mn.charAt(h.s?a?82:83:84);if(i=h.e,1===h.d.length&&i<4&&0<=i&&(u=h.d[0])<2857)return u<41?mn.charAt(a?u+41:u):(u-=41,a&&(u+=2816),mn.charAt(s=u/88|0)+mn.charAt(u-88*s));if(h=e(h.d),c="",!a&&i<=8&&-7<=i)s=64+i+7;else if(a&&i<=4&&-3<=i)s=80+i+3;else if(h.length===i+1)s=32*a;else if(s=32*a+16*(i<0),(i=Math.abs(i))<88)s+=1,c=mn.charAt(i);else if(i<7744)s+=2,c=mn.charAt(u=i/88|0)+mn.charAt(i-88*u);else for(s+=o=(n=r(String(i),10,88)).length,t=0;t<o;t++)c+=mn.charAt(n[t]);for(c=mn.charAt(s)+c,o=(n=r(h,10,88)).length,t=0;t<o;t++)c+=mn.charAt(n[t]);return c},kn.toNearest=function(n,e){var r=(t=this).constructor,t=new r(t);if(null==n){if(!t.d)return t;n=new r(1),e=r.rounding}else{if(n=new r(n),void 0!==e&&i(e,0,8),!t.d)return n.s?t:n;if(!n.d)return n.s&&(n.s=t.s),n}return n.d[0]?(En=!1,t=Tn(t,n,0,e=e<4?[4,5,7,8][e]:e,1).times(n),En=!0,o(t)):(n.s=t.s,t=n),t},kn.toNumber=function(){return+this},kn.toOctal=function(n,e){return y(this,8,n,e)},kn.toPower=kn.pow=function(n){var i,r,s,u,c,f,a=this,l=a.constructor,g=+(n=new l(n));if(!(a.d&&n.d&&a.d[0]&&n.d[0]))return new l(qn(+a,g));if((a=new l(a)).eq(1))return a;if(s=l.precision,c=l.rounding,n.eq(1))return o(a,s,c);if(i=On(n.e/Sn),r=n.d.length-1,f=a.s,r<=i){if((r=g<0?-g:g)<=9007199254740991)return u=d(l,a,r,s),n.s<0?new l(1).div(u):o(u,s,c)}else if(f<0)return new l(NaN);return f=f<0&&1&n.d[Math.max(i,r)]?-1:1,(i=0!=(r=qn(+a,g))&&isFinite(r)?new l(r+"").e:On(g*(Math.log("0."+e(a.d))/Math.LN10+a.e+1)))>l.maxE+1||i<l.minE-1?new l(0<i?f/0:0):(En=!1,l.rounding=a.s=1,r=Math.min(12,(i+"").length),(u=t((u=o(u=w(n.times(m(a,s+r)),s),s+5,1)).d,s,c)&&+e((u=o(w(n.times(m(a,(i=s+10)+r)),i),i+5,1)).d).slice(s+1,s+15)+1==1e14?o(u,s+1,0):u).s=f,En=!0,o(u,s,l.rounding=c))},kn.toPrecision=function(n,e){var r=this,s=r.constructor,e=void 0===n?u(r,r.e<=s.toExpNeg||r.e>=s.toExpPos):(i(n,1,wn),void 0===e?e=s.rounding:i(e,0,8),u(r=o(new s(r),n,e),n<=r.e||r.e<=s.toExpNeg,n));return r.isNeg()&&!r.isZero()?"-"+e:e},kn.toSignificantDigits=kn.toSD=function(n,e){var r=this.constructor;return void 0===n?(n=r.precision,e=r.rounding):(i(n,1,wn),void 0===e?e=r.rounding:i(e,0,8)),o(new r(this),n,e)},kn.toString=function(){var n=this,e=n.constructor,e=u(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?"-"+e:e},kn.truncated=kn.trunc=function(){return o(new this.constructor(this),this.e+1,1)},kn.valueOf=function(){var n=this,e=n.constructor,e=u(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?"-"+e:e},function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;)t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;return r&&n.unshift(r),n}function e(n,e,i,t){var r,s;if(i!=t)s=t<i?1:-1;else for(r=s=0;r<i;r++)if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break}return s}function i(n,e,i,t){for(var r=0;i--;)n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];for(;!n[0]&&1<n.length;)n.shift()}return function(t,r,s,u,c,f){var h,a,l,d,g,p,w,m,N,x,b,E,M,y,A,O,q,F,D,Z=t.constructor,P=t.s==r.s?1:-1,R=t.d,S=r.d;if(!(R&&R[0]&&S&&S[0]))return new Z(t.s&&r.s&&(R?!S||R[0]!=S[0]:S)?R&&0==R[0]||!S?0*P:P/0:NaN);for(a=f?(g=1,t.e-r.e):(f=Rn,On(t.e/(g=Sn))-On(r.e/g)),F=S.length,O=R.length,N=(P=new Z(P)).d=[],l=0;S[l]==(R[l]||0);l++);if(S[l]>(R[l]||0)&&a--,null==s?(M=s=Z.precision,u=Z.rounding):M=c?s+(t.e-r.e)+1:s,M<0)N.push(1),p=!0;else{if(M=M/g+2|0,l=0,1==F){for(S=S[d=0],M++;(l<O||d)&&M--;l++)y=d*f+(R[l]||0),N[l]=y/S|0,d=y%S|0;p=d||l<O}else{for(1<(d=f/(S[0]+1)|0)&&(S=n(S,d,f),R=n(R,d,f),F=S.length,O=R.length),A=F,b=(x=R.slice(0,F)).length;b<F;)x[b++]=0;for((D=S.slice()).unshift(0),q=S[0],S[1]>=f/2&&++q;d=0,(h=e(S,x,F,b))<0?(E=x[0],1<(d=(E=F!=b?E*f+(x[1]||0):E)/q|0)?1==(h=e(w=n(S,d=f<=d?f-1:d,f),x,m=w.length,b=x.length))&&(d--,i(w,F<m?D:S,m,f)):(0==d&&(h=d=1),w=S.slice()),(m=w.length)<b&&w.unshift(0),i(x,w,b,f),-1==h&&(h=e(S,x,F,b=x.length))<1&&(d++,i(x,F<b?D:S,b,f)),b=x.length):0===h&&(d++,x=[0]),N[l++]=d,h&&x[0]?x[b++]=R[A]||0:(x=[R[A]],b=1),(A++<O||void 0!==x[0])&&M--;);p=void 0!==x[0]}N[0]||N.shift()}if(1==g)P.e=a,ln=p;else{for(l=1,d=N[0];10<=d;d/=10)l++;P.e=l+a*g-1,o(P,c?s+P.e+1:s,u,p)}return P}}()),vn=new(xn=function I(n){function e(n){var i,t,r,s=this;if(!(s instanceof e))return new e(n);if(!(n instanceof(s.constructor=e))){if("number"==(r=typeof n)){if(0===n)return s.s=1/n<0?-1:1,s.e=0,void(s.d=[0]);if(n<0?(n=-n,s.s=-1):s.s=1,n===~~n&&n<1e7){for(i=0,t=n;10<=t;t/=10)i++;return s.e=i,void(s.d=[n])}return 0*n!=0?(n||(s.s=NaN),s.e=NaN,void(s.d=null)):N(s,n.toString())}if("string"!=r)throw Error(yn+n);return 45===n.charCodeAt(0)?(n=n.slice(1),s.s=-1):s.s=1,(Pn.test(n)?N:x)(s,n)}s.s=n.s,s.e=n.e,s.d=(n=n.d)&&n.slice()}var i,t,r;if(e.prototype=kn,e.ROUND_UP=0,e.ROUND_DOWN=1,e.ROUND_CEIL=2,e.ROUND_FLOOR=3,e.ROUND_HALF_UP=4,e.ROUND_HALF_DOWN=5,e.ROUND_HALF_EVEN=6,e.ROUND_HALF_CEIL=7,e.ROUND_HALF_FLOOR=8,e.EUCLID=9,e.config=k,e.clone=I,e.abs=O,e.acos=q,e.acosh=F,e.add=D,e.asin=Z,e.asinh=P,e.atan=R,e.atanh=S,e.atan2=L,e.cbrt=U,e.ceil=_,e.cos=T,e.cosh=C,e.div=H,e.exp=B,e.floor=V,e.fromJSON=j,e.hypot=$,e.ln=J,e.log=W,e.log10=G,e.log2=z,e.max=K,e.min=Q,e.mod=X,e.mul=Y,e.pow=nn,e.random=en,e.round=tn,e.sign=rn,e.sin=sn,e.sinh=on,e.sqrt=un,e.sub=cn,e.tan=fn,e.tanh=hn,e.trunc=an,n=void 0===n?{}:n)for(r=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],i=0;i<r.length;)n.hasOwnProperty(t=r[i++])||(n[t]=this[t]);return e.config(n),e}(xn))(vn),Nn=new xn(Nn);if("function"==typeof define&&define.amd)define(function(){return xn});else if("undefined"!=typeof module&&module.exports){if(module.exports=xn,!bn)try{bn=require("crypto")}catch(Cn){}}else n=n||("undefined"!=typeof self&&self&&self.self==self?self:Function("return this")()),dn=n.Decimal,xn.noConflict=function(){return n.Decimal=dn,xn},n.Decimal=xn}(this),!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.math=t():e.math=t()}(this,function(){return e=[function(e,t,r){var i=r(1);e.exports=function n(e){e=i.create(e);return e.create=n,e.import(r(13)),e}()},function(e,t,r){e.exports=r(2)},function(e,t,r){var n=r(3).isFactory,i=r(3).deepExtend,a=r(4),o=r(8),s=r(10),u=r(12);t.create=function(e){function t(e){var i,a;if(n(e))return-1===(a=r.indexOf(e))?(i=!0===e.math?e.factory(f.type,l,t,f.typed,f):e.factory(f.type,l,t,f.typed),r.push(e),c.push(i)):i=c[a],i;throw new Error("Factory object with properties `type`, `name`, and `factory` expected")}if("function"!=typeof Object.create)throw new Error("ES5 not supported by this JavaScript engine. Please load the es5-shim and es5-sham library for compatibility.");var r=[],c=[],f=o.mixin({}),l=(f.type={},f.expression={transform:Object.create(f)},f.typed=a.create(f.type),{epsilon:1e-14,matrix:"matrix",number:"number",precision:64,predictable:!1});return e&&i(l,e),f.import=t(s),f.config=t(u),f}},function(e,t){"use strict";t.clone=function r(e){var t=typeof e;if("number"==t||"string"==t||"boolean"==t||null==e)return e;if("function"==typeof e.clone)return e.clone();if(Array.isArray(e))return e.map(r);if(e instanceof Number)return new Number(e.valueOf());if(e instanceof String)return new String(e.valueOf());if(e instanceof Boolean)return new Boolean(e.valueOf());if(e instanceof Date)return new Date(e.valueOf());if(e&&!0===e.isBigNumber)return e;if(e instanceof RegExp)throw new TypeError("Cannot clone "+e);var i,n={};for(i in e)e.hasOwnProperty(i)&&(n[i]=r(e[i]));return n},t.extend=function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e},t.deepExtend=function n(e,t){if(Array.isArray(t))throw new TypeError("Arrays are not supported by deepExtend");for(var r in t)if(t.hasOwnProperty(r))if(t[r]&&t[r].constructor===Object)void 0===e[r]&&(e[r]={}),e[r].constructor===Object?n(e[r],t[r]):e[r]=t[r];else{if(Array.isArray(t[r]))throw new TypeError("Arrays are not supported by deepExtend");e[r]=t[r]}return e},t.deepEqual=function(e,r){var n,i,a;if(Array.isArray(e)){if(!Array.isArray(r))return!1;if(e.length!=r.length)return!1;for(i=0,a=e.length;i<a;i++)if(!t.deepEqual(e[i],r[i]))return!1;return!0}if(e instanceof Object){if(Array.isArray(r)||!(r instanceof Object))return!1;for(n in e)if(!t.deepEqual(e[n],r[n]))return!1;for(n in r)if(!t.deepEqual(e[n],r[n]))return!1;return!0}return typeof e==typeof r&&e==r},t.canDefineProperty=function(){try{if(Object.defineProperty)return Object.defineProperty({},"x",{get:function(){}}),!0}catch(e){}return!1},t.lazy=function(e,r,n){var i,a;t.canDefineProperty()?(a=!0,Object.defineProperty(e,r,{get:function(){return a&&(i=n(),a=!1),i},set:function(e){i=e,a=!1},configurable:!0,enumerable:!0})):e[r]=n()},t.traverse=function(e,t){var r=e;if(t)for(var n=t.split("."),i=0;i<n.length;i++){var a=n[i];a in r||(r[a]={}),r=r[a]}return r},t.isFactory=function(e){return e&&"function"==typeof e.factory}},function(e,t,r){var n=r(5),i=r(6).digits,a=function(){return a=n.create,n};t.create=function(e){var t=a();return t.types=[{name:"number",test:function(e){return"number"==typeof e}},{name:"Complex",test:function(e){return e&&e.isComplex}},{name:"BigNumber",test:function(e){return e&&e.isBigNumber}},{name:"Fraction",test:function(e){return e&&e.isFraction}},{name:"Unit",test:function(e){return e&&e.isUnit}},{name:"string",test:function(e){return"string"==typeof e}},{name:"Array",test:Array.isArray},{name:"Matrix",test:function(e){return e&&e.isMatrix}},{name:"DenseMatrix",test:function(e){return e&&e.isDenseMatrix}},{name:"SparseMatrix",test:function(e){return e&&e.isSparseMatrix}},{name:"ImmutableDenseMatrix",test:function(e){return e&&e.isImmutableDenseMatrix}},{name:"Range",test:function(e){return e&&e.isRange}},{name:"Index",test:function(e){return e&&e.isIndex}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"ResultSet",test:function(e){return e&&e.isResultSet}},{name:"Help",test:function(e){return e&&e.isHelp}},{name:"function",test:function(e){return"function"==typeof e}},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:function(e){return"object"==typeof e}},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],t.conversions=[{from:"number",to:"BigNumber",convert:function(t){if(15<i(t))throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+t+"). Use function bignumber(x) to convert to BigNumber.");return new e.BigNumber(t)}},{from:"number",to:"Complex",convert:function(t){return new e.Complex(t,0)}},{from:"number",to:"string",convert:function(e){return e+""}},{from:"BigNumber",to:"Complex",convert:function(t){return new e.Complex(t.toNumber(),0)}},{from:"number",to:"Fraction",convert:function(t){if(15<i(t))throw new TypeError("Cannot implicitly convert a number with >15 significant digits to Fraction (value: "+t+"). Use function fraction(x) to convert to Fraction.");return new e.Fraction(t)}},{from:"string",to:"number",convert:function(e){var t=Number(e);if(isNaN(t))throw new Error('Cannot convert "'+e+'" to a number');return t}},{from:"boolean",to:"number",convert:function(e){return+e}},{from:"boolean",to:"BigNumber",convert:function(t){return new e.BigNumber(+t)}},{from:"boolean",to:"string",convert:function(e){return+e}},{from:"null",to:"number",convert:function(){return 0}},{from:"null",to:"string",convert:function(){return"null"}},{from:"null",to:"BigNumber",convert:function(){return new e.BigNumber(0)}},{from:"Array",to:"Matrix",convert:function(t){return new e.DenseMatrix(t)}},{from:"Matrix",to:"Array",convert:function(e){return e.valueOf()}}],t}},function(e,t,r){var n;void 0!==(t="function"==typeof(n=function(){function e(){function t(e){for(var t,r=0;r<N.types.length;r++){var n=N.types[r];if(n.name===e){t=n.test;break}}if(!t){var i;for(r=0;r<N.types.length;r++)if(n=N.types[r],n.name.toLowerCase()==e.toLowerCase()){i=n.name;break}throw new Error('Unknown type "'+e+'"'+(i?'. Did you mean "'+i+'"?':""))}return t}function r(e){for(var t="",r=0;r<e.length;r++){var n=e[r];if(""!=n.name)if(""==t)t=n.name;else if(t!=n.name){var i=new Error("Function names do not match (expected: "+t+", actual: "+n.name+")");throw i.data={actual:n.name,expected:t},i}}return t}function n(e,t,r,n,i){var a,o=h(n),s=i?i.split(","):null,u=e||"unnamed",c=s&&g(s,"any"),f={fn:e,index:r,actual:n,expected:s};a=s?t>r&&!c?"Unexpected type of argument in function "+u+" (expected: "+s.join(" or ")+", actual: "+o+", index: "+r+")":"Too few arguments in function "+u+" (expected: "+s.join(" or ")+", index: "+r+")":"Too many arguments in function "+u+" (expected: "+r+", actual: "+t+")";var l=new TypeError(a);return l.data=f,l}function i(e){this.name=e||"refs",this.categories={}}function a(e,t){if("string"==typeof e){var r=e.trim(),n="..."===r.substr(0,3);if(n&&(r=r.substr(3)),""===r)this.types=["any"];else{this.types=r.split("|");for(var i=0;i<this.types.length;i++)this.types[i]=this.types[i].trim()}}else{if(!Array.isArray(e)){if(e instanceof a)return e.clone();throw new Error("String or Array expected")}this.types=e}this.conversions=[],this.varArgs=n||t||!1,this.anyType=-1!==this.types.indexOf("any")}function o(e,t){var r;if("string"==typeof e)r=""!==e?e.split(","):[];else{if(!Array.isArray(e))throw new Error("string or Array expected");r=e}this.params=new Array(r.length);for(var n=0;n<r.length;n++){var i=new a(r[n]);if(this.params[n]=i,n===r.length-1)this.varArgs=i.varArgs;else if(i.varArgs)throw new SyntaxError('Unexpected variable arguments operator "..."')}this.fn=t}function s(e,t,r){this.path=e||[],this.param=e[e.length-1]||null,this.signature=t||null,this.childs=r||[]}function u(e){var t,r,n={},i=[];for(var a in e)if(e.hasOwnProperty(a)){var s=e[a];if(t=new o(a,s),t.ignore())continue;var u=t.expand();for(r=0;r<u.length;r++){var c=u[r],f=c.toString(),l=n[f];if(l){var p=o.compare(c,l);if(0>p)n[f]=c;else if(0===p)throw new Error('Signature "'+f+'" is defined twice')}else n[f]=c}}for(f in n)n.hasOwnProperty(f)&&i.push(n[f]);for(i.sort(function(e,t){return o.compare(e,t)}),r=0;r<i.length;r++)if(t=i[r],t.varArgs)for(var m=t.params.length-1,h=t.params[m],v=0;v<h.types.length;){if(h.conversions[v])for(var d=h.types[v],y=0;y<i.length;y++){var x=i[y],b=x.params[m];if(x!==t&&b&&g(b.types,d)&&!b.conversions[m]){h.types.splice(v,1),h.conversions.splice(v,1),v--;break}}v++}return i}function c(e){for(var t={},r=0;r<e.length;r++){var n=e[r];if(n.fn&&!n.hasConversions()){var i=n.params.join(",");t[i]=n.fn}}return t}function f(e,t){var r,n,i,o=t.length,u=[];for(r=0;r<e.length;r++)n=e[r],n.params.length!==o||i||(i=n),void 0!=n.params[o]&&u.push(n);u.sort(function(e,t){return a.compare(e.params[o],t.params[o])});var c=[];for(r=0;r<u.length;r++){n=u[r];var l=n.params[o],p=c.filter(function(e){return e.param.overlapping(l)})[0];if(p){if(p.param.varArgs)throw new Error('Conflicting types "'+p.param+'" and "'+l+'"');p.signatures.push(n)}else c.push({param:l,signatures:[n]})}var m=new Array(c.length);for(r=0;r<c.length;r++){var h=c[r];m[r]=f(h.signatures,t.concat(h.param))}return new s(t,i,m)}function l(e){for(var t=[],r=0;e>r;r++)t[r]="arg"+r;return t}function p(e,t){var r=new i,a=u(t);if(0==a.length)throw new Error("No signatures provided");var o=f(a,[]),s=[],p=e||"",h=l(m(a));s.push("function "+p+"("+h.join(", ")+") {"),s.push('  "use strict";'),s.push("  var name = '"+p+"';"),s.push(o.toCode(r,"  ")),s.push("}");var g=[r.toCode(),"return "+s.join("\n")].join("\n"),v=new Function(r.name,"createError",g),d=v(r,n);return d.signatures=c(a),d}function m(e){for(var t=0,r=0;r<e.length;r++){var n=e[r].params.length;n>t&&(t=n)}return t}function h(e){for(var t,r=0;r<N.types.length;r++){var n=N.types[r];if("Object"===n.name)t=n;else if(n.test(e))return n.name}return t&&t.test(e)?t.name:"unknown"}function g(e,t){return-1!==e.indexOf(t)}function v(e,t){if(!e.signatures)throw new TypeError("Function is no typed-function");var r;if("string"==typeof t){r=t.split(",");for(var n=0;n<r.length;n++)r[n]=r[n].trim()}else{if(!Array.isArray(t))throw new TypeError("String array or a comma separated string expected");r=t}var i=r.join(","),a=e.signatures[i];if(a)return a;throw new TypeError("Signature not found (signature: "+(e.name||"unnamed")+"("+r.join(", ")+"))")}function d(e,t){var r=h(e);if(t===r)return e;for(var n=0;n<N.conversions.length;n++){var i=N.conversions[n];if(i.from===r&&i.to===t)return i.convert(e)}throw new Error("Cannot convert from "+r+" to "+t)}i.prototype.add=function(e,t){var r=t||"fn";this.categories[r]||(this.categories[r]=[]);var n=this.categories[r].indexOf(e);return-1==n&&(n=this.categories[r].length,this.categories[r].push(e)),r+n},i.prototype.toCode=function(){var e=[],t=this.name+".categories",r=this.categories;for(var n in r)if(r.hasOwnProperty(n))for(var i=r[n],a=0;a<i.length;a++)e.push("var "+n+a+" = "+t+"['"+n+"']["+a+"];");return e.join("\n")},a.compare=function(e,t){if(e.anyType)return 1;if(t.anyType)return-1;if(g(e.types,"Object"))return 1;if(g(t.types,"Object"))return-1;if(e.hasConversions()){if(t.hasConversions()){var r,n,i;for(r=0;r<e.conversions.length;r++)if(void 0!==e.conversions[r]){n=e.conversions[r];break}for(r=0;r<t.conversions.length;r++)if(void 0!==t.conversions[r]){i=t.conversions[r];break}return N.conversions.indexOf(n)-N.conversions.indexOf(i)}return 1}if(t.hasConversions())return-1;var a,o;for(r=0;r<N.types.length;r++)if(N.types[r].name===e.types[0]){a=r;break}for(r=0;r<N.types.length;r++)if(N.types[r].name===t.types[0]){o=r;break}return a-o},a.prototype.overlapping=function(e){for(var t=0;t<this.types.length;t++)if(g(e.types,this.types[t]))return!0;return!1},a.prototype.clone=function(){var e=new a(this.types.slice(),this.varArgs);return e.conversions=this.conversions.slice(),e},a.prototype.hasConversions=function(){return this.conversions.length>0},a.prototype.contains=function(e){for(var t=0;t<this.types.length;t++)if(e[this.types[t]])return!0;return!1},a.prototype.toString=function(e){for(var t=[],r={},n=0;n<this.types.length;n++){var i=this.conversions[n],a=e&&i?i.to:this.types[n];a in r||(r[a]=!0,t.push(a))}return(this.varArgs?"...":"")+t.join("|")},o.prototype.clone=function(){return new o(this.params.slice(),this.fn)},o.prototype.expand=function(){function e(r,n){if(n.length<r.params.length){var i,s,u,c=r.params[n.length];if(c.varArgs){for(s=c.clone(),i=0;i<N.conversions.length;i++)if(u=N.conversions[i],!g(c.types,u.from)&&g(c.types,u.to)){var f=s.types.length;s.types[f]=u.from,s.conversions[f]=u}e(r,n.concat(s))}else{for(i=0;i<c.types.length;i++)e(r,n.concat(new a(c.types[i])));for(i=0;i<N.conversions.length;i++)u=N.conversions[i],!g(c.types,u.from)&&g(c.types,u.to)&&(s=new a(u.from),s.conversions[0]=u,e(r,n.concat(s)))}}else t.push(new o(n,r.fn))}var t=[];return e(this,[]),t},o.compare=function(e,t){if(e.params.length>t.params.length)return 1;if(e.params.length<t.params.length)return-1;var r,n=e.params.length,i=0,o=0;for(r=0;n>r;r++)e.params[r].hasConversions()&&i++,t.params[r].hasConversions()&&o++;if(i>o)return 1;if(o>i)return-1;for(r=0;r<e.params.length;r++){var s=a.compare(e.params[r],t.params[r]);if(0!==s)return s}return 0},o.prototype.hasConversions=function(){for(var e=0;e<this.params.length;e++)if(this.params[e].hasConversions())return!0;return!1},o.prototype.ignore=function(){for(var e={},t=0;t<N.ignore.length;t++)e[N.ignore[t]]=!0;for(t=0;t<this.params.length;t++)if(this.params[t].contains(e))return!0;return!1},o.prototype.toCode=function(e,t){for(var r=[],n=new Array(this.params.length),i=0;i<this.params.length;i++){var a=this.params[i],o=a.conversions[0];a.varArgs?n[i]="varArgs":o?n[i]=e.add(o.convert,"convert")+"(arg"+i+")":n[i]="arg"+i}var s=this.fn?e.add(this.fn,"signature"):void 0;return s?t+"return "+s+"("+n.join(", ")+"); // signature: "+this.params.join(", "):r.join("\n")},o.prototype.toString=function(){return this.params.join(", ")},s.prototype.toCode=function(e,r,n){var i=[];if(this.param){var a=this.path.length-1,o=this.param.conversions[0],s="// type: "+(o?o.from+" (convert to "+o.to+")":this.param);if(this.param.varArgs)if(this.param.anyType)i.push(r+"if (arguments.length > "+a+") {"),i.push(r+"  var varArgs = [];"),i.push(r+"  for (var i = "+a+"; i < arguments.length; i++) {"),i.push(r+"    varArgs.push(arguments[i]);"),i.push(r+"  }"),i.push(this.signature.toCode(e,r+"  ")),i.push(r+"}");else{for(var u=function(r,n){for(var i=[],a=0;a<r.length;a++)i[a]=e.add(t(r[a]),"test")+"("+n+")";return i.join(" || ")}.bind(this),c=this.param.types,f=[],l=0;l<c.length;l++)void 0===this.param.conversions[l]&&f.push(c[l]);i.push(r+"if ("+u(c,"arg"+a)+") { "+s),i.push(r+"  var varArgs = [arg"+a+"];"),i.push(r+"  for (var i = "+(a+1)+"; i < arguments.length; i++) {"),i.push(r+"    if ("+u(f,"arguments[i]")+") {"),i.push(r+"      varArgs.push(arguments[i]);");for(var l=0;l<c.length;l++){var p=this.param.conversions[l];if(p){var m=e.add(t(c[l]),"test"),h=e.add(p.convert,"convert");i.push(r+"    }"),i.push(r+"    else if ("+m+"(arguments[i])) {"),i.push(r+"      varArgs.push("+h+"(arguments[i]));")}}i.push(r+"    } else {"),i.push(r+"      throw createError(name, arguments.length, i, arguments[i], '"+f.join(",")+"');"),i.push(r+"    }"),i.push(r+"  }"),i.push(this.signature.toCode(e,r+"  ")),i.push(r+"}")}else if(this.param.anyType)i.push(r+"// type: any"),i.push(this._innerCode(e,r,n));else{var g=this.param.types[0],m="any"!==g?e.add(t(g),"test"):null;i.push(r+"if ("+m+"(arg"+a+")) { "+s),i.push(this._innerCode(e,r+"  ",n)),i.push(r+"}")}}else i.push(this._innerCode(e,r,n));return i.join("\n")},s.prototype._innerCode=function(e,t,r){var n,i=[];this.signature&&(i.push(t+"if (arguments.length === "+this.path.length+") {"),i.push(this.signature.toCode(e,t+"  ")),i.push(t+"}"));var a;for(n=0;n<this.childs.length;n++)if(this.childs[n].param.anyType){a=this.childs[n];break}for(n=0;n<this.childs.length;n++)i.push(this.childs[n].toCode(e,t,a));r&&!this.param.anyType&&i.push(r.toCode(e,t,a));var o=this._exceptions(e,t);return o&&i.push(o),i.join("\n")},s.prototype._exceptions=function(e,t){var r=this.path.length;if(0===this.childs.length)return[t+"if (arguments.length > "+r+") {",t+"  throw createError(name, arguments.length, "+r+", arguments["+r+"]);",t+"}"].join("\n");for(var n={},i=[],a=0;a<this.childs.length;a++){var o=this.childs[a];if(o.param)for(var s=0;s<o.param.types.length;s++){var u=o.param.types[s];u in n||o.param.conversions[s]||(n[u]=!0,i.push(u))}}return t+"throw createError(name, arguments.length, "+r+", arguments["+r+"], '"+i.join(",")+"');"};var y=[{name:"number",test:function(e){return"number"==typeof e}},{name:"string",test:function(e){return"string"==typeof e}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"Function",test:function(e){return"function"==typeof e}},{name:"Array",test:Array.isArray},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:function(e){return"object"==typeof e}},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],x={},b=[],w=[],N={config:x,types:y,conversions:b,ignore:w};return N=p("typed",{Object:function(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(e[n]);var i=r(t);return p(i,e)},"string, Object":p,"...Function":function(e){for(var t,n=r(e),i={},a=0;a<e.length;a++){var o=e[a];if("object"!=typeof o.signatures)throw t=new TypeError("Function is no typed-function (index: "+a+")"),t.data={index:a},t;for(var s in o.signatures)if(o.signatures.hasOwnProperty(s))if(i.hasOwnProperty(s)){if(o.signatures[s]!==i[s])throw t=new Error('Signature "'+s+'" is defined twice'),t.data={signature:s},t}else i[s]=o.signatures[s]}return p(n,i)}}),N.config=x,N.types=y,N.conversions=b,N.ignore=w,N.create=e,N.find=v,N.convert=d,N.addType=function(e){if(!e||"string"!=typeof e.name||"function"!=typeof e.test)throw new TypeError("Object with properties {name: string, test: function} expected");N.types.push(e)},N.addConversion=function(e){if(!e||"string"!=typeof e.from||"string"!=typeof e.to||"function"!=typeof e.convert)throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");N.conversions.push(e)},N}return e()})?n.apply(t,[]):n)&&(e.exports=t)},function(e,t,r){"use strict";var n=r(7);t.isNumber=function(e){return"number"==typeof e},t.isInteger=function(e){return!!isFinite(e)&&e==Math.round(e)},t.sign=function(e){return 0<e?1:e<0?-1:0},t.format=function(e,r){if("function"==typeof r)return r(e);if(e===1/0)return"Infinity";if(e===-1/0)return"-Infinity";if(isNaN(e))return"NaN";var n="auto",i=void 0;switch(r&&(r.notation&&(n=r.notation),t.isNumber(r)?i=r:r.precision&&(i=r.precision)),n){case"fixed":return t.toFixed(e,i);case"exponential":return t.toExponential(e,i);case"engineering":return t.toEngineering(e,i);case"auto":return t.toPrecision(e,i,r&&r.exponential).replace(/((\.\d*?)(0+))($|e)/,function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t});default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", or "fixed".')}},t.toExponential=function(e,t){return new n(e).toExponential(t)},t.toEngineering=function(e,t){return new n(e).toEngineering(t)},t.toFixed=function(e,t){return new n(e).toFixed(t)},t.toPrecision=function(e,t,r){return new n(e).toPrecision(t,r)},t.digits=function(e){return e.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length},t.DBL_EPSILON=Number.EPSILON||2220446049250313e-31,t.nearlyEqual=function(e,r,n){var i;return null==n?e==r:e==r||!(isNaN(e)||isNaN(r)||!isFinite(e)||!isFinite(r)||!((i=Math.abs(e-r))<t.DBL_EPSILON||i<=Math.max(Math.abs(e),Math.abs(r))*n))}},function(e,t){"use strict";function r(e){e=String(e).toLowerCase().match(/^0*?(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!e)throw new SyntaxError("Invalid number");var r=e[1],n=e[2],i=parseFloat(e[4]||"0"),e=n.indexOf(".");i+=-1!==e?e-1:n.length-1,this.sign=r,this.coefficients=n.replace(".","").replace(/^0*/,function(e){return i-=e.length,""}).replace(/0*$/,"").split("").map(function(e){return parseInt(e)}),0===this.coefficients.length&&(this.coefficients.push(0),i++),this.exponent=i}function n(e){for(var t=[],r=0;r<e;r++)t.push(0);return t}r.prototype.toEngineering=function(e){var e=this.roundDigits(e),r=e.exponent,i=e.coefficients,a=r%3==0?r:r<0?r-3-r%3:r-r%3,o=0<=r?r:Math.abs(a);i.length-1<o&&(i=i.concat(n(o-(i.length-1))));for(var s=Math.abs(r-a),u=1;0<=--s;)u++;o=i.slice(u).join(""),o=o.match(/[1-9]/)?"."+o:"",i=i.slice(0,u).join("")+o;return i+="e"+(0<=r?"+":"")+a.toString(),e.sign+i},r.prototype.toFixed=function(e){var t=this.roundDigits(this.exponent+1+(e||0)),r=t.coefficients,t=t.exponent+1,a=t+(e||0);return r.length<a&&(r=r.concat(n(a-r.length))),t<0&&(r=n(1-t).concat(r),t=1),e&&r.splice(t,0,0===t?"0.":"."),this.sign+r.join("")},r.prototype.toExponential=function(e){var t=e?this.roundDigits(e):this.clone(),r=t.coefficients,t=t.exponent,e=(r=r.length<e?r.concat(n(e-r.length)):r).shift();return this.sign+e+(0<r.length?"."+r.join(""):"")+"e"+(0<=t?"+":"")+t},r.prototype.toPrecision=function(e,t){var r=t&&void 0!==t.lower?t.lower:.001,t=t&&void 0!==t.upper?t.upper:1e5,a=Math.abs(Math.pow(10,this.exponent));return a<r||t<=a?this.toExponential(e):(t=(r=e?this.roundDigits(e):this.clone()).coefficients,a=r.exponent,t=(t=t.length<e?t.concat(n(e-t.length)):t).concat(n(a-t.length+1+(t.length<e?e-t.length:0))),(r=0<a?a:0)<(t=n(-a).concat(t)).length-1&&t.splice(r+1,0,"."),this.sign+t.join(""))},r.prototype.clone=function(){var e=new r("0");return e.sign=this.sign,e.coefficients=this.coefficients.slice(0),e.exponent=this.exponent,e},r.prototype.roundDigits=function(e){for(var t=this.clone(),r=t.coefficients;e<=0;)r.unshift(0),t.exponent++,e++;if(r.length>e&&5<=r.splice(e,r.length-e)[0]){var i=e-1;for(r[i]++;10===r[i];)r.pop(),0===i&&(r.unshift(0),t.exponent++,i++),r[--i]++}return t},e.exports=r},function(e,t,r){var n=r(9);t.mixin=function(e){var t=new n;return e.on=t.on.bind(t),e.off=t.off.bind(t),e.once=t.once.bind(t),e.emit=t.emit.bind(t),e}},function(e,t){function r(){}r.prototype={on:function(e,t,r){var n=this.e||(this.e={});return(n[e]||(n[e]=[])).push({fn:t,ctx:r}),this},once:function(e,t,r){function n(){i.off(e,n),t.apply(r,arguments)}var i=this;return n._=t,this.on(e,n,r)},emit:function(e){for(var t=[].slice.call(arguments,1),r=((this.e||(this.e={}))[e]||[]).slice(),n=0,i=r.length;n<i;n++)r[n].fn.apply(r[n].ctx,t);return this},off:function(e,t){var r=this.e||(this.e={}),n=r[e],i=[];if(n&&t)for(var a=0,o=n.length;a<o;a++)n[a].fn!==t&&n[a].fn._!==t&&i.push(n[a]);return i.length?r[e]=i:delete r[e],this}},e.exports=r},function(e,t,r){"use strict";var i=r(3).lazy,a=r(3).isFactory,o=r(3).traverse,s=(r(3).extend,r(11));t.math=!0,t.name="import",t.factory=function(e,t,r,n,u){function f(e,t,r){if(r.wrap&&"function"==typeof t&&(t=function(e){function t(){for(var t=[],r=0,n=arguments.length;r<n;r++){var i=arguments[r];t[r]=i&&i.valueOf()}return e.apply(u,t)}return e.transform&&(t.transform=e.transform),t}(t)),g(u[e])&&g(t))return t=r.override?n(e,t.signatures):n(u[e],t),l(e,u[e]=t),u.emit("import",e,function(){return t});if(void 0===u[e]||r.override)return l(e,u[e]=t),u.emit("import",e,function(){return t});if(!r.silent)throw new Error('Cannot import "'+e+'": already exists')}function l(e,t){t&&"function"==typeof t.transform&&(u.expression.transform[e]=t.transform)}function m(e,t){var a,s,c,f;"string"==typeof e.name?(a=e.name,s=e.path?o(u,e.path):u,c=s.hasOwnProperty(a)?s[a]:void 0,!(f=function(){var i=r(e);if(g(c)&&g(i))return i=t.override?i:n(c,i);if(void 0===c||t.override)return i;if(!t.silent)throw new Error('Cannot import "'+a+'": already exists')})!==e.lazy?i(s,a,f):s[a]=f(),u.emit("import",a,f,e.path)):r(e)}function g(e){return"function"==typeof e&&"object"==typeof e.signatures}return function c(e,t){var i,r=arguments.length;if(1!=r&&2!=r)throw new s("import",r,1,2);if(t=t||{},a(e))m(e,t);else if(Array.isArray(e))e.forEach(function(e){c(e,t)});else if("object"==typeof e)for(var n in e)e.hasOwnProperty(n)&&(function(e){return"function"==typeof e||"number"==typeof e||"string"==typeof e||"boolean"==typeof e||null===e||e&&!0===e.isUnit||e&&!0===e.isComplex}(i=e[n])?f(n,i,t):a(e)?m(e,t):c(i,t));else if(!t.silent)throw new TypeError("Factory, Object, or Array expected")}},t.lazy=!0},function(e,t){"use strict";function r(e,t,n,i){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.fn=e,this.count=t,this.min=n,this.max=i,this.message="Wrong number of arguments in function "+e+" ("+t+" provided, "+n+(null!=i?"-"+i:"")+" expected)",this.stack=(new Error).stack}(r.prototype=new Error).constructor=Error,r.prototype.name="ArgumentsError",r.prototype.isArgumentsError=!0,e.exports=r},function(e,t,r){"use strict";var i=r(3);t.name="config",t.math=!0,t.factory=function(e,t,r,n,a){return function(e){var r;return e?(r=i.clone(t),i.deepExtend(t,e),e=i.clone(t),a.emit("config",e,r),e):i.clone(t)}}},function(e,t,r){e.exports=[r(14),r(92),r(96),r(320),r(495),r(497)]},function(e,t,r){e.exports=[r(15),r(20),r(21),r(26),r(30),r(36),r(68),r(69),r(71),r(72)]},function(e,t,r){e.exports=[r(16),r(18)]},function(e,t,r){var i=r(17);r(6).digits,t.name="BigNumber",t.path="type",t.factory=function(e,t,r,n,a){var o=i.constructor(t);return o.prototype.type="BigNumber",o.prototype.isBigNumber=!0,o.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},o.fromJSON=function(e){return new o(e.value)},a.on("config",function(e,t){e.precision!==t.precision&&o.config({precision:e.precision})}),o},t.math=!0},function(e,t,r){var n;!function(i){"use strict";function a(e){for(var t,r,n=1,i=e.length,a=e[0]+"";n<i;n++){for(t=e[n]+"",r=_-t.length;r--;)t="0"+t;a+=t}for(i=a.length;48===a.charCodeAt(--i););return a.slice(0,i+1||1)}function o(e,t,r,n){for(var i,a=1,o=e[0];10<=o;o/=10,a++);return(o=t-a)<0?(o+=_,i=0):(i=Math.ceil((o+1)/_),o%=_),a=E(10,_-o),t=e[i]%a|0,null==n?o<3?(0==o?t=t/100|0:1==o&&(t=t/10|0),r<4&&99999==t||3<r&&49999==t||5e4==t||0==t):(r<4&&t+1==a||3<r&&t+1==a/2)&&(e[i+1]/a/100|0)==E(10,o-2)-1||(t==a/2||0==t)&&0==(e[i+1]/a/100|0):o<4?(0==o?t=t/1e3|0:1==o?t=t/100|0:2==o&&(t=t/10|0),(n||r<4)&&9999==t||!n&&3<r&&4999==t):((n||r<4)&&t+1==a||!n&&3<r&&t+1==a/2)&&(e[i+1]/a/1e3|0)==E(10,o-3)-1}function s(e,t,r){e=e.constructor;return null==t||((y=t<0||8<t)||0!==t&&(e.errors?parseInt:parseFloat)(t)!=t)&&!p(e,"rounding mode",t,r,0)?e.rounding:0|t}function u(e,t,r,n){e=e.constructor;return!(y=t<(n||0)||S+1<=t)&&(0===t||(e.errors?parseInt:parseFloat)(t)==t)||p(e,"argument",t,r,0)}function c(e,t){var r,n,i,s,u,c,f,l=0,p=0,m=0,h=e.constructor,v=h.ONE,d=h.rounding,y=h.precision;if(!e.c||!e.c[0]||17<e.e)return new h(e.c?e.c[0]?e.s<0?0:1/0:v:e.s?e.s<0?0:e:NaN);for(u=null==t?(b=!1,y):t,f=new h(.03125);-2<e.e;)e=e.times(f),m+=5;for(u+=n=Math.log(E(2,m))/Math.LN10*2+5|0,r=s=c=new h(v),h.precision=u;;){if(s=g(s.times(e),u,1),r=r.times(++p),a((f=c.plus(k(s,r,u,1))).c).slice(0,u)===a(c.c).slice(0,u)){for(i=m;i--;)c=g(c.times(c),u,1);if(null!=t)return h.precision=y,c;if(!(l<3&&o(c.c,u-n,d,l)))return g(c,h.precision=y,d,b=!0);h.precision=u+=10,r=s=f=new h(v),p=0,l++}c=f}}function f(e,t,r,n){var i,o,s=e.constructor,u=(e=new s(e)).e;if(r=null==t?0:(g(e,++t,r),n?t:t+e.e-u),u=e.e,i=a(e.c),1==n||2==n&&(t<=u||u<=s.toExpNeg)){for(;i.length<r;i+="0");1<i.length&&(i=i.charAt(0)+"."+i.slice(1)),i+=(u<0?"e":"e+")+u}else{if(n=i.length,u<0){for(o=r-n;++u;i="0"+i);i="0."+i}else if(++u>n){for(o=r-u,u-=n;u--;i+="0");0<o&&(i+=".")}else o=r-n,u<n?i=i.slice(0,u)+"."+i.slice(u):0<o&&(i+=".");if(0<o)for(;o--;i+="0");}return e.s<0&&e.c[0]?"-"+i:i}function l(e){var t=e.length-1,r=t*_+1;if(t=e[t]){for(;t%10==0;t/=10,r--);for(t=e[0];10<=t;t/=10,r++);}return r}function p(e,t,r,n,i){if(e.errors)throw(e=new Error((n||["new Decimal","cmp","div","eq","gt","gte","lt","lte","minus","mod","plus","times","toFraction","pow","random","log","sqrt","toNearest","divToInt"][w?w<0?-w:w:1/w<0?1:0])+"() "+(["number type has more than 15 significant digits","LN10 out of digits"][t]||t+([y?" out of range":" not an integer"," not a boolean or binary digit"][i]||""))+": "+r)).name="Decimal Error",y=w=0,e}function m(e,t,r){var n=new e(e.ONE);for(b=!1;1&r&&(n=n.times(t)),r>>=1;)t=t.times(t);return b=!0,n}function h(e,t){var r,n,i,s,u,c,f,l,m,v,d,y=1,w=e,N=w.c,E=w.constructor,M=E.ONE,A=E.rounding,_=E.precision;if(w.s<0||!N||!N[0]||!w.e&&1==N[0]&&1==N.length)return new E(N&&!N[0]?-1/0:1!=w.s?NaN:N?0:w);if(f=null==t?(b=!1,_):t,E.precision=f+=10,n=(r=a(N)).charAt(0),!(Math.abs(s=w.e)<15e14))return w=new E(n+"."+r.slice(1)),B.length<f+2&&p(E,1,f+2,"ln"),w=h(w,f-10).plus(new E(B.slice(0,f+2)).times(s+"")),E.precision=_,null==t?g(w,_,A,b=!0):w;for(;n<7&&1!=n||1==n&&3<r.charAt(1);)n=(r=a((w=w.times(e)).c)).charAt(0),y++;for(s=w.e,1<n?(w=new E("0."+r),s++):w=new E(n+"."+r.slice(1)),l=u=w=k((v=w).minus(M),w.plus(M),f,1),d=g(w.times(w),f,1),i=3;;){if(u=g(u.times(d),f,1),a((m=l.plus(k(u,new E(i),f,1))).c).slice(0,f)===a(l.c).slice(0,f)){if(l=l.times(2),0!==s&&(B.length<f+2&&p(E,1,f+2,"ln"),l=l.plus(new E(B.slice(0,f+2)).times(s+""))),l=k(l,new E(y),f,1),null!=t)return E.precision=_,l;if(!o(l.c,f-10,A,c))return g(l,E.precision=_,A,b=!0);E.precision=f+=10,m=u=w=k(v.minus(M),v.plus(M),f,1),d=g(w.times(w),f,1),i=c=1}l=m,i+=2}}function g(e,t,r,n){var i,a,o,s,u,c,f,l,p=e.constructor;e:if(null!=t){if(!(f=e.c))return e;for(i=1,s=f[0];10<=s;s/=10,i++);if((a=t-i)<0)a+=_,o=t,c=(u=f[l=0])/E(10,i-o-1)%10|0;else if((l=Math.ceil((a+1)/_))>=f.length){if(!n)break e;for(;f.length<=l;f.push(0));u=c=0,o=(a%=_)-_+(i=1)}else{for(u=s=f[l],i=1;10<=s;s/=10,i++);c=(o=(a%=_)-_+i)<0?0:N(u/E(10,i-o-1)%10)}if(n=n||t<0||null!=f[l+1]||(o<0?u:u%E(10,i-o-1)),n=r<4?(c||n)&&(0==r||r==(e.s<0?3:2)):5<c||5==c&&(4==r||n||6==r&&(0<a?0<o?u/E(10,i-o):0:f[l-1])%10&1||r==(e.s<0?8:7)),t<1||!f[0])return f.length=0,n?(t-=e.e+1,f[0]=E(10,(_-t%_)%_),e.e=-t||0):f[0]=e.e=0,e;if(0==a?(f.length=l,s=1,l--):(f.length=l+1,s=E(10,_-a),f[l]=0<o?(u/E(10,i-o)%E(10,o)|0)*s:0),n)for(;;){if(0==l){for(a=1,o=f[0];10<=o;o/=10,a++);for(o=f[0]+=s,s=1;10<=o;o/=10,s++);a!=s&&(e.e++,f[0]==A)&&(f[0]=1);break}if(f[l]+=s,f[l]!=A)break;f[l--]=0,s=1}for(a=f.length;0===f[--a];f.pop());}return b&&(e.e>p.maxE?e.c=e.e=null:e.e<p.minE&&(e.c=[e.e=0])),e}var v,y,x=i.crypto,b=!0,w=0,N=Math.floor,E=Math.pow,M=Object.prototype.toString,A=1e7,_=7,O="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_",T={},C=9e15,S=1e9,B="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",k=(T.absoluteValue=T.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),g(e)},T.ceil=function(){return g(new this.constructor(this),this.e+1,2)},T.comparedTo=T.cmp=function(e,t){var r,n=this,i=n.c,a=(w=-w,(e=new n.constructor(e,t)).c),o=n.s,s=e.s,n=n.e,e=e.e;if(!o||!s)return null;if(r=i&&!i[0],t=a&&!a[0],r||t)return r?t?0:-s:o;if(o!=s)return o;if(r=o<0,!i||!a)return n==e?0:!i^r?1:-1;if(n!=e)return e<n^r?1:-1;for(o=-1,s=(n=i.length)<(e=a.length)?n:e;++o<s;)if(i[o]!=a[o])return i[o]>a[o]^r?1:-1;return n==e?0:e<n^r?1:-1},T.decimalPlaces=T.dp=function(){var e,t,r=null;if(e=this.c){if(r=((t=e.length-1)-N(this.e/_))*_,t=e[t])for(;t%10==0;t/=10,r--);r<0&&(r=0)}return r},T.dividedBy=T.div=function(e,t){return w=2,k(this,new this.constructor(e,t))},T.dividedToIntegerBy=T.divToInt=function(e,t){var n=this.constructor;return w=18,g(k(this,new n(e,t),0,1,1),n.precision,n.rounding)},T.equals=T.eq=function(e,t){return w=3,0===this.cmp(e,t)},T.exponential=T.exp=function(){return c(this)},T.floor=function(){return g(new this.constructor(this),this.e+1,3)},T.greaterThan=T.gt=function(e,t){return w=4,0<this.cmp(e,t)},T.greaterThanOrEqualTo=T.gte=function(e,t){return w=5,1==(t=this.cmp(e,t))||0===t},T.isFinite=function(){return!!this.c},T.isInteger=T.isInt=function(){return!!this.c&&N(this.e/_)>this.c.length-2},T.isNaN=function(){return!this.s},T.isNegative=T.isNeg=function(){return this.s<0},T.isZero=function(){return!!this.c&&0==this.c[0]},T.lessThan=T.lt=function(e,t){return w=6,this.cmp(e,t)<0},T.lessThanOrEqualTo=T.lte=function(e,t){return w=7,-1==(t=this.cmp(e,t))||0===t},T.logarithm=T.log=function(e,t){var r,n,i,s,u,c,f,l,m,v=this,d=v.constructor,y=d.precision,x=d.rounding;if(null==e)e=new d(10),r=!0;else{if(w=15,n=(e=new d(e,t)).c,e.s<0||!n||!n[0]||!e.e&&1==n[0]&&1==n.length)return new d(NaN);r=e.eq(10)}if(n=v.c,v.s<0||!n||!n[0]||!v.e&&1==n[0]&&1==n.length)return new d(n&&!n[0]?-1/0:1!=v.s?NaN:n?0:1/0);if(u=r&&(s=n[0],1<n.length||1!=s&&10!=s&&100!=s&&1e3!=s&&1e4!=s&&1e5!=s&&1e6!=s),b=!1,l=(f=y+5)+10,c=h(v,f),i=r?(B.length<l&&p(d,1,l,"log"),new d(B.slice(0,l))):h(e,f),o((m=k(c,i,f,1)).c,s=y,x))do{if(c=h(v,f+=10),i=r?(B.length<(l=f+10)&&p(d,1,l,"log"),new d(B.slice(0,l))):h(e,f),m=k(c,i,f,1),!u){+a(m.c).slice(s+1,s+15)+1==1e14&&(m=g(m,y+1,0));break}}while(o(m.c,s+=10,x));return b=!0,g(m,y,x)},T.minus=function(e,t){var r,n,i,a,o=this,s=o.constructor,u=o.s;if(w=8,t=(e=new s(e,t)).s,!u||!t)return new s(NaN);if(u!=t)return e.s=-t,o.plus(e);var c=o.c,f=e.c,l=N(e.e/_),p=N(o.e/_),m=s.precision,h=s.rounding;if(!p||!l){if(!c||!f)return c?(e.s=-t,e):new s(f?o:NaN);if(!c[0]||!f[0])return o=f[0]?(e.s=-t,e):new s(c[0]?o:3==h?-0:0),b?g(o,m,h):o}if(n=(c=c.slice()).length,u=p-l){for((a=u<0)?(u=-u,r=c,n=f.length):(l=p,r=f),(p=Math.ceil(m/_))>n&&(n=p),u>(n+=2)&&(u=n,r.length=1),r.reverse(),t=u;t--;r.push(0));r.reverse()}else for((a=n<(i=f.length))&&(i=n),u=t=0;t<i;t++)if(c[t]!=f[t]){a=c[t]<f[t];break}if(a&&(r=c,c=f,f=r,e.s=-e.s),0<(t=-((i=c.length)-f.length)))for(;t--;c[i++]=0);for(p=A-1,t=f.length;u<t;){if(c[--t]<f[t]){for(n=t;n&&!c[--n];c[n]=p);--c[n],c[t]+=A}c[t]-=f[t]}for(;0==c[--i];c.pop());for(;0==c[0];c.shift(),--l);for(c[0]||(c=[l=0],e.s=3==h?-1:1),u=1,t=(e.c=c)[0];10<=t;t/=10,u++);return e.e=u+l*_-1,b?g(e,m,h):e},T.modulo=T.mod=function(e,t){var r,n,i=this,a=i.constructor,o=a.modulo;return w=9,t=(e=new a(e,t)).s,(r=!i.c||!t||e.c&&!e.c[0])||!e.c||i.c&&!i.c[0]?r?new a(NaN):g(new a(i),a.precision,a.rounding):(b=!1,9==o?(e.s=1,n=k(i,e,0,3,1),e.s=t,n.s*=t):n=k(i,e,0,o,1),n=n.times(e),b=!0,i.minus(n))},T.naturalLogarithm=T.ln=function(){return h(this)},T.negated=T.neg=function(){var e=new this.constructor(this);return e.s=-e.s||null,g(e)},T.plus=function(e,t){var r,n=this,i=n.constructor,a=n.s;if(w=10,t=(e=new i(e,t)).s,!a||!t)return new i(NaN);if(a!=t)return e.s=-t,n.minus(e);var o=n.c,s=e.c,u=N(e.e/_),c=N(n.e/_),f=i.precision,l=i.rounding;if(!c||!u){if(!o||!s)return new i(a/0);if(!o[0]||!s[0])return n=s[0]?e:new i(o[0]?n:0*a),b?g(n,f,l):n}if(o=o.slice(),a=c-u){for(t=(a<0?(a=-a,r=o,s):(u=c,r=s,o)).length,(c=Math.ceil(f/_))>t&&(t=c),a>++t&&(a=t,r.length=1),r.reverse();a--;r.push(0));r.reverse()}for(o.length-s.length<0&&(r=s,s=o,o=r),a=s.length,t=0,c=A;a;o[a]%=c)t=(o[--a]=o[a]+s[a]+t)/c|0;for(t&&(o.unshift(t),++u),a=o.length;0==o[--a];o.pop());for(a=1,t=(e.c=o)[0];10<=t;t/=10,a++);return e.e=a+u*_-1,b?g(e,f,l):e},T.precision=T.sd=function(e){var t=null,r=this;return e!=t&&e!==!!e&&1!==e&&0!==e&&p(r.constructor,"argument",e,"precision",1),t=r.c&&(t=l(r.c),e)&&r.e+1>t?r.e+1:t},T.round=function(){var e=this,t=e.constructor;return g(new t(e),e.e+1,t.rounding)},T.squareRoot=T.sqrt=function(){var e,t,r,n,i,o,s=this,u=s.c,c=s.s,f=s.e,l=s.constructor,p=new l(.5);if(1!==c||!u||!u[0])return new l(!c||c<0&&(!u||u[0])?NaN:u?s:1/0);for(b=!1,n=0==(c=Math.sqrt(+s))||c==1/0?(((t=a(u)).length+f)%2==0&&(t+="0"),c=Math.sqrt(t),f=N((f+1)/2)-(f<0||f%2),new l(t=c==1/0?"1e"+f:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+f)):new l(c.toString()),r=(f=l.precision)+3;;)if(o=n,n=p.times(o.plus(k(s,o,r+2,1))),a(o.c).slice(0,r)===(t=a(n.c)).slice(0,r)){if("9999"!=(t=t.slice(r-3,r+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(g(n,f+1,1),e=!n.times(n).eq(s));break}if(!i&&(g(o,f+1,0),o.times(o).eq(s))){n=o;break}r+=4,i=1}return b=!0,g(n,f,l.rounding,e)},T.times=function(e,t){var r,i=this,a=i.constructor,o=i.c,s=(w=11,(e=new a(e,t)).c),u=N(i.e/_),c=N(e.e/_),f=i.s;if(t=e.s,e.s=f==t?1:-1,!(u||o&&o[0])||!(c||s&&s[0]))return new a(!f||!t||o&&!o[0]&&!s||s&&!s[0]&&!o?NaN:o&&s?0*e.s:e.s/0);for(i=u+c,(f=o.length)<(t=s.length)&&(r=o,o=s,s=r,c=f,f=t,t=c),c=f+t,r=[];c--;r.push(0));for(u=t-1;-1<u;u--){for(t=0,c=f+u;u<c;)t=r[c]+s[u]*o[c-u-1]+t,r[c--]=t%A|0,t=t/A|0;r[c]=(r[c]+t)%A|0}for(t?++i:r[0]||r.shift(),c=r.length;!r[--c];r.pop());for(f=1,t=(e.c=r)[0];10<=t;t/=10,f++);return e.e=f+i*_-1,b?g(e,a.precision,a.rounding):e},T.toDecimalPlaces=T.toDP=function(e,t){var r=new this.constructor(this);return null!=e&&u(r,e,"toDP")?g(r,(0|e)+r.e+1,s(r,t,"toDP")):r},T.toExponential=function(e,t){var r=this;return r.c?f(r,null!=e&&u(r,e,"toExponential")?0|e:null,null!=e&&s(r,t,"toExponential"),1):r.toString()},T.toFixed=function(e,t){var r,n=this,i=n.constructor,a=i.toExpNeg,o=i.toExpPos;return null!=e&&(e=u(n,e,r="toFixed")?n.e+(0|e):null,t=s(n,t,r)),i.toExpNeg=-(i.toExpPos=1/0),null!=e&&n.c?(r=f(n,e,t),n.s<0&&n.c&&(n.c[0]?r.indexOf("-")<0&&(r="-"+r):r=r.replace("-",""))):r=n.toString(),i.toExpNeg=a,i.toExpPos=o,r},T.toFormat=function(e,t){var r=this;if(!r.c)return r.toString();var n,i=r.s<0,a=r.constructor.format,o=a.groupSeparator,s=+a.groupSize,u=+a.secondaryGroupSize,r=r.toFixed(e,t).split("."),f=r[0],e=r[1],p=i?f.slice(1):f,m=p.length;if(u&&(n=s,s=u,m-=u=n),0<s&&0<m){for(f=p.substr(0,n=m%s||s);n<m;n+=s)f+=o+p.substr(n,s);0<u&&(f+=o+p.slice(n)),i&&(f="-"+f)}return e?f+a.decimalSeparator+((u=+a.fractionGroupSize)?e.replace(new RegExp("\\d{"+u+"}\\B","g"),"$&"+a.fractionGroupSeparator):e):f},T.toFraction=function(e){var t,r,n,o,s,u,c,f=this,m=f.constructor,h=t=new m(m.ONE),g=s=new m(0),v=f.c,d=new m(g);if(!v)return f.toString();for(n=d.e=l(v)-f.e-1,d.c[0]=E(10,(u=n%_)<0?_+u:u),(null==e||(w=12,(!(o=new m(e)).s||(y=o.cmp(h)<0||!o.c)||m.errors&&N(o.e/_)<o.c.length-1)&&!p(m,"max denominator",e,"toFraction",0))||0<(e=o).cmp(d))&&(e=0<n?d:h),b=!1,o=new m(a(v)),u=m.precision,m.precision=n=v.length*_*2;c=k(o,d,0,1,1),1!=(r=t.plus(c.times(g))).cmp(e);)t=g,g=r,h=s.plus(c.times(r=h)),s=r,d=o.minus(c.times(r=d)),o=r;return r=k(e.minus(t),g,0,1,1),s=s.plus(r.times(h)),t=t.plus(r.times(g)),s.s=h.s=f.s,v=k(h,g,n,1).minus(f).abs().cmp(k(s,t,n,1).minus(f).abs())<1?[h+"",g+""]:[s+"",t+""],b=!0,m.precision=u,v},T.toNearest=function(e,t){var n=(r=this).constructor,r=new n(r);return t=null==e?(e=new n(n.ONE),n.rounding):(w=17,e=new n(e),s(r,t,"toNearest")),e.c?r.c&&(e.c[0]?(b=!1,r=k(r,e,0,t<4?[4,5,7,8][t]:t,1).times(e),b=!0,g(r)):r.c=[r.e=0]):r.s&&(e.s&&(e.s=r.s),r=e),r},T.toNumber=function(){var e=this;return+e||(e.s?0*e.s:NaN)},T.toPower=T.pow=function(e,t){var r,n,i,s,u=this,f=u.constructor,l=u.s,p=(w=13,+(e=new f(e,t))),v=p<0?-p:p,d=f.precision,y=f.rounding;if(!u.c||!e.c||(i=!u.c[0])||!e.c[0])return new f(E(i?0*l:+u,p));if(r=(u=new f(u)).c.length,!u.e&&u.c[0]==u.s&&1==r)return u;if(t=e.c.length-1,e.e||e.c[0]!=e.s||t)if(!(i=t<=(n=N(e.e/_)))&&l<0)s=new f(NaN);else{if(i&&r*_*v<3e3){if(s=m(f,u,v),e.s<0)return f.ONE.div(s)}else{if(l=l<0&&1&e.c[Math.max(n,t)]?-1:1,(n=0!=(t=E(+u,p))&&isFinite(t)?new f(t+"").e:N(p*(Math.log("0."+a(u.c))/Math.LN10+u.e+1)))>f.maxE+1||n<f.minE-1)return new f(0<n?l/0:0);b=!1,f.rounding=u.s=1,v=Math.min(12,(n+"").length),(s=o((s=g(s=c(e.times(h(u,d+v)),d),d+5,1)).c,d,y)&&+a((s=g(c(e.times(h(u,(n=d+10)+v)),n),n+5,1)).c).slice(d+1,d+15)+1==1e14?g(s,d+1,0):s).s=l,b=!0,f.rounding=y}s=g(s,d,y)}else s=g(u,d,y);return s},T.toPrecision=function(e,t){var r=this;return null!=e&&u(r,e,"toPrecision",1)&&r.c?f(r,0|--e,s(r,t,"toPrecision"),2):r.toString()},T.toSignificantDigits=T.toSD=function(e,t){var n=this.constructor,r=new n(this);return null!=e&&u(r,e,"toSD",1)?g(r,0|e,s(r,t,"toSD")):g(r,n.precision,n.rounding)},T.toString=function(e){var t,r,n,i=this,o=i.constructor,s=i.e;if(null===s)r=i.s?"Infinity":"NaN";else{if(e===t&&(s<=o.toExpNeg||s>=o.toExpPos))return f(i,null,o.rounding,1);if(r=a(i.c),s<0){for(;++s;r="0"+r);r="0."+r}else if(n=r.length,0<s)if(++s>n)for(s-=n;s--;r+="0");else s<n&&(r=r.slice(0,s)+"."+r.slice(s));else if(t=r.charAt(0),1<n)r=t+"."+r.slice(1);else if("0"==t)return t;if(null!=e)if((y=!(2<=e&&e<65))||e!=(0|e)&&o.errors)p(o,"base",e,"toString",0);else if("0"==(r=v(o,r,0|e,10,i.s)))return r}return i.s<0?"-"+r:r},T.truncated=T.trunc=function(){return g(new this.constructor(this),this.e+1,1)},T.valueOf=T.toJSON=function(){return this.toString()},v=function(){function e(e,t,r){for(var n,i,a=[0],o=0,s=e.length;o<s;){for(i=a.length;i--;a[i]*=t);for(a[n=0]+=O.indexOf(e.charAt(o++));n<a.length;n++)r-1<a[n]&&(null==a[n+1]&&(a[n+1]=0),a[n+1]+=a[n]/r|0,a[n]%=r)}return a.reverse()}return function(t,r,n,i,a){var o,s,u,c,f,l,p=r.indexOf("."),h=t.precision,g=t.rounding;for(i<37&&(r=r.toLowerCase()),0<=p&&(r=r.replace(".",""),l=new t(i),c=m(t,l,r.length-p),l.c=e(c.toFixed(),10,n),l.e=l.c.length),o=s=(f=e(r,i,n)).length;0==f[--s];f.pop());if(!f[0])return"0";if(p<0?o--:(c.c=f,c.e=o,c.s=a,f=(c=k(c,l,h,g,0,n)).c,u=c.r,o=c.e),p=f[h],s=n/2,u=u||null!=f[h+1],g<4?(null!=p||u)&&(0==g||g==(a<0?3:2)):s<p||p==s&&(4==g||u||6==g&&1&f[h-1]||g==(a<0?8:7)))for(f.length=h,--n;++f[--h]>n;)f[h]=0,h||(++o,f.unshift(1));else f.length=h;for(s=f.length;!f[--s];);for(p=0,r="";p<=s;r+=O.charAt(f[p++]));if(o<0){for(;++o;r="0"+r);r="0."+r}else if(++o>(p=r.length))for(o-=p;o--;r+="0");else o<p&&(r=r.slice(0,o)+"."+r.slice(o));return r}}(),function(){function e(e,t,r){var n,i=0,a=e.length;for(e=e.slice();a--;)n=e[a]*t+i,e[a]=n%r|0,i=n/r|0;return i&&e.unshift(i),e}function t(e,t,r,n){var i,a;if(r!=n)a=n<r?1:-1;else for(i=a=0;i<r;i++)if(e[i]!=t[i]){a=e[i]>t[i]?1:-1;break}return a}function r(e,t,r,n){for(var i=0;r--;)e[r]-=i,i=e[r]<t[r]?1:0,e[r]=i*n+e[r]-t[r];for(;!e[0]&&1<e.length;e.shift());}return function(n,i,a,o,s,u){var c,f,l,p,m,h,v,d,y,x,b,w,E,M,O,T,C,S,z,B=n.constructor,k=n.s==i.s?1:-1,I=n.c,R=i.c;if(!(I&&I[0]&&R&&R[0]))return new B(n.s&&i.s&&(I?!R||I[0]!=R[0]:R)?I&&0==I[0]||!R?0*k:k/0:NaN);for(f=u?(p=1,n.e-i.e):(u=A,N(n.e/(p=_))-N(i.e/p)),S=R.length,T=I.length,x=(y=new B(k)).c=[],l=0;R[l]==(I[l]||0);l++);if(R[l]>(I[l]||0)&&f--,null==a?(k=a=B.precision,o=B.rounding):k=s?a+(n.e-i.e)+1:a,k<0)x.push(1),m=!0;else{if(k=k/p+2|0,l=0,1==S){for(R=R[h=0],k++;(l<T||h)&&k--;l++)M=h*u+(I[l]||0),x[l]=M/R|0,h=M%R|0;m=h||l<T}else{for(1<(h=u/(R[0]+1)|0)&&(R=e(R,h,u),I=e(I,h,u),S=R.length,T=I.length),O=S,w=(b=I.slice(0,S)).length;w<S;b[w++]=0);for((z=R.slice()).unshift(0),C=R[0],R[1]>=u/2&&C++;h=0,(c=t(R,b,S,w))<0?(E=b[0],1<(h=(E=S!=w?E*u+(b[1]||0):E)/C|0)?1==(c=t(v=e(R,h=u<=h?u-1:h,u),b,d=v.length,w=b.length))&&(h--,r(v,S<d?z:R,d,u)):(0==h&&(c=h=1),v=R.slice()),(d=v.length)<w&&v.unshift(0),r(b,v,w,u),-1==c&&(c=t(R,b,S,w=b.length))<1&&(h++,r(b,S<w?z:R,w,u)),w=b.length):0===c&&(h++,b=[0]),x[l++]=h,c&&b[0]?b[w++]=I[O]||0:(b=[I[O]],w=1),(O++<T||null!=b[0])&&k--;);m=null!=b[0]}x[0]||x.shift()}if(1==p)y.e=f,y.r=+m;else{for(l=1,k=x[0];10<=k;k/=10,l++);y.e=l+f*p-1,g(y,s?a+y.e+1:a,o,m)}return y}}()),d=function(){function e(e){var t,r,n,i=this,a="config",o=i.errors?parseInt:parseFloat;return e==r||("object"!=typeof e?!p(i,"object expected",e,a):((n=e[t="precision"])!=r&&((y=n<1||S<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(n=e[t="rounding"])!=r&&((y=n<0||8<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(n=e[t="toExpNeg"])!=r&&((y=n<-C||0<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="toExpPos"])!=r&&((y=n<0||C<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="minE"])!=r&&((y=n<-C||0<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="maxE"])!=r&&((y=n<0||C<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="errors"])!=r&&(n===!!n||1===n||0===n?(y=w=0,i[t]=!!n):p(i,t,n,a,1)),(n=e[t="crypto"])!=r&&(n===!!n||1===n||0===n?i[t]=!(!n||!x||"object"!=typeof x):p(i,t,n,a,1)),(n=e[t="modulo"])!=r&&((y=n<0||9<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(e=e[t="format"])!=r&&("object"==typeof e?i[t]=e:p(i,"format object expected",e,a)))),i}function t(e){return new this(e).exp()}function r(e){return new this(e).ln()}function n(e,t){return new this(e).log(t)}function i(e,t,r){for(var i,a=0,n=new e((t="[object Array]"==M.call(t[0])?t[0]:t)[0]);++a<t.length;){if(!(i=new e(t[a])).s){n=i;break}n[r](i)&&(n=i)}return n}function a(){return i(this,arguments,"lt")}function o(){return i(this,arguments,"gt")}function s(e,t){return new this(e).pow(t)}function c(e){var t,r,n,i=0,a=[],o=this,s=new o(o.ONE);if(null!=e&&u(s,e,"random")?e|=0:e=o.precision,r=Math.ceil(e/_),o.crypto)if(x&&x.getRandomValues)for(t=x.getRandomValues(new Uint32Array(r));i<r;)429e7<=(n=t[i])?t[i]=x.getRandomValues(new Uint32Array(1))[0]:a[i++]=n%1e7;else if(x&&x.randomBytes){for(t=x.randomBytes(r*=4);i<r;)214e7<=(n=t[i]+(t[i+1]<<8)+(t[i+2]<<16)+((127&t[i+3])<<24))?x.randomBytes(4).copy(t,i):(a.push(n%1e7),i+=4);i=r/4}else p(o,"crypto unavailable",x,"random");if(!i)for(;i<r;)a[i++]=1e7*Math.random()|0;for(r=a[--i],e%=_,r&&e&&(n=E(10,_-e),a[i]=(r/n|0)*n);0===a[i];i--)a.pop();if(i<0)a=[r=0];else{for(r=-1;0===a[0];)a.shift(),r-=_;for(i=1,n=a[0];10<=n;)n/=10,i++;i<_&&(r-=_-i)}return s.e=r,s.c=a,s}function f(e){return new this(e).sqrt()}var m=function(){var e=/^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,t=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};return function(r,n,i,a){var o,u,c,l,f=i="string"!=typeof i?(c="number"==typeof i||"[object Number]"==M.call(i))&&0===i&&1/i<0?"-0":i+"":i;if(null==a&&e.test(i))n.s=45===i.charCodeAt(0)?(i=i.slice(1),-1):1;else{if(10==a)return g(new r(i),r.precision,r.rounding);if(i=t.call(i).replace(/^\+(?!-)/,""),n.s=45===i.charCodeAt(0)?(i=i.replace(/^-(?!-)/,""),-1):1,null!=a?a!=(0|a)&&r.errors||(y=!(2<=a&&a<65))?(p(r,"base",a,0,0),l=e.test(i)):(o="["+O.slice(0,a|=0)+"]+",i=i.replace(/\.$/,"").replace(/^\./,"0."),(l=new RegExp("^"+o+"(?:\\."+o+")?$",a<37?"i":"").test(i))?(c&&(15<i.replace(/^0\.0*|\./,"").length&&p(r,0,f),c=!c),i=v(r,i,10,a,n.s)):"Infinity"!=i&&"NaN"!=i&&(p(r,"not a base "+a+" number",f),i="NaN")):l=e.test(i),!l)return n.c=n.e=null,"Infinity"!=i&&("NaN"!=i&&p(r,"not a number",f),n.s=null),w=0,n}for(0<(u=(i=-1<(o=i.indexOf("."))?i.replace(".",""):i).search(/e/i))?(o<0&&(o=u),o+=+i.slice(u+1),i=i.substring(0,u)):o<0&&(o=i.length),u=0;48===i.charCodeAt(u);u++);for(a=i.length;48===i.charCodeAt(--a););if(i=i.slice(u,a+1)){if(a=i.length,c&&15<a&&p(r,0,f),n.e=o=o-u-1,n.c=[],u=(o+1)%_,o<0&&(u+=_),u<a){for(u&&n.c.push(+i.slice(0,u)),a-=_;u<a;)n.c.push(+i.slice(u,u+=_));i=i.slice(u),u=_-i.length}else u-=a;for(;u--;i+="0");n.c.push(+i),b&&(n.e>r.maxE?n.c=n.e=null:n.e<r.minE&&(n.c=[n.e=0]))}else n.c=[n.e=0];return w=0,n}}();return function l(i){function u(e,t){var r=this;if(!(r instanceof u))return p(u,"Decimal called without new",e),new u(e,t);if(e instanceof(r.constructor=u)){if(null==t)return w=0,r.s=e.s,r.e=e.e,r.c=(e=e.c)&&e.slice(),r;if(10==t)return g(new u(e),u.precision,u.rounding);e+=""}return m(u,r,e,t)}return u.precision=20,u.rounding=4,u.modulo=1,u.toExpNeg=-7,u.toExpPos=21,u.minE=-C,u.maxE=C,u.errors=!0,u.crypto=!1,u.format={decimalSeparator:".",groupSeparator:",",groupSize:3,secondaryGroupSize:0,fractionGroupSeparator:" ",fractionGroupSize:0},u.prototype=T,u.ONE=new u(1),u.ROUND_UP=0,u.ROUND_DOWN=1,u.ROUND_CEIL=2,u.ROUND_FLOOR=3,u.ROUND_HALF_UP=4,u.ROUND_HALF_DOWN=5,u.ROUND_HALF_EVEN=6,u.ROUND_HALF_CEIL=7,u.ROUND_HALF_FLOOR=8,u.EUCLID=9,u.config=e,u.constructor=l,u.exp=t,u.ln=r,u.log=n,u.max=a,u.min=o,u.pow=s,u.sqrt=f,u.random=c,null!=i&&u.config(i),u}()}();void 0!==(n=function(){return d}.call(t,r,t,e))&&(e.exports=n)}(this)},function(e,t,r){"use strict";var i=r(19);t.name="bignumber",t.factory=function(e,t,r,n){var a=n("bignumber",{"":function(){return new e.BigNumber(0)},number:function(t){return new e.BigNumber(t+"")},string:function(t){return new e.BigNumber(t)},BigNumber:function(e){return e},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={0:"0",1:"\\left(${args[0]}\\right)"},a}},function(e,t){"use strict";e.exports=function r(e,t,n){return e&&"function"==typeof e.map?e.map(function(e){return r(e,t,n)}):t(e)}},function(e,t,r){"use strict";var i=r(19);t.name="boolean",t.factory=function(e,t,r,n){var a=n("bool",{"":function(){return!1},boolean:function(e){return e},number:function(e){return!!e},BigNumber:function(e){return!e.isZero()},string:function(e){var t=e.toLowerCase();if("true"===t)return!0;if("false"===t)return!1;t=Number(e);if(""==e||isNaN(t))throw new Error('Cannot convert "'+e+'" to a boolean');return!!t},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){e.exports=[r(22),r(25)]},function(e,t,r){"use strict";var i=r(23).format,a=r(3).lazy;t.name="Chain",t.path="type",t.factory=function(e,t,r,n,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");e&&e.isChain?this.value=e.value:this.value=e}function u(e,t){"function"==typeof t&&(s.prototype[e]=f(t))}function f(e){return function(){for(var t=[this.value],r=0;r<arguments.length;r++)t[r+1]=arguments[r];return new s(e.apply(e,t))}}return s.prototype.type="Chain",s.prototype.isChain=!0,s.prototype.done=function(){return this.value},s.prototype.valueOf=function(){return this.value},s.prototype.toString=function(){return i(this.value)},(s.createProxy=function(e,t){if("string"==typeof e)u(e,t);else for(var r in e)e.hasOwnProperty(r)&&u(r,e[r])})(o),o.on("import",function(e,t,r){void 0===r&&function(e,t){a(s.prototype,e,function(){var e=t();return"function"==typeof e?f(e):void 0})}(e,t)}),s},t.math=!0,t.lazy=!1},function(e,t,r){"use strict";var i=r(6).format,a=r(24).format;t.isString=function(e){return"string"==typeof e},t.endsWith=function(e,t){var r=e.length-t.length,n=e.length;return e.substring(r,n)===t},t.format=function(e,r){return"number"==typeof e?i(e,r):e&&!0===e.isBigNumber?a(e,r):e&&!0===e.isFraction?r&&"decimal"===r.fraction?e.toString():e.s*e.n+"/"+e.d:Array.isArray(e)?function n(e,r){if(Array.isArray(e)){for(var i="[",a=e.length,o=0;o<a;o++)0!=o&&(i+=", "),i+=n(e[o],r);return i+"]"}return t.format(e,r)}(e,r):t.isString(e)?'"'+e+'"':"function"==typeof e?e.syntax?e.syntax+"":"function":"object"==typeof e?"function"==typeof e.format?e.format(r):e.toString():String(e)}},function(e,t){t.format=function(e,r){if("function"==typeof r)return r(e);if(!e.isFinite())return e.isNaN()?"NaN":e.gt(0)?"Infinity":"-Infinity";var n="auto",i=void 0;switch(void 0!==r&&(r.notation&&(n=r.notation),"number"==typeof r?i=r:r.precision&&(i=r.precision)),n){case"fixed":return t.toFixed(e,i);case"exponential":return t.toExponential(e,i);case"auto":var u,a=.001,o=1e5;return r&&r.exponential&&(void 0!==r.exponential.lower&&(a=r.exponential.lower),void 0!==r.exponential.upper)&&(o=r.exponential.upper),e.constructor.toExpNeg,e.constructor.toExpPos,(e.constructor.config({toExpNeg:Math.round(Math.log(a)/Math.LN10),toExpPos:Math.round(Math.log(o)/Math.LN10)}),e.isZero())?"0":((u=e.abs()).gte(a)&&u.lt(o)?e.toSignificantDigits(i).toFixed():t.toExponential(e,i)).replace(/((\.\d*?)(0+))($|e)/,function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t});default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", or "fixed".')}},t.toExponential=function(e,t){return void 0!==t?e.toExponential(t-1):e.toExponential()},t.toFixed=function(e,t){return e.toFixed(t||0)}},function(e,t){"use strict";t.name="chain",t.factory=function(e,t,r,n){return n("chain",{"":function(){return new e.Chain},any:function(t){return new e.Chain(t)}})}},function(e,t,r){e.exports=[r(27),r(28)]},function(e,t,r){"use strict";var i=r(6).isNumber,a=r(6).format;t.name="Complex",t.path="type",t.factory=function(e,t,r,n){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");switch(arguments.length){case 0:this.re=0,this.im=0;break;case 1:var r=e;if("object"==typeof r){if("re"in r&&"im"in r){var n=new o(r.re,r.im);this.re=n.re,this.im=n.im;break}if("r"in r&&"phi"in r){n=o.fromPolar(r.r,r.phi);this.re=n.re,this.im=n.im;break}}throw new SyntaxError("Object with the re and im or r and phi properties expected.");case 2:if(!i(e)||!i(t))throw new TypeError("Two numbers expected in Complex constructor");this.re=e,this.im=t;break;default:throw new SyntaxError("One, two or three arguments expected in Complex constructor")}}function s(){for(;" "==d||"\t"==d;)f()}function c(e){return"0"<=e&&e<="9"}function f(){v++,d=g.charAt(v)}function l(e){v=e,d=g.charAt(v)}function p(){var t="",e=v;if("+"==d?f():"-"==d&&(t+=d,f()),!function(e){return"0"<=e&&e<="9"||"."==e}(d))return l(e),null;if("."==d){if(t+=d,f(),!c(d))return l(e),null}else{for(;c(d);)t+=d,f();"."==d&&(t+=d,f())}for(;c(d);)t+=d,f();if("E"==d||"e"==d){if(t+=d,f(),"+"!=d&&"-"!=d||(t+=d,f()),!c(d))return l(e),null;for(;c(d);)t+=d,f()}return t}function m(){var e=g.charAt(v+1);return"I"==d||"i"==d?(f(),"1"):"+"!=d&&"-"!=d||"I"!=e&&"i"!=e?null:(e="+"==d?"1":"-1",f(),f(),e)}function h(){return new SyntaxError('End of string expected, got "'+g.substr(v)+'"')}var g,v,d;return o.prototype.isComplex=!0,o.prototype.type="Complex",o.parse=function(e){if(v=-1,d="","string"!=typeof(g=e))throw new TypeError("Invalid argument in Complex.parse, string expected");f(),s();var t=p();if(t){if("I"==d||"i"==d){if(f(),s(),d)throw h();return new o(0,Number(t))}s();var r=d;if("+"!=r&&"-"!=r){if(s(),d)throw h();return new o(Number(t),0)}f(),s();var n=p();if(n){if("I"!=d&&"i"!=d)throw new SyntaxError('Character "i" expected, got "'+d+'"');f()}else if(!(n=m()))throw new SyntaxError("Imaginary part expected");if("-"==r&&(n="-"==n[0]?"+"+n.substring(1):"-"+n),f(),s(),d)throw h();return new o(Number(t),Number(n))}if(t=m()){if(s(),d)throw h();return new o(0,Number(t))}throw new SyntaxError('Could not parse: "'+e+'" as complex number')},o.fromPolar=function(e){switch(arguments.length){case 1:if("object"==typeof e)return o.fromPolar(e.r,e.phi);throw new TypeError("Input has to be an object with r and phi keys.");case 2:var r=e,n=arguments[1];if(i(r)){if(n&&n.isUnit&&n.hasBase("ANGLE")&&(n=n.toNumber("rad")),i(n))return new o(r*Math.cos(n),r*Math.sin(n));throw new TypeError("Phi is not a number nor an angle unit.")}throw new TypeError("Radius r is not a number.");default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},o.prototype.toPolar=function(){return{r:Math.sqrt(this.re*this.re+this.im*this.im),phi:Math.atan2(this.im,this.re)}},o.prototype.clone=function(){return new o(this.re,this.im)},o.prototype.equals=function(e){return this.re===e.re&&this.im===e.im},o.prototype.format=function(e){var r=this.im,n=this.re,o=a(this.re,e),s=a(this.im,e),e=i(e)?e:e?e.precision:null;return 0==(r=null!==e&&(e=Math.pow(10,-e),Math.abs(n/r)<e&&(n=0),Math.abs(r/n)<e)?0:r)?o:0==n?1==r?"i":-1==r?"-i":s+"i":0<r?1==r?o+" + i":o+" + "+s+"i":-1==r?o+" - i":o+" - "+s.substring(1)+"i"},o.prototype.toString=function(){return this.format()},o.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},o.fromJSON=function(e){return new o(e)},o.prototype.valueOf=o.prototype.toString,o}},function(e,t,r){"use strict";var i=r(19);t.name="complex",t.factory=function(e,t,n,a){var o=r(29),s=a("complex",{"":function(){return new e.Complex(0,0)},number:function(t){return new e.Complex(t,0)},"number, number":function(t,r){return new e.Complex(t,r)},"BigNumber, BigNumber":function(t,r){return new e.Complex(t.toNumber(),r.toNumber())},Complex:function(e){return e.clone()},string:function(t){return e.Complex.parse(t)},Object:function(t){if("re"in t&&"im"in t)return new e.Complex(t.re,t.im);if("r"in t&&"phi"in t)return e.Complex.fromPolar(t.r,t.phi);throw new Error("Expected object with either properties re and im, or properties r and phi.")},"Array | Matrix":function(e){return i(e,s)}});return s.toTex={0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)+"+o.symbols.i+"\\cdot\\left(${args[1]}\\right)\\right)"},s}},function(e,t){"use strict";t.symbols={Alpha:"A",alpha:"\\alpha",Beta:"B",beta:"\\beta",Gamma:"\\Gamma",gamma:"\\gamma",Delta:"\\Delta",delta:"\\delta",Epsilon:"E",epsilon:"\\epsilon",varepsilon:"\\varepsilon",Zeta:"Z",zeta:"\\zeta",Eta:"H",eta:"\\eta",Theta:"\\Theta",theta:"\\theta",vartheta:"\\vartheta",Iota:"I",iota:"\\iota",Kappa:"K",kappa:"\\kappa",varkappa:"\\varkappa",Lambda:"\\Lambda",lambda:"\\lambda",Mu:"M",mu:"\\mu",Nu:"N",nu:"\\nu",Xi:"\\Xi",xi:"\\xi",Omicron:"O",omicron:"o",Pi:"\\Pi",pi:"\\pi",varpi:"\\varpi",Rho:"P",rho:"\\rho",varrho:"\\varrho",Sigma:"\\Sigma",sigma:"\\sigma",varsigma:"\\varsigma",Tau:"T",tau:"\\tau",Upsilon:"\\Upsilon",upsilon:"\\upsilon",Phi:"\\Phi",phi:"\\phi",varphi:"\\varphi",Chi:"X",chi:"\\chi",Psi:"\\Psi",psi:"\\psi",Omega:"\\Omega",omega:"\\omega",true:"\\mathrm{True}",false:"\\mathrm{False}",i:"i",inf:"\\infty",Inf:"\\infty",infinity:"\\infty",Infinity:"\\infty",oo:"\\infty",lim:"\\lim",undefined:"\\mathbf{?}"},t.operators={transpose:"^\\top",factorial:"!",pow:"^",dotPow:".^\\wedge",unaryPlus:"+",unaryMinus:"-",bitNot:"~",not:"\\neg",multiply:"\\cdot",divide:"\\frac",dotMultiply:".\\cdot",dotDivide:".:",mod:"\\mod",add:"+",subtract:"-",to:"\\rightarrow",leftShift:"<<",rightArithShift:">>",rightLogShift:">>>",equal:"=",unequal:"\\neq",smaller:"<",larger:">",smallerEq:"\\leq",largerEq:"\\geq",bitAnd:"\\&",bitXor:"\\underline{|}",bitOr:"|",and:"\\wedge",xor:"\\veebar",or:"\\vee"},t.defaultTemplate="\\mathrm{${name}}\\left(${args}\\right)";var r={deg:"^\\circ"};t.toSymbol=function(e,n){return(n=void 0!==n&&n)?r.hasOwnProperty(e)?r[e]:"\\mathrm{"+e+"}":t.symbols.hasOwnProperty(e)?t.symbols[e]:-1!==e.indexOf("_")?(n=e.indexOf("_"),t.toSymbol(e.substring(0,n))+"_{"+t.toSymbol(e.substring(n+1))+"}"):e}},function(e,t,r){e.exports=[r(31),r(35)]},function(e,t,r){var i=r(32);i.prototype.type="Fraction",i.prototype.isFraction=!0,i.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},i.fromJSON=function(e){return new i(e)},t.name="Fraction",t.path="type",t.factory=function(e,t,r,n){return i}},function(e,t,r){var i;!function(e){!function(){"use strict";function o(e,t){return isNaN(e=parseInt(e,10))&&s(),e*t}function s(){throw"Invalid Param"}function u(e,t){return this instanceof u?(l(e,t),e=u.REDUCE?g(f.d,f.n):1,this.s=f.s,this.n=f.n/e,void(this.d=f.d/e)):new u(e,t)}function l(e,t){var r,n=0,i=1,a=1,u=0,c=0,l=0,p=1,m=1,h=0,g=1,v=1,d=1,y=1e7;if(null!=e)if(void 0!==t)a=(n=e)*(i=t);else switch(typeof e){case"object":"d"in e&&"n"in e?(n=e.n,i=e.d,"s"in e&&(n*=e.s)):0 in e?(n=e[0],1 in e&&(i=e[1])):s(),a=n*i;break;case"number":if((e=e<0?-(a=e):e)%1==0)n=e;else if(0<e){for(1<=e&&(e/=m=Math.pow(10,Math.floor(1+Math.log(e)/Math.LN10)));g<=y&&d<=y;){if(e===(r=(h+v)/(g+d))){i=g+d<=y?(n=h+v,g+d):g<d?(n=v,d):(n=h,g);break}r<e?(h+=v,g+=d):(v+=h,d+=g),i=y<g?(n=v,d):(n=h,g)}n*=m}break;case"string":if("-"===(g=e.match(/\d+|./g))[h]?(a=-1,h++):"+"===g[h]&&h++,g.length===h+1?c=o(g[h++],a):"."===g[h+1]||"."===g[h]?("."!==g[h]&&(u=o(g[h++],a)),(++h+1===g.length||"("===g[h+1]&&")"===g[h+3]||"'"===g[h+1]&&"'"===g[h+3])&&(c=o(g[h],a),p=Math.pow(10,g[h].length),h++),("("===g[h]&&")"===g[h+2]||"'"===g[h]&&"'"===g[h+2])&&(l=o(g[h+1],a),m=Math.pow(10,g[h+1].length)-1,h+=3)):"/"===g[h+1]||":"===g[h+1]?(c=o(g[h],a),p=o(g[h+2],1),h+=3):"/"===g[h+3]&&" "===g[h+1]&&(u=o(g[h],a),c=o(g[h+2],a),p=o(g[h+4],1),h+=5),g.length<=h){a=n=l+m*(u*p+c),i=p*m;break}default:s()}if(!i)throw"DIV/0";f.s=a<0?-1:1,f.n=Math.abs(n),f.d=Math.abs(i)}function g(e,t){if(!e)return t;if(!t)return e;for(;;){if(!(e%=t))return t;if(!(t%=e))return e}}var f={s:1,n:0,d:1};u.REDUCE=1,u.prototype={s:1,n:0,d:1,abs:function(){return new u(this.n,this.d)},neg:function(){return new u(-this.s*this.n,this.d)},add:function(e,t){return l(e,t),new u(this.s*this.n*f.d+f.s*this.d*f.n,this.d*f.d)},sub:function(e,t){return l(e,t),new u(this.s*this.n*f.d-f.s*this.d*f.n,this.d*f.d)},mul:function(e,t){return l(e,t),new u(this.s*f.s*this.n*f.n,this.d*f.d)},div:function(e,t){return l(e,t),new u(this.s*f.s*this.n*f.d,this.d*f.n)},clone:function(){return new u(this)},mod:function(e,t){return void 0===e?new u(this.s*this.n%this.d,1):(l(e,t),0==f.n*this.d&&u(0,0),new u(this.s*f.d*this.n%(f.n*this.d),f.d*this.d))},gcd:function(e,t){return l(e,t),new u(g(f.n,this.n),f.d*this.d/g(f.d,this.d))},lcm:function(e,t){return l(e,t),new u(f.n*this.n/g(f.n,this.n),g(f.d,this.d))},ceil:function(){return new u(Math.ceil(this.s*this.n/this.d),1)},floor:function(){return new u(Math.floor(this.s*this.n/this.d),1)},round:function(){return new u(Math.round(this.s*this.n/this.d),1)},inverse:function(){return new u(this.s*this.d,this.n)},pow:function(e){var t=this.d,r=this.n;return e<0?(this.d=Math.pow(r,-e),this.n=Math.pow(t,-e)):(this.d=Math.pow(t,e),this.n=Math.pow(r,e)),0==e%2&&(this.s=1),this},equals:function(e,t){return l(e,t),this.s*this.n*f.d==f.s*f.n*this.d},compare:function(e,t){l(e,t);e=this.s*this.n*f.d-f.s*f.n*this.d;return(0<e)-(e<0)},divisible:function(e,t){return l(e,t),!(!(f.n*this.d)||this.n*f.d%(f.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(e){var r="",n=this.n,i=this.d;return this.s<0&&(r+="-"),1===i?r+=n:(e&&0<(e=Math.floor(n/i))&&(r=r+e+" ",n%=i),r=(r+=n)+"/"+i),r},toLatex:function(e){var r="",n=this.n,i=this.d;return this.s<0&&(r+="-"),1===i?r+=n:(e&&0<(e=Math.floor(n/i))&&(r+=e,n%=i),r=(r=(r+="\\frac{")+n+"}{")+i+"}"),r},toString:function(){var e,t=this.n,r=this.d;u.REDUCE||(t/=e=g(t,r),r/=e);for(var n=String(t).split(""),i=0,a=[~this.s?"":"-","",""],o="",s=function(t){for(;t%2==0;t/=2);for(;t%5==0;t/=5);if(1===t)return 0;for(var r=10%t,n=1;1!==r;n++)if(r=10*r%t,2e3<n)return 0;return n}(r),c=function(t,r){for(var n=1,i=function(e,t,r){for(var n=1;0<t;e=e*e%r,t>>=1)1&t&&(n=n*e%r);return n}(10,r,t),a=0;a<300;a++){if(n===i)return a;n=10*n%t,i=10*i%t}return 0}(r,s),f=-1,l=1,p=10+s+c+n.length,v=0;v<p;v++,i*=10){if(v<n.length?i+=Number(n[v]):(l=2,f++),0<s)if(f===c)a[l]+=o+"(",o="";else if(f===s+c){a[l]+=o+")";break}r<=i?(a[l]+=o+(i/r|0),o="",i%=r):1<l?o+="0":a[l]&&(a[l]+="0")}return a[0]+=a[1]||"0",a[2]?a[0]+"."+a[2]:a[0]}},r(34).amd?void 0!==(i=function(){return u}.apply(t,[]))&&(e.exports=i):e.exports=u}()}.call(t,r(33)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children=[],e.webpackPolyfill=1),e}},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,r){"use strict";var i=r(19);t.name="fraction",t.factory=function(e,t,r,n){var a=n("fraction",{number:function(t){if(!isFinite(t)||isNaN(t))throw new Error(t+" cannot be represented as a fraction");return new e.Fraction(t)},string:function(t){return new e.Fraction(t)},"number, number":function(t,r){return new e.Fraction(t,r)},Fraction:function(e){return e},Object:function(t){return new e.Fraction(t)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){e.exports=[r(37),r(45),r(46),r(48),r(57),r(63),r(64),r(65),r(66),r(50),r(67)]},function(e,t,r){"use strict";var o=r(38).string.isString;t.name="Matrix",t.path="type",t.factory=function(e,t,r,n){function i(){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator")}return i.prototype.type="Matrix",i.prototype.isMatrix=!0,i.storage=function(e){if(!o(e))throw new TypeError("format must be a string value");var t=i._storage[e];if(t)return t;throw new SyntaxError("Unsupported matrix storage format: "+e)},i._storage={},i.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},i.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},i.prototype.create=function(e,t){throw new Error("Cannot invoke create on a Matrix interface")},i.prototype.subset=function(e,t,r){throw new Error("Cannot invoke subset on a Matrix interface")},i.prototype.get=function(e){throw new Error("Cannot invoke get on a Matrix interface")},i.prototype.set=function(e,t,r){throw new Error("Cannot invoke set on a Matrix interface")},i.prototype.resize=function(e,t){throw new Error("Cannot invoke resize on a Matrix interface")},i.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},i.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},i.prototype.map=function(e,t){throw new Error("Cannot invoke map on a Matrix interface")},i.prototype.forEach=function(e){throw new Error("Cannot invoke forEach on a Matrix interface")},i.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},i.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},i.prototype.format=function(e){throw new Error("Cannot invoke format on a Matrix interface")},i.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},i}},function(e,t,r){"use strict";t.array=r(39),t.boolean=r(43),t.function=r(44),t.number=r(6),t.object=r(3),t.string=r(23),t.types=r(40),t.emitter=r(8)},function(e,t,r){"use strict";function i(e,r,n,a){var s,u=e.length,f=r[n],l=Math.min(u,f);if(e.length=f,n<r.length-1){for(var p=n+1,o=0;o<l;o++)s=e[o],Array.isArray(s)||(e[o]=s=[s]),i(s,r,p,a);for(o=l;o<f;o++)i(e[o]=s=[],r,p,a)}else{for(o=0;o<l;o++)for(;Array.isArray(e[o]);)e[o]=e[o][0];if(a!==t.UNINITIALIZED)for(o=l;o<f;o++)e[o]=c.clone(a)}}var s=r(6),u=r(23),c=r(3),f=(r(40),r(41)),l=r(42);t.size=function(e){for(var t=[];Array.isArray(e);)t.push(e.length),e=e[0];return t},t.validate=function(e,t){if(0==t.length){if(Array.isArray(e))throw new f(e.length,0)}else!function n(e,t,r){var a=e.length;if(a!=t[r])throw new f(a,t[r]);if(r<t.length-1)for(var o=r+1,i=0;i<a;i++){var s=e[i];if(!Array.isArray(s))throw new f(t.length-1,t.length,"<");n(e[i],t,o)}else for(i=0;i<a;i++)if(Array.isArray(e[i]))throw new f(t.length+1,t.length,">")}(e,t,0)},t.validateIndex=function(e,t){if(!s.isNumber(e)||!s.isInteger(e))throw new TypeError("Index must be an integer (value: "+e+")");if(e<0)throw new l(e);if(void 0!==t&&t<=e)throw new l(e,t)},t.UNINITIALIZED={},t.resize=function(e,t,r){if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new Error("Resizing to scalar is not supported");return t.forEach(function(e){if(!s.isNumber(e)||!s.isInteger(e)||e<0)throw new TypeError("Invalid size, must contain positive integers (size: "+u.format(t)+")")}),i(e,t,0,void 0!==r?r:0),e},t.squeeze=function(e,r){for(var n=r||t.size(e);Array.isArray(e)&&1===e.length;)e=e[0],n.shift();for(var i=n.length;1===n[i-1];)i--;return i<n.length&&(e=function a(e,t,r){if(r<t)for(var o=r+1,n=0,i=e.length;n<i;n++)e[n]=a(e[n],t,o);else for(;Array.isArray(e);)e=e[0];return e}(e,i,0),n.length=i),e},t.unsqueeze=function(e,r,n,i){var a=i||t.size(e);if(n)for(var s=0;s<n;s++)e=[e],a.unshift(1);for(e=function o(e,t,r){if(Array.isArray(e))for(var a=r+1,n=0,i=e.length;n<i;n++)e[n]=o(e[n],t,a);else for(var s=r;s<t;s++)e=[e];return e}(e,r,0);a.length<r;)a.push(1);return e},t.flatten=function(e){var t;return Array.isArray(e)?(t=[],e.forEach(function r(e){Array.isArray(e)?e.forEach(r):t.push(e)}),t):e},t.isArray=Array.isArray},function(e,t){"use strict";t.type=function(e){var t=typeof e;return"object"==t?null===e?"null":e instanceof Boolean?"boolean":e instanceof Number?"number":e instanceof String?"string":Array.isArray(e)?"Array":e instanceof Date?"Date":e instanceof RegExp?"RegExp":"Object":"function"==t?"Function":t}},function(e,t){"use strict";function r(e,t,n){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.actual=e,this.expected=t,this.relation=n,this.message="Dimension mismatch ("+(Array.isArray(e)?"["+e.join(", ")+"]":e)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=(new Error).stack}(r.prototype=new RangeError).constructor=RangeError,r.prototype.name="DimensionError",r.prototype.isDimensionError=!0,e.exports=r},function(e,t){"use strict";function r(e,t,n){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.index=e,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=n),void 0!==this.min&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":void 0!==this.max&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=(new Error).stack}(r.prototype=new RangeError).constructor=RangeError,r.prototype.name="IndexError",r.prototype.isIndexError=!0,e.exports=r},function(e,t){"use strict";t.isBoolean=function(e){return"boolean"==typeof e}},function(e,t){t.memoize=function(e,t){return function r(){"object"!=typeof r.cache&&(r.cache={});for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];var a=t?t(n):JSON.stringify(n);return a in r.cache?r.cache[a]:r.cache[a]=e.apply(e,n)}}},function(e,t,r){"use strict";var i=r(38),a=r(41),o=i.string,s=i.array,u=i.object,c=i.number,f=Array.isArray,l=c.isNumber,p=c.isInteger,m=o.isString,h=s.validateIndex;t.name="DenseMatrix",t.path="type",t.factory=function(e,t,n,c){function g(e,t){if(!(this instanceof g))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!m(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix)"DenseMatrix"===e.type?(this._data=u.clone(e._data),this._size=u.clone(e._size)):(this._data=e.toArray(),this._size=e.size()),this._datatype=t||e._datatype;else if(e&&f(e.data)&&f(e.size))this._data=e.data,this._size=e.size,this._datatype=t||e.datatype;else{if(f(e))this._data=function w(e){for(var t=0,r=e.length;t<r;t++){var n=e[t];f(n)?e[t]=w(n):n&&!0===n.isMatrix&&(e[t]=w(n.valueOf()))}return e}(e),this._size=s.size(this._data),s.validate(this._data,this._size);else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._data=[],this._size=[0]}this._datatype=t}}function v(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var n=t.size();if(n.length!=e._size.length)throw new a(n.length,e._size.length);for(var i=t.min(),o=t.max(),s=0,u=e._size.length;s<u;s++)h(i[s],e._size[s]),h(o[s],e._size[s]);return new g(function d(e,t,r,n){var i=n==r-1,a=t.dimension(n);return(i?a.map(function(t){return e[t]}):a.map(function(i){i=e[i];return d(i,t,r,n+1)})).valueOf()}(e._data,t,n.length,0),e._datatype)}function x(e,t,r,n,i){var a=i==n-1,o=t.dimension(i);a?o.forEach(function(t,n){h(t),e[t]=r[n[0]]}):o.forEach(function(a,o){h(a),x(e[a],t,r[o[0]],n,i+1)})}function b(e,t,r){for(var n=u.clone(e._size),i=!1;n.length<t.length;)n.push(0),i=!0;for(var a=0,o=t.length;a<o;a++)t[a]>n[a]&&(n[a]=t[a],i=!0);i&&E(e,n,r)}var n=n(r(37)),E=((g.prototype=new n).type="DenseMatrix",g.prototype.isDenseMatrix=!0,g.prototype.storage=function(){return"dense"},g.prototype.datatype=function(){return this._datatype},g.prototype.create=function(e,t){return new g(e,t)},g.prototype.subset=function(e,t,r){switch(arguments.length){case 1:return v(this,e);case 2:case 3:return function(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var i,o=t.size(),c=t.isScalar();if(r&&!0===r.isMatrix?(i=r.size(),r=r.valueOf()):i=s.size(r),c){if(0!==i.length)throw new TypeError("Scalar expected");e.set(t.min(),r,n)}else{if(o.length<e._size.length)throw new a(o.length,e._size.length,"<");if(i.length<o.length){for(var f=0,l=0;1===o[f]&&1===i[f];)f++;for(;1===o[f];)l++,f++;r=s.unsqueeze(r,o.length,l,i)}if(!u.deepEqual(o,i))throw new a(o,i,">");b(e,t.max().map(function(e){return e+1}),n);c=o.length;x(e._data,t,r,c,0)}return e}(this,e,t,r);default:throw new SyntaxError("Wrong number of arguments")}},g.prototype.get=function(e){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);for(var t=0;t<e.length;t++)h(e[t],this._size[t]);for(var r=this._data,n=0,i=e.length;n<i;n++){var o=e[n];h(o,r.length),r=r[o]}return u.clone(r)},g.prototype.set=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(e.length<this._size.length)throw new a(e.length,this._size.length,"<");b(this,e.map(function(e){return e+1}),r);for(var o,u=this._data,n=0,i=e.length-1;n<i;n++)o=e[n],h(o,u.length),u=u[o];return o=e[e.length-1],h(o,u.length),u[o]=t,this},g.prototype.resize=function(e,t,r){if(f(e))return r=r?this.clone():this,E(r,e,t);throw new TypeError("Array expected")},function(e,t,r){if(0!==t.length)return e._size=u.clone(t),e._data=s.resize(e._data,e._size,r),e;for(var n=e._data;f(n);)n=n[0];return u.clone(n)});return g.prototype.clone=function(){return new g({data:u.clone(this._data),size:u.clone(this._size),datatype:this._datatype})},g.prototype.size=function(){return this._size},g.prototype.map=function(e){var t=this,r=function(n,i){return f(n)?n.map(function(e,t){return r(e,i.concat(t))}):e(n,i,t)};return new g({data:r(this._data,[]),size:u.clone(this._size),datatype:this._datatype})},g.prototype.forEach=function(e){var t=this,r=function(n,i){f(n)?n.forEach(function(e,t){r(e,i.concat(t))}):e(n,i,t)};r(this._data,[])},g.prototype.toArray=function(){return u.clone(this._data)},g.prototype.valueOf=function(){return this._data},g.prototype.format=function(e){return o.format(this._data,e)},g.prototype.toString=function(){return o.format(this._data)},g.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},g.prototype.diagonal=function(e){if(e){if(!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e))throw new TypeError("The parameter k must be an integer number")}else e=0;for(var t=0<e?e:0,r=e<0?-e:0,e=this._size[0],i=this._size[1],a=Math.min(e-r,i-t),o=[],s=0;s<a;s++)o[s]=u.clone(this._data[s+r][s+t]);return new g({data:o,size:[a],datatype:this._datatype})},g.diagonal=function(t,r,n,i,a){if(!f(t))throw new TypeError("Array expected, size parameter");if(2!==t.length)throw new Error("Only two dimensions matrix are supported");if(t=t.map(function(e){if(e&&!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e)||e<1)throw new Error("Size values must be positive integers");return e}),n){if(n&&!0===n.isBigNumber&&(n=n.toNumber()),!l(n)||!p(n))throw new TypeError("The parameter k must be an integer number")}else n=0;i&&m(a)&&(i=c.convert(i,a));var o,u=0<n?n:0,h=n<0?-n:0,a=t[0],n=t[1],y=Math.min(a-h,n-u);if(f(r)){if(r.length!==y)throw new Error("Invalid value array length");o=function(e){return r[e]}}else if(r&&!0===r.isMatrix){var x=r.size();if(1!==x.length||x[0]!==y)throw new Error("Invalid matrix length");o=function(e){return r.get([e])}}else o=function(){return r};i=i||(o(0)&&!0===o(0).isBigNumber?new e.BigNumber(0):0);var b=[];if(0<t.length)for(var b=s.resize(b,t,i),w=0;w<y;w++)b[w+h][w+u]=o(w);return new g({data:b,size:[a,n]})},g.fromJSON=function(e){return new g(e)},g.prototype.swapRows=function(e,t){if(!(l(e)&&p(e)&&l(t)&&p(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return h(e,this._size[0]),h(t,this._size[0]),g._swapRows(e,t,this._data),this},g._swapRows=function(e,t,r){var n=r[e];r[e]=r[t],r[t]=n},e.Matrix._storage.dense=g,e.Matrix._storage.default=g},t.lazy=!1},function(e,t,r){"use strict";var i=r(38),a=r(41),o=i.array,s=i.object,u=i.string,c=i.number,f=Array.isArray,l=c.isNumber,p=c.isInteger,m=u.isString,h=o.validateIndex;t.name="SparseMatrix",t.path="type",t.factory=function(e,t,n,g){function v(e,t){if(!(this instanceof v))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!m(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix)!function(e,t,r){"SparseMatrix"===t.type?(e._values=t._values?s.clone(t._values):void 0,e._index=s.clone(t._index),e._ptr=s.clone(t._ptr),e._size=s.clone(t._size),e._datatype=r||t._datatype):b(e,t.valueOf(),r||t._datatype)}(this,e,t);else if(e&&f(e.index)&&f(e.ptr)&&f(e.size))this._values=e.values,this._index=e.index,this._ptr=e.ptr,this._size=e.size,this._datatype=t||e.datatype;else if(f(e))b(this,e,t);else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=t}}var d=n(r(37)),y=n(r(47)),b=function(e,t,r){e._values=[],e._index=[],e._ptr=[],e._datatype=r;var n=t.length,i=0,a=y,o=0;if(m(r)&&(a=g.find(y,[r,r])||y,o=g.convert(0,r)),0<n){var s=0;do{e._ptr.push(e._index.length);for(var u=0;u<n;u++){var l,c=t[u];f(c)?(0===s&&i<c.length&&(i=c.length),s<c.length&&(a(l=c[s],o)||(e._values.push(l),e._index.push(u)))):(0===s&&i<1&&(i=1),a(c,o)||(e._values.push(c),e._index.push(u)))}}while(++s<i)}e._ptr.push(e._index.length),e._size=[n,i]},w=((v.prototype=new d).type="SparseMatrix",v.prototype.isSparseMatrix=!0,v.prototype.storage=function(){return"sparse"},v.prototype.datatype=function(){return this._datatype},v.prototype.create=function(e,t){return new v(e,t)},v.prototype.density=function(){var e=this._size[0],t=this._size[1];return 0!==e&&0!==t?this._index.length/(e*t):0},v.prototype.subset=function(e,t,r){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return w(this,e);case 2:case 3:return N(this,e,t,r);default:throw new SyntaxError("Wrong number of arguments")}},function(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var n=t.size();if(n.length!=e._size.length)throw new a(n.length,e._size.length);for(var s,u,c=t.min(),f=t.max(),i=0,o=e._size.length;i<o;i++)h(c[i],e._size[i]),h(f[i],e._size[i]);var l=e._values,p=e._index,m=e._ptr,g=t.dimension(0),t=t.dimension(1),y=[],x=[],b=(g.forEach(function(e,t){x[e]=t[0],y[e]=!0}),l?[]:void 0),w=[],N=[];return t.forEach(function(e){for(N.push(w.length),s=m[e],u=m[e+1];s<u;s++)i=p[s],!0===y[i]&&(w.push(x[i]),b)&&b.push(l[s])}),N.push(w.length),new v({values:b,index:w,ptr:N,size:n,datatype:e._datatype})}),N=function(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var i,u=t.size(),c=t.isScalar();if(r&&!0===r.isMatrix?(i=r.size(),r=r.toArray()):i=o.size(r),c){if(0!==i.length)throw new TypeError("Scalar expected");e.set(t.min(),r,n)}else{if(1!==u.length&&2!==u.length)throw new a(u.length,e._size.length,"<");if(i.length<u.length){for(var f=0,l=0;1===u[f]&&1===i[f];)f++;for(;1===u[f];)l++,f++;r=o.unsqueeze(r,u.length,l,i)}if(!s.deepEqual(u,i))throw new a(u,i,">");for(var p=t.min()[0],m=t.min()[1],h=i[0],g=i[1],v=0;v<h;v++)for(var d=0;d<g;d++){var y=r[v][d];e.set([v+p,d+m],y,n)}}return e},E=(v.prototype.get=function(e){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);var t,n;if(this._values)return t=e[0],e=e[1],h(t,this._size[0]),h(e,this._size[1]),(n=E(t,this._ptr[e],this._ptr[e+1],this._index))<this._ptr[e+1]&&this._index[n]===t?s.clone(this._values[n]):0;throw new Error("Cannot invoke get on a Pattern only matrix")},v.prototype.set=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);var n,o,s,u,c;if(this._values)return n=e[0],e=e[1],o=this._size[0],s=this._size[1],u=y,c=0,m(this._datatype)&&(u=g.find(y,[this._datatype,this._datatype])||y,c=g.convert(0,this._datatype)),(o-1<n||s-1<e)&&(_(this,Math.max(n+1,o),Math.max(e+1,s),r),o=this._size[0],s=this._size[1]),h(n,o),h(e,s),(r=E(n,this._ptr[e],this._ptr[e+1],this._index))<this._ptr[e+1]&&this._index[r]===n?u(t,c)?M(r,e,this._values,this._index,this._ptr):this._values[r]=t:A(r,n,e,t,this._values,this._index,this._ptr),this;throw new Error("Cannot invoke set on a Pattern only matrix")},function(e,t,r,n){if(r-t==0)return r;for(var i=t;i<r;i++)if(n[i]===e)return i;return t}),M=function(e,t,r,n,i){r.splice(e,1),n.splice(e,1);for(var a=t+1;a<i.length;a++)i[a]--},A=function(e,t,r,n,i,a,o){i.splice(e,0,n),a.splice(e,0,t);for(var s=r+1;s<o.length;s++)o[s]++},_=(v.prototype.resize=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");e.forEach(function(t){if(!c.isNumber(t)||!c.isInteger(t)||t<0)throw new TypeError("Invalid size, must contain positive integers (size: "+u.format(e)+")")});r=r?this.clone():this;return _(r,e[0],e[1],t)},function(e,t,r,n){var i=n||0,n=y,o=0;m(e._datatype)&&(n=g.find(y,[e._datatype,e._datatype])||y,o=g.convert(0,e._datatype),i=g.convert(i,e._datatype));var f=!n(i,o),l=e._size[0],p=e._size[1];if(p<r){for(u=p;u<r;u++)if(e._ptr[u]=e._values.length,f)for(s=0;s<l;s++)e._values.push(i),e._index.push(s);e._ptr[r]=e._values.length}else r<p&&(e._ptr.splice(r+1,p-r),e._values.splice(e._ptr[r],e._values.length),e._index.splice(e._ptr[r],e._index.length));if(p=r,l<t){if(f){for(var h=0,u=0;u<p;u++){e._ptr[u]=e._ptr[u]+h;for(var c=e._ptr[u+1]+h,v=0,s=l;s<t;s++,v++)e._values.splice(c+v,0,i),e._index.splice(c+v,0,s),h++}e._ptr[p]=e._values.length}}else if(t<l){var d=0;for(u=0;u<p;u++){e._ptr[u]=e._ptr[u]-d;var x=e._ptr[u],b=e._ptr[u+1]-d;for(c=x;c<b;c++)t-1<(s=e._index[c])&&(e._values.splice(c,1),e._index.splice(c,1),d++)}e._ptr[u]=e._values.length}return e._size[0]=t,e._size[1]=r,e}),O=(v.prototype.clone=function(){return new v({values:this._values?s.clone(this._values):void 0,index:s.clone(this._index),ptr:s.clone(this._ptr),size:s.clone(this._size),datatype:this._datatype})},v.prototype.size=function(){return s.clone(this._size)},v.prototype.map=function(e,t){var r,n,i;if(this._values)return n=(r=this)._size[0],i=this._size[1],O(this,0,n-1,0,i-1,function(t,n,i){return e(t,[n,i],r)},t);throw new Error("Cannot invoke map on a Pattern only matrix")},function(e,t,r,n,i,a,o){var s=[],u=[],c=[],f=y,l=0;m(e._datatype)&&(f=g.find(y,[e._datatype,e._datatype])||y,l=g.convert(0,e._datatype));for(var p=function(e,t,r){e=a(e,t,r),f(e,l)||(s.push(e),u.push(t))},h=n;h<=i;h++){c.push(s.length);for(var d=e._ptr[h],x=e._ptr[h+1],b=t,w=d;w<x;w++){var N=e._index[w];if(t<=N&&N<=r){if(!o)for(var E=b;E<N;E++)p(0,E-t,h-n);p(e._values[w],N-t,h-n)}b=N+1}if(!o)for(var M=b;M<=r;M++)p(0,M-t,h-n)}return c.push(s.length),new v({values:s,index:u,ptr:c,size:[r-t+1,i-n+1]})}),T=(v.prototype.forEach=function(e,t){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var r=this,n=this._size[0],i=this._size[1],a=0;a<i;a++){for(var o=this._ptr[a],s=this._ptr[a+1],u=0,c=o;c<s;c++){var f=this._index[c];if(!t)for(var l=u;l<f;l++)e(0,[l,a],r);e(this._values[c],[f,a],r),u=f+1}if(!t)for(var p=u;p<n;p++)e(0,[p,a],r)}},v.prototype.toArray=function(){return T(this._values,this._index,this._ptr,this._size,!0)},v.prototype.valueOf=function(){return T(this._values,this._index,this._ptr,this._size,!1)},function(e,t,r,n,i){for(var o,u=n[0],c=n[1],f=[],a=0;a<u;a++)for(f[a]=[],o=0;o<c;o++)f[a][o]=0;for(o=0;o<c;o++)for(var l=r[o],p=r[o+1],m=l;m<p;m++)f[a=t[m]][o]=e?i?s.clone(e[m]):e[m]:1;return f});return v.prototype.format=function(e){for(var t=this._size[0],r=this._size[1],n=this.density(),i="Sparse Matrix ["+u.format(t,e)+" x "+u.format(r,e)+"] density: "+u.format(n,e)+"\n",a=0;a<r;a++)for(var o=this._ptr[a],s=this._ptr[a+1],c=o;c<s;c++){var f=this._index[c];i+="\n    ("+u.format(f,e)+", "+u.format(a,e)+") ==> "+(this._values?u.format(this._values[c],e):"X")}return i},v.prototype.toString=function(){return u.format(this.toArray())},v.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},v.prototype.diagonal=function(e){if(e){if(!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e))throw new TypeError("The parameter k must be an integer number")}else e=0;var t=0<e?e:0,r=e<0?-e:0,e=this._size[0],i=this._size[1],a=Math.min(e-r,i-t),o=[],u=[],e=[];e[0]=0;for(var f=t;f<i&&o.length<a;f++)for(var m=this._ptr[f],h=this._ptr[f+1],g=m;g<h;g++){var d=this._index[g];if(d===f-t+r){o.push(s.clone(this._values[g])),u[o.length-1]=d-r;break}}return e.push(o.length),new v({values:o,index:u,ptr:e,size:[a,1]})},v.fromJSON=function(e){return new v(e)},v.diagonal=function(e,t,r,n,i){if(!f(e))throw new TypeError("Array expected, size parameter");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");if(e=e.map(function(e){if(e&&!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e)||e<1)throw new Error("Size values must be positive integers");return e}),r){if(!0===r.isBigNumber&&(r=r.toNumber()),!l(r)||!p(r))throw new TypeError("The parameter k must be an integer number")}else r=0;var a=y,o=0;m(i)&&(a=g.find(y,[i,i])||y,o=g.convert(0,i));var s,u=0<r?r:0,c=r<0?-r:0,i=e[0],d=e[1],x=Math.min(i-c,d-u);if(f(t)){if(t.length!==x)throw new Error("Invalid value array length");s=function(e){return t[e]}}else if(t&&!0===t.isMatrix){r=t.size();if(1!==r.length||r[0]!==x)throw new Error("Invalid matrix length");s=function(e){return t.get([e])}}else s=function(){return t};for(var w=[],N=[],E=[],M=0;M<d;M++){E.push(w.length);var _,A=M-u;0<=A&&A<x&&(a(_=s(A),o)||(N.push(A+c),w.push(_)))}return E.push(w.length),new v({values:w,index:N,ptr:E,size:[i,d]})},v.prototype.swapRows=function(e,t){if(!(l(e)&&p(e)&&l(t)&&p(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return h(e,this._size[0]),h(t,this._size[0]),v._swapRows(e,t,this._size[1],this._values,this._index,this._ptr),this},v._forEachRow=function(e,t,r,n,i){for(var a=n[e],o=n[e+1],s=a;s<o;s++)i(r[s],t[s])},v._swapRows=function(e,t,r,n,i,a){for(var o=0;o<r;o++){var l,s=a[o],u=a[o+1],c=E(e,s,u,i),s=E(t,s,u,i);c<u&&s<u&&i[c]===e&&i[s]===t?n&&(l=n[c],n[c]=n[s],n[s]=l):c<u&&i[c]===e&&(u<=s||i[s]!==t)?(l=n?n[c]:void 0,i.splice(s,0,t),n&&n.splice(s,0,l),i.splice(s<=c?c+1:c,1),n&&n.splice(s<=c?c+1:c,1)):s<u&&i[s]===t&&(u<=c||i[c]!==e)&&(u=n?n[s]:void 0,i.splice(c,0,e),n&&n.splice(c,0,u),i.splice(c<=s?s+1:s,1),n)&&n.splice(c<=s?s+1:s,1)}},e.Matrix._storage.sparse=v},t.lazy=!1},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.factory=function(e,t,r,n){var a=n("equalScalar",{"boolean, boolean":function(e,t){return e===t},"number, number":function(e,r){return e===r||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.eq(t)},"Fraction, Fraction":function(e,t){return e.equals(t)},"Complex, Complex":function(e,r){return(e.re===r.re||i(e.re,r.re,t.epsilon))&&(e.im===r.im||i(e.im,r.im,t.epsilon))},"Unit, Unit":function(e,t){if(e.equalBase(t))return a(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e===t}});return a}},function(e,t,r){"use strict";t.name="Spa",t.path="type",t.factory=function(e,t,n){function i(){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");this._values=[],this._heap=new e.FibonacciHeap}var a=n(r(49)),o=n(r(47));return i.prototype.type="Spa",i.prototype.isSpa=!0,i.prototype.set=function(e,t){this._values[e]?this._values[e].value=t:(t=this._heap.insert(e,t),this._values[e]=t)},i.prototype.get=function(e){e=this._values[e];return e?e.value:0},i.prototype.accumulate=function(e,t){var r=this._values[e];r?r.value=a(r.value,t):(r=this._heap.insert(e,t),this._values[e]=r)},i.prototype.forEach=function(e,t,r){var n=this._heap,i=this._values,a=[];for((s=n.extractMinimum())&&a.push(s);s&&s.key<=t;)s.key>=e&&(o(s.value,0)||r(s.key,s.value,this)),(s=n.extractMinimum())&&a.push(s);for(var u=0;u<a.length;u++){var s,c=a[u];i[(s=n.insert(c.key,c.value)).key]=s}},i.prototype.swap=function(e,t){var r=this._values[e],n=this._values[t];!r&&n?(r=this._heap.insert(e,n.value),this._heap.remove(n),this._values[e]=r,this._values[t]=void 0):r&&!n?(n=this._heap.insert(t,r.value),this._heap.remove(r),this._values[t]=n,this._values[e]=void 0):r&&n&&(t=r.value,r.value=n.value,n.value=t)},i}},function(e,t,r){"use strict";var i=r(3).extend;t.name="add",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(51)),u=r(29),c=n(r(52)),f=n(r(53)),l=n(r(54)),p=n(r(55)),m=n(r(56)),h=a("add",i({"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,s):c(t,e,s,!0):"sparse"===t.storage()?c(e,t,s,!1):p(e,t,s);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,s,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,s,!0);return t},"Array, any":function(e,t){return m(o(e),t,s,!1).valueOf()},"any, Array":function(e,t){return m(o(t),e,s,!0).valueOf()}},s.signatures));return h.toTex="\\left(${args[0]}"+u.operators.add+"${args[1]}\\right)",h}},function(e,t){"use strict";t.name="matrix",t.factory=function(e,t,r,n){function i(t,r,n){return new(e.Matrix.storage(r||"default"))(t,n)}return(n=n("matrix",{"":function(){return i([])},string:function(e){return i([],e)},"string, string":function(e,t){return i([],e,t)},Array:function(e){return i(e)},Matrix:function(e){return i(e,e.storage())},"Array | Matrix, string":i,"Array | Matrix, string, string":i})).toTex={0:"\\begin{bmatrix}\\end{bmatrix}",1:"\\left(${args[0]}\\right)",2:"\\left(${args[0]}\\right)"},n}},function(e,t){"use strict";t.factory=function(e,t,r,n){var i=n("add",{"number, number":function(e,t){return e+t},"Complex, Complex":function(t,r){return new e.Complex(t.re+r.re,t.im+r.im)},"BigNumber, BigNumber":function(e,t){return e.plus(t)},"Fraction, Fraction":function(e,t){return e.add(t)},"Unit, Unit":function(e,t){if(null==e.value)throw new Error("Parameter x contains a unit with undefined value");if(null==t.value)throw new Error("Parameter y contains a unit with undefined value");if(e.equalBase(t))return(e=e.clone()).value=i(e.value,t.value),e.fixPrefix=!1,e;throw new Error("Units do not match")}});return i}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm01",t.factory=function(e,t,r,n){var a=e.DenseMatrix;return function(e,t,r,o){var s=e._data,u=e._size,e=e._datatype,f=t._values,l=t._index,p=t._ptr,m=t._size,t=t._datatype;if(u.length!==m.length)throw new i(u.length,m.length);if(u[0]!==m[0]||u[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+m+")");if(!f)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");for(var d=u[0],y=u[1],m="string"==typeof e&&e===t?e:void 0,b=m?n.find(r,[m,m]):r,w=[],g=0;g<d;g++)w[g]=[];for(var N=[],E=[],v=0;v<y;v++){for(var M=v+1,A=p[v],_=p[v+1],O=A;O<_;O++)N[g=l[O]]=o?b(f[O],s[g][v]):b(s[g][v],f[O]),E[g]=M;for(g=0;g<d;g++)w[g][v]=E[g]===M?N[g]:s[g][v]}return new a({data:w,size:[d,y],datatype:m})}}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm04",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var E,T=n&&p?[]:void 0,C=[],S=[],f=new s({values:T,index:C,ptr:S,size:[g,x],datatype:d}),B=n&&p?[]:void 0,k=n&&p?[]:void 0,I=[],R=[],M=0;M<x;M++){S[M]=C.length;for(var U,P=M+1,_=c[M],O=c[M+1],A=_;A<O;A++)E=u[A],C.push(E),I[E]=P,B&&(B[E]=n[A]);for(_=h[M],O=h[M+1],A=_;A<O;A++)I[E=m[A]]===P?B&&(b(U=N(B[E],p[A]),w)?I[E]=null:B[E]=U):(C.push(E),R[E]=P,k&&(k[E]=p[A]));if(B&&k)for(A=S[M];A<C.length;)I[E=C[A]]===P?(T[A]=B[E],A++):R[E]===P?(T[A]=k[E],A++):C.splice(A,1)}return S[x]=C.length,f}}},function(e,t){"use strict";t.name="algorithm10",t.factory=function(e,t,r,n){var i=e.DenseMatrix;return function(e,t,r,a){var o=e._values,s=e._index,u=e._ptr,c=e._size,e=e._datatype;if(!o)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var l,p=c[0],m=c[1],h=r;"string"==typeof e&&(t=n.convert(t,l=e),h=n.find(r,[l,l]));for(var g=[],c=new i({data:g,size:[p,m],datatype:l}),d=[],y=[],x=0;x<m;x++){for(var b=x+1,w=u[x],N=u[x+1],E=w;E<N;E++){var M=s[E];d[M]=o[E],y[M]=b}for(var A=0;A<p;A++)0===x&&(g[A]=[]),g[A][x]=y[A]===b?a?h(t,d[A]):h(d[A],t):t}return c}}},function(e,t,r){"use strict";var i=r(38),a=r(41);i.string.isString,t.name="algorithm13",t.factory=function(e,t,r,n){var i=e.DenseMatrix,s=function(e,t,r,n,i,a){var o=[];if(t===r.length-1)for(var u=0;u<n;u++)o[u]=e(i[u],a[u]);else for(var c=0;c<n;c++)o[c]=s(e,t+1,r,r[t+1],i[c],a[c]);return o};return function(e,t,r){var o=e._data,u=e._size,e=e._datatype,f=t._data,l=t._size,p=t._datatype,m=[];if(u.length!==l.length)throw new a(u.length,l.length);for(var h=0;h<u.length;h++){if(u[h]!==l[h])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+l+")");m[h]=u[h]}var g,v=r,p=("string"==typeof e&&e===p&&(t=n.convert(t,g=e),v=n.find(r,[g,g])),0<m.length?s(v,0,m,m[0],o,f):[]);return new i({data:p,size:m,datatype:g})}}},function(e,t,r){"use strict";var i=r(3).clone;t.name="algorithm14",t.factory=function(e,t,r,n){var a=e.DenseMatrix,s=function(e,t,r,n,i,a,o){var u=[];if(t===r.length-1)for(var c=0;c<n;c++)u[c]=o?e(a,i[c]):e(i[c],a);else for(var f=0;f<n;f++)u[f]=s(e,t+1,r,r[t+1],i[f],a,o);return u};return function(e,t,r,o){var u,c=e._data,f=e._size,e=e._datatype,p=r,e=("string"==typeof e&&(t=n.convert(t,u=e),p=n.find(r,[u,u])),0<f.length?s(p,0,f,f[0],c,t,o):[]);return new a({data:e,size:i(f),datatype:u})}}},function(e,t,r){"use strict";t.name="FibonacciHeap",t.path="type",t.factory=function(e,t,n,i){function a(){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");this._minimum=null,this._size=0}var o=n(r(58)),s=n(r(62)),u=1/Math.log((1+Math.sqrt(5))/2),c=(a.prototype.type="FibonacciHeap",a.prototype.isFibonacciHeap=!0,a.prototype.insert=function(e,t){var n,t={key:e,value:t,degree:0};return this._minimum?(n=this._minimum,t.left=n,t.right=n.right,(n.right=t).right.left=t,o(e,n.key)&&(this._minimum=t)):this._minimum=(t.left=t).right=t,this._size++,t},a.prototype.size=function(){return this._size},a.prototype.clear=function(){this._minimum=null,this._size=0},a.prototype.isEmpty=function(){return!!this._minimum},a.prototype.extractMinimum=function(){var e=this._minimum;if(null!==e){for(var t=this._minimum,r=e.degree,n=e.child;0<r;){var i=n.right;n.left.right=n.right,n.right.left=n.left,n.left=t,n.right=t.right,((t.right=n).right.left=n).parent=null,n=i,r--}e.left.right=e.right,e.right.left=e.left,t=e==e.right?null:(t=e.right,m(t,this._size)),this._size--,this._minimum=t}return e},a.prototype.remove=function(e){this._minimum=c(this._minimum,e,-1),this.extractMinimum()},function(e,t,r){t.key=r;r=t.parent;return r&&o(t.key,r.key)&&(f(e,t,r),l(e,r)),e=o(t.key,e.key)?t:e}),f=function(e,t,r){t.left.right=t.right,t.right.left=t.left,r.degree--,r.child==t&&(r.child=t.right),0===r.degree&&(r.child=null),t.left=e,t.right=e.right,((e.right=t).right.left=t).parent=null,t.mark=!1},l=function(e,t){var r=t.parent;r&&(t.mark?(f(e,t,r),l(r)):t.mark=!0)},m=function(e,t){var r=Math.floor(Math.log(t)*u)+1,n=new Array(r),i=0;if(a=e)for(i++,a=a.right;a!==e;)i++,a=a.right;for(;0<i;){for(var m,c,a,f=a.degree,l=a.right;c=n[f];)s(a.key,c.key)&&(m=c,c=a,a=m),function(e,t){e.left.right=e.right,e.right.left=e.left,(e.parent=t).child?(e.left=t.child,e.right=t.child.right,(t.child.right=e).right.left=e):((t.child=e).right=e).left=e,t.degree++,e.mark=!1}(c,a),n[f]=null,f++;n[f]=a,a=l,i--}e=null;for(var h=0;h<r;h++)!(c=n[h])||e&&(c.left.right=c.right,c.right.left=c.left,c.left=e,c.right=e.right,(e.right=c).right.left=c,!o(c.key,e.key))||(e=c);return e};return a}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="smaller",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("smaller",{"boolean, boolean":function(e,t){return e<t},"number, number":function(e,r){return e<r&&!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lt(t)},"Fraction, Fraction":function(e,t){return-1===e.compare(t)},"Complex, Complex":function(e,t){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e<t},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.smaller+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm03",t.factory=function(e,t,r,n){var a=e.DenseMatrix;return function(e,t,r,o){var s=e._data,u=e._size,e=e._datatype,f=t._values,l=t._index,p=t._ptr,m=t._size,t=t._datatype;if(u.length!==m.length)throw new i(u.length,m.length);if(u[0]!==m[0]||u[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+m+")");if(!f)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var g,v=u[0],d=u[1],y=0,x=r;"string"==typeof e&&e===t&&(y=n.convert(0,g=e),x=n.find(r,[g,g]));for(var b=[],w=0;w<v;w++)b[w]=[];for(var N=[],E=[],M=0;M<d;M++){for(var A=M+1,_=p[M],O=p[M+1],T=_;T<O;T++){var C=l[T];N[C]=o?x(f[T],s[C][M]):x(s[C][M],f[T]),E[C]=A}for(var S=0;S<v;S++)b[S][M]=E[S]===A?N[S]:o?x(y,s[S][M]):x(s[S][M],y)}return new a({data:b,size:[v,d],datatype:g})}}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm07",t.factory=function(e,t,r,n){function s(e,t,r,n,i){for(var a=e._values,o=e._index,u=(e=e._ptr)[t],c=e[t+1];u<c;u++){var f=o[u];r[f]=i,n[f]=a[u]}}var a=e.DenseMatrix;return function(e,t,r){var o=e._size,u=e._datatype,c=t._size,f=t._datatype;if(o.length!==c.length)throw new i(o.length,c.length);if(o[0]!==c[0]||o[1]!==c[1])throw new RangeError("Dimension mismatch. Matrix A ("+o+") must match Matrix B ("+c+")");var l,p=o[0],m=o[1],h=0,g=r;"string"==typeof u&&u===f&&(h=n.convert(0,l=u),g=n.find(r,[l,l]));for(var y=[],v=0;v<p;v++)y[v]=[];for(var c=new a({data:y,size:[p,m],datatype:l}),b=[],w=[],N=[],E=[],d=0;d<m;d++){var M=d+1;for(s(e,d,N,b,M),s(t,d,E,w,M),v=0;v<p;v++)y[v][d]=g(N[v]===M?b[v]:h,E[v]===M?w[v]:h)}return c}}},function(e,t){"use strict";t.name="algorithm12",t.factory=function(e,t,r,n){var i=e.DenseMatrix;return function(e,t,r,a){var o=e._values,s=e._index,u=e._ptr,c=e._size,e=e._datatype;if(!o)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var l,p=c[0],m=c[1],h=r;"string"==typeof e&&(t=n.convert(t,l=e),h=n.find(r,[l,l]));for(var g=[],c=new i({data:g,size:[p,m],datatype:l}),d=[],y=[],x=0;x<m;x++){for(var b=x+1,w=u[x],N=u[x+1],E=w;E<N;E++){var M=s[E];d[M]=o[E],y[M]=b}for(var A=0;A<p;A++)0===x&&(g[A]=[]),g[A][x]=y[A]===b?a?h(t,d[A]):h(d[A],t):a?h(t,0):h(0,t)}return c}}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="larger",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("larger",{"boolean, boolean":function(e,t){return t<e},"number, number":function(e,r){return r<e&&!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gt(t)},"Fraction, Fraction":function(e,t){return 1===e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return t<e},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.larger+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(38),a=i.string,o=i.object,s=Array.isArray,u=a.isString;t.name="ImmutableDenseMatrix",t.path="type",t.factory=function(e,t,n){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!u(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix||s(e)){var r=new c(e,t);this._data=r._data,this._size=r._size,this._datatype=r._datatype,this._min=null,this._max=null}else if(e&&s(e.data)&&s(e.size))this._data=e.data,this._size=e.size,this._datatype=e.datatype,this._min=void 0!==e.min?e.min:null,this._max=void 0!==e.max?e.max:null;else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._data=[],this._size=[0],this._datatype=t,this._min=null,this._max=null}}var c=n(r(45)),f=n(r(58));return(a.prototype=new c).type="ImmutableDenseMatrix",a.prototype.isImmutableDenseMatrix=!0,a.prototype.subset=function(e){switch(arguments.length){case 1:var t=c.prototype.subset.call(this,e);return t.isMatrix?new a({data:t._data,size:t._size,datatype:t._datatype}):t;case 2:case 3:throw new Error("Cannot invoke set subset on an Immutable Matrix instance");default:throw new SyntaxError("Wrong number of arguments")}},a.prototype.set=function(){throw new Error("Cannot invoke set on an Immutable Matrix instance")},a.prototype.resize=function(){throw new Error("Cannot invoke resize on an Immutable Matrix instance")},a.prototype.clone=function(){return new a({data:o.clone(this._data),size:o.clone(this._size),datatype:this._datatype})},a.prototype.toJSON=function(){return{mathjs:"ImmutableDenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},a.fromJSON=function(e){return new a(e)},a.prototype.swapRows=function(){throw new Error("Cannot invoke swapRows on an Immutable Matrix instance")},a.prototype.min=function(){var e;return null===this._min&&(e=null,this.forEach(function(t){null!==e&&!f(t,e)||(e=t)}),this._min=null!==e?e:void 0),this._min},a.prototype.max=function(){var e;return null===this._max&&(e=null,this.forEach(function(t){null!==e&&!f(e,t)||(e=t)}),this._max=null!==e?e:void 0),this._max},a}},function(e,t,r){"use strict";var i=r(3).clone,a=r(6).isInteger;t.name="Index",t.path="type",t.factory=function(e){function t(e){if(!(this instanceof t))throw new SyntaxError("Constructor must be called with the new operator");this._dimensions=[],this._isScalar=!0;for(var n=0,i=arguments.length;n<i;n++){var a=arguments[n];if(a&&!0===a.isRange)this._dimensions.push(a),this._isScalar=!1;else if(a&&(Array.isArray(a)||!0===a.isMatrix)){var o=r(a.valueOf()),o=(this._dimensions.push(o),o.size());1===o.length&&1===o[0]||(this._isScalar=!1)}else{if("number"!=typeof a)throw new TypeError("Dimension must be an Array, Matrix, Number or Range");this._dimensions.push(r([a]))}}}function r(t){for(var r=0,n=t.length;r<n;r++)if("number"!=typeof t[r]||!a(t[r]))throw new TypeError("Index parameters must be positive integer numbers");return new e.ImmutableDenseMatrix(t)}return t.prototype.type="Index",t.prototype.isIndex=!0,t.prototype.clone=function(){var e=new t;return e._dimensions=i(this._dimensions),e._isScalar=this._isScalar,e},t.create=function(e){var r=new t;return t.apply(r,e),r},t.prototype.size=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.size()[0]}return e},t.prototype.max=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.max()}return e},t.prototype.min=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.min()}return e},t.prototype.forEach=function(e){for(var t=0,r=this._dimensions.length;t<r;t++)e(this._dimensions[t],t,this)},t.prototype.dimension=function(e){return this._dimensions[e]||null},t.prototype.isScalar=function(){return this._isScalar},t.prototype.valueOf=t.prototype.toArray=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++)e.push(this._dimensions[t].toArray());return e},t.prototype.toString=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++)e.push(this._dimensions[t].toString());return"["+e.join(", ")+"]"},t.prototype.toJSON=function(){return{mathjs:"Index",dimensions:this._dimensions}},t.fromJSON=function(e){return t.create(e.dimensions)},t}},function(e,t,r){"use strict";var i=r(6);t.name="Range",t.path="type",t.factory=function(e,t,r,n){function a(e,t,r){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(null!=e)if(!0===e.isBigNumber)e=e.toNumber();else if("number"!=typeof e)throw new TypeError("Parameter start must be a number");if(null!=t)if(!0===t.isBigNumber)t=t.toNumber();else if("number"!=typeof t)throw new TypeError("Parameter end must be a number");if(null!=r)if(!0===r.isBigNumber)r=r.toNumber();else if("number"!=typeof r)throw new TypeError("Parameter step must be a number");this.start=null!=e?parseFloat(e):0,this.end=null!=t?parseFloat(t):0,this.step=null!=r?parseFloat(r):1}return a.prototype.type="Range",a.prototype.isRange=!0,a.parse=function(e){if("string"!=typeof e)return null;var r=e.split(":").map(function(e){return parseFloat(e)});if(r.some(function(e){return isNaN(e)}))return null;switch(r.length){case 2:return new a(r[0],r[1]);case 3:return new a(r[0],r[2],r[1]);default:return null}},a.prototype.clone=function(){return new a(this.start,this.end,this.step)},a.prototype.size=function(){var e=0,t=this.start,r=this.step,t=this.end-t;return i.sign(r)==i.sign(t)?e=Math.ceil(t/r):0==t&&(e=0),[e=isNaN(e)?0:e]},a.prototype.min=function(){var e=this.size()[0];return 0<e?0<this.step?this.start:this.start+(e-1)*this.step:void 0},a.prototype.max=function(){var e=this.size()[0];return 0<e?0<this.step?this.start+(e-1)*this.step:this.start:void 0},a.prototype.forEach=function(e){var t=this.start,r=this.step,n=this.end,i=0;if(0<r)for(;t<n;)e(t,[i],this),t+=r,i++;else if(r<0)for(;n<t;)e(t,[i],this),t+=r,i++},a.prototype.map=function(e){var t=[];return this.forEach(function(r,n,i){t[n[0]]=e(r,n,i)}),t},a.prototype.toArray=function(){var e=[];return this.forEach(function(t,r){e[r[0]]=t}),e},a.prototype.valueOf=function(){return this.toArray()},a.prototype.format=function(e){var t=i.format(this.start,e);return 1!=this.step&&(t+=":"+i.format(this.step,e)),t+(":"+i.format(this.end,e))},a.prototype.toString=function(){return this.format()},a.prototype.toJSON=function(){return{mathjs:"Range",start:this.start,end:this.end,step:this.step}},a.fromJSON=function(e){return new a(e.start,e.end,e.step)},a}},function(e,t){"use strict";t.name="index",t.factory=function(e,t,r,n){return n("index",{"...number | BigNumber | Range | Array | Matrix":function(t){var t=t.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e&&(Array.isArray(e)||!0===e.isMatrix)?e.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e}):e}),n=new e.Index;return e.Index.apply(n,t),n}})}},function(e,t){"use strict";t.name="sparse",t.factory=function(e,t,r,n){var i=e.SparseMatrix;return(e=n("sparse",{"":function(){return new i([])},string:function(e){return new i([],e)},"Array | Matrix":function(e){return new i(e)},"Array | Matrix, string":function(e,t){return new i(e,t)}})).toTex={0:"\\begin{bsparse}\\end{bsparse}",1:"\\left(${args[0]}\\right)"},e}},function(e,t,r){"use strict";var i=r(19);t.name="number",t.factory=function(e,t,r,n){var a=n("number",{"":function(){return 0},number:function(e){return e},string:function(e){var t=Number(e);if(isNaN(t))throw new SyntaxError('String "'+e+'" is no valid number');return t},BigNumber:function(e){return e.toNumber()},Fraction:function(e){return e.valueOf()},Unit:function(e){throw new Error("Second argument with valueless unit expected")},"Unit, string | Unit":function(e,t){return e.toNumber(t)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},a}},function(e,t,r){e.exports=[r(70)]},function(e,t){"use strict";t.name="ResultSet",t.path="type",t.factory=function(e,t,r,n){function i(e){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");this.entries=e||[]}return i.prototype.type="ResultSet",i.prototype.isResultSet=!0,i.prototype.valueOf=function(){return this.entries},i.prototype.toString=function(){return"["+this.entries.join(", ")+"]"},i.prototype.toJSON=function(){return{mathjs:"ResultSet",entries:this.entries}},i.fromJSON=function(e){return new i(e.entries)},i}},function(e,t,r){"use strict";var i=r(19),a=r(6);t.name="string",t.factory=function(e,t,r,n){var o=n("string",{"":function(){return""},number:a.format,null:function(e){return"null"},boolean:function(e){return e+""},string:function(e){return e},"Array | Matrix":function(e){return i(e,o)},any:function(e){return String(e)}});return o.toTex={0:'\\mathtt{""}',1:"\\mathrm{string}\\left(${args[0]}\\right)"},o}},function(e,t,r){e.exports=[r(73),r(90),r(91)]},function(e,t,r){"use strict";var i=r(23).endsWith,a=r(3).clone;t.name="Unit",t.path="type",t.factory=function(e,t,n,o){function s(e,t){if(!(this instanceof s))throw new Error("Constructor must be called with the new operator");if(void 0!==e&&!M(e)&&!e.isComplex)throw new TypeError("First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined");if(null!=t&&("string"!=typeof t||""==t))throw new TypeError("Second parameter in Unit constructor must be a string");null!=t?(t=s.parse(t),this.units=t.units,this.dimensions=t.dimensions):(this.units=[{unit:q,prefix:I,power:0}],this.dimensions=[0,0,0,0,0,0,0,0,0]),this.value=null!=e?this._normalize(e):null,this.fixPrefix=!1,this.isUnitListSimplified=!0}function u(){for(;" "==z||"\t"==z;)l()}function f(e){return"0"<=e&&e<="9"}function l(){S++,z=C.charAt(S)}function p(e){S=e,z=C.charAt(S)}function m(){var t="",e=S;if("+"==z?l():"-"==z&&(t+=z,l()),!function(e){return"0"<=e&&e<="9"||"."==e}(z))return p(e),null;if("."==z){if(t+=z,l(),!f(z))return p(e),null}else{for(;f(z);)t+=z,l();"."==z&&(t+=z,l())}for(;f(z);)t+=z,l();if("E"==z||"e"==z){var e="",n=S;if(e+=z,l(),"+"!=z&&"-"!=z||(e+=z,l()),!f(z))return p(n),t;for(t+=e;f(z);)t+=z,l()}return t}function g(e){return z===e&&(l(),e)}function v(e){for(var t in L)if(L.hasOwnProperty(t)&&i(e,t)){var r=L[t],t=e.length-t.length,t=e.substring(0,t),t=r.prefixes[t];if(void 0!==t)return{unit:r,prefix:t}}return null}var C,S,z,d=n(r(51)),y=n(r(74)),x=n(r(77)),b=n(r(78)),w=n(r(79)),N=n(r(85)),E=n(r(86)),M=n(r(87)),A=n(r(88)),_=n(r(89)),O=n(r(68)),n=n(r(27)),B=(s.prototype.type="Unit",s.prototype.isUnit=!0,s.parse=function(r){if(S=-1,z="","string"!=typeof(C=r))throw new TypeError("Invalid argument in Unit.parse, string expected");var n=new s,i=(n.units=[],l(),u(),m()),a=null;i&&(a="bignumber"===t.number?new e.BigNumber(i):"fraction"===t.number?new e.Fraction(i):parseFloat(i)),u();for(var o=1,c=!1,f=[],p=1;;){for(u();"("===z;)f.push(o),p*=o,o=1,l(),u();if(!z)break;var d=z,y=function(){for(var e="",t=C.charCodeAt(S);48<=t&&t<=57||65<=t&&t<=90||97<=t&&t<=122;)e+=z,l(),t=C.charCodeAt(S);return(65<=(t=e.charCodeAt(0))&&t<=90||97<=t&&t<=122)&&e||null}();if(null==y)throw new SyntaxError('Unexpected "'+d+'" in "'+C+'" at index '+S.toString());var x=v(y);if(null==x)throw new SyntaxError('Unit "'+y+'" not found.');var b=o*p;if(u(),g("^")){u();d=m();if(null==d)throw new SyntaxError('In "'+r+'", "^" must be followed by a floating-point number');b*=d}n.units.push({unit:x.unit,prefix:x.prefix,power:b});for(var N=0;N<R.length;N++)n.dimensions[N]+=x.unit.dimensions[N]*b;for(u();")"===z;){if(0===f.length)throw new SyntaxError('Unmatched ")" in "'+C+'" at index '+S.toString());p/=f.pop(),l(),u()}c=!1,g("*")?(o=1,c=!0):g("/")?(o=-1,c=!0):o=1;y=x.unit.base.key;D.auto[y]={unit:x.unit,prefix:x.prefix}}if(u(),z)throw new SyntaxError('Could not parse: "'+r+'"');if(c)throw new SyntaxError('Trailing characters: "'+r+'"');if(0!==f.length)throw new SyntaxError('Unmatched "(" in "'+C+'"');if(0==n.units.length)throw new SyntaxError('"'+r+'" contains no units');return n.value=null!=a?n._normalize(a):null,n},s.prototype.clone=function(){var e=new s;e.fixPrefix=this.fixPrefix,e.isUnitListSimplified=this.isUnitListSimplified,e.value=a(this.value),e.dimensions=this.dimensions.slice(0),e.units=[];for(var t=0;t<this.units.length;t++)for(var r in e.units[t]={},this.units[t])this.units[t].hasOwnProperty(r)&&(e.units[t][r]=this.units[t][r]);return e},s.prototype._isDerived=function(){return 0!==this.units.length&&(1<this.units.length||1e-15<Math.abs(this.units[0].power-1))},s.prototype._normalize=function(e){var t,r,n,i;if(null==e||0===this.units.length)return e;if(this._isDerived()){for(var o=e,a=s._getNumberConverter(_(e)),u=0;u<this.units.length;u++)t=a(this.units[u].unit.value),i=a(this.units[u].prefix.value),n=a(this.units[u].power),o=x(o,w(x(t,i),n));return o}return t=(a=s._getNumberConverter(_(e)))(this.units[0].unit.value),r=a(this.units[0].unit.offset),i=a(this.units[0].prefix.value),x(d(e,r),x(t,i))},s.prototype._denormalize=function(e,t){var r,n,i,a;if(null==e||0===this.units.length)return e;if(this._isDerived()){for(var u=e,o=s._getNumberConverter(_(e)),c=0;c<this.units.length;c++)r=o(this.units[c].unit.value),a=o(this.units[c].prefix.value),i=o(this.units[c].power),u=b(u,w(x(r,a),i));return u}return r=(o=s._getNumberConverter(_(e)))(this.units[0].unit.value),a=o(this.units[0].prefix.value),n=o(this.units[0].unit.offset),y(b(b(e,r),null==t?a:t),n)},s.isValuelessUnit=function(e){return null!=v(e)},s.prototype.hasBase=function(e){if(!(e="string"==typeof e?P[e]:e))return!1;for(var t=0;t<R.length;t++)if(1e-12<Math.abs(this.dimensions[t]-e.dimensions[t]))return!1;return!0},s.prototype.equalBase=function(e){for(var t=0;t<R.length;t++)if(1e-12<Math.abs(this.dimensions[t]-e.dimensions[t]))return!1;return!0},s.prototype.equals=function(e){return this.equalBase(e)&&E(this.value,e.value)},s.prototype.multiply=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]+e.dimensions[r];for(var i,a,r=0;r<e.units.length;r++){var n=JSON.parse(JSON.stringify(e.units[r]));t.units.push(n)}return null!=this.value||null!=e.value?(i=null==this.value?this._normalize(1):this.value,a=null==e.value?e._normalize(1):e.value,t.value=x(i,a)):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.divide=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]-e.dimensions[r];for(var i,a,r=0;r<e.units.length;r++){var n=JSON.parse(JSON.stringify(e.units[r]));n.power=-n.power,t.units.push(n)}return null!=this.value||null!=e.value?(i=null==this.value?this._normalize(1):this.value,a=null==e.value?e._normalize(1):e.value,t.value=b(i,a)):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.pow=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]*e;for(r=0;r<t.units.length;r++)t.units[r].power*=e;return null!=t.value?t.value=w(t.value,e):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.abs=function(){var t,e=this.clone();for(t in e.value=N(e.value),e.units)"VA"!==e.units[t].unit.name&&"VAR"!==e.units[t].unit.name||(e.units[t].unit=L.W);return e},s.prototype.to=function(e){var t,r=null==this.value?this._normalize(1):this.value;if("string"==typeof e){if(t=s.parse(e),!this.equalBase(t))throw new Error("Units do not match");if(null!==t.value)throw new Error("Cannot convert to a unit with a value");return t.value=a(r),t.fixPrefix=!0,t.isUnitListSimplified=!0,t}if(e&&e.isUnit){if(!this.equalBase(e))throw new Error("Units do not match");if(null!==e.value)throw new Error("Cannot convert to a unit with a value");return(t=e.clone()).value=a(r),t.fixPrefix=!0,t.isUnitListSimplified=!0,t}throw new Error("String or Unit expected as parameter")},s.prototype.toNumber=function(e){return O(this.toNumeric(e))},s.prototype.toNumeric=function(e){e=this.to(e);return e._isDerived()?e._denormalize(e.value):e._denormalize(e.value,e.units[0].prefix.value)},s.prototype.toString=function(){return this.format()},s.prototype.toJSON=function(){return{mathjs:"Unit",value:this._denormalize(this.value),unit:this.formatUnits(),fixPrefix:this.fixPrefix}},s.fromJSON=function(e){var t=new s(e.value,e.unit);return t.fixPrefix=e.fixPrefix||!1,t},s.prototype.valueOf=s.prototype.toString,s.prototype.simplifyUnitListLazy=function(){if(!this.isUnitListSimplified&&null!=this.value){var e,r,n,t=[];for(r in $)if(this.hasBase(P[r])){e=r;break}if("NONE"===e)this.units=[];else if(n=e&&$.hasOwnProperty(e)?$[e]:n)this.units=[{unit:n.unit,prefix:n.prefix,power:1}];else{for(var i=0;i<R.length;i++){var a=R[i];1e-12<Math.abs(this.dimensions[i])&&t.push({unit:$[a].unit,prefix:$[a].prefix,power:this.dimensions[i]})}t.length<this.units.length&&(this.units=t)}this.isUnitListSimplified=!0}},s.prototype.formatUnits=function(){this.simplifyUnitListLazy();for(var e="",t="",r=0,n=0,i=0;i<this.units.length;i++)0<this.units[i].power?(r++,e+=" "+this.units[i].prefix.name+this.units[i].unit.name,1e-15<Math.abs(this.units[i].power-1)&&(e+="^"+this.units[i].power)):this.units[i].power<0&&n++;if(0<n)for(i=0;i<this.units.length;i++)this.units[i].power<0&&(0<r?(t+=" "+this.units[i].prefix.name+this.units[i].unit.name,1e-15<Math.abs(this.units[i].power+1)&&(t+="^"+-this.units[i].power)):t=(t+=" "+this.units[i].prefix.name+this.units[i].unit.name)+("^"+this.units[i].power));var e=e.substr(1),t=t.substr(1),a=e=1<r&&0<n?"("+e+")":e;return 0<r&&0<n&&(a+=" / "),a+(t=1<n&&0<r?"("+t+")":t)},s.prototype.format=function(e){this.simplifyUnitListLazy();var n,t=!1;for(n in void 0!==this.value&&null!==this.value&&this.value.isComplex&&(t=Math.abs(this.value.re)<1e-14,Math.abs(this.value.im)),this.units)this.units[n].unit&&("VA"===this.units[n].unit.name&&t?this.units[n].unit=L.VAR:"VAR"!==this.units[n].unit.name||t||(this.units[n].unit=L.VA));1!==this.units.length||this.fixPrefix||Math.abs(this.units[0].power-Math.round(this.units[0].power))<1e-14&&(this.units[0].prefix=this._bestPrefix());var i=this._denormalize(this.value),i=null!==this.value?A(i,e||{}):"",e=this.formatUnits();return this.value&&this.value.isComplex&&(i="("+i+")"),0<e.length&&0<i.length&&(i+=" "),i+e},{NONE:{"":{name:"",value:1,scientific:!0}},SHORT:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:10,scientific:!(s.prototype._bestPrefix=function(){if(1!==this.units.length)throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");if(1e-14<=Math.abs(this.units[0].power-Math.round(this.units[0].power)))throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");var e=N(this.value),t=N(this.units[0].unit.value),r=this.units[0].prefix;if(0!==e){var o,s,u,n=this.units[0].power,i=Math.abs(Math.log(e/Math.pow(r.value*t,n))/Math.LN10-1.2),a=this.units[0].unit.prefixes;for(o in a)a.hasOwnProperty(o)&&(s=a[o]).scientific&&((u=Math.abs(Math.log(e/Math.pow(s.value*t,n))/Math.LN10-1.2))<i||u===i&&s.name.length<r.name.length)&&(r=s,i=u)}return r})},h:{name:"h",value:100,scientific:!1},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0},d:{name:"d",value:.1,scientific:!1},c:{name:"c",value:.01,scientific:!1},m:{name:"m",value:.001,scientific:!0},u:{name:"u",value:1e-6,scientific:!0},n:{name:"n",value:1e-9,scientific:!0},p:{name:"p",value:1e-12,scientific:!0},f:{name:"f",value:1e-15,scientific:!0},a:{name:"a",value:1e-18,scientific:!0},z:{name:"z",value:1e-21,scientific:!0},y:{name:"y",value:1e-24,scientific:!0}},LONG:{"":{name:"",value:1,scientific:!0},deca:{name:"deca",value:10,scientific:!1},hecto:{name:"hecto",value:100,scientific:!1},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0},deci:{name:"deci",value:.1,scientific:!1},centi:{name:"centi",value:.01,scientific:!1},milli:{name:"milli",value:.001,scientific:!0},micro:{name:"micro",value:1e-6,scientific:!0},nano:{name:"nano",value:1e-9,scientific:!0},pico:{name:"pico",value:1e-12,scientific:!0},femto:{name:"femto",value:1e-15,scientific:!0},atto:{name:"atto",value:1e-18,scientific:!0},zepto:{name:"zepto",value:1e-21,scientific:!0},yocto:{name:"yocto",value:1e-24,scientific:!0}},SQUARED:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:100,scientific:!1},h:{name:"h",value:1e4,scientific:!1},k:{name:"k",value:1e6,scientific:!0},M:{name:"M",value:1e12,scientific:!0},G:{name:"G",value:1e18,scientific:!0},T:{name:"T",value:1e24,scientific:!0},P:{name:"P",value:1e30,scientific:!0},E:{name:"E",value:1e36,scientific:!0},Z:{name:"Z",value:1e42,scientific:!0},Y:{name:"Y",value:1e48,scientific:!0},d:{name:"d",value:.01,scientific:!1},c:{name:"c",value:1e-4,scientific:!1},m:{name:"m",value:1e-6,scientific:!0},u:{name:"u",value:1e-12,scientific:!0},n:{name:"n",value:1e-18,scientific:!0},p:{name:"p",value:1e-24,scientific:!0},f:{name:"f",value:1e-30,scientific:!0},a:{name:"a",value:1e-36,scientific:!0},z:{name:"z",value:1e-42,scientific:!0},y:{name:"y",value:1e-48,scientific:!0}},CUBIC:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:1e3,scientific:!1},h:{name:"h",value:1e6,scientific:!1},k:{name:"k",value:1e9,scientific:!0},M:{name:"M",value:1e18,scientific:!0},G:{name:"G",value:1e27,scientific:!0},T:{name:"T",value:1e36,scientific:!0},P:{name:"P",value:1e45,scientific:!0},E:{name:"E",value:1e54,scientific:!0},Z:{name:"Z",value:1e63,scientific:!0},Y:{name:"Y",value:1e72,scientific:!0},d:{name:"d",value:.001,scientific:!1},c:{name:"c",value:1e-6,scientific:!1},m:{name:"m",value:1e-9,scientific:!0},u:{name:"u",value:1e-18,scientific:!0},n:{name:"n",value:1e-27,scientific:!0},p:{name:"p",value:1e-36,scientific:!0},f:{name:"f",value:1e-45,scientific:!0},a:{name:"a",value:1e-54,scientific:!0},z:{name:"z",value:1e-63,scientific:!0},y:{name:"y",value:1e-72,scientific:!0}},BINARY_SHORT:{"":{name:"",value:1,scientific:!0},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0},Ki:{name:"Ki",value:1024,scientific:!0},Mi:{name:"Mi",value:Math.pow(1024,2),scientific:!0},Gi:{name:"Gi",value:Math.pow(1024,3),scientific:!0},Ti:{name:"Ti",value:Math.pow(1024,4),scientific:!0},Pi:{name:"Pi",value:Math.pow(1024,5),scientific:!0},Ei:{name:"Ei",value:Math.pow(1024,6),scientific:!0},Zi:{name:"Zi",value:Math.pow(1024,7),scientific:!0},Yi:{name:"Yi",value:Math.pow(1024,8),scientific:!0}},BINARY_LONG:{"":{name:"",value:1,scientific:!0},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0},kibi:{name:"kibi",value:1024,scientific:!0},mebi:{name:"mebi",value:Math.pow(1024,2),scientific:!0},gibi:{name:"gibi",value:Math.pow(1024,3),scientific:!0},tebi:{name:"tebi",value:Math.pow(1024,4),scientific:!0},pebi:{name:"pebi",value:Math.pow(1024,5),scientific:!0},exi:{name:"exi",value:Math.pow(1024,6),scientific:!0},zebi:{name:"zebi",value:Math.pow(1024,7),scientific:!0},yobi:{name:"yobi",value:Math.pow(1024,8),scientific:!0}},BTU:{"":{name:"",value:1,scientific:!0},MM:{name:"MM",value:1e6,scientific:!0}}});for(k in B.SHORTLONG={},B.SHORT)B.SHORT.hasOwnProperty(k)&&(B.SHORTLONG[k]=B.SHORT[k]);for(k in B.LONG)B.LONG.hasOwnProperty(k)&&(B.SHORTLONG[k]=B.LONG[k]);var I={name:"",value:1,scientific:!0},R=["MASS","LENGTH","TIME","CURRENT","TEMPERATURE","LUMINOUS_INTENSITY","AMOUNT_OF_SUBSTANCE","ANGLE","BIT"],P={NONE:{dimensions:[0,0,0,0,0,0,0,0,0]},MASS:{dimensions:[1,0,0,0,0,0,0,0,0]},LENGTH:{dimensions:[0,1,0,0,0,0,0,0,0]},TIME:{dimensions:[0,0,1,0,0,0,0,0,0]},CURRENT:{dimensions:[0,0,0,1,0,0,0,0,0]},TEMPERATURE:{dimensions:[0,0,0,0,1,0,0,0,0]},LUMINOUS_INTENSITY:{dimensions:[0,0,0,0,0,1,0,0,0]},AMOUNT_OF_SUBSTANCE:{dimensions:[0,0,0,0,0,0,1,0,0]},FORCE:{dimensions:[1,1,-2,0,0,0,0,0,0]},SURFACE:{dimensions:[0,2,0,0,0,0,0,0,0]},VOLUME:{dimensions:[0,3,0,0,0,0,0,0,0]},ENERGY:{dimensions:[1,2,-2,0,0,0,0,0,0]},POWER:{dimensions:[1,2,-3,0,0,0,0,0,0]},PRESSURE:{dimensions:[1,-1,-2,0,0,0,0,0,0]},ELECTRIC_CHARGE:{dimensions:[0,0,1,1,0,0,0,0,0]},ELECTRIC_CAPACITANCE:{dimensions:[-1,-2,4,2,0,0,0,0,0]},ELECTRIC_POTENTIAL:{dimensions:[1,2,-3,-1,0,0,0,0,0]},ELECTRIC_RESISTANCE:{dimensions:[1,2,-3,-2,0,0,0,0,0]},ELECTRIC_INDUCTANCE:{dimensions:[1,2,-2,-2,0,0,0,0,0]},ELECTRIC_CONDUCTANCE:{dimensions:[-1,-2,3,2,0,0,0,0,0]},MAGNETIC_FLUX:{dimensions:[1,2,-2,-1,0,0,0,0,0]},MAGNETIC_FLUX_DENSITY:{dimensions:[1,0,-2,-1,0,0,0,0,0]},FREQUENCY:{dimensions:[0,0,-1,0,0,0,0,0,0]},ANGLE:{dimensions:[0,0,0,0,0,0,0,1,0]},BIT:{dimensions:[0,0,0,0,0,0,0,0,1]}};for(k in P)P[k].key=k;var k,G,j,H,q={name:"",base:{},value:1,offset:0,dimensions:[0,0,0,0,0,0,0,0,0]},L={meter:{name:"meter",base:P.LENGTH,prefixes:B.LONG,value:1,offset:0},inch:{name:"inch",base:P.LENGTH,prefixes:B.NONE,value:.0254,offset:0},foot:{name:"foot",base:P.LENGTH,prefixes:B.NONE,value:.3048,offset:0},yard:{name:"yard",base:P.LENGTH,prefixes:B.NONE,value:.9144,offset:0},mile:{name:"mile",base:P.LENGTH,prefixes:B.NONE,value:1609.344,offset:0},link:{name:"link",base:P.LENGTH,prefixes:B.NONE,value:.201168,offset:0},rod:{name:"rod",base:P.LENGTH,prefixes:B.NONE,value:5.02921,offset:0},chain:{name:"chain",base:P.LENGTH,prefixes:B.NONE,value:20.1168,offset:0},angstrom:{name:"angstrom",base:P.LENGTH,prefixes:B.NONE,value:1e-10,offset:0},m:{name:"m",base:P.LENGTH,prefixes:B.SHORT,value:1,offset:0},in:{name:"in",base:P.LENGTH,prefixes:B.NONE,value:.0254,offset:0},ft:{name:"ft",base:P.LENGTH,prefixes:B.NONE,value:.3048,offset:0},yd:{name:"yd",base:P.LENGTH,prefixes:B.NONE,value:.9144,offset:0},mi:{name:"mi",base:P.LENGTH,prefixes:B.NONE,value:1609.344,offset:0},li:{name:"li",base:P.LENGTH,prefixes:B.NONE,value:.201168,offset:0},rd:{name:"rd",base:P.LENGTH,prefixes:B.NONE,value:5.02921,offset:0},ch:{name:"ch",base:P.LENGTH,prefixes:B.NONE,value:20.1168,offset:0},mil:{name:"mil",base:P.LENGTH,prefixes:B.NONE,value:254e-7,offset:0},m2:{name:"m2",base:P.SURFACE,prefixes:B.SQUARED,value:1,offset:0},sqin:{name:"sqin",base:P.SURFACE,prefixes:B.NONE,value:64516e-8,offset:0},sqft:{name:"sqft",base:P.SURFACE,prefixes:B.NONE,value:.09290304,offset:0},sqyd:{name:"sqyd",base:P.SURFACE,prefixes:B.NONE,value:.83612736,offset:0},sqmi:{name:"sqmi",base:P.SURFACE,prefixes:B.NONE,value:2589988.110336,offset:0},sqrd:{name:"sqrd",base:P.SURFACE,prefixes:B.NONE,value:25.29295,offset:0},sqch:{name:"sqch",base:P.SURFACE,prefixes:B.NONE,value:404.6873,offset:0},sqmil:{name:"sqmil",base:P.SURFACE,prefixes:B.NONE,value:6.4516e-10,offset:0},m3:{name:"m3",base:P.VOLUME,prefixes:B.CUBIC,value:1,offset:0},L:{name:"L",base:P.VOLUME,prefixes:B.SHORT,value:.001,offset:0},l:{name:"l",base:P.VOLUME,prefixes:B.SHORT,value:.001,offset:0},litre:{name:"litre",base:P.VOLUME,prefixes:B.LONG,value:.001,offset:0},cuin:{name:"cuin",base:P.VOLUME,prefixes:B.NONE,value:16387064e-12,offset:0},cuft:{name:"cuft",base:P.VOLUME,prefixes:B.NONE,value:.028316846592,offset:0},cuyd:{name:"cuyd",base:P.VOLUME,prefixes:B.NONE,value:.764554857984,offset:0},teaspoon:{name:"teaspoon",base:P.VOLUME,prefixes:B.NONE,value:5e-6,offset:0},tablespoon:{name:"tablespoon",base:P.VOLUME,prefixes:B.NONE,value:15e-6,offset:0},drop:{name:"drop",base:P.VOLUME,prefixes:B.NONE,value:5e-8,offset:0},gtt:{name:"gtt",base:P.VOLUME,prefixes:B.NONE,value:5e-8,offset:0},minim:{name:"minim",base:P.VOLUME,prefixes:B.NONE,value:6.161152e-8,offset:0},fluiddram:{name:"fluiddram",base:P.VOLUME,prefixes:B.NONE,value:36966911e-13,offset:0},fluidounce:{name:"fluidounce",base:P.VOLUME,prefixes:B.NONE,value:2957353e-11,offset:0},gill:{name:"gill",base:P.VOLUME,prefixes:B.NONE,value:.0001182941,offset:0},cc:{name:"cc",base:P.VOLUME,prefixes:B.NONE,value:1e-6,offset:0},cup:{name:"cup",base:P.VOLUME,prefixes:B.NONE,value:.0002365882,offset:0},pint:{name:"pint",base:P.VOLUME,prefixes:B.NONE,value:.0004731765,offset:0},quart:{name:"quart",base:P.VOLUME,prefixes:B.NONE,value:.0009463529,offset:0},gallon:{name:"gallon",base:P.VOLUME,prefixes:B.NONE,value:.003785412,offset:0},beerbarrel:{name:"beerbarrel",base:P.VOLUME,prefixes:B.NONE,value:.1173478,offset:0},oilbarrel:{name:"oilbarrel",base:P.VOLUME,prefixes:B.NONE,value:.1589873,offset:0},hogshead:{name:"hogshead",base:P.VOLUME,prefixes:B.NONE,value:.238481,offset:0},fldr:{name:"fldr",base:P.VOLUME,prefixes:B.NONE,value:36966911e-13,offset:0},floz:{name:"floz",base:P.VOLUME,prefixes:B.NONE,value:2957353e-11,offset:0},gi:{name:"gi",base:P.VOLUME,prefixes:B.NONE,value:.0001182941,offset:0},cp:{name:"cp",base:P.VOLUME,prefixes:B.NONE,value:.0002365882,offset:0},pt:{name:"pt",base:P.VOLUME,prefixes:B.NONE,value:.0004731765,offset:0},qt:{name:"qt",base:P.VOLUME,prefixes:B.NONE,value:.0009463529,offset:0},gal:{name:"gal",base:P.VOLUME,prefixes:B.NONE,value:.003785412,offset:0},bbl:{name:"bbl",base:P.VOLUME,prefixes:B.NONE,value:.1173478,offset:0},obl:{name:"obl",base:P.VOLUME,prefixes:B.NONE,value:.1589873,offset:0},g:{name:"g",base:P.MASS,prefixes:B.SHORT,value:.001,offset:0},gram:{name:"gram",base:P.MASS,prefixes:B.LONG,value:.001,offset:0},ton:{name:"ton",base:P.MASS,prefixes:B.SHORT,value:907.18474,offset:0},tonne:{name:"tonne",base:P.MASS,prefixes:B.SHORT,value:1e3,offset:0},grain:{name:"grain",base:P.MASS,prefixes:B.NONE,value:6479891e-11,offset:0},dram:{name:"dram",base:P.MASS,prefixes:B.NONE,value:.0017718451953125,offset:0},ounce:{name:"ounce",base:P.MASS,prefixes:B.NONE,value:.028349523125,offset:0},poundmass:{name:"poundmass",base:P.MASS,prefixes:B.NONE,value:.45359237,offset:0},hundredweight:{name:"hundredweight",base:P.MASS,prefixes:B.NONE,value:45.359237,offset:0},stick:{name:"stick",base:P.MASS,prefixes:B.NONE,value:.115,offset:0},stone:{name:"stone",base:P.MASS,prefixes:B.NONE,value:6.35029318,offset:0},gr:{name:"gr",base:P.MASS,prefixes:B.NONE,value:6479891e-11,offset:0},dr:{name:"dr",base:P.MASS,prefixes:B.NONE,value:.0017718451953125,offset:0},oz:{name:"oz",base:P.MASS,prefixes:B.NONE,value:.028349523125,offset:0},lbm:{name:"lbm",base:P.MASS,prefixes:B.NONE,value:.45359237,offset:0},cwt:{name:"cwt",base:P.MASS,prefixes:B.NONE,value:45.359237,offset:0},s:{name:"s",base:P.TIME,prefixes:B.SHORT,value:1,offset:0},min:{name:"min",base:P.TIME,prefixes:B.NONE,value:60,offset:0},h:{name:"h",base:P.TIME,prefixes:B.NONE,value:3600,offset:0},second:{name:"second",base:P.TIME,prefixes:B.LONG,value:1,offset:0},sec:{name:"sec",base:P.TIME,prefixes:B.LONG,value:1,offset:0},minute:{name:"minute",base:P.TIME,prefixes:B.NONE,value:60,offset:0},hour:{name:"hour",base:P.TIME,prefixes:B.NONE,value:3600,offset:0},day:{name:"day",base:P.TIME,prefixes:B.NONE,value:86400,offset:0},week:{name:"week",base:P.TIME,prefixes:B.NONE,value:604800,offset:0},month:{name:"month",base:P.TIME,prefixes:B.NONE,value:2629800,offset:0},year:{name:"year",base:P.TIME,prefixes:B.NONE,value:31557600,offset:0},decade:{name:"year",base:P.TIME,prefixes:B.NONE,value:315576e3,offset:0},century:{name:"century",base:P.TIME,prefixes:B.NONE,value:315576e4,offset:0},millennium:{name:"millennium",base:P.TIME,prefixes:B.NONE,value:315576e5,offset:0},hertz:{name:"Hertz",base:P.FREQUENCY,prefixes:B.LONG,value:1,offset:0,reciprocal:!0},Hz:{name:"Hz",base:P.FREQUENCY,prefixes:B.SHORT,value:1,offset:0,reciprocal:!0},rad:{name:"rad",base:P.ANGLE,prefixes:B.NONE,value:1,offset:0},deg:{name:"deg",base:P.ANGLE,prefixes:B.NONE,value:.017453292519943295,offset:0},grad:{name:"grad",base:P.ANGLE,prefixes:B.NONE,value:.015707963267948967,offset:0},cycle:{name:"cycle",base:P.ANGLE,prefixes:B.NONE,value:6.283185307179586,offset:0},arcsec:{name:"arcsec",base:P.ANGLE,prefixes:B.NONE,value:484813681109536e-20,offset:0},arcmin:{name:"arcmin",base:P.ANGLE,prefixes:B.NONE,value:.0002908882086657216,offset:0},A:{name:"A",base:P.CURRENT,prefixes:B.SHORT,value:1,offset:0},ampere:{name:"ampere",base:P.CURRENT,prefixes:B.LONG,value:1,offset:0},K:{name:"K",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:0},degC:{name:"degC",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:273.15},degF:{name:"degF",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:459.67},degR:{name:"degR",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:0},kelvin:{name:"kelvin",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:0},celsius:{name:"celsius",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:273.15},fahrenheit:{name:"fahrenheit",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:459.67},rankine:{name:"rankine",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:0},mol:{name:"mol",base:P.AMOUNT_OF_SUBSTANCE,prefixes:B.NONE,value:1,offset:0},mole:{name:"mole",base:P.AMOUNT_OF_SUBSTANCE,prefixes:B.NONE,value:1,offset:0},cd:{name:"cd",base:P.LUMINOUS_INTENSITY,prefixes:B.NONE,value:1,offset:0},candela:{name:"candela",base:P.LUMINOUS_INTENSITY,prefixes:B.NONE,value:1,offset:0},N:{name:"N",base:P.FORCE,prefixes:B.SHORT,value:1,offset:0},newton:{name:"newton",base:P.FORCE,prefixes:B.LONG,value:1,offset:0},dyn:{name:"dyn",base:P.FORCE,prefixes:B.SHORT,value:1e-5,offset:0},dyne:{name:"dyne",base:P.FORCE,prefixes:B.LONG,value:1e-5,offset:0},lbf:{name:"lbf",base:P.FORCE,prefixes:B.NONE,value:4.4482216152605,offset:0},poundforce:{name:"poundforce",base:P.FORCE,prefixes:B.NONE,value:4.4482216152605,offset:0},J:{name:"J",base:P.ENERGY,prefixes:B.SHORT,value:1,offset:0},joule:{name:"joule",base:P.ENERGY,prefixes:B.SHORT,value:1,offset:0},erg:{name:"erg",base:P.ENERGY,prefixes:B.NONE,value:1e-5,offset:0},Wh:{name:"Wh",base:P.ENERGY,prefixes:B.SHORT,value:3600,offset:0},BTU:{name:"BTU",base:P.ENERGY,prefixes:B.BTU,value:1055.05585262,offset:0},eV:{name:"eV",base:P.ENERGY,prefixes:B.SHORT,value:1602176565e-28,offset:0},electronvolt:{name:"electronvolt",base:P.ENERGY,prefixes:B.LONG,value:1602176565e-28,offset:0},W:{name:"W",base:P.POWER,prefixes:B.SHORT,value:1,offset:0},watt:{name:"W",base:P.POWER,prefixes:B.LONG,value:1,offset:0},hp:{name:"hp",base:P.POWER,prefixes:B.NONE,value:745.6998715386,offset:0},VAR:{name:"VAR",base:P.POWER,prefixes:B.SHORT,value:new n(0,1),offset:0},VA:{name:"VA",base:P.POWER,prefixes:B.SHORT,value:1,offset:0},Pa:{name:"Pa",base:P.PRESSURE,prefixes:B.SHORT,value:1,offset:0},psi:{name:"psi",base:P.PRESSURE,prefixes:B.NONE,value:6894.75729276459,offset:0},atm:{name:"atm",base:P.PRESSURE,prefixes:B.NONE,value:101325,offset:0},coulomb:{name:"coulomb",base:P.ELECTRIC_CHARGE,prefixes:B.LONG,value:1,offset:0},C:{name:"C",base:P.ELECTRIC_CHARGE,prefixes:B.SHORT,value:1,offset:0},farad:{name:"farad",base:P.ELECTRIC_CAPACITANCE,prefixes:B.LONG,value:1,offset:0},F:{name:"F",base:P.ELECTRIC_CAPACITANCE,prefixes:B.SHORT,value:1,offset:0},volt:{name:"volt",base:P.ELECTRIC_POTENTIAL,prefixes:B.LONG,value:1,offset:0},V:{name:"V",base:P.ELECTRIC_POTENTIAL,prefixes:B.SHORT,value:1,offset:0},ohm:{name:"ohm",base:P.ELECTRIC_RESISTANCE,prefixes:B.SHORTLONG,value:1,offset:0},henry:{name:"henry",base:P.ELECTRIC_INDUCTANCE,prefixes:B.LONG,value:1,offset:0},H:{name:"H",base:P.ELECTRIC_INDUCTANCE,prefixes:B.SHORT,value:1,offset:0},siemens:{name:"siemens",base:P.ELECTRIC_CONDUCTANCE,prefixes:B.LONG,value:1,offset:0},S:{name:"S",base:P.ELECTRIC_CONDUCTANCE,prefixes:B.SHORT,value:1,offset:0},weber:{name:"weber",base:P.MAGNETIC_FLUX,prefixes:B.LONG,value:1,offset:0},Wb:{name:"Wb",base:P.MAGNETIC_FLUX,prefixes:B.SHORT,value:1,offset:0},tesla:{name:"tesla",base:P.MAGNETIC_FLUX_DENSITY,prefixes:B.LONG,value:1,offset:0},T:{name:"T",base:P.MAGNETIC_FLUX_DENSITY,prefixes:B.SHORT,value:1,offset:0},b:{name:"b",base:P.BIT,prefixes:B.BINARY_SHORT,value:1,offset:0},bits:{name:"bits",base:P.BIT,prefixes:B.BINARY_LONG,value:1,offset:0},B:{name:"B",base:P.BIT,prefixes:B.BINARY_SHORT,value:8,offset:0},bytes:{name:"bytes",base:P.BIT,prefixes:B.BINARY_LONG,value:8,offset:0}},F={meters:"meter",inches:"inch",feet:"foot",yards:"yard",miles:"mile",links:"link",rods:"rod",chains:"chain",angstroms:"angstrom",lt:"l",litres:"litre",liter:"litre",liters:"litre",teaspoons:"teaspoon",tablespoons:"tablespoon",minims:"minim",fluiddrams:"fluiddram",fluidounces:"fluidounce",gills:"gill",cups:"cup",pints:"pint",quarts:"quart",gallons:"gallon",beerbarrels:"beerbarrel",oilbarrels:"oilbarrel",hogsheads:"hogshead",gtts:"gtt",grams:"gram",tons:"ton",tonnes:"tonne",grains:"grain",drams:"dram",ounces:"ounce",poundmasses:"poundmass",hundredweights:"hundredweight",sticks:"stick",lb:"lbm",lbs:"lbm",seconds:"second",minutes:"minute",hours:"hour",days:"day",hertz:"hertz",radians:"rad",degree:"deg",degrees:"deg",gradian:"grad",gradians:"grad",cycles:"cycle",arcsecond:"arcsec",arcseconds:"arcsec",arcminute:"arcmin",arcminutes:"arcmin",BTUs:"BTU",watts:"watt",joules:"joule",amperes:"ampere",coulombs:"coulomb",volts:"volt",ohms:"ohm",farads:"farad",webers:"weber",teslas:"tesla",electronvolts:"electronvolt",moles:"mole"},D={si:{NONE:{unit:q,prefix:B.NONE[""]},LENGTH:{unit:L.m,prefix:B.SHORT[""]},MASS:{unit:L.g,prefix:B.SHORT.k},TIME:{unit:L.s,prefix:B.SHORT[""]},CURRENT:{unit:L.A,prefix:B.SHORT[""]},TEMPERATURE:{unit:L.K,prefix:B.SHORT[""]},LUMINOUS_INTENSITY:{unit:L.cd,prefix:B.SHORT[""]},AMOUNT_OF_SUBSTANCE:{unit:L.mol,prefix:B.SHORT[""]},ANGLE:{unit:L.rad,prefix:B.SHORT[""]},BIT:{unit:L.bit,prefix:B.SHORT[""]},FORCE:{unit:L.N,prefix:B.SHORT[""]},ENERGY:{unit:L.J,prefix:B.SHORT[""]},POWER:{unit:L.W,prefix:B.SHORT[""]},PRESSURE:{unit:L.Pa,prefix:B.SHORT[""]},ELECTRIC_CHARGE:{unit:L.C,prefix:B.SHORT[""]},ELECTRIC_CAPACITANCE:{unit:L.F,prefix:B.SHORT[""]},ELECTRIC_POTENTIAL:{unit:L.V,prefix:B.SHORT[""]},ELECTRIC_RESISTANCE:{unit:L.ohm,prefix:B.SHORT[""]},ELECTRIC_INDUCTANCE:{unit:L.H,prefix:B.SHORT[""]},ELECTRIC_CONDUCTANCE:{unit:L.S,prefix:B.SHORT[""]},MAGNETIC_FLUX:{unit:L.Wb,prefix:B.SHORT[""]},MAGNETIC_FLUX_DENSITY:{unit:L.T,prefix:B.SHORT[""]},FREQUENCY:{unit:L.Hz,prefix:B.SHORT[""]}}},$=(D.cgs=JSON.parse(JSON.stringify(D.si)),D.cgs.LENGTH={unit:L.m,prefix:B.SHORT.c},D.cgs.MASS={unit:L.g,prefix:B.SHORT[""]},D.cgs.FORCE={unit:L.dyn,prefix:B.SHORT[""]},D.cgs.ENERGY={unit:L.erg,prefix:B.NONE[""]},D.us=JSON.parse(JSON.stringify(D.si)),D.us.LENGTH={unit:L.ft,prefix:B.NONE[""]},D.us.MASS={unit:L.lbm,prefix:B.NONE[""]},D.us.TEMPERATURE={unit:L.degF,prefix:B.NONE[""]},D.us.FORCE={unit:L.lbf,prefix:B.NONE[""]},D.us.ENERGY={unit:L.BTU,prefix:B.BTU[""]},D.us.POWER={unit:L.hp,prefix:B.NONE[""]},D.us.PRESSURE={unit:L.psi,prefix:B.NONE[""]},D.auto=JSON.parse(JSON.stringify(D.si)),D.auto);for(k in s.setUnitSystem=function(e){if(!D.hasOwnProperty(e))throw new Error("Unit system "+e+" does not exist. Choices are: "+Object.keys(D).join(", "));$=D[e]},s.getUnitSystem=function(){for(var e in D)if(D[e]===$)return e},s.typeConverters={BigNumber:function(t){return new e.BigNumber(t+"")},Fraction:function(t){return new e.Fraction(t)},Complex:function(e){return e},number:function(e){return e}},s._getNumberConverter=function(e){if(s.typeConverters[e])return s.typeConverters[e];throw new TypeError('Unsupported type "'+e+'"')},L)(j=L[k]).dimensions=j.base.dimensions;for(G in F)F.hasOwnProperty(G)&&(j=L[F[G]],(H=Object.create(j)).name=G,L[G]=H);return s.PREFIXES=B,s.BASE_UNITS=P,s.UNITS=L,s.UNIT_SYSTEMS=D,s}},function(e,t,r){"use strict";var i=r(41);t.name="subtract",t.factory=function(e,t,n,a){var o=r(29),s=n(r(50)),u=n(r(51)),c=n(r(75)),f=n(r(52)),l=n(r(59)),p=n(r(76)),m=n(r(54)),h=n(r(55)),g=n(r(56)),v=a("subtract",{"number, number":function(e,t){return e-t},"Complex, Complex":function(t,r){return new e.Complex(t.re-r.re,t.im-r.im)},"BigNumber, BigNumber":function(e,t){return e.minus(t)},"Fraction, Fraction":function(e,t){return e.sub(t)},"Unit, Unit":function(e,t){if(null==e.value)throw new Error("Parameter x contains a unit with undefined value");if(null==t.value)throw new Error("Parameter y contains a unit with undefined value");if(e.equalBase(t))return(e=e.clone()).value=v(e.value,t.value),e.fixPrefix=!1,e;throw new Error("Units do not match")},"Matrix, Matrix":function(e,t){var r=e.size(),n=t.size();if(r.length!==n.length)throw new i(r.length,n.length);return"sparse"===e.storage()?"sparse"===t.storage()?p(e,t,v):l(t,e,v,!0):"sparse"===t.storage()?f(e,t,v,!1):h(e,t,v)},"Array, Array":function(e,t){return v(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return v(s(e),t)},"Matrix, Array":function(e,t){return v(e,s(t))},"Matrix, any":function(e,t){e="sparse"===e.storage()?m(e,c(t),u):g(e,t,v);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?m:g)(t,e,v,!0);return t},"Array, any":function(e,t){return g(s(e),t,v,!1).valueOf()},"any, Array":function(e,t){return g(s(t),e,v,!0).valueOf()}});return v.toTex="\\left(${args[0]}"+o.operators.subtract+"${args[1]}\\right)",v}},function(e,t,r){"use strict";var i=r(19);t.name="unaryMinus",t.factory=function(e,t,n,a){var o=r(29),s=a("unaryMinus",{number:function(e){return-e},Complex:function(t){return new e.Complex(-t.re,-t.im)},BigNumber:function(e){return e.neg()},Fraction:function(e){return e.neg()},Unit:function(e){var t=e.clone();return t.value=s(e.value),t},"Array | Matrix":function(e){return i(e,s,!0)}});return s.toTex=o.operators.unaryMinus+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm05",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var O=n&&p?[]:void 0,T=[],C=[],f=new s({values:O,index:T,ptr:C,size:[g,x],datatype:d}),z=O?[]:void 0,B=O?[]:void 0,k=[],I=[],M=0;M<x;M++){C[M]=T.length;for(var R=M+1,A=c[M],_=c[M+1];A<_;A++)E=u[A],T.push(E),k[E]=R,z&&(z[E]=n[A]);for(A=h[M],_=h[M+1];A<_;A++)k[E=m[A]]!==R&&T.push(E),I[E]=R,B&&(B[E]=p[A]);if(O)for(A=C[M];A<T.length;){var E,P=k[E=T[A]],U=I[E];P!==R&&U!==R||(b(P=N(P===R?z[E]:w,U===R?B[E]:w),w)?T.splice(A,1):(O.push(P),A++))}}return C[x]=T.length,f}}},function(e,t){"use strict";t.factory=function(e,t,r,n){var i=n("multiplyScalar",{"number, number":function(e,t){return e*t},"Complex, Complex":function(t,r){return new e.Complex(t.re*r.re-t.im*r.im,t.re*r.im+t.im*r.re)},"BigNumber, BigNumber":function(e,t){return e.times(t)},"Fraction, Fraction":function(e,t){return e.mul(t)},"number | Fraction | BigNumber | Complex, Unit":function(e,t){t=t.clone();return t.value=null===t.value?t._normalize(e):i(t.value,e),t},"Unit, number | Fraction | BigNumber | Complex":function(e,t){e=e.clone();return e.value=null===e.value?e._normalize(t):i(e.value,t),e},"Unit, Unit":function(e,t){return e.multiply(t)}});return i}},function(e,t,r){"use strict";t.factory=function(e,t,n,i){var o=n(r(77)),s=i("divide",{"number, number":function(e,t){return e/t},"Complex, Complex":function(t,r){var n=r.re*r.re+r.im*r.im;return 0!=n?new e.Complex((t.re*r.re+t.im*r.im)/n,(t.im*r.re-t.re*r.im)/n):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?t.im/0:0)},"BigNumber, BigNumber":function(e,t){return e.div(t)},"Fraction, Fraction":function(e,t){return e.div(t)},"Unit, number | Fraction | BigNumber":function(e,t){e=e.clone();return e.value=s(null===e.value?e._normalize(1):e.value,t),e},"number | Fraction | BigNumber, Unit":function(e,t){t=t.pow(-1);return t.value=o(null===t.value?t._normalize(1):t.value,e),t},"Unit, Unit":function(e,t){return e.divide(t)}});return s}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).size;t.name="pow",t.factory=function(e,t,n,o){function s(r,n){return i(n)||0<=r||t.predictable?Math.pow(r,n):u(new e.Complex(r,0),new e.Complex(n,0))}function u(e,t){return p(g(h(e),t))}function c(e,t){if(!i(t)||t<0)throw new TypeError("For A^b, b must be a positive integer (value is "+t+")");var r=a(e);if(2!=r.length)throw new Error("For A^b, A must be 2 dimensional (A has "+r.length+" dimensions)");if(r[0]!=r[1])throw new Error("For A^b, A must be square (size is "+r[0]+"x"+r[1]+")");for(var n=m(r[0]).valueOf(),o=e;1<=t;)1==(1&t)&&(n=g(o,n)),t>>=1,o=g(o,o);return n}function f(e,t){return v(c(e.valueOf(),t))}var l=r(29),p=n(r(80)),m=n(r(81)),h=n(r(82)),g=n(r(83)),v=n(r(50));return(n=o("pow",{"number, number":s,"Complex, Complex":u,"BigNumber, BigNumber":function(r,n){return n.isInteger()||0<=r||t.predictable?r.pow(n):u(new e.Complex(r.toNumber(),0),new e.Complex(n.toNumber(),0))},"Fraction, Fraction":function(e,r){if(1===r.d)return e.pow(r);if(t.predictable)throw new Error("Function pow does not support non-integer exponents for fractions.");return s(e.valueOf(),r.valueOf())},"Array, number":c,"Array, BigNumber":function(e,t){return c(e,t.toNumber())},"Matrix, number":f,"Matrix, BigNumber":function(e,t){return f(e,t.toNumber())},"Unit, number":function(e,t){return e.pow(t)}})).toTex="\\left(${args[0]}\\right)"+l.operators.pow+"{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(19);t.name="exp",t.factory=function(e,t,r,n){var a=n("exp",{number:Math.exp,Complex:function(t){var r=Math.exp(t.re);return new e.Complex(r*Math.cos(t.im),r*Math.sin(t.im))},BigNumber:function(e){return e.exp()},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\exp\\left(${args[0]}\\right)",a}},function(e,t,r){"use strict";var i=r(39),a=r(6).isInteger;t.name="eye",t.factory=function(e,t,n,o){function s(e,t){switch(e.length){case 0:return t?c(t):[];case 1:return u(e[0],e[0],t);case 2:return u(e[0],e[1],t);default:throw new Error("Vector containing two values expected")}}function u(t,r,n){var o=t&&!0===t.isBigNumber||r&&!0===r.isBigNumber?e.BigNumber:null;if(t&&!0===t.isBigNumber&&(t=t.toNumber()),r&&!0===r.isBigNumber&&(r=r.toNumber()),!a(t)||t<1)throw new Error("Parameters in function eye must be positive integers");if(!a(r)||r<1)throw new Error("Parameters in function eye must be positive integers");var s=o?new e.BigNumber(1):1,o=o?new o(0):0,c=[t,r];if(n)return e.Matrix.storage(n).diagonal(c,s,0,o);for(var l=i.resize([],c,o),p=t<r?t:r,m=0;m<p;m++)l[m][m]=s;return l}var c=n(r(50));return(n=o("eye",{"":function(){return"matrix"===t.matrix?c([]):[]},string:function(e){return c(e)},"number | BigNumber":function(e){return u(e,e,"matrix"===t.matrix?"default":void 0)},"number | BigNumber, string":function(e,t){return u(e,e,t)},"number | BigNumber, number | BigNumber":function(e,r){return u(e,r,"matrix"===t.matrix?"default":void 0)},"number | BigNumber, number | BigNumber, string":u,Array:function(e){return s(e)},"Array, string":s,Matrix:function(e){return s(e.valueOf(),e.storage())},"Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(19);t.name="log",t.factory=function(e,t,n,a){function s(t){return new e.Complex(Math.log(Math.sqrt(t.re*t.re+t.im*t.im)),Math.atan2(t.im,t.re))}var u=n(r(78)),c=a("log",{number:function(r){return 0<=r||t.predictable?Math.log(r):c(new e.Complex(r,0))},Complex:s,BigNumber:function(r){return!r.isNegative()||t.predictable?r.ln():s(new e.Complex(r.toNumber(),0))},"Array | Matrix":function(e){return i(e,c)},"any, any":function(e,t){return u(c(e),c(t))}});return c.toTex={1:"\\ln\\left(${args[0]}\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}\\right)"},c}},function(e,t,r){"use strict";var i=r(3).extend,a=r(39);t.name="multiply",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(51)),f=n(r(77)),l=n(r(47)),p=n(r(84)),m=n(r(56)),h=e.DenseMatrix,g=e.SparseMatrix,v=o("multiply",i({"Array, Array":function(e,t){d(a.size(e),a.size(t));e=v(u(e),u(t));return e&&!0===e.isMatrix?e.valueOf():e},"Matrix, Matrix":function(e,t){var r=e.size(),n=t.size();return d(r,n),1===r.length?1===n.length?y(e,t,r[0]):x(e,t):(1===n.length?w:N)(e,t)},"Matrix, Array":function(e,t){return v(e,u(t))},"Array, Matrix":function(e,t){return v(u(e,t.storage()),t)},"Matrix, any":function(e,t){var r;switch(e.storage()){case"sparse":r=p(e,t,f,!1);break;case"dense":r=m(e,t,f,!1)}return r},"any, Matrix":function(e,t){var r;switch(t.storage()){case"sparse":r=p(t,e,f,!0);break;case"dense":r=m(t,e,f,!0)}return r},"Array, any":function(e,t){return m(u(e),t,f,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,f,!0).valueOf()}},f.signatures)),d=function(e,t){switch(e.length){case 1:switch(t.length){case 1:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+e[0]+") must match Matrix rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;case 2:switch(t.length){case 1:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+e[1]+") must match Vector length ("+t[0]+")");break;case 2:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+e[1]+") must match Matrix B rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+e.length+" dimensions)")}},y=function(e,t,r){if(0===r)throw new Error("Cannot multiply two empty vectors");var i=e._data,e=e._datatype,s=t._data,t=t._datatype,l=c,p=f;e&&t&&e===t&&"string"==typeof e&&(l=o.find(c,[t=e,t]),p=o.find(f,[t,t]));for(var m=p(i[0],s[0]),h=1;h<r;h++)m=l(m,p(i[h],s[h]));return m},x=function(e,t){if("dense"===t.storage())return b(e,t);throw new Error("Not implemented")},b=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,u=t._size,t=t._datatype,p=i[0],m=u[1],g=c,v=f;e&&t&&e===t&&"string"==typeof e&&(g=o.find(c,[r=e,r]),v=o.find(f,[r,r]));for(var d=[],y=0;y<m;y++){for(var x=v(n[0],s[0][y]),b=1;b<p;b++)x=g(x,v(n[b],s[b][y]));d[y]=x}return 1===m?d[0]:new h({data:d,size:[m],datatype:r})},w=function(e,t){switch(e.storage()){case"dense":return E(e,t);case"sparse":return _(e,t)}},N=function(e,t){switch(e.storage()){case"dense":switch(t.storage()){case"dense":return M(e,t);case"sparse":return A(e,t)}break;case"sparse":switch(t.storage()){case"dense":return O(e,t);case"sparse":return T(e,t)}}},E=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,t=t._datatype,l=i[0],p=i[1],m=c,g=f;e&&t&&e===t&&"string"==typeof e&&(m=o.find(c,[r=e,r]),g=o.find(f,[r,r]));for(var v=[],d=0;d<l;d++){for(var y=n[d],x=g(y[0],s[0]),b=1;b<p;b++)x=m(x,g(y[b],s[b]));v[d]=x}return 1===l?v[0]:new h({data:v,size:[l],datatype:r})},M=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,u=t._size,t=t._datatype,p=i[0],m=i[1],g=u[1],v=c,d=f;e&&t&&e===t&&"string"==typeof e&&(v=o.find(c,[r=e,r]),d=o.find(f,[r,r]));for(var y=[],x=0;x<p;x++){var b=n[x];y[x]=[];for(var w=0;w<g;w++){for(var N=d(b[0],s[0][w]),E=1;E<m;E++)N=v(N,d(b[E],s[E][w]));y[x][w]=N}}return 1===p&&1===g?y[0][0]:new h({data:y,size:[p,g],datatype:r})},A=function(e,t){var r=e._data,n=e._size,e=e._datatype,a=t._values,s=t._index,u=t._ptr,p=t._size,t=t._datatype;if(!a)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var h,v=n[0],d=p[1],y=c,x=f,b=l,w=0;e&&t&&e===t&&"string"==typeof e&&(y=o.find(c,[h=e,h]),x=o.find(f,[h,h]),b=o.find(l,[h,h]),w=o.convert(0,h));for(var N=[],E=[],M=[],n=new g({values:N,index:E,ptr:M,size:[v,d],datatype:h}),_=0;_<d;_++){M[_]=E.length;var O=u[_],T=u[_+1];if(O<T)for(var C=0,S=0;S<v;S++){for(var z,B=S+1,k=O;k<T;k++){var I=s[k];C!==B?(z=x(r[S][I],a[k]),C=B):z=y(z,x(r[S][I],a[k]))}C!==B||b(z,w)||(E.push(S),N.push(z))}}return M[d]=E.length,1===v&&1===d?1===N.length?N[0]:0:n},_=function(e,t){var r=e._values,n=e._index,i=e._ptr,a=e._datatype;if(!r)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");for(var s,u=t._data,p=t._datatype,e=e._size[0],h=t._size[0],v=[],d=[],t=[],x=c,b=f,w=l,N=0,E=(a&&p&&a===p&&"string"==typeof a&&(x=o.find(c,[s=a,s]),b=o.find(f,[s,s]),w=o.find(l,[s,s]),N=o.convert(0,s)),[]),M=[],A=t[0]=0;A<h;A++){var _=u[A];if(!w(_,N))for(var O=i[A],T=i[A+1],C=O;C<T;C++){var S=n[C];M[S]?E[S]=x(E[S],b(_,r[C])):(M[S]=!0,d.push(S),E[S]=b(_,r[C]))}}for(var z=d.length,B=0;B<z;B++)v[B]=E[d[B]];return t[1]=d.length,1===e?1===v.length?v[0]:0:new g({values:v,index:d,ptr:t,size:[e,1],datatype:s})},O=function(e,t){var r=e._values,n=e._index,i=e._ptr,a=e._datatype;if(!r)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var s,u=t._data,p=t._datatype,e=e._size[0],h=t._size[0],v=t._size[1],d=c,y=f,x=l,b=0;a&&p&&a===p&&"string"==typeof a&&(d=o.find(c,[s=a,s]),y=o.find(f,[s,s]),x=o.find(l,[s,s]),b=o.convert(0,s));for(var w=[],N=[],E=[],t=new g({values:w,index:N,ptr:E,size:[e,v],datatype:s}),A=[],_=[],O=0;O<v;O++){E[O]=N.length;for(var T=O+1,C=0;C<h;C++){var S=u[C][O];if(!x(S,b))for(var z=i[C],B=i[C+1],k=z;k<B;k++){var I=n[k];_[I]!==T?(_[I]=T,N.push(I),A[I]=y(S,r[k])):A[I]=d(A[I],y(S,r[k]))}}for(var R=E[O],P=N.length,U=R;U<P;U++){var q=N[U];w[U]=A[q]}}return E[v]=N.length,1===e&&1===v?1===w.length?w[0]:0:t},T=function(e,t){var r,n=e._values,i=e._index,a=e._ptr,s=e._datatype,u=t._values,l=t._index,p=t._ptr,m=t._datatype,e=e._size[0],v=t._size[1],d=n&&u,y=c,x=f;s&&m&&s===m&&"string"==typeof s&&(y=o.find(c,[r=s,r]),x=o.find(f,[r,r]));for(var b,w,N,_,O,T=d?[]:void 0,C=[],S=[],t=new g({values:T,index:C,ptr:S,size:[e,v],datatype:r}),B=d?[]:void 0,k=[],I=0;I<v;I++){S[I]=C.length;for(var R=I+1,M=p[I],A=p[I+1],E=M;E<A;E++)if(O=l[E],d)for(w=a[O],N=a[O+1],b=w;b<N;b++)k[_=i[b]]!==R?(k[_]=R,C.push(_),B[_]=x(u[E],n[b])):B[_]=y(B[_],x(u[E],n[b]));else for(w=a[O],N=a[O+1],b=w;b<N;b++)k[_=i[b]]!==R&&(k[_]=R,C.push(_));if(d)for(var M=S[I],U=C.length,q=M;q<U;q++){var L=C[q];T[q]=B[L]}}return S[v]=C.length,1===e&&1===v&&d?1===T.length?T[0]:0:t};return v.toTex="\\left(${args[0]}"+s.operators.multiply+"${args[1]}\\right)",v}},function(e,t,r){"use strict";t.name="algorithm11",t.factory=function(e,t,n,i){var a=n(r(47)),o=e.SparseMatrix;return function(e,t,r,n){var s=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype;if(!s)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var p,m=f[0],h=f[1],g=a,v=0,d=r;"string"==typeof e&&(g=i.find(a,[p=e,p]),v=i.convert(0,p),t=i.convert(t,p),d=i.find(r,[p,p]));for(var y=[],x=[],b=[],f=new o({values:y,index:x,ptr:b,size:[m,h],datatype:p}),N=0;N<h;N++){b[N]=x.length;for(var E=c[N],M=c[N+1],A=E;A<M;A++){var _=u[A],O=n?d(t,s[A]):d(s[A],t);g(O,v)||(x.push(_),y.push(O))}}return b[h]=x.length,f}}},function(e,t,r){"use strict";var i=r(19);t.name="abs",t.factory=function(e,t,r,n){var a=n("abs",{number:Math.abs,Complex:function(e){var n,t=Math.abs(e.re),e=Math.abs(e.im);return t<1e3&&e<1e3?Math.sqrt(t*t+e*e):e<=t?(n=e/t,t*Math.sqrt(1+n*n)):(n=t/e,e*Math.sqrt(1+n*n))},BigNumber:function(e){return e.abs()},Fraction:function(e){return e.abs()},"Array | Matrix":function(e){return i(e,a,!0)},Unit:function(e){return e.abs()}});return a.toTex="\\left|${args[0]}\\right|",a}},function(e,t,r){"use strict";t.name="equal",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(47)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=i("equal",{"any, any":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:o(e,t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,o):s(t,e,o,!0):"sparse"===t.storage()?s(e,t,o,!1):f(e,t,o);return e},"Array, Array":function(e,t){return m(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return m(a(e),t)},"Matrix, Array":function(e,t){return m(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,o,!0);return t},"Array, any":function(e,t){return l(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return l(a(t),e,o,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.equal+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isNumeric",t.factory=function(e,t,r,n){var a=n("isNumeric",{"number | BigNumber | Fraction | boolean":function(){return!0},"Complex | Unit | string":function(){return!1},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";var i=r(23);t.name="format",t.factory=function(e,t,r,n){return(n=n("format",{any:i.format,"any, Object | function | number":i.format})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(40);t.name="typeof",t.factory=function(e,t,r,n){return(n=n("_typeof",{any:function(e){var t=i.type(e);if("Object"===t){if(!0===e.isBigNumber)return"BigNumber";if(!0===e.isComplex)return"Complex";if(!0===e.isFraction)return"Fraction";if(!0===e.isMatrix)return"Matrix";if(!0===e.isUnit)return"Unit";if(!0===e.isIndex)return"Index";if(!0===e.isRange)return"Range";if(!0===e.isChain)return"Chain";if(!0===e.isHelp)return"Help"}return t}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(19);t.name="unit",t.factory=function(e,t,r,n){var a=n("unit",{Unit:function(e){return e.clone()},string:function(t){return e.Unit.isValuelessUnit(t)?new e.Unit(null,t):e.Unit.parse(t)},"number | BigNumber | Fraction | Complex, string":function(t,r){return new e.Unit(t,r)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},a}},function(e,t,r){var i=r(3).lazy;t.factory=function(e,t,r,n,a){function o(t){t=e.Unit.parse(t);return t.fixPrefix=!0,t}i(a,"speedOfLight",function(){return o("299792458 m s^-1")}),i(a,"gravitationConstant",function(){return o("6.6738480e-11 m^3 kg^-1 s^-2")}),i(a,"planckConstant",function(){return o("6.626069311e-34 J s")}),i(a,"reducedPlanckConstant",function(){return o("1.05457172647e-34 J s")}),i(a,"magneticConstant",function(){return o("1.2566370614e-6 N A^-2")}),i(a,"electricConstant",function(){return o("8.854187817e-12 F m^-1")}),i(a,"vacuumImpedance",function(){return o("376.730313461 ohm")}),i(a,"coulomb",function(){return o("8.9875517873681764e9 N m^2 C^-2")}),i(a,"elementaryCharge",function(){return o("1.60217656535e-19 C")}),i(a,"bohrMagneton",function(){return o("9.2740096820e-24 J T^-1")}),i(a,"conductanceQuantum",function(){return o("7.748091734625e-5 S")}),i(a,"inverseConductanceQuantum",function(){return o("12906.403721742 ohm")}),i(a,"magneticFluxQuantum",function(){return o("2.06783375846e-15 Wb")}),i(a,"nuclearMagneton",function(){return o("5.0507835311e-27 J T^-1")}),i(a,"klitzing",function(){return o("25812.807443484 ohm")}),i(a,"bohrRadius",function(){return o("5.291772109217e-11 m")}),i(a,"classicalElectronRadius",function(){return o("2.817940326727e-15 m")}),i(a,"electronMass",function(){return o("9.1093829140e-31 kg")}),i(a,"fermiCoupling",function(){return o("1.1663645e-5 GeV^-2")}),i(a,"fineStructure",function(){return.007297352569824}),i(a,"hartreeEnergy",function(){return o("4.3597443419e-18 J")}),i(a,"protonMass",function(){return o("1.67262177774e-27 kg")}),i(a,"deuteronMass",function(){return o("3.3435830926e-27 kg")}),i(a,"neutronMass",function(){return o("1.6749271613e-27 kg")}),i(a,"quantumOfCirculation",function(){return o("3.636947552024e-4 m^2 s^-1")}),i(a,"rydberg",function(){return o("10973731.56853955 m^-1")}),i(a,"thomsonCrossSection",function(){return o("6.65245873413e-29 m^2")}),i(a,"weakMixingAngle",function(){return.222321}),i(a,"efimovFactor",function(){return 22.7}),i(a,"atomicMass",function(){return o("1.66053892173e-27 kg")}),i(a,"avogadro",function(){return o("6.0221412927e23 mol^-1")}),i(a,"boltzmann",function(){return o("1.380648813e-23 J K^-1")}),i(a,"faraday",function(){return o("96485.336521 C mol^-1")}),i(a,"firstRadiation",function(){return o("3.7417715317e-16 W m^2")}),i(a,"loschmidt",function(){return o("2.686780524e25 m^-3")}),i(a,"gasConstant",function(){return o("8.314462175 J K^-1 mol^-1")}),i(a,"molarPlanckConstant",function(){return o("3.990312717628e-10 J s mol^-1")}),i(a,"molarVolume",function(){return o("2.241396820e-10 m^3 mol^-1")}),i(a,"sackurTetrode",function(){return-1.164870823}),i(a,"secondRadiation",function(){return o("1.438777013e-2 m K")}),i(a,"stefanBoltzmann",function(){return o("5.67037321e-8 W m^-2 K^-4")}),i(a,"wienDisplacement",function(){return o("2.897772126e-3 m K")}),i(a,"molarMass",function(){return o("1e-3 kg mol^-1")}),i(a,"molarMassC12",function(){return o("1.2e-2 kg mol^-1")}),i(a,"gravity",function(){return o("9.80665 m s^-2")}),i(a,"planckLength",function(){return o("1.61619997e-35 m")}),i(a,"planckMass",function(){return o("2.1765113e-8 kg")}),i(a,"planckTime",function(){return o("5.3910632e-44 s")}),i(a,"planckCharge",function(){return o("1.87554595641e-18 C")}),i(a,"planckTemperature",function(){return o("1.41683385e+32 K")})},t.lazy=!1,t.math=!0},function(e,t,r){"use strict";var i=r(3),a=r(93);t.factory=function n(e,t,o,s,u){u.on("config",function(r,i){r.number!==i.number&&n(e,t,o,s,u)}),u.true=!0,u.false=!1,u.null=null,u.uninitialized=r(39).UNINITIALIZED,"bignumber"===t.number?(u.Infinity=new e.BigNumber(1/0),u.NaN=new e.BigNumber(NaN),i.lazy(u,"pi",function(){return a.pi(e.BigNumber)}),i.lazy(u,"tau",function(){return a.tau(e.BigNumber)}),i.lazy(u,"e",function(){return a.e(e.BigNumber)}),i.lazy(u,"phi",function(){return a.phi(e.BigNumber)}),i.lazy(u,"E",function(){return u.e}),i.lazy(u,"LN2",function(){return new e.BigNumber(2).ln()}),i.lazy(u,"LN10",function(){return new e.BigNumber(10).ln()}),i.lazy(u,"LOG2E",function(){return new e.BigNumber(1).div(new e.BigNumber(2).ln())}),i.lazy(u,"LOG10E",function(){return new e.BigNumber(1).div(new e.BigNumber(10).ln())}),i.lazy(u,"PI",function(){return u.pi}),i.lazy(u,"SQRT1_2",function(){return new e.BigNumber("0.5").sqrt()}),i.lazy(u,"SQRT2",function(){return new e.BigNumber(2).sqrt()})):(u.Infinity=1/0,u.NaN=NaN,u.pi=Math.PI,u.tau=2*Math.PI,u.e=Math.E,u.phi=1.618033988749895,u.E=u.e,u.LN2=Math.LN2,u.LN10=Math.LN10,u.LOG2E=Math.LOG2E,u.LOG10E=Math.LOG10E,u.PI=u.pi,u.SQRT1_2=Math.SQRT1_2,u.SQRT2=Math.SQRT2),u.i=new e.Complex(0,1),u.version=r(95)},t.lazy=!1,t.math=!0},function(e,t,r){function n(e){return e[0].precision}var i=r(44).memoize,a=r(94);t.e=i(function(e){return new e(1).exp()},n),t.phi=i(function(e){return new e(1).plus(new e(5).sqrt()).div(2)},n),t.pi=i(function(e){var t=e.constructor({precision:e.precision+4}),t=new t(4).times(a(new t(1).div(5))).minus(a(new t(1).div(239)));return new e(4).times(t)},n),t.tau=i(function(e){var r=t.pi(e.constructor({precision:e.precision+2}));return new e(2).times(r)},n)},function(e,t){e.exports=function(e){for(var t=e,r=NaN,n=e.times(e),i=e,a=!0,o=3;!t.equals(r);o+=2)i=i.times(n),r=t,t=(a=!a)?t.plus(i.div(o)):t.minus(i.div(o));return t}},function(e,t){e.exports="2.6.0"},function(e,t,r){e.exports=[r(97),r(267),r(291),r(292),r(319),r(269),r(290)]},function(e,t,r){t.name="docs",t.path="expression",t.factory=function(e,t,n,i){var a={};return a.bignumber=r(98),a.boolean=r(99),a.complex=r(100),a.fraction=r(101),a.index=r(102),a.matrix=r(103),a.number=r(104),a.sparse=r(105),a.string=r(106),a.unit=r(107),a.e=r(108),a.E=r(108),a.false=r(109),a.i=r(110),a.Infinity=r(111),a.LN2=r(112),a.LN10=r(113),a.LOG2E=r(114),a.LOG10E=r(115),a.NaN=r(116),a.null=r(117),a.pi=r(118),a.PI=r(118),a.phi=r(119),a.SQRT1_2=r(120),a.SQRT2=r(121),a.tau=r(122),a.true=r(123),a.version=r(124),a.speedOfLight={description:"Speed of light in vacuum",examples:["speedOfLight"]},a.gravitationConstant={description:"Newtonian constant of gravitation",examples:["gravitationConstant"]},a.planckConstant={description:"Planck constant",examples:["planckConstant"]},a.reducedPlanckConstant={description:"Reduced Planck constant",examples:["reducedPlanckConstant"]},a.magneticConstant={description:"Magnetic constant (vacuum permeability)",examples:["magneticConstant"]},a.electricConstant={description:"Electric constant (vacuum permeability)",examples:["electricConstant"]},a.vacuumImpedance={description:"Characteristic impedance of vacuum",examples:["vacuumImpedance"]},a.coulomb={description:"Coulomb's constant",examples:["coulomb"]},a.elementaryCharge={description:"Elementary charge",examples:["elementaryCharge"]},a.bohrMagneton={description:"Borh magneton",examples:["bohrMagneton"]},a.conductanceQuantum={description:"Conductance quantum",examples:["conductanceQuantum"]},a.inverseConductanceQuantum={description:"Inverse conductance quantum",examples:["inverseConductanceQuantum"]},a.magneticFluxQuantum={description:"Magnetic flux quantum",examples:["magneticFluxQuantum"]},a.nuclearMagneton={description:"Nuclear magneton",examples:["nuclearMagneton"]},a.klitzing={description:"Von Klitzing constant",examples:["klitzing"]},a.bohrRadius={description:"Borh radius",examples:["bohrRadius"]},a.classicalElectronRadius={description:"Classical electron radius",examples:["classicalElectronRadius"]},a.electronMass={description:"Electron mass",examples:["electronMass"]},a.fermiCoupling={description:"Fermi coupling constant",examples:["fermiCoupling"]},a.fineStructure={description:"Fine-structure constant",examples:["fineStructure"]},a.hartreeEnergy={description:"Hartree energy",examples:["hartreeEnergy"]},a.protonMass={description:"Proton mass",examples:["protonMass"]},a.deuteronMass={description:"Deuteron Mass",examples:["deuteronMass"]},a.neutronMass={description:"Neutron mass",examples:["neutronMass"]},a.quantumOfCirculation={description:"Quantum of circulation",examples:["quantumOfCirculation"]},a.rydberg={description:"Rydberg constant",examples:["rydberg"]},a.thomsonCrossSection={description:"Thomson cross section",examples:["thomsonCrossSection"]},a.weakMixingAngle={description:"Weak mixing angle",examples:["weakMixingAngle"]},a.efimovFactor={description:"Efimov factor",examples:["efimovFactor"]},a.atomicMass={description:"Atomic mass constant",examples:["atomicMass"]},a.avogadro={description:"Avogadro's number",examples:["avogadro"]},a.boltzmann={description:"Boltzmann constant",examples:["boltzmann"]},a.faraday={description:"Faraday constant",examples:["faraday"]},a.firstRadiation={description:"First radiation constant",examples:["firstRadiation"]},a.loschmidt={description:"Loschmidt constant at T=273.15 K and p=101.325 kPa",examples:["loschmidt"]},a.gasConstant={description:"Gas constant",examples:["gasConstant"]},a.molarPlanckConstant={description:"Molar Planck constant",examples:["molarPlanckConstant"]},a.molarVolume={description:"Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",examples:["molarVolume"]},a.sackurTetrode={description:"Sackur-Tetrode constant at T=1 K and p=101.325 kPa",examples:["sackurTetrode"]},a.secondRadiation={description:"Second radiation constant",examples:["secondRadiation"]},a.stefanBoltzmann={description:"Stefan-Boltzmann constant",examples:["stefanBoltzmann"]},a.wienDisplacement={description:"Wien displacement law constant",examples:["wienDisplacement"]},a.molarMass={description:"Molar mass constant",examples:["molarMass"]},a.molarMassC12={description:"Molar mass constant of carbon-12",examples:["molarMassC12"]},a.gravity={description:"Standard acceleration of gravity (standard acceleration of free-fall on Earth)",examples:["gravity"]},a.planckLength={description:"Planck length",examples:["planckLength"]},a.planckMass={description:"Planck mass",examples:["planckMass"]},a.planckTime={description:"Planck time",examples:["planckTime"]},a.planckCharge={description:"Planck charge",examples:["planckCharge"]},a.planckTemperature={description:"Planck temperature",examples:["planckTemperature"]},a.lsolve=r(125),a.lup=r(126),a.lusolve=r(127),a.slu=r(128),a.usolve=r(129),a.abs=r(130),a.add=r(131),a.cbrt=r(132),a.ceil=r(133),a.cube=r(134),a.divide=r(135),a.dotDivide=r(136),a.dotMultiply=r(137),a.dotPow=r(138),a.exp=r(139),a.fix=r(140),a.floor=r(141),a.gcd=r(142),a.hypot=r(143),a.lcm=r(144),a.log=r(145),a.log10=r(146),a.mod=r(147),a.multiply=r(148),a.norm=r(149),a.nthRoot=r(150),a.pow=r(151),a.round=r(152),a.sign=r(153),a.sqrt=r(154),a.square=r(155),a.subtract=r(156),a.unaryMinus=r(157),a.unaryPlus=r(158),a.xgcd=r(159),a.bitAnd=r(160),a.bitNot=r(161),a.bitOr=r(162),a.bitXor=r(163),a.leftShift=r(164),a.rightArithShift=r(165),a.rightLogShift=r(166),a.bellNumbers=r(167),a.catalan=r(168),a.composition=r(169),a.stirlingS2=r(170),a.arg=r(171),a.conj=r(172),a.re=r(173),a.im=r(174),a.eval=r(175),a.help=r(176),a.distance=r(177),a.intersect=r(178),a.and=r(179),a.not=r(180),a.or=r(181),a.xor=r(182),a.concat=r(183),a.cross=r(184),a.det=r(185),a.diag=r(186),a.dot=r(187),a.eye=r(188),a.flatten=r(189),a.inv=r(190),a.ones=r(191),a.range=r(192),a.resize=r(193),a.size=r(194),a.squeeze=r(195),a.subset=r(196),a.trace=r(197),a.transpose=r(198),a.zeros=r(199),a.combinations=r(200),a.factorial=r(201),a.gamma=r(202),a.kldivergence=r(203),a.multinomial=r(204),a.permutations=r(205),a.pickRandom=r(206),a.random=r(207),a.randomInt=r(208),a.compare=r(209),a.deepEqual=r(210),a.equal=r(211),a.larger=r(212),a.largerEq=r(213),a.smaller=r(214),a.smallerEq=r(215),a.unequal=r(216),a.max=r(217),a.mean=r(218),a.median=r(219),a.min=r(220),a.mode=r(221),a.prod=r(222),a.quantileSeq=r(223),a.std=r(224),a.sum=r(225),a.var=r(226),a.acos=r(227),a.acosh=r(228),a.acot=r(229),a.acoth=r(230),a.acsc=r(231),a.acsch=r(232),a.asec=r(233),a.asech=r(234),a.asin=r(235),a.asinh=r(236),a.atan=r(237),a.atanh=r(238),a.atan2=r(239),a.cos=r(240),a.cosh=r(241),a.cot=r(242),a.coth=r(243),a.csc=r(244),a.csch=r(245),a.sec=r(246),a.sech=r(247),a.sin=r(248),a.sinh=r(249),a.tan=r(250),a.tanh=r(251),a.to=r(252),a.clone=r(253),a.map=r(254),a.partitionSelect=r(255),a.filter=r(256),a.forEach=r(257),a.format=r(258),a.isInteger=r(259),a.isNegative=r(260),a.isNumeric=r(261),a.isPositive=r(262),a.isZero=r(263),a.import=r(264),a.sort=r(265),a.typeof=r(266),a}},function(e,t){e.exports={name:"bignumber",category:"Type",syntax:["bignumber(x)"],description:"Create a big number from a number or string.",examples:["0.1 + 0.2","bignumber(0.1) + bignumber(0.2)",'bignumber("7.2")','bignumber("7.2e500")',"bignumber([0.1, 0.2, 0.3])"],seealso:["boolean","complex","fraction","index","matrix","string","unit"]}},function(e,t){e.exports={name:"boolean",category:"Type",syntax:["x","boolean(x)"],description:"Convert a string or number into a boolean.",examples:["boolean(0)","boolean(1)","boolean(3)",'boolean("true")','boolean("false")',"boolean([1, 0, 1, 1])"],seealso:["bignumber","complex","index","matrix","number","string","unit"]}},function(e,t){e.exports={name:"complex",category:"Type",syntax:["complex()","complex(re, im)","complex(string)"],description:"Create a complex number.",examples:["complex()","complex(2, 3)",'complex("7 - 2i")'],seealso:["bignumber","boolean","index","matrix","number","string","unit"]}},function(e,t){e.exports={name:"fraction",category:"Type",syntax:["fraction(num)","fraction(num,den)"],description:"Create a fraction from a number or from a numerator and denominator.",examples:["fraction(0.125)","fraction(1, 3) + fraction(2, 5)"],seealso:["bignumber","boolean","complex","index","matrix","string","unit"]}},function(e,t){e.exports={name:"index",category:"Type",syntax:["[start]","[start:end]","[start:step:end]","[start1, start 2, ...]","[start1:end1, start2:end2, ...]","[start1:step1:end1, start2:step2:end2, ...]"],description:"Create an index to get or replace a subset of a matrix",examples:["[]","[1, 2, 3]","A = [1, 2, 3; 4, 5, 6]","A[1, :]","A[1, 2] = 50","A[0:2, 0:2] = ones(2, 2)"],seealso:["bignumber","boolean","complex","matrix,","number","range","string","unit"]}},function(e,t){e.exports={name:"matrix",category:"Type",syntax:["[]","[a1, b1, ...; a2, b2, ...]","matrix()",'matrix("dense")',"matrix([...])"],description:"Create a matrix.",examples:["[]","[1, 2, 3]","[1, 2, 3; 4, 5, 6]","matrix()","matrix([3, 4])",'matrix([3, 4; 5, 6], "sparse")','matrix([3, 4; 5, 6], "sparse", "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","sparse"]}},function(e,t){e.exports={name:"number",category:"Type",syntax:["x","number(x)"],description:"Create a number or convert a string or boolean into a number.",examples:["2","2e3","4.05","number(2)",'number("7.2")',"number(true)","number([true, false, true, true])",'number("52cm", "m")'],seealso:["bignumber","boolean","complex","fraction","index","matrix","string","unit"]}},function(e,t){e.exports={name:"sparse",category:"Type",syntax:["sparse()","sparse([a1, b1, ...; a1, b2, ...])",'sparse([a1, b1, ...; a1, b2, ...], "number")'],description:"Create a sparse matrix.",examples:["sparse()","sparse([3, 4; 5, 6])",'sparse([3, 0; 5, 0], "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","matrix"]}},function(e,t){e.exports={name:"string",category:"Type",syntax:['"text"',"string(x)"],description:"Create a string or convert a value to a string",examples:['"Hello World!"',"string(4.2)","string(3 + 2i)"],seealso:["bignumber","boolean","complex","index","matrix","number","unit"]}},function(e,t){e.exports={name:"unit",category:"Type",syntax:["value unit","unit(value, unit)","unit(string)"],description:"Create a unit.",examples:["5.5 mm","3 inch",'unit(7.1, "kilogram")','unit("23 deg")'],seealso:["bignumber","boolean","complex","index","matrix","number","string"]}},function(e,t){e.exports={name:"e",category:"Constants",syntax:["e"],description:"Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",examples:["e","e ^ 2","exp(2)","log(e)"],seealso:["exp"]}},function(e,t){e.exports={name:"false",category:"Constants",syntax:["false"],description:"Boolean value false",examples:["false"],seealso:["true"]}},function(e,t){e.exports={name:"i",category:"Constants",syntax:["i"],description:"Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",examples:["i","i * i","sqrt(-1)"],seealso:[]}},function(e,t){e.exports={name:"Infinity",category:"Constants",syntax:["Infinity"],description:"Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",examples:["Infinity","1 / 0"],seealso:[]}},function(e,t){e.exports={name:"LN2",category:"Constants",syntax:["LN2"],description:"Returns the natural logarithm of 2, approximately equal to 0.693",examples:["LN2","log(2)"],seealso:[]}},function(e,t){e.exports={name:"LN10",category:"Constants",syntax:["LN10"],description:"Returns the natural logarithm of 10, approximately equal to 2.302",examples:["LN10","log(10)"],seealso:[]}},function(e,t){e.exports={name:"LOG2E",category:"Constants",syntax:["LOG2E"],description:"Returns the base-2 logarithm of E, approximately equal to 1.442",examples:["LOG2E","log(e, 2)"],seealso:[]}},function(e,t){e.exports={name:"LOG10E",category:"Constants",syntax:["LOG10E"],description:"Returns the base-10 logarithm of E, approximately equal to 0.434",examples:["LOG10E","log(e, 10)"],seealso:[]}},function(e,t){e.exports={name:"NaN",category:"Constants",syntax:["NaN"],description:"Not a number",examples:["NaN","0 / 0"],seealso:[]}},function(e,t){e.exports={name:"null",category:"Constants",syntax:["null"],description:"Value null",examples:["null"],seealso:["true","false"]}},function(e,t){e.exports={name:"pi",category:"Constants",syntax:["pi"],description:"The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",examples:["pi","sin(pi/2)"],seealso:["tau"]}},function(e,t){e.exports={name:"phi",category:"Constants",syntax:["phi"],description:"Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",examples:["tau"],seealso:[]}},function(e,t){e.exports={name:"SQRT1_2",category:"Constants",syntax:["SQRT1_2"],description:"Returns the square root of 1/2, approximately equal to 0.707",examples:["SQRT1_2","sqrt(1/2)"],seealso:[]}},function(e,t){e.exports={name:"SQRT2",category:"Constants",syntax:["SQRT2"],description:"Returns the square root of 2, approximately equal to 1.414",examples:["SQRT2","sqrt(2)"],seealso:[]}},function(e,t){e.exports={name:"tau",category:"Constants",syntax:["tau"],description:"Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",examples:["tau","2 * pi"],seealso:["pi"]}},function(e,t){e.exports={name:"true",category:"Constants",syntax:["true"],description:"Boolean value true",examples:["true"],seealso:["false"]}},function(e,t){e.exports={name:"version",category:"Constants",syntax:["version"],description:"A string with the version number of math.js",examples:["version"],seealso:[]}},function(e,t){e.exports={name:"lsolve",category:"Algebra",syntax:["x=lsolve(L, b)"],description:"Solves the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lup","lusolve","usolve","matrix","sparse"]}},function(e,t){e.exports={name:"lup",category:"Algebra",syntax:["lup(m)"],description:"Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",examples:["lup([[2, 1], [1, 4]])","lup(matrix([[2, 1], [1, 4]]))","lup(sparse([[2, 1], [1, 4]]))"],seealso:["lusolve","lsolve","usolve","matrix","sparse","slu"]}},function(e,t){e.exports={name:"lusolve",category:"Algebra",syntax:["x=lusolve(A, b)","x=lusolve(lu, b)"],description:"Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lusolve(a, b)"],seealso:["lup","slu","lsolve","usolve","matrix","sparse"]}},function(e,t){e.exports={name:"slu",category:"Algebra",syntax:["slu(A, order, threshold)"],description:"Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",examples:["slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)"],seealso:["lusolve","lsolve","usolve","matrix","sparse","lup"]}},function(e,t){e.exports={name:"usolve",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Solves the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["lup","lusolve","lsolve","matrix","sparse"]}},function(e,t){e.exports={name:"abs",category:"Arithmetic",syntax:["abs(x)"],description:"Compute the absolute value.",examples:["abs(3.5)","abs(-4.2)"],seealso:["sign"]}},function(e,t){e.exports={name:"add",category:"Operators",syntax:["x + y","add(x, y)"],description:"Add two values.",examples:["a = 2.1 + 3.6","a - 3.6","3 + 2i","3 cm + 2 inch",'"2.3" + "4"'],seealso:["subtract"]}},function(e,t){e.exports={name:"cbrt",category:"Arithmetic",syntax:["cbrt(x)","cbrt(x, allRoots)"],description:"Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",examples:["cbrt(64)","cube(4)","cbrt(-8)","cbrt(2 + 3i)","cbrt(8i)","cbrt(8i, true)","cbrt(27 m^3)"],seealso:["square","sqrt","cube","multiply"]}},function(e,t){e.exports={name:"ceil",category:"Arithmetic",syntax:["ceil(x)"],description:"Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",examples:["ceil(3.2)","ceil(3.8)","ceil(-4.2)"],seealso:["floor","fix","round"]}},function(e,t){e.exports={name:"cube",category:"Arithmetic",syntax:["cube(x)"],description:"Compute the cube of a value. The cube of x is x * x * x.",examples:["cube(2)","2^3","2 * 2 * 2"],seealso:["multiply","square","pow"]}},function(e,t){e.exports={name:"divide",category:"Operators",syntax:["x / y","divide(x, y)"],description:"Divide two values.",examples:["a = 2 / 3","a * 3","4.5 / 2","3 + 4 / 2","(3 + 4) / 2","18 km / 4.5"],seealso:["multiply"]}},function(e,t){e.exports={name:"dotDivide",category:"Operators",syntax:["x ./ y","dotDivide(x, y)"],description:"Divide two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a ./ b"],seealso:["multiply","dotMultiply","divide"]}},function(e,t){e.exports={name:"dotMultiply",category:"Operators",syntax:["x .* y","dotMultiply(x, y)"],description:"Multiply two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a .* b"],seealso:["multiply","divide","dotDivide"]}},function(e,t){e.exports={name:"dotpow",category:"Operators",syntax:["x .^ y","dotpow(x, y)"],description:"Calculates the power of x to y element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","a .^ 2"],seealso:["pow"]}},function(e,t){e.exports={name:"exp",category:"Arithmetic",syntax:["exp(x)"],description:"Calculate the exponent of a value.",examples:["exp(1.3)","e ^ 1.3","log(exp(1.3))","x = 2.4","(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula"],seealso:["pow","log"]}},function(e,t){e.exports={name:"fix",category:"Arithmetic",syntax:["fix(x)"],description:"Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",examples:["fix(3.2)","fix(3.8)","fix(-4.2)","fix(-4.8)"],seealso:["ceil","floor","round"]}},function(e,t){e.exports={name:"floor",category:"Arithmetic",syntax:["floor(x)"],description:"Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",examples:["floor(3.2)","floor(3.8)","floor(-4.2)"],seealso:["ceil","fix","round"]}},function(e,t){e.exports={name:"gcd",category:"Arithmetic",syntax:["gcd(a, b)","gcd(a, b, c, ...)"],description:"Compute the greatest common divisor.",examples:["gcd(8, 12)","gcd(-4, 6)","gcd(25, 15, -10)"],seealso:["lcm","xgcd"]}},function(e,t){e.exports={name:"hypot",category:"Arithmetic",syntax:["hypot(a, b, c, ...)","hypot([a, b, c, ...])"],description:"Calculate the hypotenusa of a list with values. ",examples:["hypot(3, 4)","sqrt(3^2 + 4^2)","hypot(-2)","hypot([3, 4, 5])"],seealso:["abs","norm"]}},function(e,t){e.exports={name:"lcm",category:"Arithmetic",syntax:["lcm(x, y)"],description:"Compute the least common multiple.",examples:["lcm(4, 6)","lcm(6, 21)","lcm(6, 21, 5)"],seealso:["gcd"]}},function(e,t){e.exports={name:"log",category:"Arithmetic",syntax:["log(x)","log(x, base)"],description:"Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",examples:["log(3.5)","a = log(2.4)","exp(a)","10 ^ 4","log(10000, 10)","log(10000) / log(10)","b = log(1024, 2)","2 ^ b"],seealso:["exp","log10"]}},function(e,t){e.exports={name:"log10",category:"Arithmetic",syntax:["log10(x)"],description:"Compute the 10-base logarithm of a value.",examples:["log10(0.00001)","log10(10000)","10 ^ 4","log(10000) / log(10)","log(10000, 10)"],seealso:["exp","log"]}},function(e,t){e.exports={name:"mod",category:"Operators",syntax:["x % y","x mod y","mod(x, y)"],description:"Calculates the modulus, the remainder of an integer division.",examples:["7 % 3","11 % 2","10 mod 4","function isOdd(x) = x % 2","isOdd(2)","isOdd(3)"],seealso:["divide"]}},function(e,t){e.exports={name:"multiply",category:"Operators",syntax:["x * y","multiply(x, y)"],description:"multiply two values.",examples:["a = 2.1 * 3.4","a / 3.4","2 * 3 + 4","2 * (3 + 4)","3 * 2.1 km"],seealso:["divide"]}},function(e,t){e.exports={name:"norm",category:"Arithmetic",syntax:["norm(x)","norm(x, p)"],description:"Calculate the norm of a number, vector or matrix.",examples:["abs(-3.5)","norm(-3.5)","norm(3 - 4i))","norm([1, 2, -3], Infinity)","norm([1, 2, -3], -Infinity)","norm([3, 4], 2)","norm([[1, 2], [3, 4]], 1)","norm([[1, 2], [3, 4]], 'inf')","norm([[1, 2], [3, 4]], 'fro')"]}},function(e,t){e.exports={name:"nthRoot",category:"Arithmetic",syntax:["nthRoot(a)","nthRoot(a, root)"],description:'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',examples:["4 ^ 3","nthRoot(64, 3)","nthRoot(9, 2)","sqrt(9)"],seealso:["sqrt","pow"]}},function(e,t){e.exports={name:"pow",category:"Operators",syntax:["x ^ y","pow(x, y)"],description:"Calculates the power of x to y, x^y.",examples:["2^3 = 8","2*2*2","1 + e ^ (pi * i)"],seealso:["multiply"]}},function(e,t){e.exports={name:"round",category:"Arithmetic",syntax:["round(x)","round(x, n)"],description:"round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",examples:["round(3.2)","round(3.8)","round(-4.2)","round(-4.8)","round(pi, 3)","round(123.45678, 2)"],seealso:["ceil","floor","fix"]}},function(e,t){e.exports={name:"sign",category:"Arithmetic",syntax:["sign(x)"],description:"Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",examples:["sign(3.5)","sign(-4.2)","sign(0)"],seealso:["abs"]}},function(e,t){e.exports={name:"sqrt",category:"Arithmetic",syntax:["sqrt(x)"],description:"Compute the square root value. If x = y * y, then y is the square root of x.",examples:["sqrt(25)","5 * 5","sqrt(-1)"],seealso:["square","multiply"]}},function(e,t){e.exports={name:"square",category:"Arithmetic",syntax:["square(x)"],description:"Compute the square of a value. The square of x is x * x.",examples:["square(3)","sqrt(9)","3^2","3 * 3"],seealso:["multiply","pow","sqrt","cube"]}},function(e,t){e.exports={name:"subtract",category:"Operators",syntax:["x - y","subtract(x, y)"],description:"subtract two values.",examples:["a = 5.3 - 2","a + 2","2/3 - 1/6","2 * 3 - 3","2.1 km - 500m"],seealso:["add"]}},function(e,t){e.exports={name:"unaryMinus",category:"Operators",syntax:["-x","unaryMinus(x)"],description:"Inverse the sign of a value. Converts booleans and strings to numbers.",examples:["-4.5","-(-5.6)",'-"22"'],seealso:["add","subtract","unaryPlus"]}},function(e,t){e.exports={name:"unaryPlus",category:"Operators",syntax:["+x","unaryPlus(x)"],description:"Converts booleans and strings to numbers.",examples:["+true",'+"2"'],seealso:["add","subtract","unaryMinus"]}},function(e,t){e.exports={name:"xgcd",category:"Arithmetic",syntax:["xgcd(a, b)"],description:"Calculate the extended greatest common divisor for two values",examples:["xgcd(8, 12)","gcd(8, 12)","xgcd(36163, 21199)"],seealso:["gcd","lcm"]}},function(e,t){e.exports={name:"bitAnd",category:"Bitwise",syntax:["x & y","bitAnd(x, y)"],description:"Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",examples:["5 & 3","bitAnd(53, 131)","[1, 12, 31] & 42"],seealso:["bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitNot",category:"Bitwise",syntax:["~x","bitNot(x)"],description:"Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",examples:["~1","~2","bitNot([2, -3, 4])"],seealso:["bitAnd","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitOr",category:"Bitwise",syntax:["x | y","bitOr(x, y)"],description:"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",examples:["5 | 3","bitOr([1, 2, 3], 4)"],seealso:["bitAnd","bitNot","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitXor",category:"Bitwise",syntax:["bitXor(x, y)"],description:"Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",examples:["bitOr(1, 2)","bitXor([2, 3, 4], 4)"],seealso:["bitAnd","bitNot","bitOr","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"leftShift",category:"Bitwise",syntax:["x << y","leftShift(x, y)"],description:"Bitwise left logical shift of a value x by y number of bits.",examples:["4 << 1","8 >> 1"],seealso:["bitAnd","bitNot","bitOr","bitXor","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"rightArithShift",category:"Bitwise",syntax:["x >> y","leftShift(x, y)"],description:"Bitwise right arithmetic shift of a value x by y number of bits.",examples:["8 >> 1","4 << 1","-12 >> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightLogShift"]}},function(e,t){e.exports={name:"rightLogShift",category:"Bitwise",syntax:["x >> y","leftShift(x, y)"],description:"Bitwise right logical shift of a value x by y number of bits.",examples:["8 >>> 1","4 << 1","-12 >>> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift"]}},function(e,t){e.exports={name:"bellNumbers",category:"Combinatorics",syntax:["bellNumbers(n)"],description:"The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["bellNumbers(3)","bellNumbers(8)"],seealso:["stirlingS2"]}},function(e,t){e.exports={name:"catalan",category:"Combinatorics",syntax:["catalan(n)"],description:"The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["catalan(3)","catalan(8)"],seealso:["bellNumbers"]}},function(e,t){e.exports={name:"composition",category:"Combinatorics",syntax:["composition(n, k)"],description:"The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",examples:["composition(5, 3)"],seealso:["combinations"]}},function(e,t){e.exports={name:"stirlingS2",category:"Combinatorics",syntax:["stirlingS2(n, k)"],description:"he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",examples:["stirlingS2(5, 3)"],seealso:["bellNumbers"]}},function(e,t){e.exports={name:"arg",category:"Complex",syntax:["arg(x)"],description:"Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",examples:["arg(2 + 2i)","atan2(3, 2)","arg(2 + 3i)"],seealso:["re","im","conj","abs"]}},function(e,t){e.exports={name:"conj",category:"Complex",syntax:["conj(x)"],description:"Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",examples:["conj(2 + 3i)","conj(2 - 3i)","conj(-5.2i)"],seealso:["re","im","abs","arg"]}},function(e,t){e.exports={name:"re",category:"Complex",syntax:["re(x)"],description:"Get the real part of a complex number.",examples:["re(2 + 3i)","im(2 + 3i)","re(-5.2i)","re(2.4)"],seealso:["im","conj","abs","arg"]}},function(e,t){e.exports={name:"im",category:"Complex",syntax:["im(x)"],description:"Get the imaginary part of a complex number.",examples:["im(2 + 3i)","re(2 + 3i)","im(-5.2i)","im(2.4)"],seealso:["re","conj","abs","arg"]}},function(e,t){e.exports={name:"eval",category:"Expression",syntax:["eval(expression)","eval([expr1, expr2, expr3, ...])"],description:"Evaluate an expression or an array with expressions.",examples:['eval("2 + 3")','eval("sqrt(" + 4 + ")")'],seealso:[]}},function(e,t){e.exports={name:"help",category:"Expression",syntax:["help(object)","help(string)"],description:"Display documentation on a function or data type.",examples:["help(sqrt)",'help("complex")'],seealso:[]}},function(e,t){e.exports={name:"distance",category:"Geometry",syntax:["distance([x1, y1], [x2, y2])","distance([[x1, y1], [x2, y2])"],description:"Calculates the Euclidean distance between two points.",examples:["distance([0,0], [4,4])","distance([[0,0], [4,4]])"],seealso:[]}},function(e,t){e.exports={name:"intersect",category:"Geometry",syntax:["intersect(expr1, expr2, expr3, expr4)","intersect(expr1, expr2, expr3)"],description:"Computes the intersection point of lines and/or planes.",examples:["intersect([0, 0], [10, 10], [10, 0], [0, 10])","intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])"],seealso:[]}},function(e,t){e.exports={name:"and",category:"Logical",syntax:["x and y","and(x, y)"],description:"Logical and. Test whether two values are both defined with a nonzero/nonempty value.",examples:["true and false","true and true","2 and 4"],seealso:["not","or","xor"]}},function(e,t){e.exports={name:"not",category:"Logical",syntax:["not x","not(x)"],description:"Logical not. Flips the boolean value of given argument.",examples:["not true","not false","not 2","not 0"],seealso:["and","or","xor"]}},function(e,t){e.exports={name:"or",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical or. Test if at least one value is defined with a nonzero/nonempty value.",examples:["true or false","false or false","0 or 4"],seealso:["not","and","xor"]}},function(e,t){e.exports={name:"xor",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",examples:["true xor false","false xor false","true xor true","0 or 4"],seealso:["not","and","or"]}},function(e,t){e.exports={name:"concat",category:"Matrix",syntax:["concat(A, B, C, ...)","concat(A, B, C, ..., dim)"],description:"Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",examples:["A = [1, 2; 5, 6]","B = [3, 4; 7, 8]","concat(A, B)","concat(A, B, 1)","concat(A, B, 2)"],seealso:["det","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"cross",category:"Matrix",syntax:["cross(A, B)"],description:"Calculate the cross product for two vectors in three dimensional space.",examples:["cross([1, 1, 0],  [0, 1, 1])","cross([3, -3, 1], [4, 9, 2])","cross([2, 3, 4],  [5, 6, 7])"],seealso:["multiply","dot"]}},function(e,t){e.exports={name:"det",category:"Matrix",syntax:["det(x)"],description:"Calculate the determinant of a matrix",examples:["det([1, 2; 3, 4])","det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],seealso:["concat","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"diag",category:"Matrix",syntax:["diag(x)","diag(x, k)"],description:"Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",examples:["diag(1:3)","diag(1:3, 1)","a = [1, 2, 3; 4, 5, 6; 7, 8, 9]","diag(a)"],seealso:["concat","det","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"dot",category:"Matrix",syntax:["dot(A, B)"],description:"Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",examples:["dot([2, 4, 1], [2, 2, 3])","[2, 4, 1] * [2, 2, 3]"],seealso:["multiply","cross"]}},function(e,t){e.exports={name:"eye",category:"Matrix",syntax:["eye(n)","eye(m, n)","eye([m, n])","eye"],description:"Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",examples:["eye(3)","eye(3, 5)","a = [1, 2, 3; 4, 5, 6]","eye(size(a))"],seealso:["concat","det","diag","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"flatten",category:"Matrix",syntax:["flatten(x)"],description:"Flatten a multi dimensional matrix into a single dimensional matrix.",examples:["a = [1, 2, 3; 4, 5, 6]","size(a)","b = flatten(a)","size(b)"],seealso:["concat","resize","size","squeeze"]}},function(e,t){e.exports={name:"inv",category:"Matrix",syntax:["inv(x)"],description:"Calculate the inverse of a matrix",examples:["inv([1, 2; 3, 4])","inv(4)","1 / 4"],seealso:["concat","det","diag","eye","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"ones",category:"Matrix",syntax:["ones(m)","ones(m, n)","ones(m, n, p, ...)","ones([m])","ones([m, n])","ones([m, n, p, ...])","ones"],description:"Create a matrix containing ones.",examples:["ones(3)","ones(3, 5)","ones([2,3]) * 4.5","a = [1, 2, 3; 4, 5, 6]","ones(size(a))"],seealso:["concat","det","diag","eye","inv","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"range",category:"Type",syntax:["start:end","start:step:end","range(start, end)","range(start, end, step)","range(string)"],description:"Create a range. Lower bound of the range is included, upper bound is excluded.",examples:["1:5","3:-1:-3","range(3, 7)","range(0, 12, 2)",'range("4:10")',"a = [1, 2, 3, 4; 5, 6, 7, 8]","a[1:2, 1:2]"],seealso:["concat","det","diag","eye","inv","ones","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"resize",category:"Matrix",syntax:["resize(x, size)","resize(x, size, defaultValue)"],description:"Resize a matrix.",examples:["resize([1,2,3,4,5], [3])","resize([1,2,3], [5])","resize([1,2,3], [5], -1)","resize(2, [2, 3])",'resize("hello", [8], "!")'],seealso:["size","subset","squeeze"]}},function(e,t){e.exports={name:"size",category:"Matrix",syntax:["size(x)"],description:"Calculate the size of a matrix.",examples:["size(2.3)",'size("hello world")',"a = [1, 2; 3, 4; 5, 6]","size(a)","size(1:6)"],seealso:["concat","det","diag","eye","inv","ones","range","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"squeeze",category:"Matrix",syntax:["squeeze(x)"],description:"Remove inner and outer singleton dimensions from a matrix.",examples:["a = zeros(3,2,1)","size(squeeze(a))","b = zeros(1,1,3)","size(squeeze(b))"],seealso:["concat","det","diag","eye","inv","ones","range","size","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"subset",category:"Matrix",syntax:["value(index)","value(index) = replacement","subset(value, [index])","subset(value, [index], replacement)"],description:"Get or set a subset of a matrix or string. Indexes are one-based. Both the ranges lower-bound and upper-bound are included.",examples:["d = [1, 2; 3, 4]","e = []","e[1, 1:2] = [5, 6]","e[2, :] = [7, 8]","f = d * e","f[2, 1]","f[:, 1]"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","trace","transpose","zeros"]}},function(e,t){e.exports={name:"trace",category:"Matrix",syntax:["trace(A)"],description:"Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",examples:["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]","trace(A)"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","transpose","zeros"]}},function(e,t){e.exports={name:"transpose",category:"Matrix",syntax:["x'","transpose(x)"],description:"Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","transpose(a)"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","trace","zeros"]}},function(e,t){e.exports={name:"zeros",category:"Matrix",syntax:["zeros(m)","zeros(m, n)","zeros(m, n, p, ...)","zeros([m])","zeros([m, n])","zeros([m, n, p, ...])","zeros"],description:"Create a matrix containing zeros.",examples:["zeros(3)","zeros(3, 5)","a = [1, 2, 3; 4, 5, 6]","zeros(size(a))"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose"]}},function(e,t){e.exports={name:"combinations",category:"Probability",syntax:["combinations(n, k)"],description:"Compute the number of combinations of n items taken k at a time",examples:["combinations(7, 5)"],seealso:["permutations","factorial"]}},function(e,t){e.exports={name:"factorial",category:"Probability",syntax:["kldivergence(x, y)"],description:"Compute the factorial of a value",examples:["5!","5 * 4 * 3 * 2 * 1","3!"],seealso:["combinations","permutations","gamma"]}},function(e,t){e.exports={name:"gamma",category:"Probability",syntax:["gamma(n)"],description:"Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",examples:["gamma(4)","3!","gamma(1/2)","sqrt(pi)"],seealso:["factorial"]}},function(e,t){e.exports={name:"kldivergence",category:"Probability",syntax:["n!","factorial(n)"],description:"Calculate the Kullback-Leibler (KL) divergence  between two distributions.",examples:["math.kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],seealso:[]}},function(e,t){e.exports={name:"multinomial",category:"Probability",syntax:["multinomial(A)"],description:"Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai <= 0.",examples:["multinomial([1, 2, 1])"],seealso:["combinations","factorial"]}},function(e,t){e.exports={name:"permutations",category:"Probability",syntax:["permutations(n)","permutations(n, k)"],description:"Compute the number of permutations of n items taken k at a time",examples:["permutations(5)","permutations(5, 3)"],seealso:["combinations","factorial"]}},function(e,t){e.exports={name:"pickRandom",category:"Probability",syntax:["pickRandom(array)"],description:"Pick a random entry from a given array.",examples:["pickRandom(0:10)","pickRandom([1, 3, 1, 6])"],seealso:["random","randomInt"]}},function(e,t){e.exports={name:"random",category:"Probability",syntax:["random()","random(max)","random(min, max)","random(size)","random(size, max)","random(size, min, max)"],description:"Return a random number.",examples:["random()","random(10, 20)","random([2, 3])"],seealso:["pickRandom","randomInt"]}},function(e,t){e.exports={name:"randInt",category:"Probability",syntax:["randInt(max)","randInt(min, max)","randInt(size)","randInt(size, max)","randInt(size, min, max)"],description:"Return a random integer number",examples:["randInt(10, 20)","randInt([2, 3], 10)"],seealso:["pickRandom","random"]}},function(e,t){e.exports={name:"compare",category:"Relational",syntax:["compare(x, y)"],description:"Compare two values. Returns 1 if x is larger than y, -1 if x is smaller than y, and 0 if x and y are equal.",examples:["compare(2, 3)","compare(3, 2)","compare(2, 2)","compare(5cm, 40mm)","compare(2, [1, 2, 3])"],seealso:["equal","unequal","smaller","smallerEq","largerEq"]}},function(e,t){e.exports={name:"deepEqual",category:"Relational",syntax:["deepEqual(x, y)"],description:"Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",examples:["[1,3,4] == [1,3,4]","[1,3,4] == [1,3]"],seealso:["equal","unequal","smaller","larger","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"equal",category:"Relational",syntax:["x == y","equal(x, y)"],description:"Check equality of two values. Returns true if the values are equal, and false if not.",examples:["2+2 == 3","2+2 == 4","a = 3.2","b = 6-2.8","a == b","50cm == 0.5m"],seealso:["unequal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]}},function(e,t){e.exports={name:"larger",category:"Relational",syntax:["x > y","larger(x, y)"],description:"Check if value x is larger than y. Returns true if x is larger than y, and false if not.",examples:["2 > 3","5 > 2*2","a = 3.3","b = 6-2.8","(a > b)","(b < a)","5 cm > 2 inch"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"largerEq",category:"Relational",syntax:["x >= y","largerEq(x, y)"],description:"Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",examples:["2 > 1+1","2 >= 1+1","a = 3.2","b = 6-2.8","(a > b)"],seealso:["equal","unequal","smallerEq","smaller","largerEq","compare"]}},function(e,t){e.exports={name:"smaller",category:"Relational",syntax:["x < y","smaller(x, y)"],description:"Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 3","5 < 2*2","a = 3.3","b = 6-2.8","(a < b)","5 cm < 2 inch"],seealso:["equal","unequal","larger","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"smallerEq",category:"Relational",syntax:["x <= y","smallerEq(x, y)"],description:"Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 1+1","2 <= 1+1","a = 3.2","b = 6-2.8","(a < b)"],seealso:["equal","unequal","larger","smaller","largerEq","compare"]}},function(e,t){e.exports={name:"unequal",category:"Relational",syntax:["x != y","unequal(x, y)"],description:"Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",examples:["2+2 != 3","2+2 != 4","a = 3.2","b = 6-2.8","a != b","50cm != 0.5m","5 cm != 2 inch"],seealso:["equal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]}},function(e,t){e.exports={name:"max",category:"Statistics",syntax:["max(a, b, c, ...)","max(A)","max(A, dim)"],description:"Compute the maximum value of a list of values.",examples:["max(2, 3, 4, 1)","max([2, 3, 4, 1])","max([2, 5; 4, 3])","max([2, 5; 4, 3], 1)","max([2, 5; 4, 3], 2)","max(2.7, 7.1, -4.5, 2.0, 4.1)","min(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["mean","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"mean",category:"Statistics",syntax:["mean(a, b, c, ...)","mean(A)","mean(A, dim)"],description:"Compute the arithmetic mean of a list of values.",examples:["mean(2, 3, 4, 1)","mean([2, 3, 4, 1])","mean([2, 5; 4, 3])","mean([2, 5; 4, 3], 1)","mean([2, 5; 4, 3], 2)","mean([1.0, 2.7, 3.2, 4.0])"],seealso:["max","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"median",category:"Statistics",syntax:["median(a, b, c, ...)","median(A)"],description:"Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",examples:["median(5, 2, 7)","median([3, -1, 5, 7])"],seealso:["max","mean","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"min",category:"Statistics",syntax:["min(a, b, c, ...)","min(A)","min(A, dim)"],description:"Compute the minimum value of a list of values.",examples:["min(2, 3, 4, 1)","min([2, 3, 4, 1])","min([2, 5; 4, 3])","min([2, 5; 4, 3], 1)","min([2, 5; 4, 3], 2)","min(2.7, 7.1, -4.5, 2.0, 4.1)","max(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["max","mean","median","prod","std","sum","var"]}},function(e,t){e.exports={name:"mode",category:"Statistics",syntax:["mode(a, b, c, ...)","mode(A)","mode(A, a, b, B, c, ...)"],description:"Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",examples:["mode(5, 2, 7)","mode([3, -1, 5, 7])"],seealso:["max","mean","min","median","prod","std","sum","var"]}},function(e,t){e.exports={name:"prod",category:"Statistics",syntax:["prod(a, b, c, ...)","prod(A)"],description:"Compute the product of all values.",examples:["prod(2, 3, 4)","prod([2, 3, 4])","prod([2, 5; 4, 3])"],seealso:["max","mean","min","median","min","std","sum","var"]}},function(e,t){e.exports={name:"quantileSeq",category:"Statistics",syntax:["quantileSeq(A, prob[, sorted])","quantileSeq(A, [prob1, prob2, ...][, sorted])","quantileSeq(A, N[, sorted])"],description:"Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.",examples:["quantileSeq([3, -1, 5, 7], 0.5)","quantileSeq([3, -1, 5, 7], [1/3, 2/3])","quantileSeq([3, -1, 5, 7], 2)","quantileSeq([-1, 3, 5, 7], 0.5, true)"],seealso:["mean","median","min","max","prod","std","sum","var"]}},function(e,t){e.exports={name:"std",category:"Statistics",syntax:["std(a, b, c, ...)","std(A)","std(A, normalization)"],description:'Compute the standard deviation of all values, defined as std(A) = sqrt(var(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["std(2, 4, 6)","std([2, 4, 6, 8])",'std([2, 4, 6, 8], "uncorrected")','std([2, 4, 6, 8], "biased")',"std([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","sum","var"]}},function(e,t){e.exports={name:"sum",category:"Statistics",syntax:["sum(a, b, c, ...)","sum(A)"],description:"Compute the sum of all values.",examples:["sum(2, 3, 4, 1)","sum([2, 3, 4, 1])","sum([2, 5; 4, 3])"],seealso:["max","mean","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"var",category:"Statistics",syntax:["var(a, b, c, ...)","var(A)","var(A, normalization)"],description:'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["var(2, 4, 6)","var([2, 4, 6, 8])",'var([2, 4, 6, 8], "uncorrected")','var([2, 4, 6, 8], "biased")',"var([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","std","sum"]}},function(e,t){e.exports={name:"acos",category:"Trigonometry",syntax:["acos(x)"],description:"Compute the inverse cosine of a value in radians.",examples:["acos(0.5)","acos(cos(2.3))"],seealso:["cos","atan","asin"]}},function(e,t){e.exports={name:"acosh",category:"Trigonometry",syntax:["acosh(x)"],description:"Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",examples:["acosh(1.5)"],seealso:["cosh","asinh","atanh"]}},function(e,t){e.exports={name:"acot",category:"Trigonometry",syntax:["acot(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acot(0.5)","acot(cot(0.5))","acot(2)"],seealso:["cot","atan"]}},function(e,t){e.exports={name:"acoth",category:"Trigonometry",syntax:["acoth(x)"],description:"Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",examples:["acoth(0.5)"],seealso:["acsch","asech"]}},function(e,t){e.exports={name:"acsc",category:"Trigonometry",syntax:["acsc(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acsc(0.5)","acsc(csc(0.5))","acsc(2)"],seealso:["csc","asin","asec"]}},function(e,t){e.exports={name:"acsch",category:"Trigonometry",syntax:["acsch(x)"],description:"Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",examples:["acsch(0.5)"],seealso:["asech","acoth"]}},function(e,t){e.exports={name:"asec",category:"Trigonometry",syntax:["asec(x)"],description:"Calculate the inverse secant of a value.",examples:["asec(0.5)","asec(sec(0.5))","asec(2)"],seealso:["acos","acot","acsc"]}},function(e,t){e.exports={name:"asech",category:"Trigonometry",syntax:["asech(x)"],description:"Calculate the inverse secant of a value.",examples:["asech(0.5)"],seealso:["acsch","acoth"]}},function(e,t){e.exports={name:"asin",category:"Trigonometry",syntax:["asin(x)"],description:"Compute the inverse sine of a value in radians.",examples:["asin(0.5)","asin(sin(2.3))"],seealso:["sin","acos","atan"]}},function(e,t){e.exports={name:"asinh",category:"Trigonometry",syntax:["asinh(x)"],description:"Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",examples:["asinh(0.5)"],seealso:["acosh","atanh"]}},function(e,t){e.exports={name:"atan",category:"Trigonometry",syntax:["atan(x)"],description:"Compute the inverse tangent of a value in radians.",examples:["atan(0.5)","atan(tan(2.3))"],seealso:["tan","acos","asin"]}},function(e,t){e.exports={name:"atanh",category:"Trigonometry",syntax:["atanh(x)"],description:"Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",examples:["atanh(0.5)"],seealso:["acosh","asinh"]}},function(e,t){e.exports={name:"atan2",category:"Trigonometry",syntax:["atan2(y, x)"],description:"Computes the principal value of the arc tangent of y/x in radians.",examples:["atan2(2, 2) / pi","angle = 60 deg in rad","x = cos(angle)","y = sin(angle)","atan2(y, x)"],seealso:["sin","cos","tan"]}},function(e,t){e.exports={name:"cos",category:"Trigonometry",syntax:["cos(x)"],description:"Compute the cosine of x in radians.",examples:["cos(2)","cos(pi / 4) ^ 2","cos(180 deg)","cos(60 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["acos","sin","tan"]}},function(e,t){e.exports={name:"cosh",category:"Trigonometry",syntax:["cosh(x)"],description:"Compute the hyperbolic cosine of x in radians.",examples:["cosh(0.5)"],seealso:["sinh","tanh","coth"]}},function(e,t){e.exports={name:"cot",category:"Trigonometry",syntax:["cot(x)"],description:"Compute the cotangent of x in radians. Defined as 1/tan(x)",examples:["cot(2)","1 / tan(2)"],seealso:["sec","csc","tan"]}},function(e,t){e.exports={name:"coth",category:"Trigonometry",syntax:["coth(x)"],description:"Compute the hyperbolic cotangent of x in radians.",examples:["coth(2)","1 / tanh(2)"],seealso:["sech","csch","tanh"]}},function(e,t){e.exports={name:"csc",category:"Trigonometry",syntax:["csc(x)"],description:"Compute the cosecant of x in radians. Defined as 1/sin(x)",examples:["csc(2)","1 / sin(2)"],seealso:["sec","cot","sin"]}},function(e,t){e.exports={name:"csch",category:"Trigonometry",syntax:["csch(x)"],description:"Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",examples:["csch(2)","1 / sinh(2)"],seealso:["sech","coth","sinh"]}},function(e,t){e.exports={name:"sec",category:"Trigonometry",syntax:["sec(x)"],description:"Compute the secant of x in radians. Defined as 1/cos(x)",examples:["sec(2)","1 / cos(2)"],seealso:["cot","csc","cos"]}},function(e,t){e.exports={name:"sech",category:"Trigonometry",syntax:["sech(x)"],description:"Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",examples:["sech(2)","1 / cosh(2)"],seealso:["coth","csch","cosh"]}},function(e,t){e.exports={name:"sin",category:"Trigonometry",syntax:["sin(x)"],description:"Compute the sine of x in radians.",examples:["sin(2)","sin(pi / 4) ^ 2","sin(90 deg)","sin(30 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["asin","cos","tan"]}},function(e,t){e.exports={name:"sinh",category:"Trigonometry",syntax:["sinh(x)"],description:"Compute the hyperbolic sine of x in radians.",examples:["sinh(0.5)"],seealso:["cosh","tanh"]}},function(e,t){e.exports={name:"tan",category:"Trigonometry",syntax:["tan(x)"],description:"Compute the tangent of x in radians.",examples:["tan(0.5)","sin(0.5) / cos(0.5)","tan(pi / 4)","tan(45 deg)"],seealso:["atan","sin","cos"]}},function(e,t){e.exports={name:"tanh",category:"Trigonometry",syntax:["tanh(x)"],description:"Compute the hyperbolic tangent of x in radians.",examples:["tanh(0.5)","sinh(0.5) / cosh(0.5)"],seealso:["sinh","cosh"]}},function(e,t){e.exports={name:"to",category:"Units",syntax:["x to unit","to(x, unit)"],description:"Change the unit of a value.",examples:["5 inch to cm","3.2kg to g","16 bytes in bits"],seealso:[]}},function(e,t){e.exports={name:"clone",category:"Utils",syntax:["clone(x)"],description:"Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",examples:["clone(3.5)","clone(2 - 4i)","clone(45 deg)","clone([1, 2; 3, 4])",'clone("hello world")'],seealso:[]}},function(e,t){e.exports={name:"map",category:"Utils",syntax:["map(x, callback)"],description:"Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",examples:["map([1, 2, 3], function(val) { return value * value })"],seealso:["filter","forEach"]}},function(e,t){e.exports={name:"partitionSelect",category:"Utils",syntax:["partitionSelect(x, k)","partitionSelect(x, k, compare)"],description:"Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",examples:["partitionSelect([5, 10, 1], 2)",'partitionSelect(["C", "B", "A", "D"], 1)'],seealso:["sort"]}},function(e,t){e.exports={name:"filter",category:"Utils",syntax:["filter(x, test)"],description:"Filter items in a matrix.",examples:["isPositive(x) = x > 0","filter([6, -2, -1, 4, 3], isPositive)","filter([6, -2, 0, 1, 0], x != 0)"],seealso:["sort","map","forEach"]}},function(e,t){e.exports={name:"forEach",category:"Utils",syntax:["forEach(x, callback)"],description:"Iterates over all elements of a matrix/array, and executes the given callback function.",examples:["forEach([1, 2, 3], function(val) { console.log(val) })"],seealso:["map","sort","filter"]}},function(e,t){e.exports={name:"format",category:"Utils",syntax:["format(value)","format(value, precision)"],description:"Format a value of any type as string.",examples:["format(2.3)","format(3 - 4i)","format([])","format(pi, 3)"],seealso:["print"]}},function(e,t){e.exports={name:"isInteger",category:"Utils",syntax:["isInteger(x)"],description:"Test whether a value is an integer number.",examples:["isInteger(2)","isInteger(3.5)","isInteger([3, 0.5, -2])"],seealso:["isNegative","isNumeric","isPositive","isZero"]}},function(e,t){e.exports={name:"isNegative",category:"Utils",syntax:["isNegative(x)"],description:"Test whether a value is negative: smaller than zero.",examples:["isNegative(2)","isNegative(0)","isNegative(-4)","isNegative([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isPositive","isZero"]}},function(e,t){e.exports={name:"isNumeric",category:"Utils",syntax:["isNumeric(x)"],description:"Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",examples:["isNumeric(2)","isNumeric(0)","isNumeric(bignumber(500))","isNumeric(fraction(0.125))",'isNumeric("3")',"isNumeric(2 + 3i)",'isNumeric([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive"]}},function(e,t){e.exports={name:"isPositive",category:"Utils",syntax:["isPositive(x)"],description:"Test whether a value is positive: larger than zero.",examples:["isPositive(2)","isPositive(0)","isPositive(-4)","isPositive([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isNegative","isZero"]}},function(e,t){e.exports={name:"isZero",category:"Utils",syntax:["isZero(x)"],description:"Test whether a value is zero.",examples:["isZero(2)","isZero(0)","isZero(-4)","isZero([3, 0, -2, 0])"],seealso:["isInteger","isNumeric","isNegative","isPositive"]}},function(e,t){e.exports={name:"import",category:"Utils",syntax:["import(string)"],description:"Import functions from a file.",examples:['import("numbers")','import("./mylib.js")'],seealso:[]}},function(e,t){e.exports={name:"sort",category:"Utils",syntax:["sort(x)","sort(x, compare)"],description:'Sort the items in a matrix. Compare can be a string "asc" or "desc", or a custom sort function.',examples:["sort([5, 10, 1])",'sort(["C", "B", "A", "D"])',"sortByLength(a, b) = size(a)[1] - size(b)[1]",'sort(["Langdon", "Tom", "Sara"], sortByLength)'],seealso:["map","filter","forEach"]}},function(e,t){e.exports={name:"typeof",category:"Utils",syntax:["typeof(x)"],description:"Get the type of a variable.",examples:["typeof(3.5)","typeof(2 - 4i)","typeof(45 deg)",'typeof("hello world")'],seealso:[]}},function(e,t,r){e.exports=[r(268),r(286),r(287),r(288),r(289)]},function(e,t,r){"use strict";var i=r(19);t.name="compile",t.factory=function(e,t,n,a){var o=n(r(269));return a("compile",{string:function(e){return o(e).compile()},"Array | Matrix":function(e){return i(e,function(e){return o(e).compile()})}})}},function(e,t,r){"use strict";var i=r(11),a=r(19);t.name="parse",t.path="expression",t.factory=function(e,t,n,o){function c(){ve++,de=ge.charAt(ve)}function f(){return ge.charAt(ve+1)}function p(){for(xe=le.NULL,ye="";" "==de||"\t"==de||"\n"==de&&be;)c();if("#"==de)for(;"\n"!=de&&""!=de;)c();if(""==de)return xe=le.DELIMITER;if("\n"==de&&!be)return xe=le.DELIMITER,ye=de,c();var e=de+f(),t=e+ge.charAt(ve+2);if(3==t.length&&pe[t])return xe=le.DELIMITER,ye=t,c(),c(),c();if(2==e.length&&pe[e])return xe=le.DELIMITER,ye=e,c(),c();if(pe[de])return xe=le.DELIMITER,ye=de,c();if(!function(e){return"0"<=e&&e<="9"||"."==e}(de)){if(v()){for(;v()||y(de);)ye+=de,c();return xe=me[ye]?le.DELIMITER:le.SYMBOL}for(xe=le.UNKNOWN;""!=de;)ye+=de,c();throw X('Syntax error in part "'+ye+'"')}if(xe=le.NUMBER,"."==de)ye+=de,c(),y(de)||(xe=le.UNKNOWN);else{for(;y(de);)ye+=de,c();"."==de&&(ye+=de,c())}for(;y(de);)ye+=de,c();if(e=f(),("E"==de||"e"==de)&&(y(e)||"-"==e||"+"==e))for(ye+=de,c(),"+"!=de&&"-"!=de||(ye+=de,c()),y(de)||(xe=le.UNKNOWN);y(de);)ye+=de,c()}function m(){for(;p(),"\n"==ye;);}function h(){be++}function g(){be--}function v(){function n(e,t){return/^[\uD835]$/.test(e)&&/^[\uDC00-\uDFFF]$/.test(t)&&/^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(t)}var e=ge.charAt(ve-1),t=ge.charAt(ve+1);return/^[a-zA-Z_\u00C0-\u02AF\u0370-\u03FF]$/.test(de)||n(de,t)||n(e,de)}function y(e){return"0"<=e&&e<="9"}function x(){ve=0,de=ge.charAt(0),be=0,we=null,p();var e=function(){var e,t,r=[];if(""==ye)return new re("undefined","undefined");for("\n"!=ye&&";"!=ye&&(e=w());"\n"==ye||";"==ye;)0==r.length&&e&&(t=";"!=ye,r.push({node:e,visible:t})),p(),"\n"!=ye&&";"!=ye&&""!=ye&&(e=w(),t=";"!=ye,r.push({node:e,visible:t}));return 0<r.length?new ee(r):e}();if(""!=ye)throw xe==le.DELIMITER?J("Unexpected operator "+ye):X('Unexpected part "'+ye+'"');return e}function w(){if(xe==le.SYMBOL&&"function"==ye)throw X('Deprecated keyword "function". Functions can now be assigned without it, like "f(x) = x^2".');return N()}function N(){var e,t,r,n,i=E();if("="!=ye)return i;if(i&&i.isSymbolNode)return e=i.name,m(),r=N(),new K(e,r);if(i&&i.isIndexNode)return m(),r=N(),new fe(i,r);if(i&&i.isFunctionNode&&(n=!0,t=[],e=i.name,i.args.forEach(function(e,r){e&&e.isSymbolNode?t[r]=e.name:n=!1}),n))return m(),r=N(),new ne(e,t,r);throw X("Invalid left hand side of assignment operator =")}function E(){for(var e=M();"?"==ye;){var t=we,r=(we=be,m(),e),n=M();if(":"!=ye)throw X("False part of conditional expression expected");we=null,m();var i=E(),e=new te(r,n,i);we=t}return e}function M(){for(var e=A();"or"==ye;)m(),e=new ae("or","or",[e,A()]);return e}function A(){for(var e=_();"xor"==ye;)m(),e=new ae("xor","xor",[e,_()]);return e}function _(){for(var e=O();"and"==ye;)m(),e=new ae("and","and",[e,O()]);return e}function O(){for(var e=T();"|"==ye;)m(),e=new ae("|","bitOr",[e,T()]);return e}function T(){for(var e=C();"^|"==ye;)m(),e=new ae("^|","bitXor",[e,C()]);return e}function C(){for(var e=S();"&"==ye;)m(),e=new ae("&","bitAnd",[e,S()]);return e}function S(){for(var r,n,i,e=z(),t={"==":"equal","!=":"unequal","<":"smaller",">":"larger","<=":"smallerEq",">=":"largerEq"};ye in t;)n=t[r=ye],m(),i=[e,z()],e=new ae(r,n,i);return e}function z(){for(var r,n,i,e=B(),t={"<<":"leftShift",">>":"rightArithShift",">>>":"rightLogShift"};ye in t;)n=t[r=ye],m(),i=[e,B()],e=new ae(r,n,i);return e}function B(){for(var r,n,i,e=k(),t={to:"to",in:"to"};ye in t;)n=t[r=ye],m(),i=[e,k()],e=new ae(r,n,i);return e}function k(){var t=[],e=":"==ye?new re("1","number"):I();if(":"==ye&&we!==be){for(t.push(e);":"==ye&&t.length<3;)m(),t.push(")"==ye||"]"==ye||","==ye||""==ye?new ce("end"):I());e=3==t.length?new ue(t[0],t[2],t[1]):new ue(t[0],t[1])}return e}function I(){for(var r,n,i,e=R(),t={"+":"add","-":"subtract"};ye in t;)n=t[r=ye],m(),i=[e,R()],e=new ae(r,n,i);return e}function R(){for(var n,i,e=P(),t=e,r={"*":"multiply",".*":"dotMultiply","/":"divide","./":"dotDivide","%":"mod",mod:"mod"};;)if(ye in r)i=r[n=ye],m(),t=P(),e=new ae(n,i,[e,t]);else{if(!(xe==le.SYMBOL||"in"==ye&&e&&e.isConstantNode||xe==le.NUMBER&&!t.isConstantNode||"("==ye||"["==ye))break;t=P(),e=new ae("*","multiply",[e,t])}return e}function P(){var e,t,r={"-":"unaryMinus","+":"unaryPlus","~":"bitNot",not:"not"}[ye];return r?(e=ye,m(),t=[P()],new ae(e,r,t)):function(){var e,t,r,n;return e=function(){var e,t,r,n;for(e=function(){var e,t=[];if(xe==le.SYMBOL&&he[ye]){if(e=he[ye],p(),"("==ye){if(t=[],h(),p(),")"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if(")"!=ye)throw X("Parenthesis ) expected");g(),p()}return new e(t)}return function(){var t;return xe==le.SYMBOL||xe==le.DELIMITER&&ye in me?(t=ye,p(),$(function(e){var t;if("("!=ye)return new ce(e);if(t=[],h(),p(),")"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if(")"!=ye)throw X("Parenthesis ) expected");return g(),p(),new se(e,t)}(t))):function(){var t,r;if('"'!=ye)return function(){var e,t,r,n;if("["!=ye)return function(){var e;return xe==le.NUMBER?(e=ye,p(),new re(e,"number")):function(){var e;if("("!=ye)throw X(""==ye?"Unexpected end of expression":"Value expected");if(h(),p(),e=N(),")"!=ye)throw X("Parenthesis ) expected");return g(),p(),new oe(e)}()}();if(h(),p(),"]"!=ye){var i=H();if(";"==ye){for(r=1,t=[i];";"==ye;)p(),t[r]=H(),r++;if("]"!=ye)throw X("End of matrix ] expected");g(),p(),n=t[0].nodes.length;for(var a=1;a<r;a++)if(t[a].nodes.length!=n)throw J("Column dimensions mismatch ("+t[a].nodes.length+" != "+n+")");e=new Q(t)}else{if("]"!=ye)throw X("End of matrix ] expected");g(),p(),e=i}}else g(),p(),e=new Q([]);return e}();for(r=t="";""!=de&&('"'!=de||"\\"==r);)t+=de,r=de,c();if(p(),'"'!=ye)throw X('End of string " expected');return p(),$(new re(t,"string"))}()}()}(),t={"!":"factorial","'":"transpose"};ye in t;)n=t[r=ye],p(),e=new ae(r,n,[e]);return e}(),"^"!=ye&&".^"!=ye||(r="^"==(t=ye)?"pow":"dotPow",m(),n=[e,P()],e=new ae(t,r,n)),e}()}function $(e){for(var t;"["==ye;){if(t=[],h(),p(),"]"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if("]"!=ye)throw X("Parenthesis ] expected");g(),p(),e=new ie(e,t)}return e}function H(){for(var e=[N()],t=1;","==ye;)p(),e[t]=N(),t++;return new Q(e)}function W(){return ve-ye.length+1}function X(e){var t=W(),e=new SyntaxError(e+" (char "+t+")");return e.char=t,e}function J(e){var t=W(),e=new Error(e+" (char "+t+")");return e.char=t,e}var Q=n(r(270)),K=n(r(273)),ee=n(r(275)),te=n(r(276)),re=n(r(277)),ne=n(r(278)),ie=n(r(279)),ae=n(r(282)),oe=n(r(284)),se=n(r(283)),ue=n(r(280)),ce=n(r(281)),fe=n(r(285)),le={NULL:0,DELIMITER:1,NUMBER:2,SYMBOL:3,UNKNOWN:4},pe={",":!0,"(":!0,")":!0,"[":!0,"]":!0,'"':!0,";":!0,"+":!0,"-":!0,"*":!0,".*":!0,"/":!0,"./":!0,"%":!0,"^":!0,".^":!0,"~":!0,"!":!0,"&":!0,"|":!0,"^|":!0,"'":!0,"=":!0,":":!0,"?":!0,"==":!0,"!=":!0,"<":!0,">":!0,"<=":!0,">=":!0,"<<":!0,">>":!0,">>>":!0},me={mod:!0,to:!0,in:!0,and:!0,xor:!0,or:!0,not:!0},he={},ge="",ve=0,de="",ye="",xe=le.NULL,be=0,we=null;return function(t,r){if(1!=arguments.length&&2!=arguments.length)throw new i("parse",arguments.length,1,2);if(he=r&&r.nodes?r.nodes:{},"string"==typeof t)return ge=t,x();if(Array.isArray(t)||t instanceof e.Matrix)return a(t,function(e){if("string"!=typeof e)throw new TypeError("String expected");return ge=e,x()});throw new TypeError("String or matrix expected")}}},function(e,t,r){"use strict";var i=r(23);t.name="ArrayNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(this.nodes=e||[],!Array.isArray(this.nodes)||!this.nodes.every(function(e){return e&&e.isNode}))throw new TypeError("Array containing Nodes expected")}return n=n(r(271)),(o.prototype=new n).type="ArrayNode",o.prototype.isArrayNode=!0,o.prototype._compile=function(e,t){var r="array"!==e.math.config().matrix,n=this.nodes.map(function(r){return r._compile(e,t)});return(r?"math.matrix([":"[")+n.join(",")+(r?"])":"]")},o.prototype.forEach=function(e){for(var t=0;t<this.nodes.length;t++)e(this.nodes[t],"nodes["+t+"]",this)},o.prototype.map=function(e){for(var t=[],r=0;r<this.nodes.length;r++)t[r]=this._ifNode(e(this.nodes[r],"nodes["+r+"]",this));return new o(t)},o.prototype.clone=function(){return new o(this.nodes.slice(0))},o.prototype._toString=function(e){return i.format(this.nodes)},o.prototype._toTex=function(e){var t="\\begin{bmatrix}";return this.nodes.forEach(function(r){t=t+(r.nodes?r.nodes.map(function(t){return t.toTex(e)}).join("&"):r.toTex(e))+"\\\\"}),t+="\\end{bmatrix}"},o}},function(e,t,r){"use strict";var i=r(272);r(3).extend,t.name="Node",t.path="expression.node",t.math=!0,t.factory=function(e,t,r,n,a){function o(){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator")}function s(e){for(var t in e)if(e.hasOwnProperty(t)&&t in i)throw new Error('Scope contains an illegal symbol, "'+t+'" is a reserved keyword')}return o.prototype.eval=function(e){return this.compile().eval(e)},o.prototype.type="Node",o.prototype.isNode=!0,o.prototype.compile=function(){if(0<arguments.length)throw new Error("Calling compile(math) is deprecated. Call the function as compile() instead.");var e={math:a.expression.transform,args:{},_validateScope:s},r=this._compile(e,{}),r=Object.keys(e).map(function(e){return"    var "+e+' = defs["'+e+'"];'}).join(" ")+'return {  "eval": function (scope) {    if (scope) _validateScope(scope);    scope = scope || {};    return '+r+";  }};";return new Function("defs",r)(e)},o.prototype._compile=function(e,t){throw new Error("Cannot compile a Node interface")},o.prototype.forEach=function(e){throw new Error("Cannot run forEach on a Node interface")},o.prototype.map=function(e){throw new Error("Cannot run map on a Node interface")},o.prototype._ifNode=function(e){if(e&&e.isNode)return e;throw new TypeError("Callback function must return a Node")},o.prototype.traverse=function(e){e(this,null,null),function t(e,r){e.forEach(function(e,n,i){r(e,n,i),t(e,r)})}(this,e)},o.prototype.transform=function(e){return function t(e,r){return e.map(function(e,n,i){return t(r(e,n,i),r)})}(e(this,null,null),e)},o.prototype.filter=function(e){var t=[];return this.traverse(function(r,n,i){e(r,n,i)&&t.push(r)}),t},o.prototype.find=function(){throw new Error("Function Node.find is deprecated. Use Node.filter instead.")},o.prototype.match=function(){throw new Error("Function Node.match is deprecated. See functions Node.filter, Node.transform, Node.traverse.")},o.prototype.clone=function(){throw new Error("Cannot clone a Node interface")},o.prototype.toString=function(e){var t;if(e&&"object"==typeof e)switch(typeof e.handler){case"object":case"undefined":break;case"function":t=e.handler(this,e);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==t?t:this._toString(e)},o.prototype._toString=function(){throw new Error("_toString not implemented for "+this.type)},o.prototype.toTex=function(e){var t;if(e&&"object"==typeof e)switch(typeof e.handler){case"object":case"undefined":break;case"function":t=e.handler(this,e);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==t?t:this._toTex(e)},o.prototype._toTex=function(e){throw new Error("_toTex not implemented for "+this.type)},o.prototype.getIdentifier=function(){return this.type},o.prototype.getContent=function(){return this},o}},function(e,t){"use strict";e.exports={end:!0}},function(e,t,r){"use strict";var i=r(29);t.name="AssignmentNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');if(!t||!t.isNode)throw new TypeError('Node expected for parameter "expr"');if(e in c)throw new Error('Illegal symbol name, "'+e+'" is a reserved keyword');this.name=e,this.expr=t}function s(e,t){var r=f.getPrecedence(e,t),e=f.getPrecedence(e.expr,t);return"all"===t||null!==e&&e<=r}var u=n(r(271)),c=(n(r(270)),r(272)),f=r(274);return(o.prototype=new u).type="AssignmentNode",o.prototype.isAssignmentNode=!0,o.prototype._compile=function(e,t){return'scope["'+this.name+'"] = '+this.expr._compile(e,t)},o.prototype.forEach=function(e){e(this.expr,"expr",this)},o.prototype.map=function(e){return new o(this.name,this._ifNode(e(this.expr,"expr",this)))},o.prototype.clone=function(){return new o(this.name,this.expr)},o.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toString(e);return s(this,t)&&(e="("+e+")"),this.name+" = "+e},o.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toTex(e);return s(this,t)&&(e="\\left("+e+"\\right)"),i.toSymbol(this.name)+":="+e},o}},function(e,t){"use strict";function r(e,t){for(var r=e,n=(r="keep"!==t?e.getContent():r).getIdentifier(),i=0;i<a.length;i++)if(n in a[i])return i;return null}var a=[{AssignmentNode:{},FunctionAssignmentNode:{}},{ConditionalNode:{latexLeftParens:!1,latexRightParens:!1,latexParens:!1}},{"OperatorNode:or":{associativity:"left",associativeWith:[]}},{"OperatorNode:xor":{associativity:"left",associativeWith:[]}},{"OperatorNode:and":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitOr":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitXor":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitAnd":{associativity:"left",associativeWith:[]}},{"OperatorNode:equal":{associativity:"left",associativeWith:[]},"OperatorNode:unequal":{associativity:"left",associativeWith:[]},"OperatorNode:smaller":{associativity:"left",associativeWith:[]},"OperatorNode:larger":{associativity:"left",associativeWith:[]},"OperatorNode:smallerEq":{associativity:"left",associativeWith:[]},"OperatorNode:largerEq":{associativity:"left",associativeWith:[]}},{"OperatorNode:leftShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightArithShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightLogShift":{associativity:"left",associativeWith:[]}},{"OperatorNode:to":{associativity:"left",associativeWith:[]}},{RangeNode:{}},{"OperatorNode:add":{associativity:"left",associativeWith:["OperatorNode:add","OperatorNode:subtract"]},"OperatorNode:subtract":{associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]},"OperatorNode:divide":{associativity:"left",associativeWith:[],latexLeftParens:!1,latexRightParens:!1,latexParens:!1},"OperatorNode:dotMultiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:doDivide"]},"OperatorNode:dotDivide":{associativity:"left",associativeWith:[]},"OperatorNode:mod":{associativity:"left",associativeWith:[]}},{"OperatorNode:unaryPlus":{associativity:"right"},"OperatorNode:unaryMinus":{associativity:"right"},"OperatorNode:bitNot":{associativity:"right"},"OperatorNode:not":{associativity:"right"}},{"OperatorNode:pow":{associativity:"right",associativeWith:[],latexRightParens:!1},"OperatorNode:dotPow":{associativity:"right",associativeWith:[]}},{"OperatorNode:factorial":{associativity:"left"}},{"OperatorNode:transpose":{associativity:"left"}}];e.exports.properties=a,e.exports.getPrecedence=r,e.exports.getAssociativity=function(e,t){var n=e,e=(n="keep"!==t?e.getContent():n).getIdentifier(),n=r(n,t);if(null!==n){t=a[n][e];if(t.hasOwnProperty("associativity")){if("left"===t.associativity)return"left";if("right"===t.associativity)return"right";throw Error("'"+e+"' has the invalid associativity '"+t.associativity+"'.")}}return null},e.exports.isAssociativeWith=function(e,t,n){var i=e,o=t,e=("keep"!==n&&(i=e.getContent(),o=t.getContent()),i.getIdentifier()),u=o.getIdentifier(),t=r(i,n);if(null!==t){var f=a[t][e];if(f.hasOwnProperty("associativeWith")&&f.associativeWith instanceof Array){for(var l=0;l<f.associativeWith.length;l++)if(f.associativeWith[l]===u)return!0;return!1}}return null}},function(e,t,r){"use strict";t.name="BlockNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!Array.isArray(e))throw new Error("Array expected");this.blocks=e.map(function(e){var t=e&&e.node,e=!e||void 0===e.visible||e.visible;if(!t||!t.isNode)throw new TypeError('Property "node" must be a Node');if("boolean"!=typeof e)throw new TypeError('Property "visible" must be a boolean');return{node:t,visible:e}})}var o=n(r(271)),s=n(r(70));return(a.prototype=new o).type="BlockNode",a.prototype.isBlockNode=!0,a.prototype._compile=function(e,t){return e.ResultSet=s,"(function () {var results = [];"+this.blocks.map(function(r){var n=r.node._compile(e,t);return r.visible?"results.push("+n+");":n+";"}).join("")+"return new ResultSet(results);})()"},a.prototype.forEach=function(e){for(var t=0;t<this.blocks.length;t++)e(this.blocks[t].node,"blocks["+t+"].node",this)},a.prototype.map=function(e){for(var t=[],r=0;r<this.blocks.length;r++){var n=this.blocks[r],i=this._ifNode(e(n.node,"blocks["+r+"].node",this));t[r]={node:i,visible:n.visible}}return new a(t)},a.prototype.clone=function(){return new a(this.blocks.map(function(e){return{node:e.node,visible:e.visible}}))},a.prototype._toString=function(e){return this.blocks.map(function(t){return t.node.toString(e)+(t.visible?"":";")}).join("\n")},a.prototype._toTex=function(e){return this.blocks.map(function(t){return t.node.toTex(e)+(t.visible?"":";")}).join("\\;\\;\n")},a}},function(e,t,r){"use strict";r(29);var i=r(274);t.name="ConditionalNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t,r){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError("Parameter condition must be a Node");if(!t||!t.isNode)throw new TypeError("Parameter trueExpr must be a Node");if(!r||!r.isNode)throw new TypeError("Parameter falseExpr must be a Node");this.condition=e,this.trueExpr=t,this.falseExpr=r}return n=n(r(271)),(o.prototype=new n).type="ConditionalNode",o.prototype.isConditionalNode=!0,o.prototype._compile=function(e,t){return e.testCondition=function(t){if("number"==typeof t||"boolean"==typeof t||"string"==typeof t)return!!t;if(t){if(!0===t.isBigNumber)return!t.isZero();if(!0===t.isComplex)return!(!t.re&&!t.im);if(!0===t.isUnit)return!!t.value}if(null==t)return!1;throw new TypeError('Unsupported type of condition "'+e.math.typeof(t)+'"')},"testCondition("+this.condition._compile(e,t)+") ? ( "+this.trueExpr._compile(e,t)+") : ( "+this.falseExpr._compile(e,t)+")"},o.prototype.forEach=function(e){e(this.condition,"condition",this),e(this.trueExpr,"trueExpr",this),e(this.falseExpr,"falseExpr",this)},o.prototype.map=function(e){return new o(this._ifNode(e(this.condition,"condition",this)),this._ifNode(e(this.trueExpr,"trueExpr",this)),this._ifNode(e(this.falseExpr,"falseExpr",this)))},o.prototype.clone=function(){return new o(this.condition,this.trueExpr,this.falseExpr)},o.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=i.getPrecedence(this,t),n=this.condition.toString(e),a=i.getPrecedence(this.condition,t),a=(("all"===t||"OperatorNode"===this.condition.type||null!==a&&a<=r)&&(n="("+n+")"),this.trueExpr.toString(e)),s=i.getPrecedence(this.trueExpr,t),s=(("all"===t||"OperatorNode"===this.trueExpr.type||null!==s&&s<=r)&&(a="("+a+")"),this.falseExpr.toString(e)),e=i.getPrecedence(this.falseExpr,t);return n+" ? "+a+" : "+(s="all"===t||"OperatorNode"===this.falseExpr.type||null!==e&&e<=r?"("+s+")":s)},o.prototype._toTex=function(e){return"\\begin{cases} {"+this.trueExpr.toTex(e)+"}, &\\quad{\\text{if }\\;"+this.condition.toTex(e)+"}\\\\{"+this.falseExpr.toTex(e)+"}, &\\quad{\\text{otherwise}}\\end{cases}"},o}},function(e,t,r){"use strict";var i=r(40).type;t.name="ConstantNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(t){if("string"!=typeof t)throw new TypeError('String expected for parameter "valueType"');if("string"!=typeof e)throw new TypeError('String expected for parameter "value"');this.value=e,this.valueType=t}else this.value=e+"",this.valueType=i(e);if(!u[this.valueType])throw new TypeError('Unsupported type of value "'+this.valueType+'"')}var n=n(r(271)),u={number:!0,string:!0,boolean:!0,undefined:!0,null:!0};return(o.prototype=new n).type="ConstantNode",o.prototype.isConstantNode=!0,o.prototype._compile=function(e,t){switch(this.valueType){case"number":var r=e.math.config().number;return"bignumber"===r?'math.bignumber("'+this.value+'")':"fraction"===r?'math.fraction("'+this.value+'")':this.value.replace(/^(0*)[0-9]/,function(e,t){return e.substring(t.length)});case"string":return'"'+this.value+'"';case"boolean":case"undefined":case"null":return this.value;default:throw new TypeError('Unsupported type of constant "'+this.valueType+'"')}},o.prototype.forEach=function(e){},o.prototype.map=function(e){return this.clone()},o.prototype.clone=function(){return new o(this.value,this.valueType)},o.prototype._toString=function(e){return"string"!==this.valueType?this.value:'"'+this.value+'"'},o.prototype._toTex=function(e){var t,r=this.value;switch(this.valueType){case"string":return'\\mathtt{"'+r+'"}';case"number":return-1!==(t=r.toLowerCase().indexOf("e"))?r.substring(0,t)+"\\cdot10^{"+r.substring(t+1)+"}":r;default:return r}},o}},function(e,t,r){"use strict";function n(e){return"string"==typeof e}var a=r(272),o=r(29),s=r(274);t.name="FunctionAssignmentNode",t.path="expression.node",t.factory=function(e,t,i,u){function c(e,t,r){if(!(this instanceof c))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');if(!Array.isArray(t)||!t.every(n))throw new TypeError('Array containing strings expected for parameter "params"');if(!r||!r.isNode)throw new TypeError('Node expected for parameter "expr"');if(e in a)throw new Error('Illegal function name, "'+e+'" is a reserved keyword');this.name=e,this.params=t,this.expr=r}function f(e,t){var r=s.getPrecedence(e,t),e=s.getPrecedence(e.expr,t);return"all"===t||null!==e&&e<=r}return i=i(r(271)),(c.prototype=new i).type="FunctionAssignmentNode",c.prototype.isFunctionAssignmentNode=!0,c.prototype._compile=function(e,t){var r=Object.create(t),t=(this.params.forEach(function(e){r[e]=!0}),this.expr._compile(e,r));return'scope["'+this.name+'"] =   (function () {    var fn = function '+this.name+"("+this.params.join(",")+") {      if (arguments.length != "+this.params.length+') {        throw new SyntaxError("Wrong number of arguments in function '+this.name+' (" + arguments.length + " provided, '+this.params.length+' expected)");      }      return '+t+'    };    fn.syntax = "'+this.name+"("+this.params.join(", ")+')";    return fn;  })()'},c.prototype.forEach=function(e){e(this.expr,"expr",this)},c.prototype.map=function(e){e=this._ifNode(e(this.expr,"expr",this));return new c(this.name,this.params.slice(0),e)},c.prototype.clone=function(){return new c(this.name,this.params.slice(0),this.expr)},c.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toString(e);return f(this,t)&&(e="("+e+")"),"function "+this.name+"("+this.params.join(", ")+") = "+e},c.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toTex(e);return f(this,t)&&(e="\\left("+e+"\\right)"),"\\mathrm{"+this.name+"}\\left("+this.params.map(o.toSymbol).join(",")+"\\right):="+e},c}},function(e,t,r){"use strict";t.name="IndexNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError('Node expected for parameter "object"');if(!c(t)||!t.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "ranges"');this.object=e,this.ranges=t}function o(e){switch(e.object.type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":return;default:return 1}}var s=n(r(271)),u=(n(r(280)),n(r(281)),n(r(65))),c=Array.isArray;return(a.prototype=new s).type="IndexNode",a.prototype.isIndexNode=!0,a.prototype._compile=function(e,t){return this.compileSubset(e,t)},a.prototype.compileSubset=function(e,t,r){function n(e){return e&&e.isSymbolNode&&"end"==e.name}var i=!1,a=this.ranges.map(function(e){e=0<e.filter(n).length;return i=e||i,e}),o=(e.range=function(e,t,r){return new u(e&&!0===e.isBigNumber?e.toNumber():e,t&&!0===t.isBigNumber?t.toNumber():t,r&&!0===r.isBigNumber?r.toNumber():r)},Object.create(t)),t=this.ranges.map(function(t,r){var n=a[r];return t&&t.isRangeNode?n?(o.end=!0,"(function () {  var end = size["+r+"];  return range(    "+t.start._compile(e,o)+",     "+t.end._compile(e,o)+",     "+(t.step?t.step._compile(e,o):"1")+"  );})()"):"range("+t.start._compile(e,o)+", "+t.end._compile(e,o)+", "+(t.step?t.step._compile(e,o):"1")+")":n?(o.end=!0,"(function () {  var end = size["+r+"];  return "+t._compile(e,o)+";})()"):t._compile(e,o)});return i?"(function () {  var obj = "+this.object._compile(e,o)+";  var size = math.size(obj).valueOf();  return math.subset(    obj,     math.index("+t.join(", ")+")    "+(r?", "+r:"")+"  );})()":"math.subset("+this.object._compile(e,o)+",math.index("+t.join(", ")+")"+(r?", "+r:"")+")"},a.prototype.forEach=function(e){e(this.object,"object",this);for(var t=0;t<this.ranges.length;t++)e(this.ranges[t],"ranges["+t+"]",this)},a.prototype.map=function(e){for(var t=this._ifNode(e(this.object,"object",this)),r=[],n=0;n<this.ranges.length;n++)r[n]=this._ifNode(e(this.ranges[n],"ranges["+n+"]",this));return new a(t,r)},a.prototype.objectName=function(){return this.object.name},a.prototype.clone=function(){return new a(this.object,this.ranges.slice(0))},a.prototype._toString=function(e){e=this.object.toString(e);return(e=o(this)?"("+e+"(":e)+"["+this.ranges.join(", ")+"]"},a.prototype._toTex=function(e){var t=this.object.toTex(e),r=(o(this)&&(t="\\left("+t+"\\right)"),this.ranges.map(function(t){return t.toTex(e)}));return t+"_{"+r.join(",")+"}"},a}},function(e,t,r){"use strict";var i=r(274);t.name="RangeNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t,r){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError("Node expected");if(!t||!t.isNode)throw new TypeError("Node expected");if(r&&(!r||!r.isNode))throw new TypeError("Node expected");if(3<arguments.length)throw new Error("Too many arguments");this.start=e,this.end=t,this.step=r||null}function s(e,t){var r=i.getPrecedence(e,t),n={},a=i.getPrecedence(e.start,t),a=(n.start=null!==a&&a<=r||"all"===t,e.step&&(a=i.getPrecedence(e.step,t),n.step=null!==a&&a<=r||"all"===t),i.getPrecedence(e.end,t));return n.end=null!==a&&a<=r||"all"===t,n}return n=n(r(271)),(o.prototype=new n).type="RangeNode",o.prototype.isRangeNode=!0,o.prototype._compile=function(e,t){return"math.range("+this.start._compile(e,t)+", "+this.end._compile(e,t)+(this.step?", "+this.step._compile(e,t):"")+")"},o.prototype.forEach=function(e){e(this.start,"start",this),e(this.end,"end",this),this.step&&e(this.step,"step",this)},o.prototype.map=function(e){return new o(this._ifNode(e(this.start,"start",this)),this._ifNode(e(this.end,"end",this)),this.step&&this._ifNode(e(this.step,"step",this)))},o.prototype.clone=function(){return new o(this.start,this.end,this.step&&this.step)},o.prototype._toString=function(e){var n=s(this,e&&e.parenthesis?e.parenthesis:"keep"),i=this.start.toString(e),i=i=n.start?"("+i+")":i,a=(this.step&&(a=this.step.toString(e),i+=":"+(a=n.step?"("+a+")":a)),this.end.toString(e));return i+":"+(a=n.end?"("+a+")":a)},o.prototype._toTex=function(e){var r=s(this,e&&e.parenthesis?e.parenthesis:"keep"),n=this.start.toTex(e),i=(r.start&&(n="\\left("+n+"\\right)"),this.step&&(i=this.step.toTex(e),n+=":"+(i=r.step?"\\left("+i+"\\right)":i)),this.end.toTex(e));return n+":"+(i=r.end?"\\left("+i+"\\right)":i)},o}},function(e,t,r){"use strict";var i=r(29);t.name="SymbolNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,a,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');this.name=e}function u(e){throw new Error("Undefined symbol "+e)}var c=n(r(271)),f=n(r(73));return(s.prototype=new c).type="SymbolNode",s.prototype.isSymbolNode=!0,s.prototype._compile=function(e,t){return e.undef=u,e.Unit=f,t[this.name]?this.name:this.name in e.math?'("'+this.name+'" in scope ? scope["'+this.name+'"] : math["'+this.name+'"])':'("'+this.name+'" in scope ? scope["'+this.name+'"] : '+(f.isValuelessUnit(this.name)?'new Unit(null, "'+this.name+'")':'undef("'+this.name+'")')+")"},s.prototype.forEach=function(e){},s.prototype.map=function(e){return this.clone()},s.prototype.clone=function(){return new s(this.name)},s.prototype._toString=function(e){return this.name},s.prototype._toTex=function(e){var t=!1,t=(void 0===o[this.name]&&f.isValuelessUnit(this.name)&&(t=!0),i.toSymbol(this.name,t));return"\\"===t[0]?t:" "+t},s}},function(e,t,r){"use strict";var i=r(29),a=r(274);t.name="OperatorNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,o,s){function u(e,t,r){if(!(this instanceof u))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('string expected for parameter "op"');if("string"!=typeof t)throw new TypeError('string expected for parameter "fn"');if(!Array.isArray(r)||!r.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "args"');this.op=e,this.fn=t,this.args=r||[]}function c(e,t,r,n){var s,i=a.getPrecedence(e,t),o=a.getAssociativity(e,t);if("all"===t||2<r.length)return s=[],r.forEach(function(e){switch(e.getContent().type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":s.push(!1);break;default:s.push(!0)}}),s;switch(r.length){case 0:return[];case 1:var u=a.getPrecedence(r[0],t);if(n&&null!==u){if(f=("keep"===t?(c=r[0].getIdentifier(),e):(c=r[0].getContent().getIdentifier(),e.getContent())).getIdentifier(),!1===a.properties[i][f].latexLeftParens)return[!1];if(!1===a.properties[u][c].latexParens)return[!1]}return null!==u&&u<=i?[!0]:[!1];case 2:var f,d,y,c=a.getPrecedence(r[0],t),u=a.isAssociativeWith(e,r[0],t),u=null!==c&&(c===i&&"right"===o&&!u||c<i),g=a.getPrecedence(r[1],t),v=a.isAssociativeWith(e,r[1],t),v=null!==g&&(g===i&&"left"===o&&!v||g<i);return n&&(y=("keep"===t?(f=e.getIdentifier(),d=e.args[0].getIdentifier(),e.args[1]):(f=e.getContent().getIdentifier(),d=e.args[0].getContent().getIdentifier(),e.args[1].getContent())).getIdentifier(),null!==c&&(!1===a.properties[i][f].latexLeftParens&&(u=!1),!1===a.properties[c][d].latexParens)&&(u=!1),null!==g)&&(!1===a.properties[i][f].latexRightParens&&(v=!1),!1===a.properties[g][y].latexParens)&&(v=!1),[u,v]}}var f=n(r(271));return n(r(277)),n(r(281)),n(r(283)),(u.prototype=new f).type="OperatorNode",u.prototype.isOperatorNode=!0,u.prototype._compile=function(e,t){var r;if(e.math[this.fn])return r=this.args.map(function(r){return r._compile(e,t)}),"math."+this.fn+"("+r.join(", ")+")";throw new Error("Function "+this.fn+' missing in provided namespace "math"')},u.prototype.forEach=function(e){for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},u.prototype.map=function(e){for(var t=[],r=0;r<this.args.length;r++)t[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new u(this.op,this.fn,t)},u.prototype.clone=function(){return new u(this.op,this.fn,this.args.slice(0))},u.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=this.args,n=c(this,t,r,!1);switch(r.length){case 1:var i=a.getAssociativity(this,t),o=r[0].toString(e);return n[0]&&(o="("+o+")"),"right"===i?this.op+o:o+this.op;case 2:i=r[0].toString(e),o=r[1].toString(e);return n[0]&&(i="("+i+")"),n[1]&&(o="("+o+")"),i+" "+this.op+" "+o;default:return this.fn+"("+this.args.join(", ")+")"}},u.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=this.args,n=c(this,t,r,!0),o=void 0===(o=i.operators[this.fn])?this.op:o;switch(r.length){case 1:var s=a.getAssociativity(this,t),u=r[0].toTex(e);return n[0]&&(u="\\left("+u+"\\right)"),"right"===s?o+u:u+o;case 2:var s=r[0],l=s.toTex(e);n[0]&&(l="\\left("+l+"\\right)");var h,m=r[1].toTex(e);switch(n[1]&&(m="\\left("+m+"\\right)"),h=("keep"===t?s:s.getContent()).getIdentifier(),this.getIdentifier()){case"OperatorNode:divide":return o+"{"+l+"}{"+m+"}";case"OperatorNode:pow":switch(l="{"+l+"}",m="{"+m+"}",h){case"ConditionalNode":case"OperatorNode:divide":l="\\left("+l+"\\right)"}}return l+o+m;default:return"\\mathrm{"+this.fn+"}\\left("+r.map(function(t){return t.toTex(e)}).join(",")+"\\right)"}},u.prototype.getIdentifier=function(){return this.type+":"+this.fn},u}},function(e,t,r){"use strict";var i=r(29);t.name="FunctionNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,a,o){function s(e,t){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('string expected for parameter "name"');if(!Array.isArray(t)||!t.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "args"');this.name=e,this.args=t||[]}function u(e,t,r){for(var n,i="",a=new RegExp("\\$(?:\\{([a-z_][a-z_0-9]*)(?:\\[([0-9]+)\\])?\\}|\\$)","ig"),o=0;null!==(n=a.exec(e));)if(i+=e.substring(o,n.index),o=n.index,"$$"===n[0])i+="$",o++;else{o+=n[0].length;var s=t[n[1]];if(!s)throw new ReferenceError("Template: Property "+n[1]+" does not exist.");if(void 0===n[2])switch(typeof s){case"string":i+=s;break;case"object":if(s.isNode)i+=s.toTex(r);else{if(!Array.isArray(s))throw new TypeError("Template: "+n[1]+" has to be a Node, String or array of Nodes");i+=s.map(function(e,t){if(e&&e.isNode)return e.toTex(r);throw new TypeError("Template: "+n[1]+"["+t+"] is not a Node.")}).join(",")}break;default:throw new TypeError("Template: "+n[1]+" has to be a Node, String or array of Nodes")}else{if(!s[n[2]]||!s[n[2]].isNode)throw new TypeError("Template: "+n[1]+"["+n[2]+"] is not a Node.");i+=s[n[2]].toTex(r)}}return i+e.slice(o)}var c=n(r(271)),f=n(r(281)),l=((s.prototype=new c).type="FunctionNode",s.prototype.isFunctionNode=!0,s.prototype._compile=function(e,t){var r=e.math[this.name],r="function"==typeof r&&1==r.rawArgs,i=this.args.map(function(r){return r._compile(e,t)});if(r){for(var a,o=0;a="p"+o,o++,a in e;);return e[a]=this.args,'("'+this.name+'" in scope ? scope["'+this.name+'"]('+i.join(", ")+') : math["'+this.name+'"]('+a+", math, scope))"}return new f(this.name)._compile(e,t)+"("+i.join(", ")+")"},s.prototype.forEach=function(e){for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},s.prototype.map=function(e){for(var t=[],r=0;r<this.args.length;r++)t[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new s(this.name,t)},s.prototype.clone=function(){return new s(this.name,this.args.slice(0))},s.prototype.toString),p=(s.prototype.toString=function(e){var t;return void 0!==(t=e&&"object"==typeof e.handler&&e.handler.hasOwnProperty(this.name)?e.handler[this.name](this,e):t)?t:l.call(this,e)},s.prototype._toString=function(e){return this.name+"("+this.args.join(", ")+")"},s.prototype.toTex);return s.prototype.toTex=function(e){var t;return void 0!==(t=e&&"object"==typeof e.handler&&e.handler.hasOwnProperty(this.name)?e.handler[this.name](this,e):t)?t:p.call(this,e)},s.prototype._toTex=function(e){e&&e.parenthesis&&e.parenthesis;var t,n,r=this.args.map(function(t){return t.toTex(e)});switch(typeof(t=!o[this.name]||"function"!=typeof o[this.name].toTex&&"object"!=typeof o[this.name].toTex&&"string"!=typeof o[this.name].toTex?t:o[this.name].toTex)){case"function":n=t(this,e);break;case"string":n=u(t,this,e);break;case"object":switch(typeof t[r.length]){case"function":n=t[r.length](this,e);break;case"string":n=u(t[r.length],this,e)}}return void 0!==n?n:u(i.defaultTemplate,this,e)},s.prototype.getIdentifier=function(){return this.type+":"+this.name},s}},function(e,t,r){"use strict";t.name="ParenthesisNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError('Node expected for parameter "content"');this.content=e}return n=n(r(271)),(a.prototype=new n).type="ParenthesisNode",a.prototype.isParenthesisNode=!0,a.prototype._compile=function(e,t){return this.content._compile(e,t)},a.prototype.getContent=function(){return this.content.getContent()},a.prototype.forEach=function(e){e(this.content,"content",this)},a.prototype.map=function(e){return new a(e(this.content,"content",this))},a.prototype.clone=function(){return new a(this.content)},a.prototype._toString=function(e){return e&&"keep"!==e.parenthesis?this.content.toString(e):"("+this.content.toString(e)+")"},a.prototype._toTex=function(e){return e&&"keep"!==e.parenthesis?this.content.toTex(e):"\\left("+this.content.toTex(e)+"\\right)"},a}},function(e,t,r){"use strict";t.name="UpdateNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isIndexNode)throw new TypeError('Expected IndexNode for parameter "index"');if(!t||!t.isNode)throw new TypeError('Expected Node for parameter "expr"');this.index=e,this.expr=t}var o=n(r(271));return n(r(279)),(a.prototype=new o).type="UpdateNode",a.prototype.isUpdateNode=!0,a.prototype._compile=function(e,t){return(t[this.index.objectName()]?this.name+" = ":'scope["'+this.index.objectName()+'"]')+" = "+this.index.compileSubset(e,t,this.expr._compile(e,t))},a.prototype.forEach=function(e){e(this.index,"index",this),e(this.expr,"expr",this)},a.prototype.map=function(e){return new a(this._ifNode(e(this.index,"index",this)),this._ifNode(e(this.expr,"expr",this)))},a.prototype.clone=function(){return new a(this.index,this.expr)},a.prototype._toString=function(e){var t=this.expr.toString(e);return e&&"all"===e.parenthesis&&(t="("+t+")"),this.index.toString(e)+" = "+t},a.prototype._toTex=function(e){var t=this.expr.toTex(e);return e&&"all"===e.parenthesis&&(t="\\left("+t+"\\right)"),this.index.toTex(e)+":="+t},a}},function(e,t,r){"use strict";var i=r(19);t.name="eval",t.factory=function(e,t,n,a){var o=n(r(269));return a("compile",{string:function(e){return o(e).compile().eval({})},"string, Object":function(e,t){return o(e).compile().eval(t)},"Array | Matrix":function(e){var t={};return i(e,function(e){return o(e).compile().eval(t)})},"Array | Matrix, Object":function(e,t){return i(e,function(e){return o(e).compile().eval(t)})}})}},function(e,t,r){"use strict";t.math=!0,t.name="help",t.factory=function(e,t,n,i,a){var o=n(r(97));return i("help",{any:function(t){var r,n=t;if("string"!=typeof t)for(r in a)if(a.hasOwnProperty(r)&&t===a[r]){n=r;break}var i=o[n];if(i)return new e.Help(i);throw new Error('No documentation found on "'+n+'"')}})}},function(e,t,r){"use strict";t.name="parse",t.factory=function(e,t,n,i){return n=n(r(269)),i("parse",{"string | Array | Matrix":n,"string | Array | Matrix, Object":n})}},function(e,t,r){"use strict";t.name="parser",t.factory=function(e,t,n,i,a){var o=n(r(290));return i("parser",{"":function(){return new o(a)}})},t.math=!0},function(e,t,r){"use strict";t.name="Parser",t.path="expression",t.factory=function(e,t,n,i,a){function o(){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");this.scope={}}var s=n(r(269));return o.prototype.type="Parser",o.prototype.isParser=!0,o.prototype.parse=function(e){throw new Error("Parser.parse is deprecated. Use math.parse instead.")},o.prototype.compile=function(e){throw new Error("Parser.compile is deprecated. Use math.compile instead.")},o.prototype.eval=function(e){return s(e).compile().eval(this.scope)},o.prototype.get=function(e){return this.scope[e]},o.prototype.set=function(e,t){return this.scope[e]=t},o.prototype.remove=function(e){delete this.scope[e]},o.prototype.clear=function(){for(var e in this.scope)this.scope.hasOwnProperty(e)&&delete this.scope[e]},o},t.math=!0},function(e,t,r){e.exports=[r(270),r(273),r(275),r(276),r(277),r(279),r(278),r(283),r(271),r(282),r(284),r(280),r(281),r(285)]},function(e,t,r){e.exports=[r(293),r(296),r(298),r(300),r(301),r(303),r(308),r(313),r(315),r(317)]},function(e,t,r){"use strict";var i=r(294).transform;t.name="concat",t.path="expression.transform",t.factory=function(e,t,n,a){var o=n(r(295));return a("concat",{"...any":function(e){var t=e.length-1,r=e[t];"number"==typeof r?e[t]=r-1:r&&!0===r.isBigNumber&&(e[t]=r.minus(1));try{return o.apply(null,e)}catch(n){throw i(n)}}})}},function(e,t,r){var n=r(42);t.transform=function(e){return e&&e.isIndexError?new n(e.index+1,e.min+1,e.max+1):e}},function(e,t,r){"use strict";var a=r(3).clone,o=r(6).isInteger,s=r(39),u=r(42),c=r(41);t.name="concat",t.factory=function(e,t,n,f){var l=n(r(50));return(n=f("concat",{"...Array | Matrix | number | BigNumber":function(e){for(var r,n=e.length,f=-1,p=!1,m=[],t=0;t<n;t++){var h=e[t];if(h&&!0===h.isMatrix&&(p=!0),"number"==typeof h||h&&!0===h.isBigNumber){if(t!==n-1)throw new Error("Dimension must be specified as last argument");if(r=f,f=h.valueOf(),!o(f))throw new TypeError("Integer number expected for dimension");if(f<0)throw new u(f);if(0<t&&r<f)throw new u(f,r+1)}else{var h=a(h).valueOf(),v=s.size(h);if(m[t]=h,r=f,f=v.length-1,0<t&&f!=r)throw new c(r+1,f+1)}}if(0==m.length)throw new SyntaxError("At least one matrix expected");for(var d=m.shift();m.length;)d=function i(e,t,r,n){if(n<r){if(e.length!=t.length)throw new c(e.length,t.length);for(var a=[],o=0;o<e.length;o++)a[o]=i(e[o],t[o],r,n+1);return a}return e.concat(t)}(d,m.shift(),f,0);return p?l(d):d},"...string":function(e){return e.join("")}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="filter",t.path="expression.transform",t.factory=function(e,t,n,i){function a(e,t,r){var n;if(e[0]&&(n=e[0].compile().eval(r)),e[1])if(e[1]&&e[1].isSymbolNode)i=e[1].compile().eval(r);else{var a=r||{},r=e[1].filter(function(e){return e&&e.isSymbolNode&&!(e.name in t)&&!(e.name in a)})[0],u=Object.create(a),c=e[1].compile();if(!r)throw new Error("No undefined variable found in filter equation");var f=r.name,i=function(e){return u[f]=e,c.eval(u)}}return o(n,i)}var o=n(r(297));return n(r(281)),a.rawArgs=!0,a}},function(e,t,r){"use strict";function i(e,t){if(1!==o(e).length)throw new Error("Only one dimensional matrices supported");return e.filter(function(e){return t(e)})}function a(e,t){if(1!==o(e).length)throw new Error("Only one dimensional matrices supported");return e.filter(function(e){return t.test(e)})}var o=r(39).size;t.name="filter",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("filter",{"Array, function":i,"Array, RegExp":a,"Matrix, function":function(e,t){return s(i(e.toArray(),t))},"Matrix, RegExp":function(e,t){return s(a(e.toArray(),t))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="forEach",t.path="expression.transform",t.factory=function(e,t,n,i){return n(r(299)),i("forEach",{"Array | Matrix, function":function(e,t){var r=function(n,i){Array.isArray(n)?n.forEach(function(e,t){r(e,i.concat(t+1))}):t(n,i,e)};r(e.valueOf(),[])}})}},function(e,t){"use strict";function n(e,t){function r(n,i){Array.isArray(n)?n.forEach(function(e,t){r(e,i.concat(t))}):t(n,i,e)}r(e,[])}t.name="forEach",t.factory=function(e,t,r,i){return(i=i("forEach",{"Array, function":n,"Matrix, function":function(e,t){return e.forEach(t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",i}},function(e,t,r){"use strict";Array.isArray,t.name="index",t.path="expression.transform",t.factory=function(e,t,n){return n(r(66)),function(){for(var t=[],r=0,n=arguments.length;r<n;r++){var i=arguments[r];if(i&&!0===i.isRange)i.start--,i.end-=0<i.step?0:2;else if(i&&!0===i.isSet)i=i.map(function(e){return e-1});else if(i&&(!0===i.isArray||i.isMatrix))i=i.map(function(e){return e-1});else if("number"==typeof i)i--;else{if(!i||!0!==i.isBigNumber)throw new TypeError("Ranges must be a Number, Range, Array or Matrix");i=i.toNumber()-1}t[r]=i}var a=new e.Index;return e.Index.apply(a,t),a}}},function(e,t,r){"use strict";function i(e,t,r){return function n(e,i){return Array.isArray(e)?e.map(function(e,t){return n(e,i.concat(t+1))}):t(e,i,r)}(e,[])}t.name="map",t.path="expression.transform",t.factory=function(e,t,n,a){n(r(302));var o=n(r(50));return a("max",{"Array, function":function(e,t){return i(e,t,e)},"Matrix, function":function(e,t){return o(i(e.valueOf(),t,e))}})}},function(e,t){"use strict";function n(e,t){function r(n,i){return Array.isArray(n)?n.map(function(e,t){return r(e,i.concat(t))}):t(n,i,e)}return r(e,[])}t.name="map",t.factory=function(e,t,r,i){return(i=i("map",{"Array, function":n,"Matrix, function":function(e,t){return e.map(t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",i}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="max",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(305));return o("max",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t){"use strict";e.exports=function(e){return Array.isArray(e)||e&&!0===e.isMatrix}},function(e,t,r){"use strict";var i=r(306),a=r(307);t.name="max",t.factory=function(e,t,n,o){function s(e,t){return c(e,t)?e:t}function u(e){var t=void 0;if(i(e,function(e){void 0!==t&&!c(e,t)||(t=e)}),void 0===t)throw new Error("Cannot calculate max of an empty array");return t}var c=n(r(62));return(n=o("max",{"Array | Matrix":u,"Array | Matrix, number | BigNumber":function(e,t){return a(e,t.valueOf(),s)},"...":function(){return u(arguments)}})).toTex="\\max\\left(${args}\\right)",n}},function(e,t){"use strict";e.exports=function r(e,t){for(var n=0,i=(e=e&&!0===e.isMatrix?e.valueOf():e).length;n<i;n++){var a=e[n];Array.isArray(a)?r(a,t):t(a)}}},function(e,t,r){"use strict";function n(e,t,r){var a,o,s,u;if(t<=0){if(Array.isArray(e[0])){for(u=function(e){var t,r,n=e.length,i=e[0].length,a=[];for(r=0;r<i;r++){var o=[];for(t=0;t<n;t++)o.push(e[t][r]);a.push(o)}return a}(e),o=[],a=0;a<u.length;a++)o[a]=n(u[a],t-1,r);return o}for(s=e[0],a=1;a<e.length;a++)s=r(s,e[a]);return s}for(o=[],a=0;a<e.length;a++)o[a]=n(e[a],t-1,r);return o}var a=r(39).size,o=r(42);e.exports=function(e,t,r){var i=Array.isArray(e)?a(e):e.size();if(t<0)throw new o(t);if(t>=i.length)throw new o(t,i.length);return e&&!0===e.isMatrix?e.create(n(e.valueOf(),t,r)):n(e,t,r)}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="mean",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(309));return o("mean",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t,r){"use strict";var i=r(39).size,a=r(306),o=r(307);t.name="mean",t.factory=function(e,t,n,s){function c(e){var t=0,r=0;if(a(e,function(e){t=f(t,e),r++}),0===r)throw new Error("Cannot calculate mean of an empty array");return l(t,r)}var f=n(r(49)),l=n(r(310));return(n=s("mean",{"Array | Matrix":c,"Array | Matrix, number | BigNumber":function(e,t){var r=o(e,t,f),e=Array.isArray(e)?i(e):e.size();return l(r,e[t])},"...":function(){return c(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3).extend;t.name="divide",t.factory=function(e,t,n,a){var o=n(r(78)),s=n(r(83)),u=n(r(311)),c=n(r(50)),f=n(r(84)),l=n(r(56));return(n=a("divide",i({"Array | Matrix, Array | Matrix":function(e,t){return s(e,u(t))},"Matrix, any":function(e,t){var r;switch(e.storage()){case"sparse":r=f(e,t,o,!1);break;case"dense":r=l(e,t,o,!1)}return r},"Array, any":function(e,t){return l(c(e),t,o,!1).valueOf()},"any, Array | Matrix":function(e,t){return s(e,u(t))}},o.signatures))).toTex="\\frac{${args[0]}}{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(38);t.name="inv",t.factory=function(e,t,n,a){function o(e,t,r){var i,a,s;if(1==t){if(0==(o=e[0][0]))throw Error("Cannot calculate inverse, determinant is zero");return[[u(1,o)]]}if(2==t){var o=p(e);if(0==o)throw Error("Cannot calculate inverse, determinant is zero");return[[u(e[1][1],o),u(l(e[0][1]),o)],[u(l(e[1][0]),o),u(e[0][0],o)]]}var g=e.concat();for(n=0;n<t;n++)g[n]=g[n].concat();for(var v=m(t).valueOf(),d=0;d<r;d++){for(n=d;n<t&&0==g[n][d];)n++;if(n==t||0==g[n][d])throw Error("Cannot calculate inverse, determinant is zero");n!=d&&(s=g[d],g[d]=g[n],g[n]=s,s=v[d],v[d]=v[n],v[n]=s);for(var y=g[d],x=v[d],n=0;n<t;n++){var b=g[n],w=v[n];if(n!=d){if(0!=b[d]){for(a=u(l(b[d]),y[d]),i=d;i<r;i++)b[i]=c(b[i],f(a,y[i]));for(i=0;i<r;i++)w[i]=c(w[i],f(a,x[i]))}}else{for(a=y[d],i=d;i<r;i++)b[i]=u(b[i],a);for(i=0;i<r;i++)w[i]=u(w[i],a)}}}return v}var s=n(r(50)),u=n(r(78)),c=n(r(51)),f=n(r(83)),l=n(r(75)),p=n(r(312)),m=n(r(81));return(n=a("inv",{"Array | Matrix":function(e){var t=!0===e.isMatrix?e.size():i.array.size(e);switch(t.length){case 1:if(1==t[0])return!0===e.isMatrix?s([u(1,e.valueOf()[0])]):[u(1,e[0])];throw new RangeError("Matrix must be square (size: "+i.string.format(t)+")");case 2:var r=t[0],n=t[1];if(r==n)return!0===e.isMatrix?s(o(e.valueOf(),r,n),e.storage()):o(e,r,n);throw new RangeError("Matrix must be square (size: "+i.string.format(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+i.string.format(t)+")")}},any:function(e){return u(1,e)}})).toTex="\\left(${args[0]}\\right)^{-1}",n}},function(e,t,r){"use strict";var i=r(38),a=i.object,o=i.string;t.name="det",t.factory=function(e,t,n,i){var u=n(r(50)),c=n(r(49)),f=n(r(74)),l=n(r(83)),p=n(r(75));return(n=i("det",{any:function(e){return a.clone(e)},"Array | Matrix":function(e){var t=e&&!0===e.isMatrix?e.size():Array.isArray(e)?(e=u(e)).size():[];switch(t.length){case 0:return a.clone(e);case 1:if(1==t[0])return a.clone(e.valueOf()[0]);throw new RangeError("Matrix must be square (size: "+o.format(t)+")");case 2:var r=t[0],n=t[1];if(r==n)return function(e,t){if(1==t)return a.clone(e[0][0]);if(2==t)return f(l(e[0][0],e[1][1]),l(e[1][0],e[0][1]));for(var i=e,o=0;o<t-1;o++)i=l(function(e){for(var r,n=new Array(e.length),i=0,t=1;t<e.length;t++)i=c(i,e[t][t]);for(t=0;t<e.length;t++){for(n[t]=new Array(e.length),n[t][t]=p(i),r=0;r<t;r++)n[t][r]=0;for(r=t+1;r<e.length;r++)n[t][r]=e[t][r];t+1<e.length&&(i=f(i,e[t+1][t+1]))}return n}(i),e);return t%2==0?p(i[0][0]):i[0][0]}(e.clone().valueOf(),r);throw new RangeError("Matrix must be square (size: "+o.format(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+o.format(t)+")")}}})).toTex="\\det\\left(${args[0]}\\right)",n}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="min",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(314));return o("min",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t,r){"use strict";var i=r(306),a=r(307);t.name="min",t.factory=function(e,t,n,o){function s(e,t){return c(e,t)?e:t}function u(e){var t=void 0;if(i(e,function(e){void 0!==t&&!c(e,t)||(t=e)}),void 0===t)throw new Error("Cannot calculate min of an empty array");return t}var c=n(r(58));return(n=o("min",{"Array | Matrix":u,"Array | Matrix, number | BigNumber":function(e,t){return a(e,t.valueOf(),s)},"...":function(){return u(arguments)}})).toTex="\\min\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="range",t.path="expression.transform",t.factory=function(e,t,n,i){var a=n(r(316));return i("range",{"...any":function(e){return"boolean"!=typeof e[e.length-1]&&e.push(!0),a.apply(null,e)}})}},function(e,t,r){"use strict";t.name="range",t.factory=function(e,t,n,i){function a(e){return"array"===t.matrix?e:p(e)}function o(r,n){var i=function(e){var r=e.split(":").map(function(e){return Number(e)});if(r.some(function(e){return isNaN(e)}))return null;switch(r.length){case 2:return{start:r[0],end:r[1],step:1};case 3:return{start:r[0],end:r[2],step:r[1]};default:return null}}(r);if(i)return"bignumber"===t.number?a((n?f:c)(new e.BigNumber(i.start),new e.BigNumber(i.end),new e.BigNumber(i.step))):a((n?u:s)(i.start,i.end,i.step));throw new SyntaxError('String "'+r+'" is no valid range')}function s(e,t,r){var n=[],i=e;if(0<r)for(;i<t;)n.push(i),i+=r;else if(r<0)for(;t<i;)n.push(i),i+=r;return n}function u(e,t,r){var n=[],i=e;if(0<r)for(;i<=t;)n.push(i),i+=r;else if(r<0)for(;t<=i;)n.push(i),i+=r;return n}function c(e,t,r){var n=[],i=e;if(r.gt(m))for(;i.lt(t);)n.push(i),i=i.plus(r);else if(r.lt(m))for(;i.gt(t);)n.push(i),i=i.plus(r);return n}function f(e,t,r){var n=[],i=e;if(r.gt(m))for(;i.lte(t);)n.push(i),i=i.plus(r);else if(r.lt(m))for(;i.gte(t);)n.push(i),i=i.plus(r);return n}var p=n(r(50)),m=new e.BigNumber(0),h=new e.BigNumber(1);return(n=i("range",{string:o,"string, boolean":o,"number, number":function(e,t){return a(s(e,t,1))},"number, number, number":function(e,t,r){return a(s(e,t,r))},"number, number, boolean":function(e,t,r){return a((r?u:s)(e,t,1))},"number, number, number, boolean":function(e,t,r,n){return a((n?u:s)(e,t,r))},"BigNumber, BigNumber":function(e,t){return a(c(e,t,h))},"BigNumber, BigNumber, BigNumber":function(e,t,r){return a(c(e,t,r))},"BigNumber, BigNumber, boolean":function(e,t,r){return a((r?f:c)(e,t,h))},"BigNumber, BigNumber, BigNumber, boolean":function(e,t,r,n){return a((n?f:c)(e,t,r))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(294).transform;t.name="subset",t.path="expression.transform",t.factory=function(e,t,n,a){var o=n(r(318));return a("subset",{"...any":function(e){try{return o.apply(null,e)}catch(t){throw i(t)}}})}},function(e,t,r){"use strict";var i=r(3).clone,a=r(39).validateIndex,o=r(41);t.name="subset",t.factory=function(e,t,n,s){function c(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Index expected");if(1!=t.size().length)throw new o(t.size().length,1);if(void 0!==n){if("string"!=typeof n||1!==n.length)throw new TypeError("Single character expected as defaultValue")}else n=" ";var s,i=t.dimension(0);if(i.size()[0]!=r.length)throw new o(i.size()[0],r.length);var u=e.length;a(t.min()[0]),a(t.max()[0]);for(var c=[],f=0;f<u;f++)c[f]=e.charAt(f);if(i.forEach(function(e,t){c[e]=r.charAt(t[0])}),u<c.length)for(f=u-1,s=c.length;f<s;f++)c[f]||(c[f]=n);return c.join("")}var f=n(r(50));return(n=s("subset",{"Array, Index":function(e,t){e=f(e).subset(t);return e&&e.valueOf()},"Matrix, Index":function(e,t){return e.subset(t)},"string, Index":function(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Index expected");if(1!=t.size().length)throw new o(t.size().length,1);var r=e.length,r=(a(t.min()[0],r),a(t.max()[0],r),t.dimension(0)),i="";return r.forEach(function(t){i+=e.charAt(t)}),i},"Array, Index, any":function(e,t,r){return f(i(e)).subset(t,r,void 0).valueOf()},"Array, Index, any, any":function(e,t,r,n){return f(i(e)).subset(t,r,n).valueOf()},"Matrix, Index, any":function(e,t,r){return e.clone().subset(t,r)},"Matrix, Index, any, any":function(e,t,r,n){return e.clone().subset(t,r,n)},"string, Index, string":c,"string, Index, string, string":c})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3),a=r(23);t.name="Help",t.path="type",t.factory=function(e,t,n,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if(!e)throw new Error('Argument "doc" missing');this.doc=e}var u=n(r(289))();return s.prototype.type="Help",s.prototype.isHelp=!0,s.prototype.toString=function(){var e=this.doc||{},t="\n";if(e.name&&(t+="Name: "+e.name+"\n\n"),e.category&&(t+="Category: "+e.category+"\n\n"),e.description&&(t+="Description:\n    "+e.description+"\n\n"),e.syntax&&(t+="Syntax:\n    "+e.syntax.join("\n    ")+"\n\n"),e.examples){t+="Examples:\n";for(var r=0;r<e.examples.length;r++){var i,n=e.examples[r];t+="    "+n+"\n";try{i=u.eval(n)}catch(o){i=o}i&&!i.isHelp&&(t+="        "+a.format(i,{precision:14})+"\n")}t+="\n"}return e.seealso&&(t+="See also: "+e.seealso.join(", ")+"\n"),t},s.prototype.toJSON=function(){var e=i.clone(this.doc);return e.mathjs="Help",e},s.fromJSON=function(e){var r,t={};for(r in e)"mathjs"!==r&&(t[r]=e[r]);return new s(t)},s.prototype.valueOf=s.prototype.toString,s}},function(e,t,r){e.exports=[r(321),r(348),r(378),r(394),r(403),r(408),r(411),r(417),r(426),r(435),r(440),r(448),r(489),r(491)]},function(e,t,r){e.exports=[r(322),r(323),r(343),r(345),r(347)]},function(e,t,r){"use strict";var a=r(38).object;t.name="lup",t.factory=function(e,t,n,i){var o=n(r(50)),s=n(r(85)),u=n(r(51)),c=n(r(78)),f=n(r(77)),l=n(r(74)),p=n(r(62)),m=n(r(47)),h=n(r(75)),g=e.SparseMatrix,v=e.DenseMatrix,d=e.Spa,n=i("lup",{DenseMatrix:function(e){return x(e)},SparseMatrix:function(e){return b(e)},Array:function(e){e=o(e),e=x(e);return{L:e.L.valueOf(),U:e.U.valueOf(),p:e.p}}}),x=function(e){var r,i=e._size[0],o=e._size[1],h=Math.min(i,o),g=a.clone(e._data),d=[],e=[i,h],x=[],b=[h,o],w=[];for(t=0;t<i;t++)w[t]=t;for(r=0;r<o;r++){if(0<r)for(t=0;t<i;t++){for(var N=Math.min(t,r),E=0,n=0;n<N;n++)E=u(E,f(g[t][n],g[n][r]));g[t][r]=l(g[t][r],E)}for(var M=r,A=0,_=0,t=r;t<i;t++){var O=g[t][r],T=s(O);p(T,A)&&(M=t,A=T,_=O)}if(r!==M&&(w[r]=[w[M],w[M]=w[r]][0],v._swapRows(r,M,g)),r<i)for(t=r+1;t<i;t++){var C=g[t][r];m(C,0)||(g[t][r]=c(g[t][r],_))}}for(r=0;r<o;r++)for(t=0;t<i;t++)0===r&&(t<o&&(x[t]=[]),d[t]=[]),t<r?(t<o&&(x[t][r]=g[t][r]),r<i&&(d[t][r]=0)):t!==r?(t<o&&(x[t][r]=0),r<i&&(d[t][r]=g[t][r])):(t<o&&(x[t][r]=g[t][r]),r<i&&(d[t][r]=1));var e=new v({data:d,size:e}),b=new v({data:x,size:b}),B=[];for(t=0,h=w.length;t<h;t++)B[w[t]]=t;return{L:e,U:b,p:B,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}},b=function(e){for(var i=e._size[0],a=e._size[1],o=Math.min(i,a),u=e._values,l=e._index,v=e._ptr,y=[],x=[],b=[],w=[i,o],N=[],E=[],M=[],A=[o,a],_=[],O=[],t=0;t<i;t++)O[_[t]=t]=t;for(var r=0;r<a;r++){for(var C=new d,S=(r<i&&(b.push(y.length),y.push(1),x.push(r)),M.push(N.length),v[r]),z=v[r+1],n=S;n<z;n++)t=l[n],C.set(_[t],u[n]);0<r&&C.forEach(0,r-1,function(e,t){g._forEachRow(e,y,x,b,function(r,n){e<r&&C.accumulate(r,h(f(n,t)))})});var B=r,k=C.get(r),I=s(k);C.forEach(r+1,i-1,function(e,t){var r=s(t);p(r,I)&&(B=e,I=r,k=t)}),r!==B&&(g._swapRows(r,B,w[1],y,x,b),g._swapRows(r,B,A[1],N,E,M),C.swap(r,B),function(e,t){var r=O[e],n=O[t];_[r]=t,O[_[n]=e]=n,O[t]=r}(r,B)),C.forEach(0,i-1,function(e,t){e<=r?(N.push(t),E.push(e)):(t=c(t,k),m(t,0)||(y.push(t),x.push(e)))})}return M.push(N.length),b.push(y.length),{L:new g({values:y,index:x,ptr:b,size:w}),U:new g({values:N,index:E,ptr:M,size:A}),p:_,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}};return n}},function(e,t,r){"use strict";var o=r(38).number.isInteger;t.name="slu",t.factory=function(e,t,n,i){var a=n(r(324)),s=n(r(335));return i("slu",{"SparseMatrix, number, number":function(e,t,r){if(!o(t)||t<0||3<t)throw new Error("Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]");if(r<0||1<r)throw new Error("Partial pivoting threshold must be a number from 0 to 1");t=a(t,e,!1),e=s(e,t,r);return{L:e.L,U:e.U,p:e.pinv,q:t.q,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\np: "+this.p.toString()+(this.q?"\nq: "+this.q.toString():"")+"\n"}}}})}},function(e,t,r){"use strict";t.name="cs_sqr",t.path="sparse",t.factory=function(e,t,n){var i=n(r(325)),a=n(r(330)),o=n(r(331)),s=n(r(332)),u=n(r(333));return function(e,t,r){var n,c=t._ptr,p=t._size[1],m={};if(m.q=i(e,t),e&&!m.q)return null;if(r){r=e?a(t,null,m.q,0):t,e=(m.parent=o(r,1),s(m.parent,p));if(m.cp=u(r,m.parent,e,1),r&&m.parent&&m.cp&&function(e,t){var r=e._ptr,n=e._index,i=e._size,a=i[0],o=i[1];t.pinv=[],t.leftmost=[];for(var s,u,c,f,l,p=t.parent,m=t.pinv,h=t.leftmost,g=[],v=0,d=a,y=a+o,x=a+2*o,u=0;o>u;u++)g[d+u]=-1,g[y+u]=-1,g[x+u]=0;for(s=0;a>s;s++)h[s]=-1;for(u=o-1;u>=0;u--)for(f=r[u],l=r[u+1],c=f;l>c;c++)h[n[c]]=u;for(s=a-1;s>=0;s--)(m[s]=-1)!=(u=h[s])&&(0===g[x+u]++&&(g[y+u]=s),g[v+s]=g[d+u],g[d+u]=s);for(t.lnz=0,t.m2=a,u=0;o>u;u++)if(s=g[d+u],t.lnz++,!(--x[m[s=0>s?t.m2++:s]=u]<=0)){t.lnz+=g[x+u];var b=p[u];-1!=b&&(0===g[x+b]&&(g[y+b]=g[y+u]),g[v+g[y+u]]=g[d+b],g[d+b]=g[v+s],g[x+b]+=g[x+u])}for(s=0;a>s;s++)m[s]<0&&(m[s]=u++);return!0}(r,m))for(n=m.unz=0;n<p;n++)m.unz+=m.cp[n]}else m.unz=4*c[p]+p,m.lnz=m.unz;return m}}},function(e,t,r){"use strict";t.name="cs_amd",t.path="sparse",t.factory=function(e,t,n){function l(e,t,r,n,i){var a=c(t);if(1===e&&n===r)return s(t,a);if(2==e){for(var o=a._index,f=a._ptr,l=0,p=0;p<r;p++){var m=f[p];if(f[p]=l,!(f[p+1]-m>i))for(var h=f[p+1];m<h;m++)o[l++]=o[m]}f[r]=l,t=c(a)}return u(a,t)}function g(e,t){return e!=t}var i=n(r(326)),a=n(r(327)),o=n(r(328)),s=n(r(49)),u=n(r(83)),c=n(r(329)),h=function(e,t,r,n,i){if(e<2||e+t<0){for(var a=0;a<i;a++)0!==r[n+a]&&(r[n+a]=1);e=2}return e};return function(e,t){if(!t||e<=0||3<e)return null;var r=t._size,n=r[0],s=r[1],u=0,r=Math.max(16,10*Math.sqrt(s)),r=Math.min(s-2,r),e=l(e,t,n,s,r);a(e,g,null);for(var v,y,b,N,E,A,_,T,C,S,z,B=e._index,k=e._ptr,I=k[s],R=[],P=[],q=s+1,L=2*(s+1),F=3*(s+1),D=4*(s+1),$=5*(s+1),j=6*(s+1),G=7*(s+1),H=R,V=function(e,t,r,n,i,a,o,s,u,c,f,l){for(var p=0;e>p;p++)r[n+p]=t[p+1]-t[p];for(var m=r[n+e]=0;e>=m;m++)r[i+m]=-1,a[m]=-1,r[o+m]=-1,r[s+m]=-1,r[u+m]=1,r[c+m]=1,r[f+m]=0,r[l+m]=r[n+m];var g=h(0,0,r,c,e);return r[f+e]=-2,t[e]=-1,r[c+e]=0,g}(s,k,P,0,F,H,L,G,q,j,D,$),Z=function(e,t,r,n,a,o,s,u,c,f,l){for(var p=0,m=0;e>m;m++){var h=r[n+m];if(0===h)r[a+m]=-2,p++,t[m]=-1,r[o+m]=0;else if(h>s)r[u+m]=0,r[a+m]=-1,p++,t[m]=i(e),r[u+e]++;else{var g=r[c+h];-1!=g&&(f[g]=m),r[l+m]=r[c+h],r[c+h]=m}}return p}(s,k,P,$,D,j,r,q,F,H,L),Y=0;Z<s;){for(y=-1;Y<s&&-1==(y=P[F+Y]);Y++);-1!=P[L+y]&&(H[P[L+y]]=-1),P[F+Y]=P[L+y];for(var re,w,W=P[D+y],X=P[q+y],J=(Z+=X,0),Q=(P[q+y]=-X,k[y]),K=0===W?Q:I,ee=K,x=1;x<=W+1;x++){for(E=W<x?(N=Q,P[0+(w=y)]-W):(N=k[w=B[Q++]],P[0+w]),b=1;b<=E;b++)(M=P[q+(v=B[N++])])<=0||(J+=M,P[q+v]=-M,-1!=P[L+(B[ee++]=v)]&&(H[P[L+v]]=H[v]),-1!=H[v]?P[L+H[v]]=P[L+v]:P[F+P[$+v]]=P[L+v]);w!=y&&(k[w]=i(y),P[j+w]=0)}for(0!==W&&(I=ee),P[$+y]=J,k[y]=K,P[0+y]=ee-K,P[D+y]=-2,V=h(V,u,P,j,s),A=K;A<ee;A++)if(!((_=P[D+(v=B[A])])<=0))for(var M,te=V-(M=-P[q+v]),Q=k[v],O=k[v]+_-1;Q<=O;Q++)P[j+(w=B[Q])]>=V?P[j+w]-=M:0!==P[j+w]&&(P[j+w]=P[$+w]+te);for(A=K;A<ee;A++){for(T=(O=k[v=B[A]])+P[D+v]-1,z=S=0,Q=C=O;Q<=T;Q++)0!==P[j+(w=B[Q])]&&(0<(re=P[j+w]-V)?(z+=re,S+=B[C++]=w):(k[w]=i(y),P[j+w]=0));P[D+v]=C-O+1;var ne=C,ie=O+P[0+v];for(Q=1+T;Q<ie;Q++){var d,ae=P[q+(d=B[Q])];ae<=0||(z+=ae,S+=B[C++]=d)}0===z?(k[v]=i(y),J-=M=-P[q+v],X+=M,Z+=M,P[q+v]=0,P[D+v]=-1):(P[$+v]=Math.min(P[$+v],z),B[C]=B[ne],B[ne]=B[O],B[O]=y,P[0+v]=C-O+1,P[L+v]=P[G+(S=(S<0?-S:S)%s)],H[P[G+S]=v]=S)}for(P[$+y]=J,u=Math.max(u,J),V=h(V+u,u,P,j,s),A=K;A<ee;A++)if(!(0<=P[q+(v=B[A])]))for(v=P[G+(S=H[v])],P[G+S]=-1;-1!=v&&-1!=P[L+v];v=P[L+v],V++){for(E=P[0+v],_=P[D+v],Q=k[v]+1;Q<=k[v]+E-1;Q++)P[j+B[Q]]=V;var oe=v;for(d=P[L+v];-1!=d;){var se=P[0+d]===E&&P[D+d]===_;for(Q=k[d]+1;se&&Q<=k[d]+E-1;Q++)P[j+B[Q]]!=V&&(se=0);se?(k[d]=i(v),P[q+v]+=P[q+d],P[q+d]=0,P[D+d]=-1,d=P[L+d],P[L+oe]=d):d=P[L+(oe=d)]}}for(A=Q=K;A<ee;A++)(M=-P[q+(v=B[A])])<=0||(P[q+v]=M,z=P[$+v]+J-M,-1!=P[F+(z=Math.min(z,s-Z-M))]&&(H[P[F+z]]=v),P[L+v]=P[F+z],H[v]=-1,P[F+z]=v,Y=Math.min(Y,z),P[$+v]=z,B[Q++]=v);P[q+y]=X,0==(P[0+y]=Q-K)&&(k[y]=-1,P[j+y]=0),0!==W&&(I=Q)}for(v=0;v<s;v++)k[v]=i(k[v]);for(d=0;d<=s;d++)P[F+d]=-1;for(d=s;0<=d;d--)0<P[q+d]||(P[L+d]=P[F+k[d]],P[F+k[d]]=d);for(w=s;0<=w;w--)P[q+w]<=0||-1!=k[w]&&(P[L+w]=P[F+k[w]],P[F+k[w]]=w);for(v=y=0;v<=s;v++)-1==k[v]&&(y=o(v,y,P,F,L,R,j));return R.splice(R.length-1,1),R}}},function(e,t){"use strict";t.name="cs_flip",t.path="sparse",t.factory=function(){return function(e){return-e-2}}},function(e,t){"use strict";t.name="cs_fkeep",t.path="sparse",t.factory=function(){return function(e,t,r){for(var n=e._values,i=e._index,a=e._ptr,s=e._size[1],u=0,c=0;c<s;c++){var f=a[c];for(a[c]=u;f<a[c+1];f++)t(i[f],c,n?n[f]:1,r)&&(i[u]=i[f],n&&(n[u]=n[f]),u++)}return a[s]=u,i.splice(u,i.length-u),n&&n.splice(u,n.length-u),u}}},function(e,t){"use strict";t.name="cs_tdfs",t.path="sparse",t.factory=function(){return function(e,t,r,n,i,a,o){var s=0;for(r[o]=e;0<=s;){var u=r[o+s],c=r[n+u];-1==c?(s--,a[t++]=u):(r[n+u]=r[i+c],r[o+ ++s]=c)}return t}}},function(e,t,r){"use strict";var i=r(3).clone,a=r(23).format;t.name="transpose",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=e.DenseMatrix,f=e.SparseMatrix,l=o("transpose",{Array:function(e){return l(u(e)).valueOf()},Matrix:function(e){var t,r=e.size();switch(r.length){case 1:t=e.clone();break;case 2:var n=r[0],i=r[1];if(0===i)throw new RangeError("Cannot transpose a 2D matrix with no columns (size: "+a(r)+")");switch(e.storage()){case"dense":t=p(e,n,i);break;case"sparse":t=m(e,n,i)}break;default:throw new RangeError("Matrix must be a vector or two dimensional (size: "+a(this._size)+")")}return t},any:function(e){return i(e)}}),p=function(e,t,r){for(var a=e._data,o=[],s=0;s<r;s++)for(var n=o[s]=[],u=0;u<t;u++)n[u]=i(a[u][s]);return new c({data:o,size:[r,t],datatype:e._datatype})},m=function(e,t,r){for(var m,h,g,n=e._values,a=e._index,o=e._ptr,s=n?[]:void 0,u=[],c=[],l=[],p=0;p<t;p++)l[p]=0;for(m=0,h=a.length;m<h;m++)l[a[m]]++;for(var v=0,d=0;d<t;d++)c.push(v),v+=l[d],l[d]=c[d];for(c.push(v),g=0;g<r;g++)for(var y=o[g],x=o[g+1],b=y;b<x;b++){var w=l[a[b]]++;u[w]=g,n&&(s[w]=i(n[b]))}return new f({values:s,index:u,ptr:c,size:[r,t],datatype:e._datatype})};return l.toTex="\\left(${args[0]}\\right)"+s.operators.transpose,l}},function(e,t){"use strict";t.name="cs_permute",t.path="sparse",t.factory=function(e){var t=e.SparseMatrix;return function(e,r,n,i){for(var a=e._values,o=e._index,s=e._ptr,u=e._size,c=e._datatype,f=u[0],l=u[1],p=i&&e._values?[]:null,m=[],h=[],g=0,v=0;v<l;v++){h[v]=g;for(var d=n?n[v]:v,y=s[d],x=s[d+1],b=y;b<x;b++){var w=r?r[o[b]]:o[b];m[g]=w,p&&(p[g]=a[b]),g++}}return h[l]=g,new t({values:p,index:m,ptr:h,size:[f,l],datatype:c})}}},function(e,t){"use strict";t.name="cs_etree",t.path="sparse",t.factory=function(){return function(e,t){if(!e)return null;var n,i=e._index,a=e._ptr,e=e._size,s=e[0],u=e[1],c=[],f=[],p=u;if(t)for(r=0;r<s;r++)f[p+r]=-1;for(var m=0;m<u;m++){f[0+m]=c[m]=-1;for(var h=a[m],g=a[m+1],v=h;v<g;v++){for(var d=i[v],r=t?f[p+d]:d;-1!=r&&r<m;r=n)n=f[0+r],f[0+r]=m,-1==n&&(c[r]=m);t&&(f[p+d]=m)}}return c}}},function(e,t,r){"use strict";t.name="cs_post",t.path="sparse",t.factory=function(e,t,n){var i=n(r(328));return function(e,t){if(!e)return null;for(var n=0,a=[],o=[],u=t,c=2*t,r=0;r<t;r++)o[0+r]=-1;for(r=t-1;0<=r;r--)-1!=e[r]&&(o[u+r]=o[0+e[r]],o[0+e[r]]=r);for(r=0;r<t;r++)-1==e[r]&&(n=i(r,n,o,0,u,a,c));return a}}},function(e,t,r){"use strict";t.name="cs_counts",t.path="sparse",t.factory=function(e,t,n){var i=n(r(329)),a=n(r(334));return function(e,t,r,n){if(!e||!t||!r)return null;for(var s,c,f,l,p,m=e._size,h=m[0],g=m[1],v=4*g+(n?g+h+1:0),d=[],x=g,b=2*g,w=3*g,N=4*g,E=5*g+1,u=0;u<v;u++)d[u]=-1;var M=[],m=i(e),_=m._index,O=m._ptr;for(u=0;u<g;u++)for(M[s=r[u]]=-1==d[w+s]?1:0;-1!=s&&-1==d[w+s];s=t[s])d[w+s]=u;if(n){for(u=0;u<g;u++)d[r[u]]=u;for(o=0;o<h;o++){for(u=g,l=O[o],p=O[o+1],f=l;f<p;f++)u=Math.min(u,d[_[f]]);d[E+o]=d[N+u],d[N+u]=o}}for(o=0;o<g;o++)d[0+o]=o;for(u=0;u<g;u++){for(-1!=t[s=r[u]]&&M[t[s]]--,c=n?d[N+u]:s;-1!=c;c=n?d[E+c]:-1)for(f=O[c];f<O[c+1];f++){var o=_[f],T=a(o,s,d,w,x,b,0);1<=T.jleaf&&M[s]++,2==T.jleaf&&M[T.q]--}-1!=t[s]&&(d[0+s]=t[s])}for(s=0;s<g;s++)-1!=t[s]&&(M[t[s]]+=M[s]);return M}}},function(e,t){"use strict";t.name="cs_leaf",t.path="sparse",t.factory=function(){return function(e,t,r,n,i,a,o){var s,u,f,l=0;if(e<=t||r[n+t]<=r[i+e])return-1;if(r[i+e]=r[n+t],i=r[a+e],r[a+e]=t,-1===i)l=1,f=e;else{for(l=2,f=i;f!=r[o+f];f=r[o+f]);for(s=i;s!=f;s=u)u=r[o+s],r[o+s]=f}return{jleaf:l,q:f}}}},function(e,t,r){"use strict";t.name="cs_lu",t.path="sparse",t.factory=function(e,t,n){var i=n(r(85)),a=n(r(78)),o=n(r(83)),s=n(r(62)),u=n(r(336)),c=n(r(337)),f=e.SparseMatrix;return function(e,t,r){if(!e)return null;var n,p=e._size[1],m=100,h=100;t&&(n=t.q,m=t.lnz||m,h=t.unz||h);for(var d=[],y=[],x=[],b=new f({values:d,index:y,ptr:x,size:[p,p]}),w=[],N=[],E=[],t=new f({values:w,index:N,ptr:E,size:[p,p]}),A=[],_=[],O=[],g=0;g<p;g++)_[g]=0,A[g]=-1,x[g+1]=0;for(var m=0,h=0,T=0;T<p;T++){x[T]=m,E[T]=h;for(var k,C=n?n[T]:T,S=c(b,e,C,O,_,A,1),z=-1,B=-1,v=S;v<p;v++)A[g=O[v]]<0?(k=i(_[g]),s(k,B)&&(B=k,z=g)):(N[h]=A[g],w[h++]=_[g]);if(-1==z||B<=0)return null;var I=_[z=A[C]<0&&u(i(_[C]),o(B,r))?C:z];for(N[h]=T,w[h++]=I,A[z]=T,y[m]=z,d[m++]=1,v=S;v<p;v++)A[g=O[v]]<0&&(y[m]=g,d[m++]=a(_[g],I)),_[g]=0}for(x[p]=m,E[p]=h,v=0;v<m;v++)y[v]=A[y[v]];return d.splice(m,d.length-m),y.splice(m,y.length-m),w.splice(h,w.length-h),N.splice(h,N.length-h),{L:b,U:t,pinv:A}}}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="largerEq",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("largerEq",{"boolean, boolean":function(e,t){return t<=e},"number, number":function(e,r){return r<=e||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gte(t)},"Fraction, Fraction":function(e,t){return-1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return t<=e},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.largerEq+"${args[1]}\\right)",m}},function(e,t,r){"use strict";t.name="cs_spsolve",t.path="sparse",t.factory=function(e,t,n){var i=n(r(78)),a=n(r(83)),o=n(r(74)),s=n(r(338));return function(e,t,r,n,u,c,f){for(var p,m,h,g=e._values,v=e._index,d=e._ptr,x=e._size[1],b=t._values,w=t._index,N=t._ptr,e=s(e,t,r,n,c),l=e;l<x;l++)u[n[l]]=0;for(p=N[r],m=N[r+1],l=p;l<m;l++)u[w[l]]=b[l];for(var M=e;M<x;M++){var A=n[M],_=c?c[A]:A;if(!(_<0))for(p=d[_],m=d[_+1],u[A]=i(u[A],g[f?p:m-1]),l=f?p+1:p,h=f?m:m-1;l<h;l++){var O=v[l];u[O]=o(u[O],a(g[l],u[A]))}}return e}}},function(e,t,r){"use strict";t.name="cs_reach",t.path="sparse",t.factory=function(e,t,n){var i=n(r(339)),a=n(r(340)),o=n(r(341));return function(e,t,r,n,s){for(var l=e._ptr,p=e._size,m=t._index,t=t._ptr,g=p[1],v=g,p=t[r],f=t[r+1],u=p;u<f;u++){var d=m[u];a(l,d)||(v=i(d,e,v,n,s))}for(u=v;u<g;u++)o(l,n[u]);return v}}},function(e,t,r){"use strict";t.name="cs_dfs",t.path="sparse",t.factory=function(e,t,n){var i=n(r(340)),a=n(r(341)),o=n(r(342));return function(e,t,r,n,s){var u,l=t._index,p=t._ptr,h=t._size[1],g=0;for(n[0]=e;0<=g;){e=n[g];for(var v=s?s[e]:e,d=(i(p,e)||(a(p,e),n[h+g]=v<0?0:o(p[v])),1),c=n[h+g],f=v<0?0:o(p[v+1]);c<f;c++)if(u=l[c],!i(p,u)){n[h+g]=c,n[++g]=u,d=0;break}d&&(g--,n[--r]=e)}return r}}},function(e,t){"use strict";t.name="cs_marked",t.path="sparse",t.factory=function(){return function(e,t){return e[t]<0}}},function(e,t,r){"use strict";t.name="cs_mark",t.path="sparse",t.factory=function(e,t,n){var i=n(r(326));return function(e,t){e[t]=i(e[t])}}},function(e,t,r){"use strict";t.name="cs_unflip",t.path="sparse",t.factory=function(e,t,n){var i=n(r(326));return function(e){return e<0?i(e):e}}},function(e,t,r){"use strict";t.name="lsolve",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=n(r(77)),u=n(r(74)),c=n(r(47)),f=n(r(344)),l=e.DenseMatrix,n=i("lsolve",{"SparseMatrix, Array | Matrix":function(e,t){return h(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return m(e,t)},"Array, Array | Matrix":function(e,t){e=a(e);return m(e,t).valueOf()}}),m=function(e,t){for(var r=(t=f(e,t,!0))._data,n=e._size[0],i=e._size[1],a=[],p=e._data,m=0;m<i;m++){var g=r[m][0]||0;if(c(g,0))h=0;else{var v=p[m][m];if(c(v,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var h=o(g,v),d=m+1;d<n;d++)r[d]=[u(r[d][0]||0,s(h,p[d][m]))]}a[m]=[h]}return new l({data:a,size:[n,1]})},h=function(e,t){for(var r,i=(t=f(e,t,!0))._data,t=e._size[0],p=e._size[1],m=e._values,h=e._index,g=e._ptr,v=[],d=0;d<p;d++){var y=i[d][0]||0;if(c(y,0))v[d]=[0];else{for(var x=0,b=[],w=[],N=g[d+1],n=g[d];n<N;n++)(r=h[n])===d?x=m[n]:d<r&&(b.push(m[n]),w.push(r));if(c(x,0))throw new Error("Linear system cannot be solved since matrix is singular");var E=o(y,x);for(n=0,N=w.length;n<N;n++)i[r=w[n]]=[u(i[r][0]||0,s(E,b[n]))];v[d]=[E]}}return new l({data:v,size:[t,1]})};return n}},function(e,t,r){"use strict";var r=r(38),a=r.string,o=r.array,s=Array.isArray;t.factory=function(e){var t=e.DenseMatrix;return function(e,r,n){e=e.size();if(2!==e.length)throw new RangeError("Matrix must be two dimensional (size: "+a.format(e)+")");var f,l,p,u=e[0];if(u!==e[1])throw new RangeError("Matrix must be square (size: "+a.format(e)+")");if(r&&!0===r.isMatrix){e=r.size();if(1===e.length){if(e[0]!==u)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],p=r._data,l=0;l<u;l++)f[l]=[p[l]]}else{if(2!==e.length)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(e[0]!==u||1!==e[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(!0===r.isDenseMatrix){if(n){for(f=[],p=r._data,l=0;l<u;l++)f[l]=[p[l][0]];return new t({data:f,size:[u,1],datatype:r._datatype})}return r}for(f=[],l=0;l<u;l++)f[l]=[0];for(var h=r._values,g=r._index,e=r._ptr,d=e[1],y=e[0];y<d;y++)f[l=g[y]][0]=h[y]}return new t({data:f,size:[u,1],datatype:r._datatype})}if(s(r)){n=o.size(r);if(1===n.length){if(n[0]!==u)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],l=0;l<u;l++)f[l]=[r[l]]}else{if(2!==n.length)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(n[0]!==u||1!==n[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],l=0;l<u;l++)f[l]=[r[l][0]]}return new t({data:f,size:[u,1]})}}}},function(e,t,r){"use strict";var i=Array.isArray;t.name="lusolve",t.factory=function(e,t,n,a){function h(e){if(e&&!0===e.isMatrix)return e;if(i(e))return o(e);throw new TypeError("Invalid Matrix LU decomposition")}var o=n(r(50)),s=n(r(322)),u=n(r(323)),c=n(r(346)),f=n(r(344)),l=n(r(347)),p=n(r(343)),n=a("lusolve",{"Array, Array | Matrix":function(e,t){e=o(e);e=s(e);return g(e.L,e.U,e.p,null,t).valueOf()},"DenseMatrix, Array | Matrix":function(e,t){e=s(e);return g(e.L,e.U,e.p,null,t)},"SparseMatrix, Array | Matrix":function(e,t){e=s(e);return g(e.L,e.U,e.p,null,t)},"SparseMatrix, Array | Matrix, number, number":function(e,t,r,n){e=u(e,r,n);return g(e.L,e.U,e.p,e.q,t)},"Object, Array | Matrix":function(e,t){return g(e.L,e.U,e.p,e.q,t)}}),g=function(e,t,r,n,i){e=h(e),t=h(t),i=f(e,i,!1),r&&(i._data=c(r,i._data));r=p(e,i),e=l(t,r);return n&&(e._data=c(n,e._data)),e};return n}},function(e,t){"use strict";t.name="cs_ipvec",t.path="sparse",t.factory=function(){return function(e,t,r){var n,r=t.length,i=[];if(e)for(n=0;n<r;n++)i[e[n]]=t[n];else for(n=0;n<r;n++)i[n]=t[n];return i}}},function(e,t,r){"use strict";t.name="usolve",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=n(r(77)),u=n(r(74)),c=n(r(47)),f=n(r(344)),l=e.DenseMatrix,n=i("usolve",{"SparseMatrix, Array | Matrix":function(e,t){return h(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return m(e,t)},"Array, Array | Matrix":function(e,t){e=a(e);return m(e,t).valueOf()}}),m=function(e,t){for(var r=(t=f(e,t,!0))._data,t=e._size[0],i=e._size[1],a=[],p=e._data,m=i-1;0<=m;m--){var g=r[m][0]||0;if(c(g,0))h=0;else{var v=p[m][m];if(c(v,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var h=o(g,v),d=m-1;0<=d;d--)r[d]=[u(r[d][0]||0,s(h,p[d][m]))]}a[m]=[h]}return new l({data:a,size:[t,1]})},h=function(e,t){for(var r,i=(t=f(e,t,!0))._data,t=e._size[0],p=e._size[1],m=e._values,h=e._index,g=e._ptr,v=[],d=p-1;0<=d;d--){var y=i[d][0]||0;if(c(y,0))v[d]=[0];else{for(var E,x=0,b=[],w=[],N=g[d],n=g[d+1]-1;N<=n;n--)(r=h[n])===d?x=m[n]:r<d&&(b.push(m[n]),w.push(r));if(c(x,0))throw new Error("Linear system cannot be solved since matrix is singular");var M=o(y,x);for(n=0,E=w.length;n<E;n++)i[r=w[n]]=[u(i[r][0],s(M,b[n]))];v[d]=[M]}}return new l({data:v,size:[t,1]})};return n}},function(e,t,r){e.exports=[r(85),r(49),r(51),r(349),r(351),r(352),r(310),r(353),r(355),r(357),r(80),r(358),r(359),r(360),r(361),r(364),r(82),r(367),r(368),r(83),r(369),r(371),r(79),r(372),r(374),r(362),r(375),r(74),r(75),r(376),r(377)]},function(e,t,r){"use strict";var i=r(19);t.name="cbrt",t.factory=function(e,t,n,a){function o(e){var t,r;return 0===e?e:((r=e<0)&&(e=-e),t=isFinite(e)?(e/((t=Math.exp(Math.log(e)/3))*t)+2*t)/3:e,r?-t:t)}function s(r,n){var r=r.toPolar(),a=m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3)));return n?(n=[a,m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3+2*Math.PI/3))),m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3-2*Math.PI/3)))],"array"===t.matrix?n:p(n)):a}var f=n(r(75)),l=n(r(350)),p=n(r(50)),m=a.find(n(r(77)),["Complex,Complex"]),h=a.find(n(r(80)),["Complex"]),g=a("cbrt",{number:o,Complex:s,"Complex, boolean":s,BigNumber:function(e){var r,t;return e.isZero()?e:(t=(e=(r=e.isNegative())?e.neg():e).isFinite()?(t=e.ln().div(3).exp(),e.div(t.times(t)).plus(t.times(2)).div(3)):1/0,r?t.neg():t)},Unit:function(t){var n,i,r;return t.value&&t.value.isComplex?((r=t.clone()).value=1,(r=r.pow(1/3)).value=s(t.value)):(r=((n=l(t.value))&&(t.value=f(t.value)),i=t.value&&t.value.isBigNumber?new e.BigNumber(1).div(3):t.value&&t.value.isFraction?new e.Fraction(1,3):1/3,t.pow(i)),n&&(r.value=f(r.value))),r},"Array | Matrix":function(e){return i(e,g,!0)}});return g.toTex="\\sqrt[3]{${args[0]}}",g}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isNegative",t.factory=function(e,t,r,n){var a=n("isNegative",{number:function(e){return e<0},BigNumber:function(e){return e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return e.s<0&&0<e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";var i=r(19);t.name="ceil",t.factory=function(e,t,r,n){var a=n("ceil",{number:Math.ceil,Complex:function(t){return new e.Complex(Math.ceil(t.re),Math.ceil(t.im))},BigNumber:function(e){return e.ceil()},Fraction:function(e){return e.ceil()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\left\\lceil${args[0]}\\right\\rceil",a}},function(e,t,r){"use strict";var i=r(19);t.name="cube",t.factory=function(e,t,n,a){var o=a.find(n(r(77)),["Complex,Complex"]),s=a("cube",{number:function(e){return e*e*e},Complex:function(e){return o(o(e,e),e)},BigNumber:function(e){return e.times(e).times(e)},Fraction:function(e){return e.mul(e).mul(e)},"Array | Matrix":function(e){return i(e,s,!0)},Unit:function(e){return e.pow(3)}});return s.toTex="\\left(${args[0]}\\right)^3",s}},function(e,t,r){"use strict";t.name="dotDivide",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=r(29),u=n(r(354)),c=n(r(59)),f=n(r(60)),l=n(r(84)),p=n(r(61)),m=n(r(55)),h=n(r(56)),g=i("dotDivide",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?c(e,t,o,!1):m(e,t,o);return e},"Array, Array":function(e,t){return g(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return g(a(e),t)},"Matrix, Array":function(e,t){return g(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:h)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?p:h)(t,e,o,!0);return t},"Array, any":function(e,t){return h(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return h(a(t),e,o,!0).valueOf()}});return g.toTex="\\left(${args[0]}"+s.operators.dotDivide+"${args[1]}\\right)",g}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm02",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r,n){var u=e._data,c=e._size,e=e._datatype,l=t._values,p=t._index,m=t._ptr,h=t._size,t=t._datatype;if(c.length!==h.length)throw new i(c.length,h.length);if(c[0]!==h[0]||c[1]!==h[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+h+")");if(!l)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var v,h=c[0],y=c[1],x=o,b=0,w=r;"string"==typeof e&&e===t&&(x=a.find(o,[v=e,v]),b=a.convert(0,v),w=a.find(r,[v,v]));for(var N=[],E=[],M=[],A=0;A<y;A++){M[A]=E.length;for(var _=m[A],O=m[A+1],T=_;T<O;T++){var C=p[T],S=n?w(l[T],u[C][A]):w(u[C][A],l[T]);x(S,b)||(E.push(C),N.push(S))}}return M[y]=E.length,new s({values:N,index:E,ptr:M,size:[h,y],datatype:v})}}},function(e,t,r){"use strict";t.name="dotMultiply",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(77)),s=r(29),u=n(r(354)),c=n(r(356)),f=n(r(84)),l=n(r(55)),p=n(r(56)),m=i("dotMultiply",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?u(e,t,o,!1):l(e,t,o);return e},"Array, Array":function(e,t){return m(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return m(a(e),t)},"Matrix, Array":function(e,t){return m(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,o,!0);return t},"Array, any":function(e,t){return p(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return p(a(t),e,o,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+s.operators.dotMultiply+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm09",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var E,A,_,O,T=n&&p?[]:void 0,C=[],S=[],f=new s({values:T,index:C,ptr:S,size:[g,x],datatype:d}),B=T?[]:void 0,k=[],M=0;M<x;M++){S[M]=C.length;var R,I=M+1;if(B)for(_=h[M],O=h[M+1],A=_;A<O;A++)k[E=m[A]]=I,B[E]=p[A];for(_=c[M],O=c[M+1],A=_;A<O;A++)E=u[A],B?(R=k[E]===I?B[E]:w,b(R=N(n[A],R),w)||(C.push(E),T.push(R))):C.push(E)}return S[x]=C.length,f}}},function(e,t,r){"use strict";t.name="dotPow",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(79)),s=r(29),u=n(r(59)),c=n(r(60)),f=n(r(84)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=i("dotPow",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?u(e,t,o,!1):p(e,t,o);return e},"Array, Array":function(e,t){return h(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return h(a(e),t)},"Matrix, Array":function(e,t){return h(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?f:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(a(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(a(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.dotPow+"${args[1]}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="fix",t.factory=function(e,t,r,n){var a=n("fix",{number:function(e){return 0<e?Math.floor(e):Math.ceil(e)},Complex:function(t){return new e.Complex(0<t.re?Math.floor(t.re):Math.ceil(t.re),0<t.im?Math.floor(t.im):Math.ceil(t.im))},BigNumber:function(e){return e.isNegative()?e.ceil():e.floor()},Fraction:function(e){return e.s<0?e.ceil():e.floor()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\mathrm{${name}}\\left(${args}\\right)",a}},function(e,t,r){"use strict";var i=r(19);t.name="floor",t.factory=function(e,t,r,n){var a=n("floor",{number:Math.floor,Complex:function(t){return new e.Complex(Math.floor(t.re),Math.floor(t.im))},BigNumber:function(e){return e.floor()},Fraction:function(e){return e.floor()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\left\\lfloor${args[0]}\\right\\rfloor",a}},function(e,t,r){"use strict";function i(e,t){if(!a(e)||!a(t))throw new Error("Parameters in function gcd must be integer numbers");for(var r;0!=t;)r=e%t,e=t,t=r;return e<0?-e:e}var a=r(6).isInteger;t.name="gcd",t.factory=function(e,t,n,a){var s=n(r(50)),u=n(r(52)),c=n(r(53)),f=n(r(54)),l=n(r(55)),p=n(r(56)),m=a("gcd",{"number, number":i,"BigNumber, BigNumber":function(t,r){if(!t.isInt()||!r.isInt())throw new Error("Parameters in function gcd must be integer numbers");for(var n=new e.BigNumber(0);!r.isZero();){var i=t.mod(r);t=r,r=i}return t.lt(n)?t.neg():t},"Fraction, Fraction":function(e,t){return e.gcd(t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,m):u(t,e,m,!0):"sparse"===t.storage()?u(e,t,m,!1):l(e,t,m);return e},"Array, Array":function(e,t){return m(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return m(s(e),t)},"Matrix, Array":function(e,t){return m(e,s(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,m,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,m,!0);return t},"Array, number | BigNumber":function(e,t){return p(s(e),t,m,!1).valueOf()},"number | BigNumber, Array":function(e,t){return p(s(t),e,m,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,r){for(var n=m(e,t),i=0;i<r.length;i++)n=m(n,r[i]);return n}});return m.toTex="\\gcd\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(39).flatten;t.name="hypot",t.factory=function(e,t,n,a){var s=n(r(85)),u=n(r(51)),c=n(r(78)),f=n(r(77)),l=n(r(362)),p=n(r(58)),m=n(r(363)),h=a("hypot",{"... number | BigNumber":function(e){for(var t=0,r=0,n=0;n<e.length;n++){var i=s(e[n]);p(r,i)?(t=f(t,f(c(r,i),c(r,i))),t=u(t,1),r=i):t=u(t,m(i)?f(c(i,r),c(i,r)):i)}return f(r,l(t))},Array:function(e){return h.apply(h,i(e))},Matrix:function(e){return h.apply(h,i(e.toArray()))}});return h.toTex="\\hypot\\left(${args}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="sqrt",t.factory=function(e,t,r,n){function a(r){return 0<=r||t.predictable?Math.sqrt(r):o(new e.Complex(r,0))}function o(t){var i=Math.sqrt(t.re*t.re+t.im*t.im),r=0<=t.re?.5*Math.sqrt(2*(i+t.re)):Math.abs(t.im)/Math.sqrt(2*(i-t.re)),i=t.re<=0?.5*Math.sqrt(2*(i-t.re)):Math.abs(t.im)/Math.sqrt(2*(i+t.re));return 0<=t.im?new e.Complex(r,i):new e.Complex(r,-i)}var s=n("sqrt",{number:a,Complex:o,BigNumber:function(e){return!e.isNegative()||t.predictable?e.sqrt():a(e.toNumber())},"Array | Matrix":function(e){return i(e,s,!0)},Unit:function(e){return e.pow(.5)}});return s.toTex="\\sqrt{${args[0]}}",s}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isPositive",t.factory=function(e,t,r,n){var a=n("isPositive",{number:function(e){return 0<e},BigNumber:function(e){return!e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return 0<e.s&&0<e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";function i(e,t){if(!a(e)||!a(t))throw new Error("Parameters in function lcm must be integer numbers");if(0==e||0==t)return 0;for(var r,n=e*t;0!=t;)t=e%(r=t),e=r;return Math.abs(n/e)}var a=r(6).isInteger;t.name="lcm",t.factory=function(e,t,n,a){var s=n(r(50)),u=n(r(354)),c=n(r(365)),f=n(r(84)),l=n(r(55)),p=n(r(56)),m=a("lcm",{"number, number":i,"BigNumber, BigNumber":function(t,r){if(!t.isInt()||!r.isInt())throw new Error("Parameters in function lcm must be integer numbers");if(t.isZero()||r.isZero())return new e.BigNumber(0);for(var n=t.times(r);!r.isZero();){var i=r;r=t.mod(i),t=i}return n.div(t).abs()},"Fraction, Fraction":function(t,r){return 0===t.n&&0===r.n?new e.Fraction(0):t.mul(r).abs().div(t.gcd(r))},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,m):u(t,e,m,!0):"sparse"===t.storage()?u(e,t,m,!1):l(e,t,m);return e},"Array, Array":function(e,t){return m(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return m(s(e),t)},"Matrix, Array":function(e,t){return m(e,s(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,m,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,m,!0);return t},"Array, number | BigNumber":function(e,t){return p(s(e),t,m,!1).valueOf()},"number | BigNumber, Array":function(e,t){return p(s(t),e,m,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,r){for(var n=m(e,t),i=0;i<r.length;i++)n=m(n,r[i]);return n}});return m.toTex="\\mathrm{${name}}\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(366),a=r(41);t.name="algorithm06",t.factory=function(e,t,n,o){var s=n(r(47)),u=e.SparseMatrix;return function(e,t,r){var n=e._values,c=e._size,f=e._datatype,l=t._values,p=t._size,m=t._datatype;if(c.length!==p.length)throw new a(c.length,p.length);if(c[0]!==p[0]||c[1]!==p[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+p+")");var h,p=c[0],v=c[1],d=s,y=0,x=r;"string"==typeof f&&f===m&&(d=o.find(s,[h=f,h]),y=o.convert(0,h),x=o.find(r,[h,h]));for(var b=n&&l?[]:void 0,w=[],N=[],E=new u({values:b,index:w,ptr:N,size:[p,v],datatype:h}),M=b?[]:void 0,A=[],_=[],O=0;O<v;O++){N[O]=w.length;var T=O+1;if(i(e,O,A,M,_,T,E,x),i(t,O,A,M,_,T,E,x),M)for(var C=N[O];C<w.length;){var S=w[C];_[S]!==T||d(S=M[S],y)?w.splice(C,1):(b.push(S),C++)}else for(var B=N[O];B<w.length;)_[w[B]]!==T?w.splice(B,1):B++}return N[v]=w.length,E}}},function(e,t){"use strict";e.exports=function(e,t,r,n,i,a,o,s,u,c,f){var l,p,m,h,g=e._values,v=e._index,e=e._ptr,y=o._index;if(n)for(p=e[t],m=e[t+1],l=p;l<m;l++)r[h=v[l]]!==a?(r[h]=a,y.push(h),c?(n[h]=u?s(g[l],f):s(f,g[l]),i[h]=a):n[h]=g[l]):(n[h]=u?s(g[l],n[h]):s(n[h],g[l]),i[h]=a);else for(p=e[t],m=e[t+1],l=p;l<m;l++)r[h=v[l]]!==a?(r[h]=a,y.push(h)):i[h]=a}},function(e,t,r){"use strict";var i=r(19);t.name="log10",t.factory=function(e,t,r,n){function a(t){return new e.Complex(Math.log(Math.sqrt(t.re*t.re+t.im*t.im))/Math.LN10,Math.atan2(t.im,t.re)/Math.LN10)}var o=n("log10",{number:function(r){return 0<=r||t.predictable?Math.log(r)/Math.LN10:o(new e.Complex(r,0))},Complex:a,BigNumber:function(r){return!r.isNegative()||t.predictable?r.log():a(new e.Complex(r.toNumber(),0))},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\log_{10}\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";t.name="mod",t.factory=function(e,t,n,i){var o=n(r(50)),s=r(29),u=n(r(354)),c=n(r(59)),f=n(r(76)),l=n(r(84)),p=n(r(61)),m=n(r(55)),h=n(r(56)),g=i("mod",{"number, number":function(e,t){if(0<t)return e-t*Math.floor(e/t);if(0===t)return e;throw new Error("Cannot calculate mod for a negative divisor")},"BigNumber, BigNumber":function(e,t){return t.isZero()?e:e.mod(t)},"Fraction, Fraction":function(e,t){return e.mod(t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,g,!1):u(t,e,g,!0):"sparse"===t.storage()?c(e,t,g,!1):m(e,t,g);return e},"Array, Array":function(e,t){return g(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return g(o(e),t)},"Matrix, Array":function(e,t){return g(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:h)(e,t,g,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?p:h)(t,e,g,!0);return t},"Array, any":function(e,t){return h(o(e),t,g,!1).valueOf()},"any, Array":function(e,t){return h(o(t),e,g,!0).valueOf()}});return g.toTex="\\left(${args[0]}"+s.operators.mod+"${args[1]}\\right)",g}},function(e,t,r){"use strict";t.name="norm",t.factory=function(e,t,n,i){function a(e,t){var n,i,h,d,y,x,b,r=e.size();if(1==r.length){if(t===Number.POSITIVE_INFINITY||"inf"===t)return n=0,e.forEach(function(e){e=o(e);p(e,n)&&(n=e)},!0),n;if(t===Number.NEGATIVE_INFINITY||"-inf"===t)return e.forEach(function(e){e=o(e);i&&!m(e,i)||(i=e)},!0),i||0;if("fro"===t)return a(e,2);if("number"!=typeof t||isNaN(t))throw new Error("Unsupported parameter value");return l(t,0)?Number.POSITIVE_INFINITY:(h=0,e.forEach(function(e){h=s(u(o(e),t),h)},!0),u(h,1/t))}if(2==r.length){if(1===t)return d=[],y=0,e.forEach(function(e,t){t=t[1],e=s(d[t]||0,o(e));p(e,y)&&(y=e),d[t]=e},!0),y;if(t===Number.POSITIVE_INFINITY||"inf"===t)return x=[],b=0,e.forEach(function(e,t){t=t[0],e=s(x[t]||0,o(e));p(e,b)&&(b=e),x[t]=e},!0),b;if("fro"===t)return c(g(f(v(e),e)));if(2===t)throw new Error("Unsupported parameter value, missing implementation of matrix singular value decomposition");throw new Error("Unsupported parameter value")}}var o=n(r(85)),s=n(r(49)),u=n(r(79)),c=n(r(362)),f=n(r(83)),l=n(r(47)),p=n(r(62)),m=n(r(58)),h=n(r(50)),g=n(r(370)),v=n(r(329)),n=i.find(o,["Complex"]),y=i("norm",{number:Math.abs,Complex:n,BigNumber:function(e){return e.abs()},"boolean | null":function(e){return Math.abs(e)},Array:function(e){return a(h(e),2)},Matrix:function(e){return a(e,2)},"number | Complex | BigNumber | boolean | null, number | BigNumber | string":function(e){return y(e)},"Array, number | BigNumber | string":function(e,t){return a(h(e),t)},"Matrix, number | BigNumber | string":a});return y.toTex={1:"\\left\\|${args[0]}\\right\\|",2:"\\mathrm{${name}}\\left(${args}\\right)"},y}},function(e,t,r){"use strict";var i=r(3).clone,a=r(23).format;t.name="trace",t.factory=function(e,t,n,o){var s=n(r(50)),u=n(r(49)),c=o("trace",{Array:function(e){return c(s(e))},Matrix:function(e){var t;switch(e.storage()){case"dense":t=f(e);break;case"sparse":t=l(e)}return t},any:i}),f=function(e){var t=e._size,r=e._data;switch(t.length){case 1:if(1==t[0])return i(r[0]);throw new RangeError("Matrix must be square (size: "+a(t)+")");case 2:var n=t[0];if(n!==t[1])throw new RangeError("Matrix must be square (size: "+a(t)+")");for(var s=0,c=0;c<n;c++)s=u(s,r[c][c]);return s;default:throw new RangeError("Matrix must be two dimensional (size: "+a(t)+")")}},l=function(e){var t=e._values,r=e._index,n=e._ptr,e=e._size,o=e[0],s=e[1];if(o!==s)throw new RangeError("Matrix must be square (size: "+a(e)+")");var c=0;if(0<t.length)for(var f=0;f<s;f++)for(var l=n[f],p=n[f+1],m=l;m<p;m++){var h=r[m];if(h===f){c=u(c,t[m]);break}if(f<h)break}return c};return c.toTex="\\mathrm{tr}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";function i(e,t){var r=t<0;if(0===(t=r?-t:t))throw new Error("Root must be non-zero");if(e<0&&Math.abs(t)%2!=1)throw new Error("Root must be odd when a is negative.");return 0==e?0:isFinite(e)?(t=Math.pow(Math.abs(e),1/t),t=e<0?-t:t,r?1/t:t):r?0:e}function a(e,t){if(t<0)throw new Error("Root must be greater than zero");if(0===t)throw new Error("Root must be non-zero");if(t%1!=0)throw new Error("Root must be an integer");for(var r=e.toPolar(),n=[],i=Math.pow(r.r,1/t),a=0;a<t;a++)n.push({r:i,phi:(r.phi+2*Math.PI*a)/t});return n}t.name="nthRoot",t.factory=function(e,t,n,o){function s(t,r){var n=e.BigNumber.precision,i=e.BigNumber.constructor({precision:n+2}),a=new e.BigNumber(0),i=new i(1),s=r.isNegative();if((r=s?r.neg():r).isZero())throw new Error("Root must be non-zero");if(t.isNegative()&&!r.abs().mod(2).equals(1))throw new Error("Root must be odd when a is negative.");return t.isZero()?a:t.isFinite()?(r=t.abs().pow(i.div(r)),r=t.isNeg()?r.neg():r,new e.BigNumber((s?i.div(r):r).toPrecision(n))):s?a:t}var u=n(r(50)),c=n(r(52)),f=n(r(354)),l=n(r(365)),p=n(r(84)),m=n(r(55)),h=n(r(56)),g=o("nthRoot",{number:function(e){return i(e,2)},"number, number":i,BigNumber:function(t){return s(t,new e.BigNumber(2))},Complex:function(e){return a(e,2)},"Complex, number":a,"BigNumber, BigNumber":s,"Array | Matrix":function(e){return g(e,2)},"Matrix, Matrix":function(e,t){var r;if("sparse"===e.storage())if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=l(e,t,g)}else r=f(t,e,g,!0);else if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=c(e,t,g,!1)}else r=m(e,t,g);return r},"Array, Array":function(e,t){return g(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return g(u(e),t)},"Matrix, Array":function(e,t){return g(e,u(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?p:h)(e,t,g,!1);return e},"number | BigNumber, Matrix":function(e,t){var r;if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=p(t,e,g,!0)}else r=h(t,e,g,!0);return r},"Array, number | BigNumber":function(e,t){return g(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return g(e,u(t)).valueOf()}});return g.toTex="\\sqrt[${args[1]}]{${args[0]}}",g}},function(e,t,r){"use strict";function i(e,t){return parseFloat(o(e,t))}var a=r(6).isInteger,o=r(6).toFixed,s=r(19),u="Number of decimals in function round must be an integer";t.name="round",t.factory=function(e,t,n,o){var c=n(r(50)),f=n(r(47)),l=n(r(373)),p=n(r(84)),m=n(r(61)),h=n(r(56)),g=o("round",{number:Math.round,"number, number":function(e,t){if(!a(t))throw new TypeError(u);if(t<0||15<t)throw new Error("Number of decimals in function round must be in te range of 0-15");return i(e,t)},Complex:function(t){return new e.Complex(Math.round(t.re),Math.round(t.im))},"Complex, number":function(t,r){return new e.Complex(i(t.re,r),i(t.im,r))},"Complex, BigNumber":function(t,r){if(r.isInteger())return r=r.toNumber(),new e.Complex(i(t.re,r),i(t.im,r));throw new TypeError(u)},"number, BigNumber":function(t,r){if(r.isInteger())return new e.BigNumber(t).toDecimalPlaces(r.toNumber());throw new TypeError(u)},BigNumber:function(e){return e.toDecimalPlaces(0)},"BigNumber, BigNumber":function(e,t){if(t.isInteger())return e.toDecimalPlaces(t.toNumber());throw new TypeError(u)},Fraction:function(e){return e.round()},"Array | Matrix":function(e){return s(e,g,!0)},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?p:h)(e,t,g,!1);return e},"number | Complex | BigNumber, Matrix":function(e,t){return f(e,0)?l(t.size(),t.storage()):("sparse"===t.storage()?m:h)(t,e,g,!0)},"Array, number | BigNumber":function(e,t){return h(c(e),t,g,!1).valueOf()},"number | Complex | BigNumber, Array":function(e,t){return h(c(t),e,g,!0).valueOf()}});return g.toTex={1:"\\left\\lfloor${args[0]}\\right\\rceil",2:"\\mathrm{${name}}\\left(${args}\\right)"},g}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).resize;t.name="zeros",t.factory=function(e,t,n,o){function s(t,r){var i=function(e){var t=!1;return e.forEach(function(e,r,n){e&&!0===e.isBigNumber&&(t=!0,n[r]=e.toNumber())}),t}(t)?new e.BigNumber(0):0;return c(t),r?(r=f(r),0<t.length?r.resize(t,i):r):(r=[],0<t.length?a(r,t,i):r)}function c(e){e.forEach(function(e){if("number"!=typeof e||!i(e)||e<0)throw new Error("Parameters in function zeros must be positive integers")})}var f=n(r(50));return(n=o("zeros",{"":function(){return"array"===t.matrix?s([]):s([],"default")},"...number | BigNumber | string":function(e){var n;return"string"==typeof e[e.length-1]?(n=e.pop(),s(e,n)):"array"===t.matrix?s(e):s(e,"default")},Array:s,Matrix:function(e){var t=e.storage();return s(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6),a=r(19);t.name="sign",t.factory=function(e,t,r,n){var o=n("sign",{number:i.sign,Complex:function(t){var r=Math.sqrt(t.re*t.re+t.im*t.im);return new e.Complex(t.re/r,t.im/r)},BigNumber:function(t){return new e.BigNumber(t.cmp(0))},Fraction:function(t){return new e.Fraction(t.s)},"Array | Matrix":function(e){return a(e,o,!0)},Unit:function(e){return o(e.value)}});return o.toTex="\\mathrm{${name}}\\left(${args}\\right)",o}},function(e,t,r){"use strict";var i=r(19);t.name="square",t.factory=function(e,t,r,n){var a=n("square",{number:function(e){return e*e},Complex:function(t){return new e.Complex(t.re*t.re-t.im*t.im,t.re*t.im+t.im*t.re)},BigNumber:function(e){return e.times(e)},Fraction:function(e){return e.mul(e)},"Array | Matrix":function(e){return i(e,a,!0)},Unit:function(e){return e.pow(2)}});return a.toTex="\\left(${args[0]}\\right)^2",a}},function(e,t,r){"use strict";var i=r(19);t.name="unaryPlus",t.factory=function(e,t,n,a){var o=r(29),s=a("unaryPlus",{number:function(e){return e},Complex:function(e){return e.clone()},BigNumber:function(e){return e},Fraction:function(e){return e},Unit:function(e){return e.clone()},"Array | Matrix":function(e){return i(e,s,!0)},"boolean | string | null":function(r){return"bignumber"==t.number?new e.BigNumber(+r):+r}});return s.toTex=o.operators.unaryPlus+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="xgcd",t.factory=function(e,t,n,a){var u=n(r(50));return(n=a("xgcd",{"number, number":function(e,r){var n,a,o,p,s=0,c=1,f=1,l=0;if(!i(e)||!i(r))throw new Error("Parameters in function xgcd must be integer numbers");for(;r;)o=e%r,s=c-(a=Math.floor(e/r))*(n=s),c=n,f=l-a*(n=f),l=n,e=r,r=o;return p=e<0?[-e,-c,-l]:[e,e?c:0,l],"array"===t.matrix?p:u(p)},"BigNumber, BigNumber":function(r,n){var i,a,o,s=new e.BigNumber(0),c=new e.BigNumber(0),f=new e.BigNumber(1),l=new e.BigNumber(1),p=new e.BigNumber(0);if(!r.isInt()||!n.isInt())throw new Error("Parameters in function xgcd must be integer numbers");for(;!n.isZero();)a=r.div(n).floor(),o=r.mod(n),i=c,c=f.minus(a.times(c)),f=i,i=l,l=p.minus(a.times(l)),p=i,r=n,n=o;return s=r.lt(s)?[r.neg(),f.neg(),p.neg()]:[r,r.isZero()?0:f,p],"array"===t.matrix?s:u(s)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(379),r(383),r(384),r(386),r(388),r(391),r(393)]},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(380);t.name="bitAnd",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(354)),f=n(r(365)),l=n(r(84)),p=n(r(55)),m=n(r(56)),h=o("bitAnd",{"number, number":function(e,t){if(i(e)&&i(t))return e&t;throw new Error("Integers expected in function bitAnd")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h,!1):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitAnd+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitAnd");var r=e.constructor;if(e.isNaN()||t.isNaN())return new r(NaN);if(e.isZero()||t.eq(-1)||e.eq(t))return e;if(t.isZero()||e.eq(-1))return t;if(!e.isFinite()||!t.isFinite()){if(!e.isFinite()&&!t.isFinite())return e.isNegative()==t.isNegative()?e:new r(0);if(!e.isFinite())return t.isNegative()?e:e.isNegative()?new r(0):t;if(!t.isFinite())return e.isNegative()?t:t.isNegative()?new r(0):e}return n(e,t,function(e,t){return e&t})}},function(e,t,r){function n(e){for(var t=e.c,r=t[0]+"",n=1;n<t.length;++n){for(var i=t[n]+"",a=7-i.length;a--;)i="0"+i;r+=i}for(o=r.length-1;"0"==r.charAt(o);--o);var s=e.e,u=r.slice(0,o+1||1),e=u.length;if(0<s)if(++s>e)for(s-=e;s--;u+="0");else s<e&&(u=u.slice(0,s)+"."+u.slice(s));for(var f=[0],n=0;n<u.length;){for(var l=f.length;l--;f[l]*=10);f[0]+=u.charAt(n++)<<0;for(var o=0;o<f.length;++o)1<f[o]&&(null==f[o+1]&&(f[o+1]=0),f[o+1]+=f[o]>>1,f[o]&=1)}return f.reverse()}var i=r(382);e.exports=function(e,t,r){var l,p,s=e.constructor,u=+(e.s<0),c=+(t.s<0);if(u)for(var a=n(i(e)),f=0;f<a.length;++f)a[f]^=1;else a=n(e);if(c)for(var o=n(i(t)),f=0;f<o.length;++f)o[f]^=1;else o=n(t);var m=a.length<=o.length?(l=a,p=o,u):(l=o,p=a,c),h=l.length,g=p.length,v=1^r(u,c),d=new s(1^v),y=s.ONE,x=new s(2),e=s.precision;for(s.config({precision:1e9});0<h;)r(l[--h],p[--g])==v&&(d=d.plus(y)),y=y.times(x);for(;0<g;)r(m,p[--g])==v&&(d=d.plus(y)),y=y.times(x);return s.config({precision:e}),0==v&&(d.s=-d.s),d}},function(e,t){e.exports=function(e){if(e.isFinite()&&!e.isInteger())throw new Error("Integer expected in function bitNot");var t=e.constructor,r=t.precision;return t.config({precision:1e9}),(e=e.plus(t.ONE)).s=-e.s||null,t.config({precision:r}),e}},function(e,t,r){"use strict";var i=r(19),a=r(382),o=r(6).isInteger;t.name="bitNot",t.factory=function(e,t,n,s){var u=r(29),c=s("bitNot",{number:function(e){if(o(e))return~e;throw new Error("Integer expected in function bitNot")},BigNumber:a,"Array | Matrix":function(e){return i(e,c)}});return c.toTex=u.operators.bitNot+"\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(385);t.name="bitOr",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(52)),f=n(r(53)),l=n(r(54)),p=n(r(55)),m=n(r(56)),h=o("bitOr",{"number, number":function(e,t){if(i(e)&&i(t))return e|t;throw new Error("Integers expected in function bitOr")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitOr+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitOr");var r=e.constructor;return e.isNaN()||t.isNaN()?new r(NaN):(r=new r(-1),e.isZero()||t.eq(r)||e.eq(t)?t:t.isZero()||e.eq(r)?e:e.isFinite()&&t.isFinite()?n(e,t,function(e,t){return e|t}):!e.isFinite()&&!e.isNegative()&&t.isNegative()||e.isNegative()&&!t.isNegative()&&!t.isFinite()?r:e.isNegative()&&t.isNegative()?e.isFinite()?e:t:e.isFinite()?t:e)}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(387);t.name="bitXor",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(59)),f=n(r(60)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=o("bitXor",{"number, number":function(e,t){if(i(e)&&i(t))return e^t;throw new Error("Integers expected in function bitXor")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitXor+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381),i=r(382);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitXor");var a,r=e.constructor;return e.isNaN()||t.isNaN()?new r(NaN):e.isZero()?t:t.isZero()?e:e.eq(t)?new r(0):(a=new r(-1),e.eq(a)?i(t):t.eq(a)?i(e):e.isFinite()&&t.isFinite()?n(e,t,function(e,t){return e^t}):e.isFinite()||t.isFinite()?new r(e.isNegative()==t.isNegative()?1/0:-1/0):a)}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(389);t.name="leftShift",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(47)),f=n(r(373)),l=n(r(52)),p=n(r(354)),m=n(r(390)),h=n(r(54)),g=n(r(84)),v=n(r(55)),d=n(r(56)),y=o("leftShift",{"number, number":function(e,t){if(i(e)&&i(t))return e<<t;throw new Error("Integers expected in function leftShift")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?m(e,t,y,!1):p(t,e,y,!0):"sparse"===t.storage()?l(e,t,y,!1):v(e,t,y);return e},"Array, Array":function(e,t){return y(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return y(u(e),t)},"Matrix, Array":function(e,t){return y(e,u(t))},"Matrix, number | BigNumber":function(e,t){return c(t,0)?e.clone():("sparse"===e.storage()?g:d)(e,t,y,!1)},"number | BigNumber, Matrix":function(e,t){return c(e,0)?f(t.size(),t.storage()):("sparse"===t.storage()?h:d)(t,e,y,!0)},"Array, number | BigNumber":function(e,t){return y(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return y(e,u(t)).valueOf()}});return y.toTex="\\left(${args[0]}"+s.operators.leftShift+"${args[1]}\\right)",y}},function(e,t){e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function leftShift");var r=e.constructor;return e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero()?new r(NaN):e.isZero()||t.isZero()?e:e.isFinite()||t.isFinite()?t.lt(55)?e.times(Math.pow(2,t.toNumber())+""):e.times(new r(2).pow(t)):new r(NaN)}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm08",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");if(!n||!p)throw new Error("Cannot perform operation on Pattern Sparse Matrices");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var O=[],T=[],C=[],f=new s({values:O,index:T,ptr:C,size:[g,x],datatype:d}),z=[],B=[],k=0;k<x;k++){C[k]=T.length;for(var I=k+1,M=c[k],A=c[k+1],E=M;E<A;E++)B[_=u[E]]=I,z[_]=n[E],T.push(_);for(M=h[k],A=h[k+1],E=M;E<A;E++)B[_=m[E]]===I&&(z[_]=N(z[_],p[E]));for(E=C[k];E<T.length;){var _,R=z[_=T[E]];b(R,w)?T.splice(E,1):(O.push(R),E++)}}return C[x]=T.length,f}}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(392);t.name="rightArithShift",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(47)),f=n(r(373)),l=n(r(52)),p=n(r(354)),m=n(r(390)),h=n(r(54)),g=n(r(84)),v=n(r(55)),d=n(r(56)),y=o("rightArithShift",{"number, number":function(e,t){if(i(e)&&i(t))return e>>t;throw new Error("Integers expected in function rightArithShift")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?m(e,t,y,!1):p(t,e,y,!0):"sparse"===t.storage()?l(e,t,y,!1):v(e,t,y);return e},"Array, Array":function(e,t){return y(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return y(u(e),t)},"Matrix, Array":function(e,t){return y(e,u(t))},"Matrix, number | BigNumber":function(e,t){return c(t,0)?e.clone():("sparse"===e.storage()?g:d)(e,t,y,!1)},"number | BigNumber, Matrix":function(e,t){return c(e,0)?f(t.size(),t.storage()):("sparse"===t.storage()?h:d)(t,e,y,!0)},"Array, number | BigNumber":function(e,t){return y(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return y(e,u(t)).valueOf()}});return y.toTex="\\left(${args[0]}"+s.operators.rightArithShift+"${args[1]}\\right)",y}},function(e,t){e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function rightArithShift");var r=e.constructor;return e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero()?new r(NaN):e.isZero()||t.isZero()?e:t.isFinite()?(t.lt(55)?e.div(Math.pow(2,t.toNumber())+""):e.div(new r(2).pow(t))).floor():new r(e.isNegative()?-1:e.isFinite()?0:NaN)}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="rightLogShift",t.factory=function(e,t,n,a){var o=r(29),s=n(r(50)),u=n(r(47)),c=n(r(373)),f=n(r(52)),l=n(r(354)),p=n(r(390)),m=n(r(54)),h=n(r(84)),g=n(r(55)),v=n(r(56)),d=a("rightLogShift",{"number, number":function(e,t){if(i(e)&&i(t))return e>>>t;throw new Error("Integers expected in function rightLogShift")},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?p(e,t,d,!1):l(t,e,d,!0):"sparse"===t.storage()?f(e,t,d,!1):g(e,t,d);return e},"Array, Array":function(e,t){return d(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return d(s(e),t)},"Matrix, Array":function(e,t){return d(e,s(t))},"Matrix, number | BigNumber":function(e,t){return u(t,0)?e.clone():("sparse"===e.storage()?h:v)(e,t,d,!1)},"number | BigNumber, Matrix":function(e,t){return u(e,0)?c(t.size(),t.storage()):("sparse"===t.storage()?m:v)(t,e,d,!0)},"Array, number | BigNumber":function(e,t){return d(s(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return d(e,s(t)).valueOf()}});return d.toTex="\\left(${args[0]}"+o.operators.rightLogShift+"${args[1]}\\right)",d}},function(e,t,r){e.exports=[r(395),r(401),r(396),r(402)]},function(e,t,r){"use strict";t.name="bellNumbers",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(396)),s=n(r(350)),u=n(r(400));return(n=i("bellNumbers",{"number | BigNumber":function(e){if(!u(e)||s(e))throw new TypeError("Non-negative integer value expected in function bellNumbers");for(var t=0,r=0;r<=e;r++)t=a(t,o(e,r));return t}})).toTex="\\mathrm{B}_{${args[0]}}",n}},function(e,t,r){"use strict";t.name="stirlingS2",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(74)),s=n(r(83)),u=n(r(310)),c=n(r(79)),f=n(r(397)),l=n(r(399)),p=n(r(350)),m=n(r(400)),h=n(r(62));return(n=i("stirlingS2",{"number | BigNumber, number | BigNumber":function(e,t){if(!m(e)||p(e)||!m(t)||p(t))throw new TypeError("Non-negative integer value expected in function stirlingS2");if(h(t,e))throw new TypeError("k must be less than or equal to n in function stirlingS2");for(var r=f(t),n=0,i=0;i<=t;i++)var g=c(-1,o(t,i)),v=l(t,i),d=c(i,e),n=a(n,s(s(v,d),g));return u(n,r)}})).toTex="\\mathrm{S}\\left(${args[0]},${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(19);r(93),t.name="factorial",t.factory=function(e,t,n,a){var o=n(r(398)),n=r(29),u=a("factorial",{number:function(e){if(e<0)throw new Error("Value must be non-negative");return o(e+1)},BigNumber:function(e){if(e.isNegative())throw new Error("Value must be non-negative");return o(e.plus(1))},"Array | Matrix":function(e){return i(e,u)}});return u.toTex="\\left(${args[0]}\\right)"+n.operators.factorial,u}},function(e,t,r){"use strict";var i=r(19),a=r(6).isInteger,o=4.7421875,s=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3399464998481189e-20,4652362892704858e-20,-9837447530487956e-20,.0001580887032249125,-.00021026444172410488,.00021743961811521265,-.0001643181065367639,8441822398385275e-20,-26190838401581408e-21,36899182659531625e-22];t.name="gamma",t.factory=function(e,t,n,u){function c(r){if(r.isZero())return new e.BigNumber(1);for(var n=t.precision+(0|Math.log(r.toNumber())),a=new(e.BigNumber.constructor({precision:n}))(r),o=r.toNumber()-1;1<o;)a=a.times(o),o--;return new e.BigNumber(a.toPrecision(e.BigNumber.precision))}var f=n(r(83)),l=n(r(79)),p=u("gamma",{number:function(e){var u,c,f,l;if(a(e)){if(e<=0)return isFinite(e)?1/0:NaN;if(171<e)return 1/0;for(var n=e-2,i=e-1;1<n;)i*=n,n--;return i=0==i?1:i}if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*p(1-e));if(171.35<=e)return 1/0;if(85<e)return l=(f=(c=(u=e*e)*e)*e)*e,Math.sqrt(2*Math.PI/e)*Math.pow(e/Math.E,e)*(1+1/(12*e)+1/(288*u)-139/(51840*c)-571/(2488320*f)+163879/(209018880*l)+5246819/(75246796800*l*e));--e;for(var r=s[0],m=1;m<s.length;++m)r+=s[m]/(e+m);return u=e+o+.5,Math.sqrt(2*Math.PI)*Math.pow(u,e+.5)*Math.exp(-u)*r},Complex:function(t){if(0==t.im)return p(t.re);t=new e.Complex(t.re-1,t.im);for(var n=new e.Complex(s[0],0),i=1;i<s.length;++i){var a=t.re+i,u=a*a+t.im*t.im;0!=u?(n.re+=s[i]*a/u,n.im+=-(s[i]*t.im)/u):n.re=s[i]<0?-1/0:1/0}var r=new e.Complex(t.re+o+.5,t.im),c=Math.sqrt(2*Math.PI),m=(t.re+=.5,l(r,t)),c=(0==m.im?m.re*=c:(0!=m.re&&(m.re*=c),m.im*=c),Math.exp(-r.re));return r.re=c*Math.cos(-r.im),r.im=c*Math.sin(-r.im),f(f(m,r),n)},BigNumber:function(t){if(t.isInteger())return t.isNegative()||t.isZero()?new e.BigNumber(1/0):c(t.minus(1));if(t.isFinite())throw new Error("Integer BigNumber expected");return new e.BigNumber(t.isNegative()?NaN:1/0)},"Array | Matrix":function(e){return i(e,p)}});return p.toTex="\\Gamma\\left(${args[0]}\\right)",p}},function(e,t,r){"use strict";function i(e){return e.isInteger()&&e.gte(0)}var a=r(6).isInteger;t.name="combinations",t.factory=function(e,t,r,n){return(n=n("combinations",{"number, number":function(e,t){var r,n,i;if(!a(e)||e<0)throw new TypeError("Positive integer value expected in function combinations");if(!a(t)||t<0)throw new TypeError("Positive integer value expected in function combinations");if(e<t)throw new TypeError("k must be less than or equal to n");for(r=Math.max(t,e-t),i=n=1;i<=e-r;i++)n=n*(r+i)/i;return n},"BigNumber, BigNumber":function(t,r){var n,a,o,s,u=new e.BigNumber(1);if(!i(t)||!i(r))throw new TypeError("Positive integer value expected in function combinations");if(r.gt(t))throw new TypeError("k must be less than n in function combinations");for(n=t.minus(r),r.lt(n)&&(n=r),o=a=u,s=t.minus(n);o.lte(s);o=o.plus(1))a=a.times(n.plus(o)).dividedBy(o);return a}})).toTex="\\binom{${args[0]}}{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(19),a=r(6);t.name="isInteger",t.factory=function(e,t,r,n){var o=n("isInteger",{number:a.isInteger,BigNumber:function(e){return e.isInt()},Fraction:function(e){return 1===e.d&&isFinite(e.n)},"Array | Matrix":function(e){return i(e,o)}});return o}},function(e,t,r){"use strict";t.name="composition",t.factory=function(e,t,n,i){var a=n(r(399)),o=n(r(51)),s=n(r(363)),u=n(r(400)),c=n(r(62));return(n=i("composition",{"number | BigNumber, number | BigNumber":function(e,t){if(!(u(e)&&s(e)&&u(t)&&s(t)))throw new TypeError("Positive integer value expected in function composition");if(c(t,e))throw new TypeError("k must be less than or equal to n in function composition");return a(o(e,-1),o(t,-1))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="catalan",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(310)),s=n(r(83)),u=n(r(399)),c=n(r(350)),f=n(r(400));return(n=i("catalan",{"number | BigNumber":function(e){if(!f(e)||c(e))throw new TypeError("Non-negative integer value expected in function catalan");return o(u(s(e,2),e),a(e,1))}})).toTex="\\mathrm{C}_{${args[0]}}",n}},function(e,t,r){e.exports=[r(404),r(405),r(406),r(407)]},function(e,t,r){"use strict";var i=r(19);t.name="arg",t.factory=function(e,t,r,n){var a=n("arg",{number:function(e){return Math.atan2(0,e)},Complex:function(e){return Math.atan2(e.im,e.re)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\arg\\left(${args[0]}\\right)",a}},function(e,t,r){"use strict";var i=r(19);t.name="conj",t.factory=function(e,t,r,n){var a=n("conj",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(t){return new e.Complex(t.re,-t.im)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\left(${args[0]}\\right)^*",a}},function(e,t,r){"use strict";var i=r(19);t.name="im",t.factory=function(e,t,r,n){var a=n("im",{number:function(e){return 0},BigNumber:function(t){return new e.BigNumber(0)},Complex:function(e){return e.im},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\Im\\left\\lbrace${args[0]}\\right\\rbrace",a}},function(e,t,r){"use strict";var i=r(19);t.name="re",t.factory=function(e,t,r,n){var a=n("re",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(e){return e.re},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\Re\\left\\lbrace${args[0]}\\right\\rbrace",a}},function(e,t,r){e.exports=[r(409),r(410)]},function(e,t,r){"use strict";function i(e){return 2===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]}function a(e){return 3===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]&&"number"==typeof e[2]}t.name="intersect",t.factory=function(e,t,n,f){var l=n(r(50)),p=f("intersect",{"Array, Array, Array":function(e,t,r){if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(!a(t))throw new TypeError("Array with 3 numbers expected for second argument");if(function(e){return 4===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]&&"number"==typeof e[2]&&"number"==typeof e[3]}(r))return function(e,t,r,n,i,a,o,s,u,c){c=(c-e*o-t*s-r*u)/(n*o+i*s+a*u-e-t-r);return[e+c*(n-e),t+c*(i-t),r+c*(a-r)]}(e[0],e[1],e[2],t[0],t[1],t[2],r[0],r[1],r[2],r[3]);throw new TypeError("Array with 4 numbers expected as third argument")},"Array, Array, Array, Array":function(e,t,r,n){if(2===e.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(!i(t))throw new TypeError("Array with 2 numbers expected for second argument");if(!i(r))throw new TypeError("Array with 2 numbers expected for third argument");if(i(n))return function(e,t,r,n,i,a,o,s){var u=(e-i)*(o-i)+(t-a)*(s-a),c=(o-i)*(r-e)+(s-a)*(n-t),l=(o-i)*(o-i)+(s-a)*(s-a),m=(u*c-((e-i)*(r-e)+(t-a)*(n-t))*l)/(((r-e)*(r-e)+(n-t)*(n-t))*l-c*c),u=(u+m*c)/l,c=e+m*(r-e),l=t+m*(n-t),r=a+u*(s-a);return c===i+u*(o-i)&&l===r?[c,l]:null}(e[0],e[1],t[0],t[1],r[0],r[1],n[0],n[1]);throw new TypeError("Array with 2 numbers expected for fourth argument")}if(3!==e.length)throw new TypeError("Arrays with two or thee dimensional points expected");if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(!a(t))throw new TypeError("Array with 3 numbers expected for second argument");if(!a(r))throw new TypeError("Array with 3 numbers expected for third argument");if(a(n))return function(e,t,r,n,i,a,o,s,u,c,f,l){var p=(e-o)*(c-o)+(t-s)*(f-s)+(r-u)*(l-u),m=(c-o)*(n-e)+(f-s)*(i-t)+(l-u)*(a-r),g=(c-o)*(c-o)+(f-s)*(f-s)+(l-u)*(l-u),d=(p*m-((e-o)*(n-e)+(t-s)*(i-t)+(r-u)*(a-r))*g)/(((n-e)*(n-e)+(i-t)*(i-t)+(a-r)*(a-r))*g-m*m),p=(p+d*m)/g,m=e+d*(n-e),g=t+d*(i-t),n=r+d*(a-r),e=s+p*(f-s),i=u+p*(l-u);return m===o+p*(c-o)&&g===e&&n===i?[m,g,n]:null}(e[0],e[1],e[2],t[0],t[1],t[2],r[0],r[1],r[2],n[0],n[1],n[2]);throw new TypeError("Array with 3 numbers expected for fourth argument")},"Matrix, Matrix, Matrix":function(e,t,r){return l(p(e.valueOf(),t.valueOf(),r.valueOf()))},"Matrix, Matrix, Matrix, Matrix":function(e,t,r,n){return l(p(e.valueOf(),t.valueOf(),r.valueOf(),n.valueOf()))}});return p}},function(e,t,r){"use strict";function i(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]}function a(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]&&"number"==typeof e[2]}function o(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]&&"number"==typeof e[2]&&"number"==typeof e[3]&&"number"==typeof e[4]&&"number"==typeof e[5]}function s(e){for(var t=Object.keys(e),r=[],n=0;n<t.length;n++)r.push(e[t[n]]);return r}function c(e,t,r,n,i){return Math.abs(r*e+n*t+i)/Math.pow(r*r+n*n,.5)}function f(e,t,r,n,i,a,o,s,u){a=[(i-t)*u-(a-r)*s,(a-r)*o-(n-e)*u,(n-e)*s-(i-t)*o];return Math.pow(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],.5)/Math.pow(o*o+s*s+u*u,.5)}function l(e,t,r,n){n-=t,t=r-e;return Math.pow(n*n+t*t,.5)}function p(e,t,r,n,i,a){a-=r,r=i-t,i=n-e;return Math.pow(a*a+r*r+i*i,.5)}t.name="distance",t.factory=function(e,t,n,s){return n(r(50)),s("distance",{"Array, Array, Array":function(e,t,r){if(2!=e.length||2!=t.length||2!=r.length)throw new TypeError("Invalid Arguments: Try again");if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(!i(t))throw new TypeError("Array with 2 numbers expected for second argument");var a;if(i(r))return a=(r=(r[1]-r[0])/(t[1]-t[0]))*r*t[0],r=r*t[0]*-1,t=e[1],c(e[0],e[1],a,r,t);throw new TypeError("Array with 2 numbers expected for third argument")},"Object, Object, Object":function(e,t,r){if(2!=Object.keys(e).length||2!=Object.keys(t).length||2!=Object.keys(r).length)throw new TypeError("Invalid Arguments: Try again");if(!i(e))throw new TypeError("Values of pointX and pointY should be numbers");if(!i(t))throw new TypeError("Values of lineOnePtX and lineOnePtY should be numbers");if(!i(r))throw new TypeError("Values of lineTwoPtX and lineTwoPtY should be numbers");var a;if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("lineOnePtX")&&t.hasOwnProperty("lineOnePtY")&&r.hasOwnProperty("lineTwoPtX")&&r.hasOwnProperty("lineTwoPtY"))return a=(r=(r.lineTwoPtY-r.lineTwoPtX)/(t.lineOnePtY-t.lineOnePtX))*r*t.lineOnePtX,r=r*t.lineOnePtX*-1,t=e.pointX,c(e.pointX,e.pointY,a,r,t);throw new TypeError("Key names do not match")},"Array, Array":function(e,t){if(2==e.length&&3==t.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(a(t))return c(e[0],e[1],t[0],t[1],t[2])}else{if(3==e.length&&6==t.length){if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(o(t))return f(e[0],e[1],e[2],t[0],t[1],t[2],t[3],t[4],t[5]);throw new TypeError("Array with 6 numbers expected for second argument")}if(2==e.length&&2==t.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(i(t))return l(e[0],e[1],t[0],t[1]);throw new TypeError("Array with 2 numbers expected for second argument")}if(3!=e.length||3!=t.length)throw new TypeError("Invalid Arguments: Try again");if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(a(t))return p(e[0],e[1],e[2],t[0],t[1],t[2])}throw new TypeError("Array with 3 numbers expected for second argument")},"Object, Object":function(e,t){if(2==Object.keys(e).length&&3==Object.keys(t).length){if(!i(e))throw new TypeError("Values of pointX and pointY should be numbers");if(!a(t))throw new TypeError("Values of xCoeffLine, yCoeffLine and constant should be numbers");if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("xCoeffLine")&&t.hasOwnProperty("yCoeffLine")&&t.hasOwnProperty("yCoeffLine"))return c(e.pointX,e.pointY,t.xCoeffLine,t.yCoeffLine,t.constant)}else if(3==Object.keys(e).length&&6==Object.keys(t).length){if(!a(e))throw new TypeError("Values of pointX, pointY and pointZ should be numbers");if(!o(t))throw new TypeError("Values of x0, y0, z0, a, b and c should be numbers");if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("x0")&&t.hasOwnProperty("y0")&&t.hasOwnProperty("z0")&&t.hasOwnProperty("a")&&t.hasOwnProperty("b")&&t.hasOwnProperty("c"))return f(e.pointX,e.pointY,e.pointZ,t.x0,t.y0,t.z0,t.a,t.b,t.c)}else if(2==Object.keys(e).length&&2==Object.keys(t).length){if(!i(e))throw new TypeError("Values of pointOneX and pointOneY should be numbers");if(!i(t))throw new TypeError("Values of pointTwoX and pointTwoY should be numbers");if(e.hasOwnProperty("pointOneX")&&e.hasOwnProperty("pointOneY")&&t.hasOwnProperty("pointTwoX")&&t.hasOwnProperty("pointTwoY"))return l(e.pointOneX,e.pointOneY,t.pointTwoX,t.pointTwoY)}else{if(3!=Object.keys(e).length||3!=Object.keys(t).length)throw new TypeError("Invalid Arguments: Try again");if(!a(e))throw new TypeError("Values of pointOneX, pointOneY and pointOneZ should be numbers");if(!a(t))throw new TypeError("Values of pointTwoX, pointTwoY and pointTwoZ should be numbers");if(e.hasOwnProperty("pointOneX")&&e.hasOwnProperty("pointOneY")&&e.hasOwnProperty("pointOneZ")&&t.hasOwnProperty("pointTwoX")&&t.hasOwnProperty("pointTwoY")&&t.hasOwnProperty("pointTwoZ"))return p(e.pointOneX,e.pointOneY,e.pointOneZ,t.pointTwoX,t.pointTwoY,t.pointTwoZ)}throw new TypeError("Key names do not match")},Array:function(e){if(function(e){if(2==e[0].length&&"number"==typeof e[0][0]&&"number"==typeof e[0][1]){for(var t in e)if(2!=e[t].length||"number"!=typeof e[t][0]||"number"!=typeof e[t][1])return}else{if(3!=e[0].length||"number"!=typeof e[0][0]||"number"!=typeof e[0][1]||"number"!=typeof e[0][2])return;for(var t in e)if(3!=e[t].length||"number"!=typeof e[t][0]||"number"!=typeof e[t][1]||"number"!=typeof e[t][2])return}return 1}(e))return function(e){for(var t=[],r=0;r<e.length-1;r++)for(var n=r+1;n<e.length;n++)2==e[0].length?t.push(l(e[r][0],e[r][1],e[n][0],e[n][1])):3==e[0].length&&t.push(p(e[r][0],e[r][1],e[r][2],e[n][0],e[n][1],e[n][2]));return t}(e);throw new TypeError("Incorrect array format entered for pairwise distance calculation")}})}},function(e,t,r){e.exports=[r(412),r(413),r(415),r(416)]},function(e,t,r){"use strict";t.name="and",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(373)),u=n(r(413)),c=(n(r(414)),n(r(354))),f=n(r(365)),l=n(r(84)),p=n(r(55)),m=n(r(56)),h=i("and",{"number, number":function(e,t){return!(!e||!t)},"Complex, Complex":function(e,t){return!(0===e.re&&0===e.im||0===t.re&&0===t.im)},"BigNumber, BigNumber":function(e,t){return!(e.isZero()||t.isZero()||e.isNaN()||t.isNaN())},"Unit, Unit":function(e,t){return h(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h,!1):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, any":function(e,t){return u(t)?s(e.size(),e.storage()):("sparse"===e.storage()?l:m)(e,t,h,!1)},"any, Matrix":function(e,t){return u(e)?s(e.size(),e.storage()):("sparse"===t.storage()?l:m)(t,e,h,!0)},"Array, any":function(e,t){return h(o(e),t).valueOf()},"any, Array":function(e,t){return h(e,o(t)).valueOf()}});return h.toTex="\\left(${args[0]}"+a.operators.and+"${args[1]}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="not",t.factory=function(e,t,n,a){var o=r(29),s=a("not",{number:function(e){return!e},Complex:function(e){return 0===e.re&&0===e.im},BigNumber:function(e){return e.isZero()||e.isNaN()},Unit:function(e){return s(e.value)},"Array | Matrix":function(e){return i(e,s)}});return s.toTex=o.operators.not+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isZero",t.factory=function(e,t,r,n){var a=n("isZero",{number:function(e){return 0===e},BigNumber:function(e){return e.isZero()},Complex:function(e){return 0===e.re&&0===e.im},Fraction:function(e){return 1===e.d&&0===e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";t.name="or",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(59)),u=n(r(76)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=i("or",{"number, number":function(e,t){return!(!e&&!t)},"Complex, Complex":function(e,t){return 0!==e.re||0!==e.im||0!==t.re||0!==t.im},"BigNumber, BigNumber":function(e,t){return!e.isZero()&&!e.isNaN()||!t.isZero()&&!t.isNaN()},"Unit, Unit":function(e,t){return p(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\left(${args[0]}"+a.operators.or+"${args[1]}\\right)",p}},function(e,t,r){"use strict";t.name="xor",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=i("xor",{"number, number":function(e,t){return!!(!!e^!!t)},"Complex, Complex":function(e,t){return!!((0!==e.re||0!==e.im)^(0!==t.re||0!==t.im))},"BigNumber, BigNumber":function(e,t){return!!((!e.isZero()&&!e.isNaN())^(!t.isZero()&&!t.isNaN()))},"Unit, Unit":function(e,t){return p(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\left(${args[0]}"+a.operators.xor+"${args[1]}\\right)",p}},function(e,t,r){e.exports=[r(295),r(418),r(312),r(419),r(420),r(81),r(421),r(311),r(422),r(316),r(423),r(424),r(425),r(318),r(370),r(329),r(373)]},function(e,t,r){"use strict";var i=r(39).size;t.name="cross",t.factory=function(e,t,n,a){function o(e,t){var r=i(e),n=i(t);if(1!=r.length||1!=n.length||3!=r[0]||3!=n[0])throw new RangeError("Vectors with length 3 expected (Size A = ["+r.join(", ")+"], B = ["+n.join(", ")+"])");return[u(c(e[1],t[2]),c(e[2],t[1])),u(c(e[2],t[0]),c(e[0],t[2])),u(c(e[0],t[1]),c(e[1],t[0]))]}var s=n(r(50)),u=n(r(74)),c=n(r(83));return(n=a("cross",{"Matrix, Matrix":function(e,t){return s(o(e.toArray(),t.toArray()))},"Matrix, Array":function(e,t){return s(o(e.toArray(),t))},"Array, Matrix":function(e,t){return s(o(e,t.toArray()))},"Array, Array":o})).toTex="\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(39),a=r(3).clone,o=r(6).isInteger;t.name="diag",t.factory=function(e,t,n,s){function u(e,t,r,n){if(!o(t))throw new TypeError("Second parameter in function diag must be an integer");var i=0<t?t:0,a=t<0?-t:0;switch(r.length){case 1:return c(e,t,n,r[0],a,i);case 2:return f(e,t,n,r,a,i)}throw new RangeError("Matrix for function diag must be 2 dimensional")}function c(t,r,n,i,a,o){a=[i+a,i+o],i=e.Matrix.storage(n||"dense").diagonal(a,t,r);return null!==n?i:i.valueOf()}function f(e,t,r,n,i,o){if(e&&!0===e.isMatrix)return t=e.diagonal(t),null!==r?r!==t.storage()?l(t,r):t:t.valueOf();for(var u=Math.min(n[0]-i,n[1]-o),c=[],f=0;f<u;f++)c[f]=a(e[f+i][f+o]);return null!==r?l(c):c}var l=n(r(50));return(n=s("diag",{Array:function(e){return u(e,0,i.size(e),null)},"Array, number":function(e,t){return u(e,t,i.size(e),null)},"Array, BigNumber":function(e,t){return u(e,t.toNumber(),i.size(e),null)},"Array, string":function(e,t){return u(e,0,i.size(e),t)},"Array, number, string":function(e,t,r){return u(e,t,i.size(e),r)},"Array, BigNumber, string":function(e,t,r){return u(e,t.toNumber(),i.size(e),r)},Matrix:function(e){return u(e,0,e.size(),e.storage())},"Matrix, number":function(e,t){return u(e,t,e.size(),e.storage())},"Matrix, BigNumber":function(e,t){return u(e,t.toNumber(),e.size(),e.storage())},"Matrix, string":function(e,t){return u(e,0,e.size(),t)},"Matrix, number, string":function(e,t,r){return u(e,t,e.size(),r)},"Matrix, BigNumber, string":function(e,t,r){return u(e,t.toNumber(),e.size(),r)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(39).size;t.name="dot",t.factory=function(e,t,n,a){function o(e,t){var r=i(e),n=i(t),a=r[0];if(1!==r.length||1!==n.length)throw new RangeError("Vector expected");if(r[0]!=n[0])throw new RangeError("Vectors must have equal length ("+r[0]+" != "+n[0]+")");if(0==a)throw new RangeError("Cannot calculate the dot product of empty vectors");for(var o=0,c=0;c<a;c++)o=s(o,u(e[c],t[c]));return o}var s=n(r(49)),u=n(r(83));return(n=a("dot",{"Matrix, Matrix":function(e,t){return o(e.toArray(),t.toArray())},"Matrix, Array":function(e,t){return o(e.toArray(),t)},"Array, Matrix":function(e,t){return o(e,t.toArray())},"Array, Array":o})).toTex="\\left(${args[0]}\\cdot${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(3).clone,a=r(39).flatten;t.name="flatten",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("flatten",{Array:function(e){return a(i(e))},Matrix:function(e){e=a(i(e.toArray()));return s(e)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).resize;t.name="ones",t.factory=function(e,t,n,o){function s(t,r){var i=function(e){var t=!1;return e.forEach(function(e,r,n){e&&!0===e.isBigNumber&&(t=!0,n[r]=e.toNumber())}),t}(t)?new e.BigNumber(1):1;return c(t),r?(r=f(r),0<t.length?r.resize(t,i):r):(r=[],0<t.length?a(r,t,i):r)}function c(e){e.forEach(function(e){if("number"!=typeof e||!i(e)||e<0)throw new Error("Parameters in function ones must be positive integers")})}var f=n(r(50));return(n=o("ones",{"":function(){return"array"===t.matrix?s([]):s([],"default")},"...number | BigNumber | string":function(e){var n;return"string"==typeof e[e.length-1]?(n=e.pop(),s(e,n)):"array"===t.matrix?s(e):s(e,"default")},Array:s,Matrix:function(e){var t=e.storage();return s(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(41),a=r(11),o=r(6).isInteger,s=r(23).format,u=r(3).clone,c=r(39);t.name="resize",t.factory=function(e,t,n,f){function l(e,t,r){if(void 0!==r){if("string"!=typeof r||1!==r.length)throw new TypeError("Single character expected as defaultValue")}else r=" ";if(1!==t.length)throw new i(t.length,1);var n=t[0];if("number"!=typeof n||!o(n))throw new TypeError("Invalid size, must contain positive integers (size: "+s(t)+")");if(e.length>n)return e.substring(0,n);if(e.length<n){for(var a=e,u=0,c=n-e.length;u<c;u++)a+=r;return a}return e}function m(e,r,n){if(2!=arguments.length&&3!=arguments.length)throw new a("resize",arguments.length,2,3);if((r=r&&!0===r.isMatrix?r.valueOf():r).length&&r[0]&&!0===r[0].isBigNumber&&(r=r.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e})),e&&!0===e.isMatrix)return e.resize(r,n,!0);if("string"==typeof e)return l(e,r,n);var i=!Array.isArray(e)&&"array"!==t.matrix;if(0!=r.length)return Array.isArray(e)||(e=[e]),e=u(e),r=c.resize(e,r,n),i?p(r):r;for(;Array.isArray(e);)e=e[0];return u(e)}var p=n(r(50));return m.toTex="\\mathrm{${name}}\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(39);t.name="size",t.factory=function(e,t,n,a){var o=n(r(50));return(n=a("size",{Matrix:function(e){return o(e.size())},Array:i.size,string:function(e){return"array"===t.matrix?[e.length]:o([e.length])},"number | Complex | BigNumber | Unit | boolean | null":function(e){return"array"===t.matrix?[]:o([])}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3),a=r(39);t.name="squeeze",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("squeeze",{Array:function(e){return a.squeeze(i.clone(e))},Matrix:function(e){e=a.squeeze(e.toArray());return Array.isArray(e)?s(e):e},any:function(e){return i.clone(e)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(399),r(397),r(398),r(427),r(429),r(430),r(431),r(433),r(434)]},function(e,t,r){"use strict";t.name="kldivergence",t.factory=function(e,t,n,i){function a(e,t){var r=t.size().length,n=e.size().length;if(1<r)throw new Error("first object must be one dimensional");if(1<n)throw new Error("second object must be one dimensional");if(r!==n)throw new Error("Length of two vectors must be equal");if(0===u(e))throw new Error("Sum of elements in first object must be non zero");if(0===u(t))throw new Error("Sum of elements in second object must be non zero");r=s(e,u(e)),n=s(t,u(t)),e=u(c(r,l(f(r,n))));return p(e)?e:Number.NaN}var o=n(r(50)),s=n(r(310)),u=n(r(428)),c=n(r(83)),f=n(r(353)),l=n(r(82)),p=n(r(87));return i("kldivergence",{"Array, Array":function(e,t){return a(o(e),o(t))},"Matrix, Array":function(e,t){return a(e,o(t))},"Array, Matrix":function(e,t){return a(o(e),t)},"Matrix, Matrix":a})}},function(e,t,r){"use strict";var i=r(306);t.name="sum",t.factory=function(e,t,n,a){function o(r){var n=void 0;if(i(r,function(e){n=void 0===n?e:s(n,e)}),void 0===n)switch(t.number){case"number":return 0;case"bignumber":return new e.BigNumber(0);case"fraction":return new e.Fraction(0);default:return 0}return n}var s=n(r(51));return(n=a("sum",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(){throw new Error("sum(A, dim) is not yet supported")},"...":function(){return o(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(306);t.name="multinomial",t.factory=function(e,t,n,a){var o=n(r(49)),s=n(r(83)),u=n(r(310)),c=n(r(397)),f=n(r(400)),l=n(r(363));return a("multinomial",{"Array | Matrix":function(e){var t=0,r=1;return i(e,function(e){if(!f(e)||!l(e))throw new TypeError("Positive integer value expected in function multinomial");t=o(t,e),r=s(r,c(e))}),u(c(t),r)}})}},function(e,t,r){"use strict";function i(e){return e.isInteger()&&e.gte(0)}var a=r(6).isInteger;t.name="permutations",t.factory=function(e,t,n,o){return(o=o("permutations",{"number | BigNumber":n(r(397)),"number, number":function(e,t){var r,n;if(!a(e)||e<0)throw new TypeError("Positive integer value expected in function permutations");if(!a(t)||t<0)throw new TypeError("Positive integer value expected in function permutations");if(e<t)throw new TypeError("second argument k must be less than or equal to first argument n");for(n=e-t+(r=1);n<=e;n++)r*=n;return r},"BigNumber, BigNumber":function(t,r){var n,a;if(!i(t)||!i(r))throw new TypeError("Positive integer value expected in function permutations");if(r.gt(t))throw new TypeError("second argument k must be less than or equal to first argument n");for(n=new e.BigNumber(1),a=t.minus(r).plus(1);a.lte(t);a=a.plus(1))n=n.times(a);return n}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",o}},function(e,t,r){"use strict";t.name="pickRandom",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").pickRandom).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(11),a=r(304);t.name="distribution",t.factory=function(e,t,n,o){function s(e){var t;if(f.hasOwnProperty(e))return t=Array.prototype.slice.call(arguments,1),function(e){var r=function(t,r){return t+e()*(r-t)},n=function(t,r){return Math.floor(t+e()*(r-t))},o=function(e,t,r,n){var i,a,s=[];if(1<(e=e.slice(0)).length)for(a=0,i=e.shift();a<i;a++)s.push(o(e,t,r,n));else for(a=0,i=e.shift();a<i;a++)s.push(n(t,r));return s};return{random:function(e,t,n){var s,c,f;if(3<arguments.length)throw new i("random",arguments.length,0,3);return 1===arguments.length?a(e)?s=e:f=e:f=2===arguments.length?(a(e)?s=e:c=e,t):(s=e,c=t,n),void 0===f&&(f=1),void 0===c&&(c=0),void 0!==s?(e=o(s.valueOf(),c,f,r),s&&!0===s.isMatrix?u(e):e):r(c,f)},randomInt:function(e,t,r){var s,c,f;if(3<arguments.length||arguments.length<1)throw new i("randomInt",arguments.length,1,3);return 1===arguments.length?a(e)?s=e:f=e:f=2===arguments.length?(a(e)?s=e:c=e,t):(s=e,c=t,r),void 0===c&&(c=0),void 0!==s?(e=o(s.valueOf(),c,f,n),s&&!0===s.isMatrix?u(e):e):n(c,f)},pickRandom:function(e){if(1!==arguments.length)throw new i("pickRandom",arguments.length,1);if(e&&!0===e.isMatrix)e=e.valueOf();else if(!Array.isArray(e))throw new TypeError("Unsupported type of value in function pickRandom");if(1<c.size(e).length)throw new Error("Only one dimensional vectors supported");return e[Math.floor(Math.random()*e.length)]}}}(f[e].apply(this,t));throw new Error("Unknown distribution "+e)}var u=n(r(50)),c=r(39),f={uniform:function(){return Math.random},normal:function(){return function(){for(var e,t,r=-1;r<0||1<r;)e=Math.random(),t=Math.random(),r=1/6*Math.pow(-2*Math.log(e),.5)*Math.cos(2*Math.PI*t)+.5;return r}}};return s.toTex="\\mathrm{${name}}\\left(${args}\\right)",s}},function(e,t,r){"use strict";t.name="random",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").random).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="randomInt",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").randomInt).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(436),r(437),r(86),r(62),r(336),r(58),r(438),r(439)]},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="compare",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(76)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=a("compare",{"boolean, boolean":function(e,t){return e===t?0:t<e?1:-1},"number, number":function(e,r){return e===r||i(e,r,t.epsilon)?0:r<e?1:-1},"BigNumber, BigNumber":function(t,r){return new e.BigNumber(t.cmp(r))},"Fraction, Fraction":function(t,r){return new e.Fraction(t.compare(r))},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return p(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e===t?0:t<e?1:-1},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\mathrm{${name}}\\left(${args}\\right)",p}},function(e,t,r){"use strict";t.name="deepEqual",t.factory=function(e,t,n,i){var o=n(r(86));return(n=i("deepEqual",{"any, any":function(e,t){return function a(e,t){if(Array.isArray(e)){if(Array.isArray(t)){var r=e.length;if(r!==t.length)return!1;for(var n=0;n<r;n++)if(!a(e[n],t[n]))return!1;return!0}return!1}return!Array.isArray(t)&&o(e,t)}(e.valueOf(),t.valueOf())}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="smallerEq",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("smallerEq",{"boolean, boolean":function(e,t){return e<=t},"number, number":function(e,r){return e<=r||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lte(t)},"Fraction, Fraction":function(e,t){return 1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e<=t},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.smallerEq+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="unequal",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("unequal",{"any, any":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:h(e,t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,h):s(t,e,h,!0):"sparse"===t.storage()?s(e,t,h,!1):f(e,t,h);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,h,!0);return t},"Array, any":function(e,t){return l(o(e),t,h,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,h,!0).valueOf()}}),h=a("_unequal",{"boolean, boolean":function(e,t){return e!==t},"number, number":function(e,r){return!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return!e.eq(t)},"Fraction, Fraction":function(e,t){return 0!==e.compare(t)},"Complex, Complex":function(e,r){return!i(e.re,r.re,t.epsilon)||!i(e.im,r.im,t.epsilon)},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e!==t}});return m.toTex="\\left(${args[0]}"+n.operators.unequal+"${args[1]}\\right)",m}},function(e,t,r){e.exports=[r(305),r(309),r(441),r(314),r(443),r(444),r(445),r(446),r(428),r(447)]},function(e,t,r){"use strict";var i=r(39).flatten;t.name="median",t.factory=function(e,t,n,a){function o(e){var t=(e=i(e.valueOf())).length;if(0==t)throw new Error("Cannot calculate median of an empty array");if(t%2==0){for(var r=t/2-1,n=f(e,1+r),a=e[r],o=0;o<r;++o)0<c(e[o],a)&&(a=e[o]);return m(a,n)}n=f(e,(t-1)/2);return p(n)}var s=n(r(51)),u=n(r(78)),c=n(r(436)),f=n(r(442)),n=a("median",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("median(A, dim) is not yet supported")},"...":function(){return o(Array.prototype.slice.call(arguments))}}),p=a({"number | BigNumber | Unit":function(e){return e}}),m=a({"number | BigNumber | Unit, number | BigNumber | Unit":function(e,t){return u(s(e,t),2)}});return n.toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="partitionSelect",t.factory=function(e,t,n,a){function o(e,t){return-c(e,t)}function s(e,t,r){if(!i(t)||t<0)throw new Error("k must be a non-negative integer");if(e&&e.isMatrix){if(1<e.size().length)throw new Error("Only one dimensional matrices supported");return u(e.valueOf(),t,r)}return Array.isArray(e)?u(e,t,r):void 0}function u(e,t,r){if(t>=e.length)throw new Error("k out of bounds");for(var n=0,i=e.length-1;n<i;){for(var u,a=n,o=i,s=e[Math.floor(Math.random()*(i-n+1))+n];a<o;)0<=r(e[a],s)?(u=e[o],e[o]=e[a],e[a]=u,--o):++a;0<r(e[a],s)&&--a,t<=a?i=a:n=a+1}return e[t]}var c=n(r(436));return a("partitionSelect",{"Array | Matrix, number":function(e,t){return s(e,t,c)},"Array | Matrix, number, string":function(e,t,r){if("asc"===r)return s(e,t,c);if("desc"===r)return s(e,t,o);throw new Error('Compare string must be "asc" or "desc"')},"Array | Matrix, number, function":s})}},function(e,t,r){"use strict";var i=r(39).flatten;t.name="mode",t.factory=function(e,t,r,n){function a(e){if(0==(e=i(e.valueOf())).length)throw new Error("Cannot calculate mode of an empty array");var o,r={},n=[],a=0;for(o in e)e[o]in r||(r[e[o]]=0),r[e[o]]++,r[e[o]]==a?n.push(e[o]):r[e[o]]>a&&(a=r[e[o]],n=[e[o]]);return n}return n("mode",{"Array | Matrix":a,"...":function(){return a(Array.prototype.slice.call(arguments))}})}},function(e,t,r){"use strict";var i=r(306);t.name="prod",t.factory=function(e,t,n,a){function o(e){var t=void 0;if(i(e,function(e){t=void 0===t?e:s(t,e)}),void 0===t)throw new Error("Cannot calculate prod of an empty array");return t}var s=n(r(77));return(n=a("prod",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("prod(A, dim) is not yet supported")},"...":function(){return o(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(6).isNumber,o=r(39).flatten,s=r(304);t.name="quantileSeq",t.factory=function(e,t,n,u){function f(e,t,r){var s,c,n=o(e),e=n.length;if(0===e)throw new Error("Cannot calculate quantile of an empty sequence");if(a(t)){if(0===(u=(s=t*(e-1))%1))return c=r?n[s]:m(n,s),g(c),c;var d=Math.floor(s);if(r)f=n[d],v=n[d+1];else{v=m(n,d+1),f=n[d];for(var y=0;y<d;++y)0<h(n[y],f)&&(f=n[y])}return g(f),g(v),l(p(f,1-u),p(v,u))}if((s=t.times(e-1)).isInteger())return s=s.toNumber(),c=r?n[s]:m(n,s),g(c),c;var f,v,d=s.floor(),u=s.minus(d),x=d.toNumber();if(r)f=n[x],v=n[x+1];else{v=m(n,x+1),f=n[x];for(y=0;y<x;++y)0<h(n[y],f)&&(f=n[y])}g(f),g(v);t=u.constructor.ONE;return l(p(f,t.minus(u)),p(v,u))}var l=n(r(49)),p=n(r(83)),m=n(r(442)),h=n(r(436)),g=u({"number | BigNumber | Unit":function(e){return e}});return function(t,r,n){var u,c;if(arguments.length<2||3<arguments.length)throw new SyntaxError("Function quantileSeq requires two or three parameters");if(s(t)&&"boolean"==typeof(n=n||!1)){if(u=t.valueOf(),a(r)){if(r<0)throw new Error("N/prob must be non-negative");if(r<=1)return f(u,r,n);if(1<r){if(!i(r))throw new Error("N must be a positive integer");for(var l=r+1,o=new Array(r),p=0;p<r;)o[p]=f(u,++p/l,n);return o}}if(r&&r.isBigNumber){if(r.isNegative())throw new Error("N/prob must be non-negative");if(c=r.constructor.ONE,r.lte(c))return f(u,r,n);if(r.gt(c)){if(!r.isInteger())throw new Error("N must be a positive integer");var m=r.toNumber();if(4294967295<m)throw new Error("N must be less than or equal to 2^32-1, as that is the maximum length of an Array");l=new e.BigNumber(m+1);o=new Array(m);for(p=0;p<m;)o[p]=f(u,new e.BigNumber(++p).div(l),n);return o}}if(Array.isArray(r)){o=new Array(r.length);for(p=0;p<o.length;++p){var h=r[p];if(a(h)){if(h<0||1<h)throw new Error("Probability must be between 0 and 1, inclusive")}else{if(!h||!h.isBigNumber)throw new TypeError("Unexpected type of argument in function quantileSeq");if(c=h.constructor.ONE,h.isNegative()||h.gt(c))throw new Error("Probability must be between 0 and 1, inclusive")}o[p]=f(u,h,n)}return o}}throw new TypeError("Unexpected type of argument in function quantileSeq")}}},function(e,t,r){"use strict";t.name="std",t.factory=function(e,t,n,i){function a(e,t){if(0==e.length)throw new SyntaxError("Function std requires one or more parameters (0 provided)");return o(s.apply(null,arguments))}var o=n(r(362)),s=n(r(447));return(n=i("std",{"Array | Matrix":a,"Array | Matrix, string":a,"...":function(){return a(Array.prototype.slice.call(arguments))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i="unbiased",a=r(306);t.name="var",t.factory=function(e,t,n,o){function s(t,r){var n=0,i=0;if(0==t.length)throw new SyntaxError("Function var requires one or more parameters (0 provided)");if(a(t,function(e){n=u(n,e),i++}),0===i)throw new Error("Cannot calculate var of an empty array");var o=l(n,i),n=0;switch(a(t,function(e){e=c(e,o);n=u(n,f(e,e))}),r){case"uncorrected":return l(n,i);case"biased":return l(n,i+1);case"unbiased":var s=n&&!0===n.isBigNumber?new e.BigNumber(0):0;return 1==i?s:l(n,i-1);default:throw new Error('Unknown normalization "'+r+'". Choose "unbiased" (default), "uncorrected", or "biased".')}}var u=n(r(51)),c=n(r(74)),f=n(r(77)),l=n(r(78));return(n=o("variance",{"Array | Matrix":function(e){return s(e,i)},"Array | Matrix, string":s,"...":function(){return s(arguments,i)}})).toTex="\\mathrm{Var}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(449),r(459),r(461),r(463),r(466),r(468),r(470),r(471),r(467),r(469),r(462),r(472),r(465),r(474),r(475),r(478),r(480),r(482),r(483),r(484),r(485),r(486),r(477),r(487),r(488)]},function(e,t,r){"use strict";var i=r(19),a=r(450);t.name="acos",t.factory=function(e,t,n,o){function s(t){var r=new e.Complex(t.im*t.im-t.re*t.re+1,-2*t.re*t.im),r=u(r),r=new e.Complex(r.re-t.im,r.im+t.re),t=c(r);return new e.Complex(1.5707963267948966-t.im,t.re)}var u=o.find(n(r(362)),["Complex"]),c=o.find(n(r(82)),["Complex"]),f=o("acos",{number:function(r){return-1<=r&&r<=1||t.predictable?Math.acos(r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\cos^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){var n=r(93).pi,i=r(451);e.exports=function(e,t,r){if(r){if(e.abs().lt(t.ONE))throw new Error("asec() only has non-complex values for |x| >= 1.")}else if(e.abs().gt(t.ONE))throw new Error("acos() only has non-complex values for |x| <= 1.");var a;return e.eq(-1)?n(t):(a=t.precision,t.config({precision:a+4}),r&&(e=t.ONE.div(e)),r=i(t.ONE.minus(e.times(e)).sqrt().div(e.plus(t.ONE)),t).times(2),t.config({precision:a}),r.toDP(a-1))}},function(e,t,r){var n=r(93),i=r(452),a=r(94);e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);if(!r&&e.isZero()||r&&!e.isFinite())return new t(0);var o=t.precision;if(!r&&!e.isFinite()||r&&e.isZero())return(s=n.pi(t.constructor({precision:o+2})).div(2).toDP(o-1)).constructor=t,s.s=e.s,s;t.config({precision:o+4});var s,c,r=(e=r?t.ONE.div(e):e).abs();return r.lte(.875)?(((c=a(e)).constructor=t).config({precision:o}),c.toDP(t.precision-1)):r.gte(1.143)?((c=(s=n.pi(t.constructor({precision:o+4})).div(2)).minus(a(t.ONE.div(r)))).s=e.s,(c.constructor=t).config({precision:o}),c.toDP(t.precision-1)):(e=e.div(e.times(e).plus(1).sqrt()),t.config({precision:o}),i(e,t))}},function(e,t,r){var n=r(93).pi,i=r(453),a=r(454);e.exports=function o(e,t,r){if(e.isNaN())return new t(NaN);var s=t.precision,u=e.abs();if(r){if(u.lt(t.ONE))throw new Error("acsc() only has non-complex values for |x| >= 1.");t.config({precision:s+2}),e=t.ONE.div(e),t.config({precision:s}),u=e.abs()}else if(u.gt(t.ONE))throw new Error("asin() only has non-complex values for |x| <= 1.");return u.gt(.8)?(t.config({precision:s+4}),r=e.s,(e=n(t.constructor({precision:s+4})).div(2).minus(o(t.ONE.minus(e.times(e)).sqrt(),t))).s=r,(e.constructor=t).config({precision:s}),e.toDP(s-1)):((r=u.gt(.58))&&(t.config({precision:s+8}),e=e.div(new t(2).sqrt().times(t.ONE.minus(e.times(e)).sqrt().plus(t.ONE).sqrt())),t.config({precision:s})),u=s<=60||e.dp()<=Math.log(s)&&e.lt(.05)?i(e,s):a(e,t),r?u.times(2):u)}},function(e,t){e.exports=function(e,t){var r=e.constructor;r.config({precision:t+Math.log(t)|4});for(var n=new r(1),i=e,a=NaN,o=e.times(e),s=e,u=new r(n),c=new r(n),f=new r(n),l=3;!i.equals(a);l+=2)s=s.times(o),u=u.times(f),c=c.times(f.plus(n)),a=i,f=new r(l),i=i.plus(s.times(u).div(f.times(c)));return r.config({precision:t}),i.toDP(t-1)}},function(e,t,r){var n=r(455),i=r(458);e.exports=function(e,t){var r=t.precision,a=-(r+4),o=r+8-e.e,s=25-e.e,u=Math.max(1.442695*Math.log(r+2)|5,5),c=(t.config({precision:s}),0),f=new t(Math.asin(e.toNumber())+"");do{var l=n(f,t,1,!1),p=i(l),l=(l.isZero()||(l.s=f.s),l.minus(e).div(p)),f=f.minus(l),s=Math.min(2*s,o)}while(t.config({precision:s}),2*l.e>=a&&!l.isZero()&&++c<=u);if(c==u)throw new Error("asin() failed to converge to the requested accuracy.Try with a higher precision.");return t.config({precision:r}),f.toDP(r-1)}},function(e,t,r){var n=r(456),i=r(457);e.exports=function(e,t,r,a){if(e.isNaN()||!e.isFinite())return new t(NaN);var o=t.precision,e=new t(e),u=e.isNegative(),c=(u&&(e.s=-e.s),o+(0|Math.log(o))+3);if(t.config({precision:c}),(e=n(e,t.constructor({precision:c}),r))[0].constructor=t,e[1])return e=e[0],a&&e.isZero()&&(e=new t(1/0)),t.config({precision:o}),e;if(e=e[0],r){f=i(e.div(3125),r),t.config({precision:Math.min(c,o+15)});for(var l=new t(5),p=new t(16),m=new t(20),h=0;h<5;++h)var v=(g=f.times(f)).times(f),d=v.times(g),f=p.times(d).minus(m.times(v)).plus(l.times(f));u&&(f.s=-f.s)}else{var y,x=e.abs().lt(t.ONE)?(y=64,3):(y=256,4);f=i(e.div(y),r),t.config({precision:Math.min(c,o+8)});for(var b=new t(8);0<x;--x){var g,w=(g=f.times(f)).times(g);f=b.times(w.minus(g)).plus(t.ONE)}}return a&&(f=f.e<=-o?new t(1/0):t.ONE.div(f)),t.config({precision:o}),f.toDP(o-1)}},function(e,t,r){var n=r(93);e.exports=function(e,t,r){var o,i=n.pi(t.constructor({precision:t.precision+2})),a=n.tau(t);return e.abs().lte(i.toDP(e.dp()))?[e,!1]:0<e.dp()&&e.div(i.toDP(e.dp())).toNumber()%2==0||(o=e.mod(a),0<e.dp()&&o.toDP(e.dp(),1).isZero())?[new t(1^r),!0]:(o.gt(i)&&(r?(o=o.minus(i)).s=-o.s:o=a.minus(o)),o.constructor=e.constructor,[o,!1])}},function(e,t){e.exports=function(e,t){for(var r=e.constructor.ONE,n=e,i=NaN,a=e.times(e),o=t?n:n=r,s=r,u=!0,c=t;!n.equals(i);c+=2)o=o.times(a),s=s.times(c+1).times(c+2),i=n,n=(u=!u)?n.plus(o.div(s)):n.minus(o.div(s));return n}},function(e,t){e.exports=function(e){var t=e.constructor,r=t.precision,e=(t.config({precision:r+2}),t.ONE.minus(e.times(e)).sqrt());return t.config({precision:r}),e.toDP(r-1)}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="acosh",t.factory=function(e,t,n,o){function s(e){var t,e=u(e);return e.im<=0?(t=e.re,e.re=-e.im,e.im=t):(t=e.im,e.im=-e.re,e.re=t),e}var u=o.find(n(r(449)),["Complex"]),c=o("acosh",{number:function(r){return 1<=r||t.predictable?Math.log(Math.sqrt(r*r-1)+r):r<=-1?new e.Complex(Math.log(Math.sqrt(r*r-1)-r),Math.PI):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1,!1)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cosh^{-1}\\left(${args[0]}\\right)",c}},function(e,t){e.exports=function(e,t,r,n){if(e.isNaN())return new t(NaN);if(n&&e.isZero())return new t(1/0);if(!r)if(n){if(e.isNegative()||e.gt(t.ONE))throw new Error("asech() only has non-complex values for 0 <= x <= 1.")}else if(e.lt(t.ONE))throw new Error("acosh() only has non-complex values for x >= 1.");var i=t.precision,e=(t.config({precision:i+4}),new t(e)),n=(e.constructor=t,n&&(e=t.ONE.div(e)),r?e.times(e).plus(t.ONE):e.times(e).minus(t.ONE)),r=e.plus(n.sqrt()).ln();return t.config({precision:i}),new t(r.toPrecision(i))}},function(e,t,r){"use strict";var i=r(19),a=r(451),o=1.5707963267948966;t.name="acot",t.factory=function(e,t,n,s){var u=s.find(n(r(462)),["Complex"]),c=s("acot",{number:function(e){return e?Math.atan(1/e):o},Complex:function(t){var r;return 0==t.im?new e.Complex(t.re?Math.atan(1/t.re):o,0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))},BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cot^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(451);t.name="atan",t.factory=function(e,t,n,o){var s=o.find(n(r(82)),["Complex"]),u=o("atan",{number:function(e){return Math.atan(e)},Complex:function(t){if(0==t.re){if(1==t.im)return new e.Complex(0,1/0);if(-1==t.im)return new e.Complex(0,-1/0)}var r=t.re,t=t.im,i=r*r+(1-t)*(1-t),t=new e.Complex((1-t*t-r*r)/i,-2*r/i),r=s(t);return new e.Complex(-.5*r.im,.5*r.re)},BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,u,!0)}});return u.toTex="\\tan^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(464),o=1.5707963267948966;t.name="acoth",t.factory=function(e,t,n,s){function u(t){var r;return 0==t.re&&0==t.im?new e.Complex(0,o):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),c(t))}var c=s.find(n(r(465)),["Complex"]),f=s("acoth",{number:function(r){return 1<=r||r<=-1||t.predictable?isFinite(r)?(Math.log((r+1)/r)+Math.log(r/(r-1)))/2:0:0!==r?u(new e.Complex(r,0)):new e.Complex(0,o)},Complex:u,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\coth^{-1}\\left(${args[0]}\\right)",f}},function(e,t){e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);var n=e.abs();if(n.eq(t.ONE))return new t(e.isNegative()?-1/0:1/0);if(n.gt(t.ONE)){if(!r)throw new Error("atanh() only has non-complex values for |x| <= 1.")}else if(r)throw new Error("acoth() has complex values for |x| < 1.");return e.isZero()?new t(0):(n=t.precision,t.config({precision:n+4}),(e=new t(e)).constructor=t,r&&(e=t.ONE.div(e)),r=t.ONE.plus(e).div(t.ONE.minus(e)).ln().div(2),t.config({precision:n}),new t(r.toPrecision(n)))}},function(e,t,r){"use strict";var i=r(19),a=r(464);t.name="atanh",t.factory=function(e,t,r,n){function o(t){var r=1<t.re&&0==t.im,n=1-t.re,i=1+t.re,a=n*n+t.im*t.im,n=(t=0!=a?new e.Complex((i*n-t.im*t.im)/a,(t.im*n+i*t.im)/a):new e.Complex(-1!=t.re?t.re/0:0,0!=t.im?t.im/0:0)).re;return t.re=Math.log(Math.sqrt(t.re*t.re+t.im*t.im))/2,t.im=Math.atan2(t.im,n)/2,r&&(t.im=-t.im),t}var s=n("atanh",{number:function(r){return r<=1&&-1<=r||t.predictable?Math.log((1+r)/(1-r))/2:o(new e.Complex(r,0))},Complex:o,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,s,!0)}});return s.toTex="\\tanh^{-1}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(452);t.name="acsc",t.factory=function(e,t,n,s){function u(t){var r;return 0==t.re&&0==t.im?new e.Complex(1.5707963267948966,1/0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),c(t))}var c=s.find(n(r(467)),["Complex"]),f=s("acsc",{number:function(r){return r<=-1||1<=r||t.predictable?Math.asin(1/r):u(new e.Complex(r,0))},Complex:u,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\csc^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){"use strict";var i=r(19),a=r(452);t.name="asin",t.factory=function(e,t,n,o){function s(t){var r=t.re,t=t.im,i=new e.Complex(t*t-r*r+1,-2*r*t),i=u(i),t=new e.Complex(i.re-t,i.im+r),i=c(t);return new e.Complex(i.im,-i.re)}var u=o.find(n(r(362)),["Complex"]),c=o.find(n(r(82)),["Complex"]),f=o("asin",{number:function(r){return-1<=r&&r<=1||t.predictable?Math.asin(r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,f,!0)}});return f.toTex="\\sin^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="acsch",t.factory=function(e,t,n,o){var s=o.find(n(r(469)),["Complex"]),u=o("acsch",{number:function(e){return e=1/e,Math.log(e+Math.sqrt(e*e+1))},Complex:function(t){var r;return 0==t.im?(t=0!=t.re?Math.log(t.re+Math.sqrt(t.re*t.re+1)):1/0,new e.Complex(t,0)):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),s(t))},BigNumber:function(t){return a(t,e.BigNumber,!0,!0)},"Array | Matrix":function(e){return i(e,u)}});return u.toTex="\\mathrm{csch}^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="asinh",t.factory=function(e,t,n,o){var s=o.find(n(r(467)),["Complex"]),u=o("asinh",{number:function(e){return Math.log(Math.sqrt(e*e+1)+e)},Complex:function(e){var t=e.im,r=(e.im=-e.re,e.re=t,s(e));return e.re=-e.im,e.im=t,t=r.re,r.re=-r.im,r.im=t,r},BigNumber:function(t){return a(t,e.BigNumber,!0,!1)},"Array | Matrix":function(e){return i(e,u,!0)}});return u.toTex="\\sinh^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(450);t.name="asec",t.factory=function(e,t,n,o){function s(t){var r;return 0==t.re&&0==t.im?new e.Complex(0,1/0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))}var u=o.find(n(r(449)),["Complex"]),c=o("asec",{number:function(r){return r<=-1||1<=r||t.predictable?Math.acos(1/r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\sec^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="asech",t.factory=function(e,t,n,o){function s(t){var r;return 0==t.re&&0==t.im?new e.Complex(1/0,0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))}var u=o.find(n(r(459)),["Complex"]),c=o("asech",{number:function(r){var n;return r<=1&&-1<=r||t.predictable?(r=1/r,n=Math.sqrt(r*r-1),0<r||t.predictable?Math.log(n+r):new e.Complex(Math.log(n-r),Math.PI)):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\mathrm{sech}^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(473);t.name="atan2",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(354)),u=n(r(59)),c=n(r(356)),f=n(r(84)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=a("atan2",{"number, number":Math.atan2,"BigNumber, BigNumber":function(t,r){return i(t,r,e.BigNumber)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,h,!1):s(t,e,h,!0):"sparse"===t.storage()?u(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:m)(e,t,h,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, number | BigNumber":function(e,t){return m(o(e),t,h,!1).valueOf()},"number | BigNumber, Array":function(e,t){return m(o(t),e,h,!0).valueOf()}});return h.toTex="\\mathrm{atan2}\\left(${args}\\right)",h}},function(e,t,r){var n=r(93),i=r(451);e.exports=function(e,t,r){var a=r.precision;if(t.isZero())return e.isZero()?new r(NaN):((o=n.pi(r.constructor({precision:a+2})).div(2).toDP(a-1)).constructor=r,o.s=e.s,o);r.config({precision:a+2});var o=i(e.div(t),r,!1);return t.isNegative()&&(t=n.pi(r),o=e.isNegative()?o.minus(t):o.plus(t)),(o.constructor=r).config({precision:a}),o.toDP(a-1)}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="cos",t.factory=function(e,t,n,o){var s=o.find(n(r(475)),["number"]),u=o.find(n(r(477)),["number"]),c=o("cos",{number:Math.cos,Complex:function(t){return new e.Complex(Math.cos(t.re)*s(-t.im),Math.sin(t.re)*u(-t.im))},BigNumber:function(t){return a(t,e.BigNumber,0,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return c(t.value);throw new TypeError("Unit in function cos is no angle")},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cos\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";function i(e){return(Math.exp(e)+Math.exp(-e))/2}var a=r(19),o=r(476);t.name="cosh",t.factory=function(e,t,r,n){var s=n("cosh",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re);return new e.Complex(Math.cos(t.im)*(r+n)/2,Math.sin(t.im)*(r-n)/2)},BigNumber:function(t){return o(t,e.BigNumber,!1,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function cosh is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\cosh\\left(${args[0]}\\right)",s}},function(e,t){e.exports=function(e,t,r,n){var i,a;return e.isNaN()?new t(NaN):e.isFinite()?(i=t.precision,t.config({precision:i+4}),(a=new t(e)).constructor=t,a=a.exp(),a=r?a.minus(t.ONE.div(a)):a.plus(t.ONE.div(a)),a=n?new t(2).div(a):a.div(2),t.config({precision:i}),new t(a.toPrecision(i))):new t(n?0:r?e:1/0)}},function(e,t,r){"use strict";function i(e){return Math.abs(e)<1?e+e*e*e/6+e*e*e*e*e/120:(Math.exp(e)-Math.exp(-e))/2}var a=r(19),o=r(476);t.name="sinh",t.factory=function(e,t,r,n){var s=n("sinh",{number:i,Complex:function(t){var r=Math.cos(t.im),n=Math.sin(t.im),i=Math.exp(t.re),t=Math.exp(-t.re);return new e.Complex(r*(i-t)/2,n*(i+t)/2)},BigNumber:function(t){return o(t,e.BigNumber,!0,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function sinh is no angle")},"Array | Matrix":function(e){return a(e,s,!0)}});return s.toTex="\\sinh\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(479);t.name="cot",t.factory=function(e,t,r,n){var o=n("cot",{number:function(e){return 1/Math.tan(e)},Complex:function(t){var r=Math.exp(-4*t.im)-2*Math.exp(-2*t.im)*Math.cos(2*t.re)+1;return new e.Complex(2*Math.exp(-2*t.im)*Math.sin(2*t.re)/r,(Math.exp(-4*t.im)-1)/r)},BigNumber:function(t){return a(t,e.BigNumber,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function cot is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\cot\\left(${args[0]}\\right)",o}},function(e,t,r){var n=r(93),i=r(455),a=r(458),o=r(456);e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);var s=t.precision,c=(u=n.pi(t.constructor({precision:s+2}))).div(2).toDP(s-1),u=u.toDP(s-1),f=o(e,t,1)[0];if(f.abs().eq(u))return new t(1/0);t.config({precision:s+4});var l=i(f,t,1,!1),p=a(l),l=l.toDP(s),p=p.toDP(s),e=(f.eq(e)?f.gt(c)&&(p.s=-p.s):u.minus(f.abs()).gt(c)&&(p.s=-p.s),r?p.div(l):l.div(p));return t.config({precision:s}),new t(e.toPrecision(s))}},function(e,t,r){"use strict";function i(e){e=Math.exp(2*e);return(e+1)/(e-1)}var a=r(19),o=r(481);t.name="coth",t.factory=function(e,t,r,n){var s=n("coth",{number:i,Complex:function(t){var r=Math.exp(2*t.re),n=r*Math.cos(2*t.im),r=r*Math.sin(2*t.im),t=(n-1)*(n-1)+r*r;return new e.Complex(((1+n)*(n-1)+r*r)/t,-2*r/t)},BigNumber:function(t){return o(t,e.BigNumber,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function coth is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\coth\\left(${args[0]}\\right)",s}},function(e,t){e.exports=function(e,t,r){var n,i,o,s;return e.isNaN()?new t(NaN):e.isFinite()?(n=t.precision,t.config({precision:n+4}),(i=new t(e)).constructor=t,i=i.exp(),o=t.ONE.div(i),s=i.minus(o),s=r?i.plus(o).div(s):s.div(i.plus(o)),t.config({precision:n}),s.toDP(n-1)):new t(e.s)}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="csc",t.factory=function(e,t,r,n){var o=n("csc",{number:function(e){return 1/Math.sin(e)},Complex:function(t){var r=.25*(Math.exp(-2*t.im)+Math.exp(2*t.im))-.5*Math.cos(2*t.re);return new e.Complex(.5*Math.sin(t.re)*(Math.exp(-t.im)+Math.exp(t.im))/r,.5*Math.cos(t.re)*(Math.exp(-t.im)-Math.exp(t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,1,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function csc is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\csc\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){return 0==e?Number.POSITIVE_INFINITY:Math.abs(2/(Math.exp(e)-Math.exp(-e)))*s(e)}var a=r(19),o=r(476),s=r(6).sign;t.name="csch",t.factory=function(e,t,r,n){var s=n("csch",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re),i=Math.cos(t.im)*(r-n),t=Math.sin(t.im)*(r+n),r=i*i+t*t;return new e.Complex(2*i/r,-2*t/r)},BigNumber:function(t){return o(t,e.BigNumber,!0,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function csch is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\mathrm{csch}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="sec",t.factory=function(e,t,r,n){var o=n("sec",{number:function(e){return 1/Math.cos(e)},Complex:function(t){var r=.25*(Math.exp(-2*t.im)+Math.exp(2*t.im))+.5*Math.cos(2*t.re);return new e.Complex(.5*Math.cos(t.re)*(Math.exp(-t.im)+Math.exp(t.im))/r,.5*Math.sin(t.re)*(Math.exp(t.im)-Math.exp(-t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,0,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function sec is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\sec\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){return 2/(Math.exp(e)+Math.exp(-e))}var a=r(19),o=r(476);t.name="sech",t.factory=function(e,t,r,n){var s=n("sech",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re),i=Math.cos(t.im)*(r+n),t=Math.sin(t.im)*(r-n),r=i*i+t*t;return new e.Complex(2*i/r,-2*t/r)},BigNumber:function(t){return o(t,e.BigNumber,!1,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function sech is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\mathrm{sech}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="sin",t.factory=function(e,t,n,o){var s=o.find(n(r(475)),["number"]),u=o.find(n(r(477)),["number"]),c=o("sin",{number:Math.sin,Complex:function(t){return new e.Complex(Math.sin(t.re)*s(-t.im),Math.cos(t.re)*u(t.im))},BigNumber:function(t){return a(t,e.BigNumber,1,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return c(t.value);throw new TypeError("Unit in function sin is no angle")},"Array | Matrix":function(e){return i(e,c,!0)}});return c.toTex="\\sin\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(479);t.name="tan",t.factory=function(e,t,r,n){var o=n("tan",{number:Math.tan,Complex:function(t){var r=Math.exp(-4*t.im)+2*Math.exp(-2*t.im)*Math.cos(2*t.re)+1;return new e.Complex(2*Math.exp(-2*t.im)*Math.sin(2*t.re)/r,(1-Math.exp(-4*t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function tan is no angle")},"Array | Matrix":function(e){return i(e,o,!0)}});return o.toTex="\\tan\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){e=Math.exp(2*e);return(e-1)/(e+1)}var a=r(19),o=r(481);t.name="tanh",t.factory=function(e,t,r,n){var s=n("tanh",{number:i,Complex:function(t){var r=Math.exp(2*t.re),n=r*Math.cos(2*t.im),r=r*Math.sin(2*t.im),t=(1+n)*(1+n)+r*r;return new e.Complex(((n-1)*(1+n)+r*r)/t,2*r/t)},BigNumber:function(t){return o(t,e.BigNumber,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function tanh is no angle")},"Array | Matrix":function(e){return a(e,s,!0)}});return s.toTex="\\tanh\\left(${args[0]}\\right)",s}},function(e,t,r){e.exports=[r(490)]},function(e,t,r){"use strict";t.name="to",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(55)),u=n(r(56)),c=i("to",{"Unit, Unit | string":function(e,t){return e.to(t)},"Matrix, Matrix":function(e,t){return s(e,t,c)},"Array, Array":function(e,t){return c(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return c(o(e),t)},"Matrix, Array":function(e,t){return c(e,o(t))},"Matrix, any":function(e,t){return u(e,t,c,!1)},"any, Matrix":function(e,t){return u(t,e,c,!0)},"Array, any":function(e,t){return u(o(e),t,c,!1).valueOf()},"any, Array":function(e,t){return u(o(t),e,c,!0).valueOf()}});return c.toTex="\\left(${args[0]}"+a.operators.to+"${args[1]}\\right)",c}},function(e,t,r){e.exports=[r(492),r(297),r(88),r(400),r(350),r(87),r(363),r(414),r(302),r(442),r(493),r(494),r(89),r(299)]},function(e,t,r){"use strict";var i=r(3);t.name="clone",t.factory=function(e,t,r,n){return(n=n("clone",{any:i.clone})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";function i(e,t,r){return e.replace(/\$([\w\.]+)/g,function(e,n){for(var i=n.split("."),s=t[i.shift()];i.length&&void 0!==s;)var u=i.shift(),s=u?s[u]:s+".";return void 0!==s?a(s)?s:o(s,r):e})}var a=r(23).isString,o=r(23).format;t.name="print",t.factory=function(e,t,r,n){return(n=n("print",{"string, Object":i,"string, Object, number":i})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(39).size;t.name="sort",t.factory=function(e,t,n,a){function o(e){if("asc"===e)return f;if("desc"===e)return l;throw new Error('String "asc" or "desc" expected')}function s(e){if(1!==i(e).length)throw new Error("One dimensional array expected")}function u(e){if(1!==e.size().length)throw new Error("One dimensional matrix expected")}function l(e,t){return-f(e,t)}var c=n(r(50)),f=n(r(436));return(n=a("sort",{Array:function(e){return s(e),e.sort(f)},Matrix:function(e){return u(e),c(e.toArray().sort(f),e.storage())},"Array, function":function(e,t){return s(e),e.sort(t)},"Matrix, function":function(e,t){return u(e),c(e.toArray().sort(t),e.storage())},"Array, string":function(e,t){return s(e),e.sort(o(t))},"Matrix, string":function(e,t){return u(e),c(e.toArray().sort(o(t)),e.storage())}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(496)]},function(e,t){"use strict";t.name="reviver",t.path="json",t.factory=function(e,t,r,n){return function(t,r){var n=e[r&&r.mathjs];return n&&"function"==typeof n.fromJSON?n.fromJSON(r):r}}},function(e,t,r){"use strict";var n=r(11),i=r(41),a=r(42);e.exports=[{name:"ArgumentsError",path:"error",factory:function(){return n}},{name:"DimensionError",path:"error",factory:function(){return i}},{name:"IndexError",path:"error",factory:function(){return a}}]}],r={},t.m=e,t.c=r,t.p="",t(0);function t(n){var i;return(r[n]||(i=r[n]={exports:{},id:n,loaded:!1},e[n].call(i.exports,i,i.exports,t),i.loaded=!0,i)).exports}var e,r}),!function(){function n(n){return function(r,e,u,i){e=b(e,i,4);var o=!k(r)&&m.keys(r),a=(o||r).length,c=0<n?0:a-1;return arguments.length<3&&(u=r[o?o[c]:c],c+=n),function(t,r,e,u,i,o){for(;0<=i&&i<o;i+=n){var a=u?u[i]:i;e=r(e,t[a],a,t)}return e}(r,e,u,o,c,a)}}function t(n){return function(t,r,e){r=x(r,e);for(var u=O(t),i=0<n?0:u-1;0<=i&&i<u;i+=n)if(r(t[i],i,t))return i;return-1}}function r(n,t,r){return function(e,u,i){var o=0,a=O(e);if("number"==typeof i)0<n?o=0<=i?i:Math.max(i+a,o):a=0<=i?Math.min(i+1,a):i+a+1;else if(r&&i&&a)return e[i=r(e,u)]===u?i:-1;if(u!=u)return 0<=(i=t(l.call(e,o,a),m.isNaN))?i+o:-1;for(i=0<n?o:a-1;0<=i&&i<a;i+=n)if(e[i]===u)return i;return-1}}function e(n,t){var r=I.length,e=n.constructor,u=m.isFunction(e)&&e.prototype||a,i="constructor";for(m.has(n,i)&&!m.contains(t,i)&&t.push(i);r--;)(i=I[r])in n&&n[i]!==u[i]&&!m.contains(t,i)&&t.push(i)}function _(n,t){return function(r){var e=arguments.length;if(!(e<2||null==r))for(var u=1;u<e;u++)for(var i=arguments[u],o=n(i),a=o.length,c=0;c<a;c++){var f=o[c];t&&void 0!==r[f]||(r[f]=i[f])}return r}}function w(n){return function(t){return null==t?void 0:t[n]}}function F(n){return function(t,r,e){var u={};return r=x(r,e),m.each(t,function(e,i){i=r(e,i,t);n(u,e,i)}),u}}function E(n,t,r,e,u){return e instanceof t?(e=j(n.prototype),t=n.apply(e,u),m.isObject(t)?t:e):n.apply(r,u)}function R(n){function t(t){return n[t]}var r="(?:"+m.keys(n).join("|")+")",e=RegExp(r),u=RegExp(r,"g");return function(n){return e.test(n=null==n?"":""+n)?n.replace(u,t):n}}function L(n){return"\\"+z[n]}function P(n,t){return n._chain?m(t).chain():t}var u=this,i=u._,o=Array.prototype,a=Object.prototype,c=Function.prototype,f=o.push,l=o.slice,s=a.toString,p=a.hasOwnProperty,h=Array.isArray,v=Object.keys,g=c.bind,y=Object.create,d=function(){},m=function(n){return n instanceof m?n:this instanceof m?void(this._wrapped=n):new m(n)},b=("undefined"!=typeof exports?(exports="undefined"!=typeof module&&module.exports?module.exports=m:exports)._=m:u._=m,m.VERSION="1.8.3",function(n,t,r){if(void 0===t)return n;switch(null==r?3:r){case 1:return function(r){return n.call(t,r)};case 2:return function(r,e){return n.call(t,r,e)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)}}return function(){return n.apply(t,arguments)}}),x=function(n,t,r){return null==n?m.identity:m.isFunction(n)?b(n,t,r):m.isObject(n)?m.matcher(n):m.property(n)},j=(m.iteratee=function(n,t){return x(n,t,1/0)},function(n){if(!m.isObject(n))return{};if(y)return y(n);d.prototype=n;n=new d;return d.prototype=null,n}),A=Math.pow(2,53)-1,O=w("length"),k=function(n){n=O(n);return"number"==typeof n&&0<=n&&n<=A},S=(m.each=m.forEach=function(n,t,r){if(t=b(t,r),k(n))for(e=0,u=n.length;e<u;e++)t(n[e],e,n);else for(var i=m.keys(n),e=0,u=i.length;e<u;e++)t(n[i[e]],i[e],n);return n},m.map=m.collect=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=Array(u),o=0;o<u;o++){var a=e?e[o]:o;i[o]=t(n[a],a,n)}return i},m.reduce=m.foldl=m.inject=n(1),m.reduceRight=m.foldr=n(-1),m.find=m.detect=function(n,t,r){t=k(n)?m.findIndex(n,t,r):m.findKey(n,t,r);return void 0!==t&&-1!==t?n[t]:void 0},m.filter=m.select=function(n,t,r){var e=[];return t=x(t,r),m.each(n,function(n,r,u){t(n,r,u)&&e.push(n)}),e},m.reject=function(n,t,r){return m.filter(n,m.negate(x(t)),r)},m.every=m.all=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(!t(n[o],o,n))return!1}return!0},m.some=m.any=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(t(n[o],o,n))return!0}return!1},m.contains=m.includes=m.include=function(n,t,r,e){return k(n)||(n=m.values(n)),0<=m.indexOf(n,t,r="number"==typeof r&&!e?r:0)},m.invoke=function(n,t){var r=l.call(arguments,2),e=m.isFunction(t);return m.map(n,function(n){var u=e?t:n[t];return null==u?u:u.apply(n,r)})},m.pluck=function(n,t){return m.map(n,m.property(t))},m.where=function(n,t){return m.filter(n,m.matcher(t))},m.findWhere=function(n,t){return m.find(n,m.matcher(t))},m.max=function(n,t,r){var e,u,i=-1/0,o=-1/0;if(null==t&&null!=n)for(var a=0,c=(n=k(n)?n:m.values(n)).length;a<c;a++)e=n[a],i<e&&(i=e);else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(o<u||u===-1/0&&i===-1/0)&&(i=n,o=u)});return i},m.min=function(n,t,r){var e,u,i=1/0,o=1/0;if(null==t&&null!=n)for(var a=0,c=(n=k(n)?n:m.values(n)).length;a<c;a++)(e=n[a])<i&&(i=e);else t=x(t,r),m.each(n,function(n,r,e){((u=t(n,r,e))<o||1/0===u&&1/0===i)&&(i=n,o=u)});return i},m.shuffle=function(n){for(var t,r=k(n)?n:m.values(n),e=r.length,u=Array(e),i=0;i<e;i++)(t=m.random(0,i))!==i&&(u[i]=u[t]),u[t]=r[i];return u},m.sample=function(n,t,r){return null==t||r?(n=k(n)?n:m.values(n))[m.random(n.length-1)]:m.shuffle(n).slice(0,Math.max(0,t))},m.sortBy=function(n,t,r){return t=x(t,r),m.pluck(m.map(n,function(n,r,e){return{value:n,index:r,criteria:t(n,r,e)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(e<r||void 0===r)return 1;if(r<e||void 0===e)return-1}return n.index-t.index}),"value")},m.groupBy=F(function(n,t,r){m.has(n,r)?n[r].push(t):n[r]=[t]}),m.indexBy=F(function(n,t,r){n[r]=t}),m.countBy=F(function(n,t,r){m.has(n,r)?n[r]++:n[r]=1}),m.toArray=function(n){return n?m.isArray(n)?l.call(n):k(n)?m.map(n,m.identity):m.values(n):[]},m.size=function(n){return null==n?0:(k(n)?n:m.keys(n)).length},m.partition=function(n,t,r){t=x(t,r);var e=[],u=[];return m.each(n,function(n,r,i){(t(n,r,i)?e:u).push(n)}),[e,u]},m.first=m.head=m.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:m.initial(n,n.length-t)},m.initial=function(n,t,r){return l.call(n,0,Math.max(0,n.length-(null==t||r?1:t)))},m.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:m.rest(n,Math.max(0,n.length-t))},m.rest=m.tail=m.drop=function(n,t,r){return l.call(n,null==t||r?1:t)},m.compact=function(n){return m.filter(n,m.identity)},function(n,t,r,e){for(var u=[],i=0,o=e||0,a=O(n);o<a;o++){var c=n[o];if(k(c)&&(m.isArray(c)||m.isArguments(c))){var f=0,l=(c=t?c:S(c,t,r)).length;for(u.length+=l;f<l;)u[i++]=c[f++]}else r||(u[i++]=c)}return u}),M=(m.flatten=function(n,t){return S(n,t,!1)},m.without=function(n){return m.difference(n,l.call(arguments,1))},m.uniq=m.unique=function(n,t,r,e){m.isBoolean(t)||(e=r,r=t,t=!1),null!=r&&(r=x(r,e));for(var u=[],i=[],o=0,a=O(n);o<a;o++){var c=n[o],f=r?r(c,o,n):c;t?(o&&i===f||u.push(c),i=f):r?m.contains(i,f)||(i.push(f),u.push(c)):m.contains(u,c)||u.push(c)}return u},m.union=function(){return m.uniq(S(arguments,!0,!0))},m.intersection=function(n){for(var t=[],r=arguments.length,e=0,u=O(n);e<u;e++){var i=n[e];if(!m.contains(t,i)){for(var o=1;o<r&&m.contains(arguments[o],i);o++);o===r&&t.push(i)}}return t},m.difference=function(n){var t=S(arguments,!0,!0,1);return m.filter(n,function(n){return!m.contains(t,n)})},m.zip=function(){return m.unzip(arguments)},m.unzip=function(n){for(var t=n&&m.max(n,O).length||0,r=Array(t),e=0;e<t;e++)r[e]=m.pluck(n,e);return r},m.object=function(n,t){for(var r={},e=0,u=O(n);e<u;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},m.findIndex=t(1),m.findLastIndex=t(-1),m.sortedIndex=function(n,t,r,e){for(var u=(r=x(r,e,1))(t),i=0,o=O(n);i<o;){var a=Math.floor((i+o)/2);r(n[a])<u?i=a+1:o=a}return i},m.indexOf=r(1,m.findIndex,m.sortedIndex),m.lastIndexOf=r(-1,m.findLastIndex),m.range=function(n,t,r){null==t&&(t=n||0,n=0),r=r||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=Array(e),i=0;i<e;i++,n+=r)u[i]=n;return u},m.bind=function(n,t){if(g&&n.bind===g)return g.apply(n,l.call(arguments,1));var r,e;if(m.isFunction(n))return r=l.call(arguments,2),e=function(){return E(n,e,t,this,r.concat(l.call(arguments)))};throw new TypeError("Bind must be called on a function")},m.partial=function(n){function r(){for(var e=0,u=t.length,i=Array(u),o=0;o<u;o++)i[o]=t[o]===m?arguments[e++]:t[o];for(;e<arguments.length;)i.push(arguments[e++]);return E(n,r,this,this,i)}var t=l.call(arguments,1);return r},m.bindAll=function(n){var t,r,e=arguments.length;if(e<=1)throw new Error("bindAll must be passed function names");for(t=1;t<e;t++)n[r=arguments[t]]=m.bind(n[r],n);return n},m.memoize=function(n,t){function r(e){var u=r.cache,i=""+(t?t.apply(this,arguments):e);return m.has(u,i)||(u[i]=n.apply(this,arguments)),u[i]}return r.cache={},r},m.delay=function(n,t){var r=l.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},m.defer=m.partial(m.delay,m,1),m.throttle=function(n,t,r){function c(){a=!1===r.leading?0:m.now(),o=null,i=n.apply(e,u),o||(e=u=null)}var e,u,i,o=null,a=0;r=r||{};return function(){var f=m.now(),l=(a||!1!==r.leading||(a=f),t-(f-a));return e=this,u=arguments,l<=0||t<l?(o&&(clearTimeout(o),o=null),a=f,i=n.apply(e,u),o||(e=u=null)):o||!1===r.trailing||(o=setTimeout(c,l)),i}},m.debounce=function(n,t,r){function c(){var f=m.now()-o;f<t&&0<=f?e=setTimeout(c,t-f):(e=null,r||(a=n.apply(i,u),e)||(i=u=null))}var e,u,i,o,a;return function(){i=this,u=arguments,o=m.now();var f=r&&!e;return e=e||setTimeout(c,t),f&&(a=n.apply(i,u),i=u=null),a}},m.wrap=function(n,t){return m.partial(t,n)},m.negate=function(n){return function(){return!n.apply(this,arguments)}},m.compose=function(){var n=arguments,t=n.length-1;return function(){for(var r=t,e=n[t].apply(this,arguments);r--;)e=n[r].call(this,e);return e}},m.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},m.before=function(n,t){var r;return function(){return 0<--n&&(r=t.apply(this,arguments)),n<=1&&(t=null),r}},m.once=m.partial(m.before,2),!{toString:null}.propertyIsEnumerable("toString")),I=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],N=(m.keys=function(n){if(!m.isObject(n))return[];if(v)return v(n);var r,t=[];for(r in n)m.has(n,r)&&t.push(r);return M&&e(n,t),t},m.allKeys=function(n){if(!m.isObject(n))return[];var r,t=[];for(r in n)t.push(r);return M&&e(n,t),t},m.values=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;u<r;u++)e[u]=n[t[u]];return e},m.mapObject=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=u.length,o={},a=0;a<i;a++)o[e=u[a]]=t(n[e],e,n);return o},m.pairs=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;u<r;u++)e[u]=[t[u],n[t[u]]];return e},m.invert=function(n){for(var t={},r=m.keys(n),e=0,u=r.length;e<u;e++)t[n[r[e]]]=r[e];return t},m.functions=m.methods=function(n){var r,t=[];for(r in n)m.isFunction(n[r])&&t.push(r);return t.sort()},m.extend=_(m.allKeys),m.extendOwn=m.assign=_(m.keys),m.findKey=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=0,o=u.length;i<o;i++)if(t(n[e=u[i]],e,n))return e},m.pick=function(n,t,r){var e,u,i={},o=n;if(null!=o){m.isFunction(t)?(u=m.allKeys(o),e=b(t,r)):(u=S(arguments,!1,!1,1),e=function(n,t,r){return t in r},o=Object(o));for(var a=0,c=u.length;a<c;a++){var f=u[a],l=o[f];e(l,f,o)&&(i[f]=l)}}return i},m.omit=function(n,t,r){var e;return t=m.isFunction(t)?m.negate(t):(e=m.map(S(arguments,!1,!1,1),String),function(n,t){return!m.contains(e,t)}),m.pick(n,t,r)},m.defaults=_(m.allKeys,!0),m.create=function(n,t){n=j(n);return t&&m.extendOwn(n,t),n},m.clone=function(n){return m.isObject(n)?m.isArray(n)?n.slice():m.extend({},n):n},m.tap=function(n,t){return t(n),n},m.isMatch=function(n,t){var r=m.keys(t),e=r.length;if(null==n)return!e;for(var u=Object(n),i=0;i<e;i++){var o=r[i];if(t[o]!==u[o]||!(o in u))return!1}return!0},function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof m&&(n=n._wrapped),t instanceof m&&(t=t._wrapped);var u=s.call(n);if(u!==s.call(t))return!1;switch(u){case"[object RegExp]":case"[object String]":return""+n==""+t;case"[object Number]":return+n!=+n?+t!=+t:0==+n?1/+n==1/t:+n==+t;case"[object Date]":case"[object Boolean]":return+n==+t}u="[object Array]"===u;if(!u){if("object"!=typeof n||"object"!=typeof t)return!1;var o=n.constructor,a=t.constructor;if(o!==a&&!(m.isFunction(o)&&o instanceof o&&m.isFunction(a)&&a instanceof a)&&"constructor"in n&&"constructor"in t)return!1}e=e||[];for(var c=(r=r||[]).length;c--;)if(r[c]===n)return e[c]===t;if(r.push(n),e.push(t),u){if((c=n.length)!==t.length)return!1;for(;c--;)if(!N(n[c],t[c],r,e))return!1}else{var f,l=m.keys(n),c=l.length;if(m.keys(t).length!==c)return!1;for(;c--;)if(f=l[c],!m.has(t,f)||!N(n[f],t[f],r,e))return!1}return r.pop(),e.pop(),!0}),c=(m.isEqual=function(n,t){return N(n,t)},m.isEmpty=function(n){return null==n||(k(n)&&(m.isArray(n)||m.isString(n)||m.isArguments(n))?0===n.length:0===m.keys(n).length)},m.isElement=function(n){return!(!n||1!==n.nodeType)},m.isArray=h||function(n){return"[object Array]"===s.call(n)},m.isObject=function(n){var t=typeof n;return"function"==t||"object"==t&&!!n},m.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(n){m["is"+n]=function(t){return s.call(t)==="[object "+n+"]"}}),m.isArguments(arguments)||(m.isArguments=function(n){return m.has(n,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(m.isFunction=function(n){return"function"==typeof n||!1}),m.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},m.isNaN=function(n){return m.isNumber(n)&&n!==+n},m.isBoolean=function(n){return!0===n||!1===n||"[object Boolean]"===s.call(n)},m.isNull=function(n){return null===n},m.isUndefined=function(n){return void 0===n},m.has=function(n,t){return null!=n&&p.call(n,t)},m.noConflict=function(){return u._=i,this},m.identity=function(n){return n},m.constant=function(n){return function(){return n}},m.noop=function(){},m.property=w,m.propertyOf=function(n){return null==n?function(){}:function(t){return n[t]}},m.matcher=m.matches=function(n){return n=m.extendOwn({},n),function(t){return m.isMatch(t,n)}},m.times=function(n,t,r){var e=Array(Math.max(0,n));t=b(t,r,1);for(var u=0;u<n;u++)e[u]=t(u);return e},m.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},m.now=Date.now||function(){return(new Date).getTime()},{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"}),h=m.invert(c),q=(m.escape=R(c),m.unescape=R(h),m.result=function(n,t,r){t=null==n?void 0:n[t];return m.isFunction(t=void 0===t?r:t)?t.call(n):t},0),K=(m.uniqueId=function(n){var t=++q+"";return n?n+t:t},m.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g},/(.)^/),z={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\u2028|\u2029/g;m.template=function(n,t,r){t=m.defaults({},t=!t&&r?r:t,m.templateSettings);var r=RegExp([(t.escape||K).source,(t.interpolate||K).source,(t.evaluate||K).source].join("|")+"|$","g"),u=0,i="__p+='";n.replace(r,function(t,r,e,o,a){return i+=n.slice(u,a).replace(D,L),u=a+t.length,r?i+="'+\n((__t=("+r+"))==null?'':_underscore.escape(__t))+\n'":e?i+="'+\n((__t=("+e+"))==null?'':__t)+\n'":o&&(i+="';\n"+o+"\n__p+='"),t}),i+="';\n",i="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+(i=t.variable?i:"with(obj||{}){\n"+i+"}\n")+"return __p;\n";try{var o=new Function(t.variable||"obj","_",i)}catch(a){throw a.source=i,a}function c(n){return o.call(this,n,m)}r=t.variable||"obj";return c.source="function("+r+"){\n"+i+"}",c},m.chain=function(n){n=m(n);return n._chain=!0,n};m.mixin=function(n){m.each(m.functions(n),function(t){var r=m[t]=n[t];m.prototype[t]=function(){var n=[this._wrapped];return f.apply(n,arguments),P(this,r.apply(m,n))}})},m.mixin(m),m.each(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=o[n];m.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!==n&&"splice"!==n||0!==r.length||delete r[0],P(this,r)}}),m.each(["concat","join","slice"],function(n){var t=o[n];m.prototype[n]=function(){return P(this,t.apply(this._wrapped,arguments))}}),m.prototype.value=function(){return this._wrapped},m.prototype.valueOf=m.prototype.toJSON=m.prototype.value,m.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return m})}.call(this);var VBacktest=(()=>{var _scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(moduleArg={}){var Module=moduleArg,readyPromiseResolve,readyPromiseReject,Std=(Module.ready=new Promise((resolve,reject)=>{readyPromiseResolve=resolve,readyPromiseReject=reject}),{_skip:function(arr,period){for(var j=0,k=0;j<arr.length&&(isNaN(arr[j])||k++,k!=period);j++);return j},_sum:function(arr,num){for(var sum=0,i=0;i<num;i++)isNaN(arr[i])||(sum+=arr[i]);return sum},_avg:function(arr,num){for(var n=0,sum=0,i=0;i<num;i++)isNaN(arr[i])||(sum+=arr[i],n++);return sum/n},_zeros:function(len){for(var n=[],i=0;i<len;i++)n.push(0);return n},_set:function(arr,start,end,value){for(var e=Math.min(arr.length,end),i=start;i<e;i++)arr[i]=value},_diff:function(a,b){for(var d=[],i=0;i<b.length;i++)isNaN(a[i])||isNaN(b[i])?d.push(NaN):d.push(a[i]-b[i]);return d},_move_diff:function(a){for(var d=[],i=1;i<a.length;i++)d.push(a[i]-a[i-1]);return d},_sma:function(S,period){var R=Std._zeros(S.length),j=Std._skip(S,period);if(Std._set(R,0,j,NaN),j<S.length)for(var sum=0,i=j;i<S.length;i++)i==j?sum=Std._sum(S,i+1):sum+=S[i]-S[i-period],R[i]=sum/period;return R},_smma:function(S,period){var R=Std._zeros(S.length),j=Std._skip(S,period);if(Std._set(R,0,j,NaN),j<S.length){R[j]=Std._avg(S,j+1);for(var i=j+1;i<S.length;i++)R[i]=(R[i-1]*(period-1)+S[i])/period}return R},_ema:function(S,period){var R=Std._zeros(S.length),multiplier=2/(period+1),period=Std._skip(S,period);if(Std._set(R,0,period,NaN),period<S.length){R[period]=Std._avg(S,period+1);for(var i=period+1;i<S.length;i++)R[i]=(S[i]-R[i-1])*multiplier+R[i-1]}return R},_cmp:function(arr,start,end,cmpFunc){for(var v=arr[start],i=start;i<end;i++)v=cmpFunc(arr[i],v);return v},_filt:function(records,n,attr,iv,cmpFunc){if(records.length<2)return NaN;for(var v=iv,pos=0!==n?records.length-Math.min(records.length-1,n)-1:0,i=records.length-2;pos<=i;i--)v=cmpFunc(v,void 0!==attr?records[i][attr]:records[i]);return v},_ticks:function(records){if(0===records.length)return[];var ticks=[];if(void 0!==records[0].Close)for(var i=0;i<records.length;i++)ticks.push(records[i].Close);else ticks=records;return ticks}});function TAInstance(logPtr){var self={_log:logPtr="function"!=typeof logPtr?function(){}:logPtr,Highest:function(records,n,attr){return Std._filt(records,n,attr,Number.MIN_VALUE,Math.max)},Lowest:function(records,n,attr){return Std._filt(records,n,attr,Number.MAX_VALUE,Math.min)},MA:function(records,period){return self._log("MA",period=void 0===period?9:period),Std._sma(Std._ticks(records),period)},SMA:function(records,period){return self._log("SMA",period=void 0===period?9:period),Std._sma(Std._ticks(records),period)},EMA:function(records,period){return self._log("EMA",period=void 0===period?9:period),Std._ema(Std._ticks(records),period)},MACD:function(records,fastEMA,slowEMA,signalEMA){self._log("MACD",fastEMA=void 0===fastEMA?12:fastEMA,slowEMA=void 0===slowEMA?26:slowEMA,signalEMA=void 0===signalEMA?9:signalEMA);records=Std._ticks(records),slowEMA=Std._ema(records,slowEMA),records=Std._ema(records,fastEMA),fastEMA=Std._diff(records,slowEMA),records=Std._ema(fastEMA,signalEMA);return[fastEMA,records,Std._diff(fastEMA,records)]},BOLL:function(records,period,multiplier){self._log("BOLL",period=void 0===period?20:period,multiplier=void 0===multiplier?2:multiplier);for(var S=Std._ticks(records),j=period-1;j<S.length&&isNaN(S[j]);j++);for(var UP=Std._zeros(S.length),MB=Std._zeros(S.length),DN=Std._zeros(S.length),sum=(Std._set(UP,0,j,NaN),Std._set(MB,0,j,NaN),Std._set(DN,0,j,NaN),0),i=j;i<S.length;i++){if(i==j)for(var k=0;k<period;k++)sum+=S[k];else sum=sum+S[i]-S[i-period];for(var ma=sum/period,d=0,m=i+1-period;m<=i;m++)d+=(S[m]-ma)*(S[m]-ma);var stdev=Math.sqrt(d/period),dn=ma-multiplier*stdev;UP[i]=ma+multiplier*stdev,MB[i]=ma,DN[i]=dn}return[UP,MB,DN]},KDJ:function(records,n,k,d){self._log("KDJ",n=void 0===n?9:n,k=void 0===k?3:k,d=void 0===d?3:d);for(var RSV=Std._zeros(records.length),K=(Std._set(RSV,0,n-1,NaN),Std._zeros(records.length)),D=Std._zeros(records.length),J=Std._zeros(records.length),hs=Std._zeros(records.length),ls=Std._zeros(records.length),j=0;j<records.length;j++)hs[j]=records[j].High,ls[j]=records[j].Low;for(var c,h,l,i=0;i<records.length;i++)n-1<=i?(c=records[i].Close,h=Std._cmp(hs,i-(n-1),i+1,Math.max),l=Std._cmp(ls,i-(n-1),i+1,Math.min),RSV[i]=h!=l?(c-l)/(h-l)*100:100,K[i]=(+RSV[i]+(k-1)*K[i-1])/k,D[i]=(+K[i]+(d-1)*D[i-1])/d):(K[i]=D[i]=50,RSV[i]=0),J[i]=3*K[i]-2*D[i];for(var m=0;m<n-1;m++)K[m]=D[m]=J[m]=NaN;return[K,D,J]},RSI:function(records,period){self._log("RSI",period=void 0===period?14:period);var n=period,rsi=Std._zeros(records.length);if(Std._set(rsi,0,rsi.length,NaN),!(records.length<n)){for(var ticks=Std._ticks(records),deltas=Std._move_diff(ticks),seed=deltas.slice(0,n),up=0,down=0,i=0;i<seed.length;i++)0<=seed[i]?up+=seed[i]:down+=seed[i];up/=n;var delta,down=-down/n,upval=(rsi[n]=100-100/(1+(0!=down?up/down:0)),0),downval=0;for(i=n+1;i<ticks.length;i++)downval=0<(delta=deltas[i-1])?(upval=delta,0):(upval=0,-delta),rsi[i]=100-100/(1+(up=(up*(n-1)+upval)/n)/(down=(down*(n-1)+downval)/n))}return rsi},OBV:function(records){if(self._log("OBV"),0===records.length)return[];if(void 0===records[0].Close)throw"argument must KLine";for(var R=[],i=0;i<records.length;i++)0===i?R[i]=records[i].Volume:records[i].Close>=records[i-1].Close?R[i]=R[i-1]+records[i].Volume:R[i]=R[i-1]-records[i].Volume;return R},ATR:function(records,period){if(self._log("ATR",period=void 0===period?14:period),0===records.length)return[];if(void 0===records[0].Close)throw"argument must KLine";for(var R=Std._zeros(records.length),sum=0,n=0,i=0;i<records.length;i++){var TR=0;sum+=TR=0==i?records[i].High-records[i].Low:Math.max(records[i].High-records[i].Low,Math.abs(records[i].High-records[i-1].Close),Math.abs(records[i-1].Close-records[i].Low)),R[i]=n=i<period?sum/(i+1):((period-1)*n+TR)/period}return R},Alligator:function(records,jawLength,teethLength,lipsLength){self._log("Alligator",jawLength=void 0===jawLength?13:jawLength,teethLength=void 0===teethLength?8:teethLength,lipsLength=void 0===lipsLength?5:lipsLength);for(var ticks=[],i=0;i<records.length;i++)ticks.push((records[i].High+records[i].Low)/2);return[[NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN].concat(Std._smma(ticks,jawLength)),[NaN,NaN,NaN,NaN,NaN].concat(Std._smma(ticks,teethLength)),[NaN,NaN,NaN].concat(Std._smma(ticks,lipsLength))]},CMF:function(records,periods){self._log("CMF",periods=periods||20);for(var ret=[],sumD=0,sumV=0,arrD=[],arrV=[],i=0;i<records.length;i++){var d=records[i].High==records[i].Low?0:(2*records[i].Close-records[i].Low-records[i].High)/(records[i].High-records[i].Low)*records[i].Volume;arrD.push(d),arrV.push(records[i].Volume),sumD+=d,sumV+=records[i].Volume,periods<=i&&(sumD-=arrD.shift(),sumV-=arrV.shift()),ret.push(sumD/sumV)}return ret}};return self}var TA=TAInstance();function init_pako(){"use strict";function zswap32(q){return(q>>>24&255)+(q>>>8&65280)+((65280&q)<<8)+((255&q)<<24)}var exports={},adler32_1=function(adler,buf,len,pos){for(var s1=65535&adler|0,s2=adler>>>16&65535|0,n=0;0!==len;){for(len-=n=2e3<len?2e3:len;s2=s2+(s1=s1+buf[pos++]|0)|0,--n;);s1%=65521,s2%=65521}return s1|s2<<16|0},crcTable=new Uint32Array(function(){for(var table=[],n=0;n<256;n++){for(var c=n,k=0;k<8;k++)c=1&c?3988292384^c>>>1:c>>>1;table[n]=c}return table}()),crc32_1=function(crc,buf,len,pos){var t=crcTable,end=pos+len;crc^=-1;for(var i=pos;i<end;i++)crc=crc>>>8^t[255&(crc^buf[i])];return-1^crc},BAD$1=16209,TYPE$1=16191,lbase=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),lext=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dbase=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),dext=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),inftrees=function(type,lens,lens_index,codes,table,table_index,work,opts){for(var incr,fill,low,mask,next,match,here_bits,here_op,here_val,bits=opts.bits,len=0,sym=0,min=0,max=0,root=0,curr=0,drop=0,left=0,used=0,huff=0,base=null,count=new Uint16Array(16),offs=new Uint16Array(16),extra=null,len=0;len<=15;len++)count[len]=0;for(sym=0;sym<codes;sym++)count[lens[lens_index+sym]]++;for(root=bits,max=15;1<=max&&0===count[max];max--);if(max<root&&(root=max),0===max)table[table_index++]=20971520,table[table_index++]=20971520,opts.bits=1;else{for(min=1;min<max&&0===count[min];min++);for(root<min&&(root=min),len=left=1;len<=15;len++)if((left=(left<<=1)-count[len])<0)return-1;if(0<left&&(0===type||1!==max))return-1;for(offs[1]=0,len=1;len<15;len++)offs[len+1]=offs[len]+count[len];for(sym=0;sym<codes;sym++)0!==lens[lens_index+sym]&&(work[offs[lens[lens_index+sym]]++]=sym);if(match=0===type?(base=extra=work,20):1===type?(base=lbase,extra=lext,257):(base=dbase,extra=dext,0),len=min,next=table_index,drop=sym=huff=0,low=-1,mask=(used=1<<(curr=root))-1,1===type&&852<used||2===type&&592<used)return 1;for(;;){for(here_val=work[sym]+1<match?(here_op=0,work[sym]):work[sym]>=match?(here_op=extra[work[sym]-match],base[work[sym]-match]):(here_op=96,0),incr=1<<(here_bits=len-drop),min=fill=1<<curr;table[next+(huff>>drop)+(fill-=incr)]=here_bits<<24|here_op<<16|here_val|0,0!==fill;);for(incr=1<<len-1;huff&incr;)incr>>=1;if(huff=0!==incr?(huff&incr-1)+incr:0,sym++,0==--count[len]){if(len===max)break;len=lens[lens_index+work[sym]]}if(root<len&&(huff&mask)!==low){for(next+=min,left=1<<(curr=len-(drop=0===drop?root:drop));curr+drop<max&&!((left-=count[curr+drop])<=0);)curr++,left<<=1;if(used+=1<<curr,1===type&&852<used||2===type&&592<used)return 1;table[low=huff&mask]=root<<24|curr<<16|next-table_index|0}}0!==huff&&(table[next+huff]=len-drop<<24|64<<16|0),opts.bits=root}return 0},constants$1={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8},LENS=1,DISTS=2,Z_FINISH$1=constants$1.Z_FINISH,Z_BLOCK=constants$1.Z_BLOCK,Z_TREES=constants$1.Z_TREES,Z_OK$1=constants$1.Z_OK,Z_STREAM_END$1=constants$1.Z_STREAM_END,Z_NEED_DICT$1=constants$1.Z_NEED_DICT,Z_STREAM_ERROR$1=constants$1.Z_STREAM_ERROR,Z_DATA_ERROR$1=constants$1.Z_DATA_ERROR,Z_MEM_ERROR$1=constants$1.Z_MEM_ERROR,Z_BUF_ERROR=constants$1.Z_BUF_ERROR,Z_DEFLATED=constants$1.Z_DEFLATED,HEAD=16180,BAD=16209,SYNC=16211,ENOUGH_LENS=852,ENOUGH_DISTS=592;function InflateState(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function inflateResetKeep(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:(state=strm.state,strm.total_in=strm.total_out=state.total=0,strm.msg="",state.wrap&&(strm.adler=1&state.wrap),state.mode=HEAD,state.last=0,state.havedict=0,state.flags=-1,state.dmax=32768,state.head=null,state.hold=0,state.bits=0,state.lencode=state.lendyn=new Int32Array(ENOUGH_LENS),state.distcode=state.distdyn=new Int32Array(ENOUGH_DISTS),state.sane=1,state.back=-1,Z_OK$1)}function inflateReset(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:((state=strm.state).wsize=0,state.whave=0,state.wnext=0,inflateResetKeep(strm))}function inflateInit2(strm,windowBits){var state;return strm?(state=new InflateState,(strm.state=state).strm=strm,state.window=null,state.mode=HEAD,(state=inflateReset2(strm,windowBits))!==Z_OK$1&&(strm.state=null),state):Z_STREAM_ERROR$1}function updatewindow(strm,src,end,copy){var dist;return null===(strm=strm.state).window&&(strm.wsize=1<<strm.wbits,strm.wnext=0,strm.whave=0,strm.window=new Uint8Array(strm.wsize)),copy>=strm.wsize?(strm.window.set(src.subarray(end-strm.wsize,end),0),strm.wnext=0,strm.whave=strm.wsize):(copy<(dist=strm.wsize-strm.wnext)&&(dist=copy),strm.window.set(src.subarray(end-copy,end-copy+dist),strm.wnext),(copy-=dist)?(strm.window.set(src.subarray(end-copy,end),0),strm.wnext=copy,strm.whave=strm.wsize):(strm.wnext+=dist,strm.wnext===strm.wsize&&(strm.wnext=0),strm.whave<strm.wsize&&(strm.whave+=dist))),0}var lenfix,distfix,inflateStateCheck=function(strm){var state;return!strm||!(state=strm.state)||state.strm!==strm||state.mode<HEAD||state.mode>SYNC?1:0},inflateReset2=function(strm,windowBits){var wrap,state;return inflateStateCheck(strm)||(state=strm.state,windowBits<0?(wrap=0,windowBits=-windowBits):(wrap=5+(windowBits>>4),windowBits<48&&(windowBits&=15)),windowBits&&(windowBits<8||15<windowBits))?Z_STREAM_ERROR$1:(null!==state.window&&state.wbits!==windowBits&&(state.window=null),state.wrap=wrap,state.wbits=windowBits,inflateReset(strm))},virgin=!0,inflate_1$1={inflateReset:inflateReset,inflateReset2:inflateReset2,inflateResetKeep:inflateResetKeep,inflateInit:function(strm){return inflateInit2(strm,15)},inflateInit2:inflateInit2,inflate:function(strm,flush){var state,input,output,next,put,have,left,hold,bits,_in,_out,copy,from,from_source,here_bits,here_op,here_val,last_bits,last_op,last_val,len,ret,opts,n,here=0,hbuf=new Uint8Array(4),order=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(inflateStateCheck(strm)||!strm.output||!strm.input&&0!==strm.avail_in)return Z_STREAM_ERROR$1;16191===(state=strm.state).mode&&(state.mode=16192),put=strm.next_out,output=strm.output,left=strm.avail_out,next=strm.next_in,input=strm.input,have=strm.avail_in,hold=state.hold,bits=state.bits,_in=have,_out=left,ret=Z_OK$1;inf_leave:for(;;)switch(state.mode){case HEAD:if(0===state.wrap)state.mode=16192;else{for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}2&state.wrap&&35615===hold?(0===state.wbits&&(state.wbits=15),hbuf[state.check=0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0),bits=hold=0,state.mode=16181):(state.head&&(state.head.done=!1),!(1&state.wrap)||(((255&hold)<<8)+(hold>>8))%31?(strm.msg="incorrect header check",state.mode=BAD):(15&hold)!==Z_DEFLATED?(strm.msg="unknown compression method",state.mode=BAD):(bits-=4,len=8+(15&(hold>>>=4)),0===state.wbits&&(state.wbits=len),15<len||len>state.wbits?(strm.msg="invalid window size",state.mode=BAD):(state.dmax=1<<state.wbits,state.flags=0,strm.adler=state.check=1,state.mode=512&hold?16189:16191,bits=hold=0)))}break;case 16181:for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(state.flags=hold,(255&state.flags)!==Z_DEFLATED){strm.msg="unknown compression method",state.mode=BAD;break}if(57344&state.flags){strm.msg="unknown header flags set",state.mode=BAD;break}state.head&&(state.head.text=hold>>8&1),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0,state.mode=16182;case 16182:for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.head&&(state.head.time=hold),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,hbuf[2]=hold>>>16&255,hbuf[3]=hold>>>24&255,state.check=crc32_1(state.check,hbuf,4,0)),bits=hold=0,state.mode=16183;case 16183:for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.head&&(state.head.xflags=255&hold,state.head.os=hold>>8),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0,state.mode=16184;case 16184:if(1024&state.flags){for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.length=hold,state.head&&(state.head.extra_len=hold),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0}else state.head&&(state.head.extra=null);state.mode=16185;case 16185:if(1024&state.flags&&((copy=have<(copy=state.length)?have:copy)&&(state.head&&(len=state.head.extra_len-state.length,state.head.extra||(state.head.extra=new Uint8Array(state.head.extra_len)),state.head.extra.set(input.subarray(next,next+copy),len)),512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,state.length-=copy),state.length))break inf_leave;state.length=0,state.mode=16186;case 16186:if(2048&state.flags){if(0===have)break inf_leave;for(copy=0;len=input[next+copy++],state.head&&len&&state.length<65536&&(state.head.name+=String.fromCharCode(len)),len&&copy<have;);if(512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,len)break inf_leave}else state.head&&(state.head.name=null);state.length=0,state.mode=16187;case 16187:if(4096&state.flags){if(0===have)break inf_leave;for(copy=0;len=input[next+copy++],state.head&&len&&state.length<65536&&(state.head.comment+=String.fromCharCode(len)),len&&copy<have;);if(512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,len)break inf_leave}else state.head&&(state.head.comment=null);state.mode=16188;case 16188:if(512&state.flags){for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(4&state.wrap&&hold!==(65535&state.check)){strm.msg="header crc mismatch",state.mode=BAD;break}bits=hold=0}state.head&&(state.head.hcrc=state.flags>>9&1,state.head.done=!0),strm.adler=state.check=0,state.mode=16191;break;case 16189:for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}strm.adler=state.check=zswap32(hold),bits=hold=0,state.mode=16190;case 16190:if(0===state.havedict)return strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,Z_NEED_DICT$1;strm.adler=state.check=1,state.mode=16191;case 16191:if(flush===Z_BLOCK||flush===Z_TREES)break inf_leave;case 16192:if(state.last)hold>>>=7&bits,bits-=7&bits,state.mode=16206;else{for(;bits<3;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}switch(state.last=1&hold,--bits,3&(hold>>>=1)){case 0:state.mode=16193;break;case 1:if(!function(state){if(virgin){lenfix=new Int32Array(512),distfix=new Int32Array(32);for(var sym=0;sym<144;)state.lens[sym++]=8;for(;sym<256;)state.lens[sym++]=9;for(;sym<280;)state.lens[sym++]=7;for(;sym<288;)state.lens[sym++]=8;for(inftrees(LENS,state.lens,0,288,lenfix,0,state.work,{bits:9}),sym=0;sym<32;)state.lens[sym++]=5;inftrees(DISTS,state.lens,0,32,distfix,0,state.work,{bits:5}),virgin=!1}state.lencode=lenfix,state.lenbits=9,state.distcode=distfix,state.distbits=5}(state),state.mode=16199,flush!==Z_TREES)break;hold>>>=2,bits-=2;break inf_leave;case 2:state.mode=16196;break;case 3:strm.msg="invalid block type",state.mode=BAD}hold>>>=2,bits-=2}break;case 16193:for(hold>>>=7&bits,bits-=7&bits;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if((65535&hold)!=(hold>>>16^65535)){strm.msg="invalid stored block lengths",state.mode=BAD;break}if(state.length=65535&hold,bits=hold=0,state.mode=16194,flush===Z_TREES)break inf_leave;case 16194:state.mode=16195;case 16195:if(copy=state.length){if(0===(copy=left<(copy=have<copy?have:copy)?left:copy))break inf_leave;output.set(input.subarray(next,next+copy),put),have-=copy,next+=copy,left-=copy,put+=copy,state.length-=copy}else state.mode=16191;break;case 16196:for(;bits<14;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(state.nlen=257+(31&hold),hold>>>=5,bits-=5,state.ndist=1+(31&hold),hold>>>=5,bits-=5,state.ncode=4+(15&hold),hold>>>=4,bits-=4,286<state.nlen||30<state.ndist){strm.msg="too many length or distance symbols",state.mode=BAD;break}state.have=0,state.mode=16197;case 16197:for(;state.have<state.ncode;){for(;bits<3;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.lens[order[state.have++]]=7&hold,hold>>>=3,bits-=3}for(;state.have<19;)state.lens[order[state.have++]]=0;if(state.lencode=state.lendyn,state.lenbits=7,opts={bits:state.lenbits},ret=inftrees(0,state.lens,0,19,state.lencode,0,state.work,opts),state.lenbits=opts.bits,ret){strm.msg="invalid code lengths set",state.mode=BAD;break}state.have=0,state.mode=16198;case 16198:for(;state.have<state.nlen+state.ndist;){for(;here_op=(here=state.lencode[hold&(1<<state.lenbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(here_val<16)hold>>>=here_bits,bits-=here_bits,state.lens[state.have++]=here_val;else{if(16===here_val){for(n=here_bits+2;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(hold>>>=here_bits,bits-=here_bits,0===state.have){strm.msg="invalid bit length repeat",state.mode=BAD;break}len=state.lens[state.have-1],copy=3+(3&hold),hold>>>=2,bits-=2}else if(17===here_val){for(n=here_bits+3;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}len=0,copy=3+(7&(hold>>>=here_bits)),hold>>>=3,bits=bits-here_bits-3}else{for(n=here_bits+7;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}len=0,copy=11+(127&(hold>>>=here_bits)),hold>>>=7,bits=bits-here_bits-7}if(state.have+copy>state.nlen+state.ndist){strm.msg="invalid bit length repeat",state.mode=BAD;break}for(;copy--;)state.lens[state.have++]=len}}if(state.mode===BAD)break;if(0===state.lens[256]){strm.msg="invalid code -- missing end-of-block",state.mode=BAD;break}if(state.lenbits=9,opts={bits:state.lenbits},ret=inftrees(LENS,state.lens,0,state.nlen,state.lencode,0,state.work,opts),state.lenbits=opts.bits,ret){strm.msg="invalid literal/lengths set",state.mode=BAD;break}if(state.distbits=6,state.distcode=state.distdyn,opts={bits:state.distbits},ret=inftrees(DISTS,state.lens,state.nlen,state.ndist,state.distcode,0,state.work,opts),state.distbits=opts.bits,ret){strm.msg="invalid distances set",state.mode=BAD;break}if(state.mode=16199,flush===Z_TREES)break inf_leave;case 16199:state.mode=16200;case 16200:if(6<=have&&258<=left){strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,!function(strm,start){var here,op,len,dist,from,from_source,state=strm.state,_in=strm.next_in,input=strm.input,last=_in+(strm.avail_in-5),_out=strm.next_out,output=strm.output,beg=_out-(start-strm.avail_out),end=_out+(strm.avail_out-257),dmax=state.dmax,wsize=state.wsize,whave=state.whave,wnext=state.wnext,s_window=state.window,hold=state.hold,bits=state.bits,lcode=state.lencode,dcode=state.distcode,lmask=(1<<state.lenbits)-1,dmask=(1<<state.distbits)-1;top:do{for(bits<15&&(hold+=input[_in++]<<bits,bits+=8,hold+=input[_in++]<<bits,bits+=8),here=lcode[hold&lmask];;){if(hold>>>=op=here>>>24,bits-=op,0===(op=here>>>16&255))output[_out++]=65535&here;else{if(!(16&op)){if(0==(64&op)){here=lcode[(65535&here)+(hold&(1<<op)-1)];continue}if(32&op){state.mode=TYPE$1;break top}strm.msg="invalid literal/length code",state.mode=BAD$1;break top}for(len=65535&here,(op&=15)&&(bits<op&&(hold+=input[_in++]<<bits,bits+=8),len+=hold&(1<<op)-1,hold>>>=op,bits-=op),bits<15&&(hold+=input[_in++]<<bits,bits+=8,hold+=input[_in++]<<bits,bits+=8),here=dcode[hold&dmask];;){if(hold>>>=op=here>>>24,bits-=op,!(16&(op=here>>>16&255))){if(0==(64&op)){here=dcode[(65535&here)+(hold&(1<<op)-1)];continue}strm.msg="invalid distance code",state.mode=BAD$1;break top}if(dist=65535&here,bits<(op&=15)&&(hold+=input[_in++]<<bits,(bits+=8)<op)&&(hold+=input[_in++]<<bits,bits+=8),dmax<(dist+=hold&(1<<op)-1)){strm.msg="invalid distance too far back",state.mode=BAD$1;break top}if(hold>>>=op,bits-=op,(op=_out-beg)<dist){if(whave<(op=dist-op)&&state.sane){strm.msg="invalid distance too far back",state.mode=BAD$1;break top}if(from_source=s_window,(from=0)===wnext){if(from+=wsize-op,op<len){for(len-=op;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}}else if(wnext<op){if(from+=wsize+wnext-op,(op-=wnext)<len){for(len-=op;output[_out++]=s_window[from++],--op;);if(from=0,wnext<len){for(len-=op=wnext;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}}}else if(from+=wnext-op,op<len){for(len-=op;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}for(;2<len;)output[_out++]=from_source[from++],output[_out++]=from_source[from++],output[_out++]=from_source[from++],len-=3;len&&(output[_out++]=from_source[from++],1<len)&&(output[_out++]=from_source[from++])}else{for(from=_out-dist;output[_out++]=output[from++],output[_out++]=output[from++],output[_out++]=output[from++],2<(len-=3););len&&(output[_out++]=output[from++],1<len)&&(output[_out++]=output[from++])}break}}break}}while(_in<last&&_out<end);hold&=(1<<(bits-=(len=bits>>3)<<3))-1,strm.next_in=_in-=len,strm.next_out=_out,strm.avail_in=_in<last?last-_in+5:5-(_in-last),strm.avail_out=_out<end?end-_out+257:257-(_out-end),state.hold=hold,state.bits=bits}(strm,_out),put=strm.next_out,output=strm.output,left=strm.avail_out,next=strm.next_in,input=strm.input,have=strm.avail_in,hold=state.hold,bits=state.bits,16191===state.mode&&(state.back=-1);break}for(state.back=0;here_op=(here=state.lencode[hold&(1<<state.lenbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(here_op&&0==(240&here_op)){for(last_bits=here_bits,last_op=here_op,last_val=here_val;here_op=(here=state.lencode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)])>>>16&255,here_val=65535&here,!(last_bits+(here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}hold>>>=last_bits,bits-=last_bits,state.back+=last_bits}if(hold>>>=here_bits,bits-=here_bits,state.back+=here_bits,state.length=here_val,0===here_op){state.mode=16205;break}if(32&here_op){state.back=-1,state.mode=16191;break}if(64&here_op){strm.msg="invalid literal/length code",state.mode=BAD;break}state.extra=15&here_op,state.mode=16201;case 16201:if(state.extra){for(n=state.extra;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.length+=hold&(1<<state.extra)-1,hold>>>=state.extra,bits-=state.extra,state.back+=state.extra}state.was=state.length,state.mode=16202;case 16202:for(;here_op=(here=state.distcode[hold&(1<<state.distbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(0==(240&here_op)){for(last_bits=here_bits,last_op=here_op,last_val=here_val;here_op=(here=state.distcode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)])>>>16&255,here_val=65535&here,!(last_bits+(here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}hold>>>=last_bits,bits-=last_bits,state.back+=last_bits}if(hold>>>=here_bits,bits-=here_bits,state.back+=here_bits,64&here_op){strm.msg="invalid distance code",state.mode=BAD;break}state.offset=here_val,state.extra=15&here_op,state.mode=16203;case 16203:if(state.extra){for(n=state.extra;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.offset+=hold&(1<<state.extra)-1,hold>>>=state.extra,bits-=state.extra,state.back+=state.extra}if(state.offset>state.dmax){strm.msg="invalid distance too far back",state.mode=BAD;break}state.mode=16204;case 16204:if(0===left)break inf_leave;if(state.offset>(copy=_out-left)){if((copy=state.offset-copy)>state.whave&&state.sane){strm.msg="invalid distance too far back",state.mode=BAD;break}from=copy>state.wnext?(copy-=state.wnext,state.wsize-copy):state.wnext-copy,copy>state.length&&(copy=state.length),from_source=state.window}else from_source=output,from=put-state.offset,copy=state.length;for(left-=copy=left<copy?left:copy,state.length-=copy;output[put++]=from_source[from++],--copy;);0===state.length&&(state.mode=16200);break;case 16205:if(0===left)break inf_leave;output[put++]=state.length,left--,state.mode=16200;break;case 16206:if(state.wrap){for(;bits<32;){if(0===have)break inf_leave;have--,hold|=input[next++]<<bits,bits+=8}if(_out-=left,strm.total_out+=_out,state.total+=_out,4&state.wrap&&_out&&(strm.adler=state.check=(state.flags?crc32_1:adler32_1)(state.check,output,_out,put-_out)),_out=left,4&state.wrap&&(state.flags?hold:zswap32(hold))!==state.check){strm.msg="incorrect data check",state.mode=BAD;break}bits=hold=0}state.mode=16207;case 16207:if(state.wrap&&state.flags){for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(4&state.wrap&&hold!==(4294967295&state.total)){strm.msg="incorrect length check",state.mode=BAD;break}bits=hold=0}state.mode=16208;case 16208:ret=Z_STREAM_END$1;break inf_leave;case BAD:ret=Z_DATA_ERROR$1;break inf_leave;case 16210:return Z_MEM_ERROR$1;default:return Z_STREAM_ERROR$1}return strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,(state.wsize||_out!==strm.avail_out&&state.mode<BAD&&(state.mode<16206||flush!==Z_FINISH$1))&&updatewindow(strm,strm.output,strm.next_out,_out-strm.avail_out),_in-=strm.avail_in,_out-=strm.avail_out,strm.total_in+=_in,strm.total_out+=_out,state.total+=_out,4&state.wrap&&_out&&(strm.adler=state.check=(state.flags?crc32_1:adler32_1)(state.check,output,_out,strm.next_out-_out)),strm.data_type=state.bits+(state.last?64:0)+(16191===state.mode?128:0)+(16199===state.mode||16194===state.mode?256:0),ret=(0==_in&&0===_out||flush===Z_FINISH$1)&&ret===Z_OK$1?Z_BUF_ERROR:ret},inflateEnd:function(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:((state=strm.state).window&&(state.window=null),strm.state=null,Z_OK$1)},inflateGetHeader:function(strm,head){return inflateStateCheck(strm)||0==(2&(strm=strm.state).wrap)?Z_STREAM_ERROR$1:((strm.head=head).done=!1,Z_OK$1)},inflateSetDictionary:function(strm,dictionary){var state,dictLength=dictionary.length;return inflateStateCheck(strm)||0!==(state=strm.state).wrap&&16190!==state.mode?Z_STREAM_ERROR$1:16190===state.mode&&adler32_1(1,dictionary,dictLength,0)!==state.check?Z_DATA_ERROR$1:updatewindow(strm,dictionary,dictLength,dictLength)?(state.mode=16210,Z_MEM_ERROR$1):(state.havedict=1,Z_OK$1)},inflateInfo:"pako inflate (from Nodeca project)"};function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}var common_assign=function(obj){for(var sources=Array.prototype.slice.call(arguments,1);sources.length;){var source=sources.shift();if(source){if("object"!==_typeof(source))throw new TypeError(source+"must be non-object");for(var p in source)!function(obj,key){return Object.prototype.hasOwnProperty.call(obj,key)}(source,p)||(obj[p]=source[p])}}return obj},common_flattenChunks=function(chunks){for(var len=0,i=0,l=chunks.length;i<l;i++)len+=chunks[i].length;for(var result=new Uint8Array(len),_i=0,pos=0,_l=chunks.length;_i<_l;_i++){var chunk=chunks[_i];result.set(chunk,pos),pos+=chunk.length}return result},STR_APPLY_UIA_OK=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(__){STR_APPLY_UIA_OK=!1}for(var _utf8len=new Uint8Array(256),q=0;q<256;q++)_utf8len[q]=252<=q?6:248<=q?5:240<=q?4:224<=q?3:192<=q?2:1;_utf8len[254]=_utf8len[254]=1;var strings_string2buf=function(str){if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(str);for(var buf,c,c2,i,str_len=str.length,buf_len=0,m_pos=0;m_pos<str_len;m_pos++)55296==(64512&(c=str.charCodeAt(m_pos)))&&m_pos+1<str_len&&56320==(64512&(c2=str.charCodeAt(m_pos+1)))&&(c=65536+(c-55296<<10)+(c2-56320),m_pos++),buf_len+=c<128?1:c<2048?2:c<65536?3:4;for(buf=new Uint8Array(buf_len),m_pos=i=0;i<buf_len;m_pos++)55296==(64512&(c=str.charCodeAt(m_pos)))&&m_pos+1<str_len&&56320==(64512&(c2=str.charCodeAt(m_pos+1)))&&(c=65536+(c-55296<<10)+(c2-56320),m_pos++),c<128?buf[i++]=c:(c<2048?buf[i++]=192|c>>>6:(c<65536?buf[i++]=224|c>>>12:(buf[i++]=240|c>>>18,buf[i++]=128|c>>>12&63),buf[i++]=128|c>>>6&63),buf[i++]=128|63&c);return buf},strings_buf2string=function(buf,max){var len=max||buf.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(buf.subarray(0,max));for(var utf16buf=new Array(2*len),out=0,i=0;i<len;){var c=buf[i++];if(c<128)utf16buf[out++]=c;else{var c_len=_utf8len[c];if(4<c_len)utf16buf[out++]=65533,i+=c_len-1;else{for(c&=2===c_len?31:3===c_len?15:7;1<c_len&&i<len;)c=c<<6|63&buf[i++],c_len--;1<c_len?utf16buf[out++]=65533:c<65536?utf16buf[out++]=c:(c-=65536,utf16buf[out++]=55296|c>>10&1023,utf16buf[out++]=56320|1023&c)}}}return function(buf,len){if(len<65534&&buf.subarray&&STR_APPLY_UIA_OK)return String.fromCharCode.apply(null,buf.length===len?buf:buf.subarray(0,len));for(var result="",i=0;i<len;i++)result+=String.fromCharCode(buf[i]);return result}(utf16buf,out)},strings_utf8border=function(buf,max){for(var pos=(max=(max=max||buf.length)>buf.length?buf.length:max)-1;0<=pos&&128==(192&buf[pos]);)pos--;return!(pos<0)&&0!==pos&&pos+_utf8len[buf[pos]]>max?pos:max},messages={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"};var zstream=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};var gzheader=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1},toString=Object.prototype.toString,Z_NO_FLUSH=constants$1.Z_NO_FLUSH,Z_FINISH=constants$1.Z_FINISH,Z_OK=constants$1.Z_OK,Z_STREAM_END=constants$1.Z_STREAM_END,Z_NEED_DICT=constants$1.Z_NEED_DICT,Z_STREAM_ERROR=constants$1.Z_STREAM_ERROR,Z_DATA_ERROR=constants$1.Z_DATA_ERROR,Z_MEM_ERROR=constants$1.Z_MEM_ERROR;function Inflate(options){this.options=common_assign({chunkSize:65536,windowBits:15,to:""},options||{});var opt=this.options,options=(opt.raw&&0<=opt.windowBits&&opt.windowBits<16&&(opt.windowBits=-opt.windowBits,0===opt.windowBits)&&(opt.windowBits=-15),!(0<=opt.windowBits&&opt.windowBits<16)||options&&options.windowBits||(opt.windowBits+=32),15<opt.windowBits&&opt.windowBits<48&&0==(15&opt.windowBits)&&(opt.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0,inflate_1$1.inflateInit2(this.strm,opt.windowBits));if(options!==Z_OK)throw new Error(messages[options]);if(this.header=new gzheader,inflate_1$1.inflateGetHeader(this.strm,this.header),opt.dictionary&&("string"==typeof opt.dictionary?opt.dictionary=strings_string2buf(opt.dictionary):"[object ArrayBuffer]"===toString.call(opt.dictionary)&&(opt.dictionary=new Uint8Array(opt.dictionary)),opt.raw)&&(options=inflate_1$1.inflateSetDictionary(this.strm,opt.dictionary))!==Z_OK)throw new Error(messages[options])}function inflate(input,options){options=new Inflate(options);if(options.push(input),options.err)throw options.msg||messages[options.err];return options.result}Inflate.prototype.push=function(data,flush_mode){var status,_flush_mode,strm=this.strm,chunkSize=this.options.chunkSize,dictionary=this.options.dictionary;if(this.ended)return!1;for(_flush_mode=flush_mode===~~flush_mode?flush_mode:!0===flush_mode?Z_FINISH:Z_NO_FLUSH,"[object ArrayBuffer]"===toString.call(data)?strm.input=new Uint8Array(data):strm.input=data,strm.next_in=0,strm.avail_in=strm.input.length;;){for(0===strm.avail_out&&(strm.output=new Uint8Array(chunkSize),strm.next_out=0,strm.avail_out=chunkSize),(status=inflate_1$1.inflate(strm,_flush_mode))===Z_NEED_DICT&&dictionary&&((status=inflate_1$1.inflateSetDictionary(strm,dictionary))===Z_OK?status=inflate_1$1.inflate(strm,_flush_mode):status===Z_DATA_ERROR&&(status=Z_NEED_DICT));0<strm.avail_in&&status===Z_STREAM_END&&0<strm.state.wrap&&0!==data[strm.next_in];)inflate_1$1.inflateReset(strm),status=inflate_1$1.inflate(strm,_flush_mode);switch(status){case Z_STREAM_ERROR:case Z_DATA_ERROR:case Z_NEED_DICT:case Z_MEM_ERROR:return this.onEnd(status),!(this.ended=!0)}var next_out_utf8,tail,utf8str,last_avail_out=strm.avail_out;if(!strm.next_out||0!==strm.avail_out&&status!==Z_STREAM_END||("string"===this.options.to?(next_out_utf8=strings_utf8border(strm.output,strm.next_out),tail=strm.next_out-next_out_utf8,utf8str=strings_buf2string(strm.output,next_out_utf8),strm.next_out=tail,strm.avail_out=chunkSize-tail,tail&&strm.output.set(strm.output.subarray(next_out_utf8,next_out_utf8+tail),0),this.onData(utf8str)):this.onData(strm.output.length===strm.next_out?strm.output:strm.output.subarray(0,strm.next_out))),status!==Z_OK||0!==last_avail_out){if(status===Z_STREAM_END)return status=inflate_1$1.inflateEnd(this.strm),this.onEnd(status),this.ended=!0;if(0===strm.avail_in)break}}return!0},Inflate.prototype.onData=function(chunk){this.chunks.push(chunk)},Inflate.prototype.onEnd=function(status){status===Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=common_flattenChunks(this.chunks)),this.chunks=[],this.err=status,this.msg=this.strm.msg};function inflateRaw_1(input,options){return(options=options||{}).raw=!0,inflate(input,options)}var inflate_2=inflate,ungzip=inflate,inflate_1={Inflate:Inflate,inflate:inflate_2,inflateRaw:inflateRaw_1,ungzip:ungzip,constants:constants$1};return exports.Inflate=Inflate,exports.constants=constants$1,exports.default=inflate_1,exports.inflate=inflate_2,exports.inflateRaw=inflateRaw_1,exports.ungzip=ungzip,exports}void 0!==Module&&(Module.TA=TA);var browserFix=browserFix||{},wasmString;function inflateBase64(base64){var binaryString=function(string){var b64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",string=String(string).replace(/[\t\n\f\r ]+/g,"");string+="==".slice(2-(3&string.length));for(var bitmap,r1,r2,result="",i=0;i<string.length;)bitmap=b64.indexOf(string.charAt(i++))<<18|b64.indexOf(string.charAt(i++))<<12|(r1=b64.indexOf(string.charAt(i++)))<<6|(r2=b64.indexOf(string.charAt(i++))),result+=64===r1?String.fromCharCode(bitmap>>16&255):64===r2?String.fromCharCode(bitmap>>16&255,bitmap>>8&255):String.fromCharCode(bitmap>>16&255,bitmap>>8&255,255&bitmap);return result}(base64),length=binaryString.length,bytes=new Uint8Array(length);for(let i=0;i<length;i++)bytes[i]=binaryString.charCodeAt(i);return init_pako().inflate(bytes)}browserFix.sliceTypedArray=function(array,sliceBegin,sliceEnd){var bpe=array.BYTES_PER_ELEMENT,boff=array.byteOffset,len=array.length;return(sliceBegin=0|sliceBegin||0)<0&&(sliceBegin+=len),(sliceEnd=void 0===sliceEnd?len:0|sliceEnd)<0&&(sliceEnd+=len),new array.constructor(array.buffer.slice(boff+bpe*sliceBegin,boff+bpe*sliceEnd))},void 0===Uint8Array.prototype.slice&&(console.warn("The TypedArray.slice method is not supported in this browser. This may impair performance. "),Uint16Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Int16Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Uint8Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Int8Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)}),void 0!==Module&&(wasmString="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",100<wasmString.length)&&(Module.wasmBinary=inflateBase64(wasmString),Module.__haswasmBinary__=!0),"undefined"!=typeof __ctx&&void 0!==__ctx.INITIAL_MEMORY&&(Module.INITIAL_MEMORY=__ctx.INITIAL_MEMORY),"undefined"==typeof print&&(print=console.log);var JSHttpGet=null,crypto,fs,os,process,CLUSTER_IP,CLUSTER_DOMAIN,JSHttpGet;function md5(text){return crypto.createHash("md5").update(text).digest("hex")}JSHttpGet="undefined"!=typeof self&&void 0!==self.onmessage?function(path){var r=XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");return r.open("GET","https://www.fmz.com"+path,!1),r.send(null),r.responseText}:(crypto=require("crypto"),fs=require("fs"),os=require("os"),process=require("process"),CLUSTER_IP=process.env.CLUSTER_IP||"q.fmz.com",CLUSTER_DOMAIN=process.env.CLUSTER_DOMAIN||"q.fmz.com",function(url){var tmpCache=os.tmpdir()+"/cache",tmpCache=(fs.existsSync(tmpCache)||fs.mkdirSync(tmpCache),tmpCache+"/botvs_kline_"+md5(url="http://"+CLUSTER_IP+url));return fs.existsSync(tmpCache)?fs.readFileSync(tmpCache,"utf-8"):((url=require("sync-request")("GET",url,{headers:{Host:CLUSTER_DOMAIN}}).getBody("utf8"))&&-1!==url.indexOf(",")&&fs.writeFileSync(tmpCache,url,"utf-8"),url)});var moduleOverrides=Object.assign({},Module),arguments_=[],thisProgram="./this.program",quit_=(status,toThrow)=>{throw toThrow},ENVIRONMENT_IS_WEB="object"==typeof window,ENVIRONMENT_IS_WORKER="function"==typeof importScripts,ENVIRONMENT_IS_NODE="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,scriptDirectory="",read_,readAsync,readBinary,setWindowTitle,fs,nodePath,scriptDirectory,read_,readBinary,readAsync;function locateFile(path){return Module.locateFile?Module.locateFile(path,scriptDirectory):scriptDirectory+path}ENVIRONMENT_IS_NODE?(fs=require("fs"),nodePath=require("path"),scriptDirectory=ENVIRONMENT_IS_WORKER?nodePath.dirname(scriptDirectory)+"/":__dirname+"/",read_=(filename,binary)=>(filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename),fs.readFileSync(filename,binary?void 0:"utf8")),readBinary=filename=>{filename=read_(filename,!0);return filename=filename.buffer?filename:new Uint8Array(filename)},readAsync=(filename,onload,onerror,binary=!0)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename),fs.readFile(filename,binary?void 0:"utf8",(err,data)=>{err?onerror(err):onload(binary?data.buffer:data)})},!Module.thisProgram&&1<process.argv.length&&(thisProgram=process.argv[1].replace(/\\/g,"/")),arguments_=process.argv.slice(2),quit_=(status,toThrow)=>{throw process.exitCode=status,toThrow},Module.inspect=()=>"[Emscripten Module object]"):(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&(ENVIRONMENT_IS_WORKER?scriptDirectory=self.location.href:"undefined"!=typeof document&&document.currentScript&&(scriptDirectory=document.currentScript.src),_scriptDir&&(scriptDirectory=_scriptDir),scriptDirectory=0!==scriptDirectory.indexOf("blob:")?scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1):"",read_=url=>{var xhr=new XMLHttpRequest;return xhr.open("GET",url,!1),xhr.send(null),xhr.responseText},ENVIRONMENT_IS_WORKER&&(readBinary=url=>{var xhr=new XMLHttpRequest;return xhr.open("GET",url,!1),xhr.responseType="arraybuffer",xhr.send(null),new Uint8Array(xhr.response)}),readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,!0),xhr.responseType="arraybuffer",xhr.onload=()=>{200==xhr.status||0==xhr.status&&xhr.response?onload(xhr.response):onerror()},xhr.onerror=onerror,xhr.send(null)},setWindowTitle=title=>document.title=title);var out=Module.print||console.log.bind(console),err=Module.printErr||console.error.bind(console),wasmBinary,noExitRuntime=(Object.assign(Module,moduleOverrides),moduleOverrides=null,Module.arguments&&(arguments_=Module.arguments),Module.thisProgram&&(thisProgram=Module.thisProgram),Module.quit&&(quit_=Module.quit),Module.wasmBinary&&(wasmBinary=Module.wasmBinary),Module.noExitRuntime||!0),wasmMemory,wasmExports,ABORT=("object"!=typeof WebAssembly&&abort("no native wasm support detected"),!1),EXITSTATUS,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function assert(condition,text){condition||abort(text)}function updateMemoryViews(){var b=wasmMemory.buffer;Module.HEAP8=HEAP8=new Int8Array(b),Module.HEAP16=HEAP16=new Int16Array(b),Module.HEAP32=HEAP32=new Int32Array(b),Module.HEAPU8=HEAPU8=new Uint8Array(b),Module.HEAPU16=HEAPU16=new Uint16Array(b),Module.HEAPU32=HEAPU32=new Uint32Array(b),Module.HEAPF32=HEAPF32=new Float32Array(b),Module.HEAPF64=HEAPF64=new Float64Array(b)}var INITIAL_MEMORY=Module.INITIAL_MEMORY||314572800,wasmTable,__ATPRERUN__=(assert(5242880<=INITIAL_MEMORY,"INITIAL_MEMORY should be larger than STACK_SIZE, was "+INITIAL_MEMORY+"! (STACK_SIZE=5242880)"),wasmMemory=Module.wasmMemory||new WebAssembly.Memory({initial:INITIAL_MEMORY/65536,maximum:65536}),updateMemoryViews(),INITIAL_MEMORY=wasmMemory.buffer.byteLength,[]),__ATINIT__=[],__ATPOSTRUN__=[],runtimeInitialized=!1;function preRun(){if(Module.preRun)for("function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);Module.preRun.length;)addOnPreRun(Module.preRun.shift());callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=!0,Module.noFSInit||FS.init.initialized||FS.init(),FS.ignorePermissions=!1,TTY.init(),callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module.postRun)for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);Module.postRun.length;)addOnPostRun(Module.postRun.shift());callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0,runDependencyWatcher=null,dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies)}function removeRunDependency(id){var callback;runDependencies--,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies),0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),dependenciesFulfilled)&&(callback=dependenciesFulfilled,dependenciesFulfilled=null,callback())}function abort(what){Module.onAbort&&Module.onAbort(what),err(what="Aborted("+what+")"),ABORT=!0,EXITSTATUS=1,what+=". Build with -sASSERTIONS for more info.";what=new WebAssembly.RuntimeError(what);throw readyPromiseReject(what),what}var dataURIPrefix="data:application/octet-stream;base64,",wasmBinaryFile,tempDouble,tempI64;function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith("file://")}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary)return new Uint8Array(wasmBinary);if(readBinary)return readBinary(file);throw"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)"}function instantiateSync(file,info){file=getBinarySync(file),file=new WebAssembly.Module(file);return[new WebAssembly.Instance(file,info),file]}function createWasm(){var info={a:wasmImports};function receiveInstance(instance,module){instance=applySignatureConversions(instance.exports);return wasmTable=(wasmExports=instance).S,addOnInit(wasmExports.O),removeRunDependency("wasm-instantiate"),instance}if(addRunDependency("wasm-instantiate"),Module.instantiateWasm)try{return Module.instantiateWasm(info,receiveInstance)}catch(e){err("Module.instantiateWasm callback failed with error: "+e),readyPromiseReject(e)}return receiveInstance(instantiateSync(wasmBinaryFile,info)[0])}wasmBinaryFile="sandbox_cpp_wasm.wasm",isDataURI(wasmBinaryFile)||(wasmBinaryFile=locateFile(wasmBinaryFile));var callRuntimeCallbacks=callbacks=>{for(;0<callbacks.length;)callbacks.shift()(Module)};function getValue(ptr,type="i8"){switch(type=type.endsWith("*")?"*":type){case"i1":case"i8":return HEAP8[ptr>>>0];case"i16":return HEAP16[ptr>>>1];case"i32":return HEAP32[ptr>>>2];case"i64":abort("to do getValue(i64) use WASM_BIGINT");case"float":return HEAPF32[ptr>>>2];case"double":return HEAPF64[ptr>>>3];case"*":return HEAPU32[ptr>>>2];default:abort("invalid type for getValue: "+type)}}function setValue(ptr,value,type="i8"){switch(type=type.endsWith("*")?"*":type){case"i1":case"i8":HEAP8[ptr>>>0]=value;break;case"i16":HEAP16[ptr>>>1]=value;break;case"i32":HEAP32[ptr>>>2]=value;break;case"i64":abort("to do setValue(i64) use WASM_BIGINT");case"float":HEAPF32[ptr>>>2]=value;break;case"double":HEAPF64[ptr>>>3]=value;break;case"*":HEAPU32[ptr>>>2]=value;break;default:abort("invalid type for setValue: "+type)}}function convertI32PairToI53Checked(lo,hi){return hi+2097152>>>0<4194305-!!lo?(lo>>>0)+4294967296*hi:NaN}var UTF8Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{for(var endIdx=(idx>>>=0)+maxBytesToRead,endPtr=idx;heapOrArray[endPtr]&&!(endIdx<=endPtr);)++endPtr;if(16<endPtr-idx&&heapOrArray.buffer&&UTF8Decoder)return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr));for(var str="";idx<endPtr;){var u2,u1,u0=heapOrArray[idx++];128&u0?(u1=63&heapOrArray[idx++],192==(224&u0)?str+=String.fromCharCode((31&u0)<<6|u1):(u2=63&heapOrArray[idx++],(u0=224==(240&u0)?(15&u0)<<12|u1<<6|u2:(7&u0)<<18|u1<<12|u2<<6|63&heapOrArray[idx++])<65536?str+=String.fromCharCode(u0):(u1=u0-65536,str+=String.fromCharCode(55296|u1>>10,56320|1023&u1)))):str+=String.fromCharCode(u0)}return str},UTF8ToString=(ptr,maxBytesToRead)=>(ptr>>>=0)?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):"";function ___assert_fail(condition,filename,line,func){filename>>>=0,func>>>=0,abort(`Assertion failed: ${UTF8ToString(condition>>>=0)}, at: `+[filename?UTF8ToString(filename):"unknown filename",line,func?UTF8ToString(func):"unknown function"])}function ExceptionInfo(excPtr){this.excPtr=excPtr,this.ptr=excPtr-24,this.set_type=function(type){HEAPU32[this.ptr+4>>>2]=type},this.get_type=function(){return HEAPU32[this.ptr+4>>>2]},this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>>2]=destructor},this.get_destructor=function(){return HEAPU32[this.ptr+8>>>2]},this.set_caught=function(caught){HEAP8[this.ptr+12>>>0]=caught=caught?1:0},this.get_caught=function(){return 0!=HEAP8[this.ptr+12>>>0]},this.set_rethrown=function(rethrown){HEAP8[this.ptr+13>>>0]=rethrown=rethrown?1:0},this.get_rethrown=function(){return 0!=HEAP8[this.ptr+13>>>0]},this.init=function(type,destructor){this.set_adjusted_ptr(0),this.set_type(type),this.set_destructor(destructor)},this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>>2]=adjustedPtr},this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>>2]},this.get_exception_ptr=function(){var adjusted;return ___cxa_is_pointer_type(this.get_type())?HEAPU32[this.excPtr>>>2]:0!==(adjusted=this.get_adjusted_ptr())?adjusted:this.excPtr}}var exceptionLast=0,uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){throw type>>>=0,destructor>>>=0,new ExceptionInfo(ptr>>>=0).init(type,destructor),uncaughtExceptionCount++,ptr}var structRegistrations={};function runDestructors(destructors){for(;destructors.length;){var ptr=destructors.pop();destructors.pop()(ptr)}}function simpleReadValueFromPointer(pointer){return this.fromWireType(HEAP32[pointer>>>2])}var awaitingDependencies={},registeredTypes={},typeDependencies={},InternalError=void 0;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);myTypeConverters.length!==myTypes.length&&throwInternalError("Mismatched type converter count");for(var i=0;i<myTypes.length;++i)registerType(myTypes[i],myTypeConverters[i])}myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});var typeConverters=new Array(dependentTypes.length),unregisteredTypes=[],registered=0;dependentTypes.forEach((dt,i)=>{registeredTypes.hasOwnProperty(dt)?typeConverters[i]=registeredTypes[dt]:(unregisteredTypes.push(dt),awaitingDependencies.hasOwnProperty(dt)||(awaitingDependencies[dt]=[]),awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt],++registered===unregisteredTypes.length&&onComplete(typeConverters)}))}),0===unregisteredTypes.length&&onComplete(typeConverters)}var __embind_finalize_value_object=function(structType){var reg=structRegistrations[structType>>>=0],rawConstructor=(delete structRegistrations[structType],reg.rawConstructor),rawDestructor=reg.rawDestructor,fieldRecords=reg.fields;whenDependentTypesAreResolved([structType],fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType)),fieldTypes=>{var fields={};return fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName,getterReturnType=fieldTypes[i],getter=field.getter,getterContext=field.getterContext,setterArgumentType=fieldTypes[i+fieldRecords.length],setter=field.setter,setterContext=field.setterContext;fields[fieldName]={read:ptr=>getterReturnType.fromWireType(getter(getterContext,ptr)),write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType.toWireType(destructors,o)),runDestructors(destructors)}}}),[{name:reg.name,fromWireType:function(ptr){var i,rv={};for(i in fields)rv[i]=fields[i].read(ptr);return rawDestructor(ptr),rv},toWireType:function(destructors,o){for(var fieldName in fields)if(!(fieldName in o))throw new TypeError(`Missing field: "${fieldName}"`);var ptr=rawConstructor();for(fieldName in fields)fields[fieldName].write(ptr,o[fieldName]);return null!==destructors&&destructors.push(rawDestructor,ptr),ptr},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:rawDestructor}]})};function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+size)}}function embind_init_charCodes(){for(var codes=new Array(256),i=0;i<256;++i)codes[i]=String.fromCharCode(i);embind_charCodes=codes}var embind_charCodes=void 0;function readLatin1String(ptr){for(var ret="",c=ptr;HEAPU8[c>>>0];)ret+=embind_charCodes[HEAPU8[c++>>>0]];return ret}var BindingError=void 0;function throwBindingError(message){throw new BindingError(message)}function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(rawType||throwBindingError(`type "${name}" must have a positive integer typeid pointer`),registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations)return;throwBindingError(`Cannot register type '${name}' twice`)}registeredTypes[rawType]=registeredInstance,delete typeDependencies[rawType],awaitingDependencies.hasOwnProperty(rawType)&&(options=awaitingDependencies[rawType],delete awaitingDependencies[rawType],options.forEach(cb=>cb()))}function registerType(rawType,registeredInstance,options={}){if(!("argPackAdvance"in registeredInstance))throw new TypeError("registerType registeredInstance requires argPackAdvance");sharedRegisterType(rawType,registeredInstance,options)}function __embind_register_bool(rawType,name,size,trueValue,falseValue){rawType>>>=0,name>>>=0;var shift=getShiftFromSize(size>>>=0);registerType(rawType,{name:name=readLatin1String(name),fromWireType:function(wt){return!!wt},toWireType:function(destructors,o){return o?trueValue:falseValue},argPackAdvance:8,readValueFromPointer:function(pointer){var heap;if(1===size)heap=HEAP8;else if(2===size)heap=HEAP16;else{if(4!==size)throw new TypeError("Unknown boolean type size: "+name);heap=HEAP32}return this.fromWireType(heap[pointer>>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle))return!1;if(!(other instanceof ClassHandle))return!1;for(var leftClass=this.$$.ptrType.registeredClass,left=this.$$.ptr,rightClass=other.$$.ptrType.registeredClass,right=other.$$.ptr;leftClass.baseClass;)left=leftClass.upcast(left),leftClass=leftClass.baseClass;for(;rightClass.baseClass;)right=rightClass.upcast(right),rightClass=rightClass.baseClass;return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){throwBindingError(obj.$$.ptrType.registeredClass.name+" instance already deleted")}var finalizationRegistry=!1;function detachFinalizer(handle){}function runDestructor($$){$$.smartPtr?$$.smartPtrType.rawDestructor($$.smartPtr):$$.ptrType.registeredClass.rawDestructor($$.ptr)}function releaseClassHandle($$){--$$.count.value,0===$$.count.value&&runDestructor($$)}function downcastPointer(ptr,ptrClass,desiredClass){return ptrClass===desiredClass?ptr:void 0===desiredClass.baseClass||null===(ptr=downcastPointer(ptr,ptrClass,desiredClass.baseClass))?null:desiredClass.downcast(ptr)}var registeredPointers={};function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var k,rv=[];for(k in registeredInstances)registeredInstances.hasOwnProperty(k)&&rv.push(registeredInstances[k]);return rv}var deletionQueue=[];function flushPendingDeletes(){for(;deletionQueue.length;){var obj=deletionQueue.pop();obj.$$.deleteScheduled=!1,obj.delete()}}var delayFunction=void 0;function setDelayFunction(fn){delayFunction=fn,deletionQueue.length&&delayFunction&&delayFunction(flushPendingDeletes)}function init_embind(){Module.getInheritedInstanceCount=getInheritedInstanceCount,Module.getLiveInheritedInstances=getLiveInheritedInstances,Module.flushPendingDeletes=flushPendingDeletes,Module.setDelayFunction=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){for(void 0===ptr&&throwBindingError("ptr should not be undefined");class_.baseClass;)ptr=class_.upcast(ptr),class_=class_.baseClass;return ptr}function getInheritedInstance(class_,ptr){return ptr=getBasestPointer(class_,ptr),registeredInstances[ptr]}function makeClassHandle(prototype,record){return record.ptrType&&record.ptr||throwInternalError("makeClassHandle requires ptr and ptrType"),!!record.smartPtrType!=!!record.smartPtr&&throwInternalError("Both smartPtrType and smartPtr must be specified"),record.count={value:1},attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var registeredInstance,dp,rawPointer=this.getPointee(ptr);return rawPointer?void 0!==(registeredInstance=getInheritedInstance(this.registeredClass,rawPointer))?0===registeredInstance.$$.count.value?(registeredInstance.$$.ptr=rawPointer,registeredInstance.$$.smartPtr=ptr,registeredInstance.clone()):(registeredInstance=registeredInstance.clone(),this.destructor(ptr),registeredInstance):(registeredInstance=this.registeredClass.getActualType(rawPointer),!(registeredInstance=registeredPointers[registeredInstance])||(registeredInstance=this.isConst?registeredInstance.constPointerType:registeredInstance.pointerType,null===(dp=downcastPointer(rawPointer,this.registeredClass,registeredInstance.registeredClass)))?makeDefaultHandle.call(this):this.isSmartPointer?makeClassHandle(registeredInstance.registeredClass.instancePrototype,{ptrType:registeredInstance,ptr:dp,smartPtrType:this,smartPtr:ptr}):makeClassHandle(registeredInstance.registeredClass.instancePrototype,{ptrType:registeredInstance,ptr:dp})):(this.destructor(ptr),null);function makeDefaultHandle(){return this.isSmartPointer?makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr}):makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var attachFinalizer=function(handle){return"undefined"==typeof FinalizationRegistry?(attachFinalizer=handle=>handle,handle):(finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)}),detachFinalizer=handle=>finalizationRegistry.unregister(handle),(attachFinalizer=handle=>{var $$=handle.$$;return!!$$.smartPtr&&finalizationRegistry.register(handle,{$$:$$},handle),handle})(handle))};function ClassHandle_clone(){var clone;return this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.preservePointerOnDelete?(this.$$.count.value+=1,this):((clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}))).$$.count.value+=1,clone.$$.deleteScheduled=!1,clone)}function ClassHandle_delete(){this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&throwBindingError("Object already scheduled for deletion"),detachFinalizer(this),releaseClassHandle(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){return this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&throwBindingError("Object already scheduled for deletion"),deletionQueue.push(this),1===deletionQueue.length&&delayFunction&&delayFunction(flushPendingDeletes),this.$$.deleteScheduled=!0,this}function init_ClassHandle(){ClassHandle.prototype.isAliasOf=ClassHandle_isAliasOf,ClassHandle.prototype.clone=ClassHandle_clone,ClassHandle.prototype.delete=ClassHandle_delete,ClassHandle.prototype.isDeleted=ClassHandle_isDeleted,ClassHandle.prototype.deleteLater=ClassHandle_deleteLater}function ClassHandle(){}var char_0=48,char_9=57;function makeLegalFunctionName(name){var f;return void 0===name?"_unknown":(f=(name=name.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0),char_0<=f&&f<=char_9?"_"+name:name)}function createNamedFunction(name,body){return{[name=makeLegalFunctionName(name)]:function(){return body.apply(this,arguments)}}[name]}function ensureOverloadTable(proto,methodName,humanName){var prevFunc;void 0===proto[methodName].overloadTable&&(prevFunc=proto[methodName],proto[methodName]=function(){return proto[methodName].overloadTable.hasOwnProperty(arguments.length)||throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${arguments.length}) - expects one of (${proto[methodName].overloadTable})!`),proto[methodName].overloadTable[arguments.length].apply(this,arguments)},proto[methodName].overloadTable=[],proto[methodName].overloadTable[prevFunc.argCount]=prevFunc)}function exposePublicSymbol(name,value,numArguments){Module.hasOwnProperty(name)?((void 0===numArguments||void 0!==Module[name].overloadTable&&void 0!==Module[name].overloadTable[numArguments])&&throwBindingError(`Cannot register public name '${name}' twice`),ensureOverloadTable(Module,name,name),Module.hasOwnProperty(numArguments)&&throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`),Module[name].overloadTable[numArguments]=value):(Module[name]=value,void 0!==numArguments&&(Module[name].numArguments=numArguments))}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name,this.constructor=constructor,this.instancePrototype=instancePrototype,this.rawDestructor=rawDestructor,this.baseClass=baseClass,this.getActualType=getActualType,this.upcast=upcast,this.downcast=downcast,this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){for(;ptrClass!==desiredClass;)ptrClass.upcast||throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of `+ptrClass.name),ptr=ptrClass.upcast(ptr),ptrClass=ptrClass.baseClass;return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name);var handleClass=handle.$$.ptrType.registeredClass;return upcastPointer(handle.$$.ptr,handleClass,this.registeredClass)}function genericPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),this.isSmartPointer?(ptr=this.rawConstructor(),null!==destructors&&destructors.push(this.rawDestructor,ptr),ptr):0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&handle.$$.ptrType.isConst&&throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType||handle.$$.ptrType).name} to parameter type `+this.name);var clonedHandle,ptr,handleClass=handle.$$.ptrType.registeredClass;if(ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass),this.isSmartPointer)switch(void 0===handle.$$.smartPtr&&throwBindingError("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:handle.$$.smartPtrType===this?ptr=handle.$$.smartPtr:throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType||handle.$$.ptrType).name} to parameter type `+this.name);break;case 1:ptr=handle.$$.smartPtr;break;case 2:handle.$$.smartPtrType===this?ptr=handle.$$.smartPtr:(clonedHandle=handle.clone(),ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle.delete()})),null!==destructors&&destructors.push(this.rawDestructor,ptr));break;default:throwBindingError("Unsupporting sharing policy")}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name),handle.$$.ptrType.isConst&&throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type `+this.name);var handleClass=handle.$$.ptrType.registeredClass;return upcastPointer(handle.$$.ptr,handleClass,this.registeredClass)}function RegisteredPointer_getPointee(ptr){return ptr=this.rawGetPointee?this.rawGetPointee(ptr):ptr}function RegisteredPointer_destructor(ptr){this.rawDestructor&&this.rawDestructor(ptr)}function RegisteredPointer_deleteObject(handle){null!==handle&&handle.delete()}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee,RegisteredPointer.prototype.destructor=RegisteredPointer_destructor,RegisteredPointer.prototype.argPackAdvance=8,RegisteredPointer.prototype.readValueFromPointer=simpleReadValueFromPointer,RegisteredPointer.prototype.deleteObject=RegisteredPointer_deleteObject,RegisteredPointer.prototype.fromWireType=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name,this.registeredClass=registeredClass,this.isReference=isReference,this.isConst=isConst,this.isSmartPointer=isSmartPointer,this.pointeeType=pointeeType,this.sharingPolicy=sharingPolicy,this.rawGetPointee=rawGetPointee,this.rawConstructor=rawConstructor,this.rawShare=rawShare,this.rawDestructor=rawDestructor,isSmartPointer||void 0!==registeredClass.baseClass?this.toWireType=genericPointerToWireType:(this.toWireType=isConst?constNoSmartPtrRawPointerToWireType:nonConstNoSmartPtrRawPointerToWireType,this.destructorFunction=null)}function replacePublicSymbol(name,value,numArguments){Module.hasOwnProperty(name)||throwInternalError("Replacing nonexistant public symbol"),void 0!==Module[name].overloadTable&&void 0!==numArguments?Module[name].overloadTable[numArguments]=value:(Module[name]=value,Module[name].argCount=numArguments)}var dynCallLegacy=(sig,ptr,args)=>{sig=Module["dynCall_"+sig];return args&&args.length?sig.apply(null,[ptr].concat(args)):sig.call(null,ptr)},wasmTableMirror=[],getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];return func||(funcPtr>=wasmTableMirror.length&&(wasmTableMirror.length=funcPtr+1),wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)),func},dynCall=(sig,ptr,args)=>{return sig.includes("j")?dynCallLegacy(sig,ptr,args):getWasmTableEntry(ptr).apply(null,args)},getDynCaller=(sig,ptr)=>{var argCache=[];return function(){return argCache.length=0,Object.assign(argCache,arguments),dynCall(sig,ptr,argCache)}};function embind__requireFunction(signature,rawFunction){var fp=(signature=readLatin1String(signature)).includes("j")?getDynCaller(signature,rawFunction):getWasmTableEntry(rawFunction);return"function"!=typeof fp&&throwBindingError(`unknown function pointer with signature ${signature}: `+rawFunction),fp}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName,this.message=message;message=new Error(message).stack;void 0!==message&&(this.stack=this.toString()+"\n"+message.replace(/^Error(:[^\n]*)?\n/,""))});return errorClass.prototype=Object.create(baseErrorType.prototype),(errorClass.prototype.constructor=errorClass).prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},errorClass}var UnboundTypeError=void 0;function getTypeName(type){var type=___getTypeName(type),rv=readLatin1String(type);return _free(type),rv}function throwUnboundTypeError(message,types){var unboundTypes=[],seen={};throw types.forEach(function visit(type){seen[type]||registeredTypes[type]||(typeDependencies[type]?typeDependencies[type].forEach(visit):(unboundTypes.push(type),seen[type]=!0))}),new UnboundTypeError(message+": "+unboundTypes.map(getTypeName).join([", "]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){rawType>>>=0,rawPointerType>>>=0,rawConstPointerType>>>=0,baseClassRawType>>>=0,getActualTypeSignature>>>=0,getActualType>>>=0,upcastSignature>>>=0,upcast>>>=0,downcastSignature>>>=0,downcast>>>=0,destructorSignature>>>=0,rawDestructor>>>=0,name=readLatin1String(name>>>=0),getActualType=embind__requireFunction(getActualTypeSignature,getActualType),upcast=upcast&&embind__requireFunction(upcastSignature,upcast),downcast=downcast&&embind__requireFunction(downcastSignature,downcast),rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(`Cannot construct ${name} due to unbound types`,[baseClassRawType])}),whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0],base=baseClassRawType?(baseClass=base.registeredClass).instancePrototype:ClassHandle.prototype;var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype)throw new BindingError("Use 'new' to construct "+name);if(void 0===registeredClass.constructor_body)throw new BindingError(name+" has no accessible constructor");var body=registeredClass.constructor_body[arguments.length];if(void 0===body)throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`);return body.apply(this,arguments)}),instancePrototype=Object.create(base,{constructor:{value:constructor}}),registeredClass=(constructor.prototype=instancePrototype,new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast)),base=(registeredClass.baseClass&&(void 0===registeredClass.baseClass.__derivedClasses&&(registeredClass.baseClass.__derivedClasses=[]),registeredClass.baseClass.__derivedClasses.push(registeredClass)),new RegisteredPointer(name,registeredClass,!0,!1,!1)),baseClass=new RegisteredPointer(name+"*",registeredClass,!1,!1,!1),constPointerConverter=new RegisteredPointer(name+" const*",registeredClass,!1,!0,!1);return registeredPointers[rawType]={pointerType:baseClass,constPointerType:constPointerConverter},replacePublicSymbol(legalFunctionName,constructor),[base,baseClass,constPointerConverter]})}function heap32VectorToArray(count,firstElement){for(var array=[],i=0;i<count;i++)array.push(HEAPU32[firstElement+4*i>>>2]);return array}function newFunc(constructor,argumentList){var dummy;if(constructor instanceof Function)return(dummy=createNamedFunction(constructor.name||"unknownFunctionName",function(){})).prototype=constructor.prototype,dummy=new dummy,(argumentList=constructor.apply(dummy,argumentList))instanceof Object?argumentList:dummy;throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`)}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){for(var argCount=argTypes.length,isClassMethodFunc=(argCount<2&&throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!"),null!==argTypes[1]&&null!==classType),needsDestructorStack=!1,i=1;i<argTypes.length;++i)if(null!==argTypes[i]&&void 0===argTypes[i].destructorFunction){needsDestructorStack=!0;break}for(var returns="void"!==argTypes[0].name,argsList="",argsListWired="",i=0;i<argCount-2;++i)argsList+=(0!==i?", ":"")+"arg"+i,argsListWired+=(0!==i?", ":"")+"arg"+i+"Wired";var invokerFnBody=`
        return function ${makeLegalFunctionName(humanName)}(${argsList}) {
        if (arguments.length !== ${argCount-2}) {
          throwBindingError('function ${humanName} called with ${arguments.length} arguments, expected ${argCount-2} args!');
        }`,dtorStack=(needsDestructorStack&&(invokerFnBody+="var destructors = [];\n"),needsDestructorStack?"destructors":"null"),args1=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];isClassMethodFunc&&(invokerFnBody+="var thisWired = classParam.toWireType("+dtorStack+", this);\n");for(i=0;i<argCount-2;++i)invokerFnBody+="var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n",args1.push("argType"+i),args2.push(argTypes[i+2]);if(invokerFnBody+=(returns||isAsync?"var rv = ":"")+"invoker(fn"+(0<(argsListWired=isClassMethodFunc?"thisWired"+(0<argsListWired.length?", ":"")+argsListWired:argsListWired).length?", ":"")+argsListWired+");\n",needsDestructorStack)invokerFnBody+="runDestructors(destructors);\n";else for(i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=1===i?"thisWired":"arg"+(i-2)+"Wired";null!==argTypes[i].destructorFunction&&(invokerFnBody+=paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n",args1.push(paramName+"_dtor"),args2.push(argTypes[i].destructorFunction))}return returns&&(invokerFnBody+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),args1.push(invokerFnBody+="}\n"),newFunc(Function,args1).apply(null,args2)}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){rawClassType>>>=0,invokerSignature>>>=0,invoker>>>=0,rawConstructor>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);invoker=embind__requireFunction(invokerSignature,invoker),whenDependentTypesAreResolved([],[rawClassType],function(classType){var humanName="constructor "+(classType=classType[0]).name;if(void 0===classType.registeredClass.constructor_body&&(classType.registeredClass.constructor_body=[]),void 0!==classType.registeredClass.constructor_body[argCount-1])throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`,rawArgTypes)},whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){return argTypes.splice(1,0,null),classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor),[]}),[]})}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual,isAsync){rawClassType>>>=0,methodName>>>=0,invokerSignature>>>=0,rawInvoker>>>=0,context>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);methodName=readLatin1String(methodName),rawInvoker=embind__requireFunction(invokerSignature,rawInvoker),whenDependentTypesAreResolved([],[rawClassType],function(classType){var humanName=(classType=classType[0]).name+"."+methodName;function unboundTypesHandler(){throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`,rawArgTypes)}methodName.startsWith("@@")&&(methodName=Symbol[methodName.substring(2)]),isPureVirtual&&classType.registeredClass.pureVirtualFunctions.push(methodName);var proto=classType.registeredClass.instancePrototype,method=proto[methodName];return void 0===method||void 0===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2?(unboundTypesHandler.argCount=argCount-2,unboundTypesHandler.className=classType.name,proto[methodName]=unboundTypesHandler):(ensureOverloadTable(proto,methodName,humanName),proto[methodName].overloadTable[argCount-2]=unboundTypesHandler),whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context,isAsync);return void 0===proto[methodName].overloadTable?(argTypes.argCount=argCount-2,proto[methodName]=argTypes):proto[methodName].overloadTable[argCount-2]=argTypes,[]}),[]})}function handleAllocatorInit(){Object.assign(HandleAllocator.prototype,{get(id){return this.allocated[id]},has(id){return void 0!==this.allocated[id]},allocate(handle){var id=this.freelist.pop()||this.allocated.length;return this.allocated[id]=handle,id},free(id){this.allocated[id]=void 0,this.freelist.push(id)}})}function HandleAllocator(){this.allocated=[void 0],this.freelist=[]}var emval_handles=new HandleAllocator;function __emval_decref(handle){(handle>>>=0)>=emval_handles.reserved&&0==--emval_handles.get(handle).refcount&&emval_handles.free(handle)}function count_emval_handles(){for(var count=0,i=emval_handles.reserved;i<emval_handles.allocated.length;++i)void 0!==emval_handles.allocated[i]&&++count;return count}function init_emval(){emval_handles.allocated.push({value:void 0},{value:null},{value:!0},{value:!1}),emval_handles.reserved=emval_handles.allocated.length,Module.count_emval_handles=count_emval_handles}var Emval={toValue:handle=>(handle||throwBindingError("Cannot use deleted val. handle = "+handle),emval_handles.get(handle).value),toHandle:value=>{switch(value){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return emval_handles.allocate({refcount:1,value:value})}}};function __embind_register_emval(rawType,name){registerType(rawType>>>=0,{name:name=readLatin1String(name>>>=0),fromWireType:function(handle){var rv=Emval.toValue(handle);return __emval_decref(handle),rv},toWireType:function(destructors,value){return Emval.toHandle(value)},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:null})}function embindRepr(v){var t;return null===v?"null":"object"==(t=typeof v)||"array"==t||"function"==t?v.toString():""+v}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this.fromWireType(HEAPF32[pointer>>>2])};case 3:return function(pointer){return this.fromWireType(HEAPF64[pointer>>>3])};default:throw new TypeError("Unknown float type: "+name)}}function __embind_register_float(rawType,name,size){rawType>>>=0,name>>>=0;size=getShiftFromSize(size>>>=0);registerType(rawType,{name:name=readLatin1String(name),fromWireType:function(value){return value},toWireType:function(destructors,value){return value},argPackAdvance:8,readValueFromPointer:floatReadValueFromPointer(name,size),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync){name>>>=0,signature>>>=0,rawInvoker>>>=0,fn>>>=0;var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);name=readLatin1String(name),rawInvoker=embind__requireFunction(signature,rawInvoker),exposePublicSymbol(name,function(){throwUnboundTypeError(`Cannot call ${name} due to unbound types`,argTypes)},argCount-1),whenDependentTypesAreResolved([],argTypes,function(argTypes){argTypes=[argTypes[0],null].concat(argTypes.slice(1));return replacePublicSymbol(name,craftInvokerFunction(name,argTypes,null,rawInvoker,fn,isAsync),argCount-1),[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function(pointer){return HEAP8[pointer>>>0]}:function(pointer){return HEAPU8[pointer>>>0]};case 1:return signed?function(pointer){return HEAP16[pointer>>>1]}:function(pointer){return HEAPU16[pointer>>>1]};case 2:return signed?function(pointer){return HEAP32[pointer>>>2]}:function(pointer){return HEAPU32[pointer>>>2]};default:throw new TypeError("Unknown integer type: "+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){primitiveType>>>=0,size>>>=0,name=readLatin1String(name>>>=0),-1===maxRange&&(maxRange=4294967295);var bitshift,maxRange=getShiftFromSize(size),fromWireType=value=>value,size=(0===minRange&&(bitshift=32-8*size,fromWireType=value=>value<<bitshift>>>bitshift),name.includes("unsigned")),size=size?function(destructors,value){return this.name,value>>>0}:function(destructors,value){return this.name,value};registerType(primitiveType,{name:name,fromWireType:fromWireType,toWireType:size,argPackAdvance:8,readValueFromPointer:integerReadValueFromPointer(name,maxRange,0!==minRange),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){rawType>>>=0,name>>>=0;var TA=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][dataTypeIndex];function decodeMemoryView(handle){var heap=HEAPU32,size=heap[(handle>>=2)>>>0],handle=heap[handle+1>>>0];return new TA(heap.buffer,handle,size)}registerType(rawType,{name:name=readLatin1String(name),fromWireType:decodeMemoryView,argPackAdvance:8,readValueFromPointer:decodeMemoryView},{ignoreDuplicateRegistrations:!0})}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(0<maxBytesToWrite))return 0;for(var startIdx=outIdx>>>=0,endIdx=outIdx+maxBytesToWrite-1,i=0;i<str.length;++i){var u=str.charCodeAt(i);if((u=55296<=u&&u<=57343?65536+((1023&u)<<10)|1023&str.charCodeAt(++i):u)<=127){if(endIdx<=outIdx)break;heap[outIdx++>>>0]=u}else{if(u<=2047){if(endIdx<=outIdx+1)break;heap[outIdx++>>>0]=192|u>>6}else{if(u<=65535){if(endIdx<=outIdx+2)break;heap[outIdx++>>>0]=224|u>>12}else{if(endIdx<=outIdx+3)break;heap[outIdx++>>>0]=240|u>>18,heap[outIdx++>>>0]=128|u>>12&63}heap[outIdx++>>>0]=128|u>>6&63}heap[outIdx++>>>0]=128|63&u}}return heap[outIdx>>>0]=0,outIdx-startIdx},stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite),lengthBytesUTF8=str=>{for(var len=0,i=0;i<str.length;++i){var c=str.charCodeAt(i);c<=127?len++:c<=2047?len+=2:55296<=c&&c<=57343?(len+=4,++i):len+=3}return len};function __embind_register_std_string(rawType,name){rawType>>>=0;var stdStringIsUTF8="std::string"===(name=readLatin1String(name>>>=0));registerType(rawType,{name:name,fromWireType:function(value){var length=HEAPU32[value>>>2],payload=value+4;if(stdStringIsUTF8)for(var decodeStartPtr=payload,i=0;i<=length;++i){var stringSegment,str,currentBytePtr=payload+i;i!=length&&0!=HEAPU8[currentBytePtr>>>0]||(stringSegment=UTF8ToString(decodeStartPtr,currentBytePtr-decodeStartPtr),str=void 0===str?stringSegment:str+String.fromCharCode(0)+stringSegment,decodeStartPtr=currentBytePtr+1)}else{for(var a=new Array(length),i=0;i<length;++i)a[i]=String.fromCharCode(HEAPU8[payload+i>>>0]);str=a.join("")}return _free(value),str},toWireType:function(destructors,value){var length,valueIsOfTypeString="string"==typeof(value=value instanceof ArrayBuffer?new Uint8Array(value):value),base=(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array||throwBindingError("Cannot pass non-string to std::string"),length=stdStringIsUTF8&&valueIsOfTypeString?lengthBytesUTF8(value):value.length,_malloc(4+length+1)),ptr=base+4;if(HEAPU32[base>>>2]=length,stdStringIsUTF8&&valueIsOfTypeString)stringToUTF8(value,ptr,length+1);else if(valueIsOfTypeString)for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);255<charCode&&(_free(ptr),throwBindingError("String has UTF-16 code units that do not fit in 8 bits")),HEAPU8[ptr+i>>>0]=charCode}else for(i=0;i<length;++i)HEAPU8[ptr+i>>>0]=value[i];return null!==destructors&&destructors.push(_free,base),base},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0,UTF16ToString=(ptr,maxBytesToRead)=>{for(var endPtr,idx=ptr>>1,maxIdx=idx+maxBytesToRead/2;!(maxIdx<=idx)&&HEAPU16[idx>>>0];)++idx;if(32<(endPtr=idx<<1)-ptr&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr>>>0,endPtr>>>0));for(var str="",i=0;!(maxBytesToRead/2<=i);++i){var codeUnit=HEAP16[ptr+2*i>>>1];if(0==codeUnit)break;str+=String.fromCharCode(codeUnit)}return str},stringToUTF16=(str,outPtr,maxBytesToWrite)=>{if((maxBytesToWrite=void 0===maxBytesToWrite?2147483647:maxBytesToWrite)<2)return 0;for(var startPtr=outPtr,numCharsToWrite=(maxBytesToWrite-=2)<2*str.length?maxBytesToWrite/2:str.length,i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>>1]=codeUnit,outPtr+=2}return HEAP16[outPtr>>>1]=0,outPtr-startPtr},lengthBytesUTF16=str=>2*str.length,UTF32ToString=(ptr,maxBytesToRead)=>{for(var i=0,str="";!(maxBytesToRead/4<=i);){var ch,utf32=HEAP32[ptr+4*i>>>2];if(0==utf32)break;++i,65536<=utf32?(ch=utf32-65536,str+=String.fromCharCode(55296|ch>>10,56320|1023&ch)):str+=String.fromCharCode(utf32)}return str},stringToUTF32=(str,outPtr,maxBytesToWrite)=>{if((maxBytesToWrite=void 0===maxBytesToWrite?2147483647:maxBytesToWrite)<4)return 0;for(var startPtr=outPtr>>>=0,endPtr=startPtr+maxBytesToWrite-4,i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(55296<=codeUnit&&codeUnit<=57343&&(codeUnit=65536+((1023&codeUnit)<<10)|1023&str.charCodeAt(++i)),HEAP32[outPtr>>>2]=codeUnit,endPtr<(outPtr+=4)+4)break}return HEAP32[outPtr>>>2]=0,outPtr-startPtr},lengthBytesUTF32=str=>{for(var len=0,i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);55296<=codeUnit&&codeUnit<=57343&&++i,len+=4}return len},__embind_register_std_wstring=function(rawType,charSize,name){var decodeString,encodeString,getHeap,lengthBytesUTF,shift;rawType>>>=0,charSize>>>=0,name=readLatin1String(name>>>=0),2===charSize?(decodeString=UTF16ToString,encodeString=stringToUTF16,lengthBytesUTF=lengthBytesUTF16,getHeap=()=>HEAPU16,shift=1):4===charSize&&(decodeString=UTF32ToString,encodeString=stringToUTF32,lengthBytesUTF=lengthBytesUTF32,getHeap=()=>HEAPU32,shift=2),registerType(rawType,{name:name,fromWireType:function(value){for(var length=HEAPU32[value>>>2],HEAP=getHeap(),decodeStartPtr=value+4,i=0;i<=length;++i){var stringSegment,str,currentBytePtr=value+4+i*charSize;i!=length&&0!=HEAP[currentBytePtr>>>shift]||(stringSegment=decodeString(decodeStartPtr,currentBytePtr-decodeStartPtr),str=void 0===str?stringSegment:str+String.fromCharCode(0)+stringSegment,decodeStartPtr=currentBytePtr+charSize)}return _free(value),str},toWireType:function(destructors,value){"string"!=typeof value&&throwBindingError("Cannot pass non-string to C++ string type "+name);var length=lengthBytesUTF(value),ptr=_malloc(4+length+charSize);return HEAPU32[ptr>>>2]=length>>shift,encodeString(value,ptr+4,length+charSize),null!==destructors&&destructors.push(_free,ptr),ptr},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})};function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){constructorSignature>>>=0,rawConstructor>>>=0,destructorSignature>>>=0,rawDestructor>>>=0,structRegistrations[rawType>>>=0]={name:readLatin1String(name>>>=0),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){getterReturnType>>>=0,getterSignature>>>=0,getter>>>=0,getterContext>>>=0,setterArgumentType>>>=0,setterSignature>>>=0,setter>>>=0,setterContext>>>=0,structRegistrations[structType>>>=0].fields.push({fieldName:readLatin1String(fieldName>>>=0),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){registerType(rawType>>>=0,{isVoid:!0,name:name=readLatin1String(name>>>=0),argPackAdvance:0,fromWireType:function(){},toWireType:function(destructors,o){}})}function __emval_incref(handle){4<(handle>>>=0)&&(emval_handles.get(handle).refcount+=1)}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];return void 0===symbol?readLatin1String(address):symbol}function __emval_new_cstring(v){return Emval.toHandle(getStringOrSymbol(v>>>=0))}function __emval_new_object(){return Emval.toHandle({})}function __emval_set_property(handle,key,value){key>>>=0,value>>>=0,handle=Emval.toValue(handle>>>=0),key=Emval.toValue(key),value=Emval.toValue(value),handle[key]=value}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];return void 0===impl&&throwBindingError(humanName+" has unknown type "+getTypeName(rawType)),impl}function __emval_take_value(type,arg){arg>>>=0;type=(type=requireRegisteredType(type>>>=0,"_emval_take_value")).readValueFromPointer(arg);return Emval.toHandle(type)}var isLeapYear=year=>year%4==0&&(year%100!=0||year%400==0),MONTH_DAYS_LEAP_CUMULATIVE=[0,31,60,91,121,152,182,213,244,274,305,335],MONTH_DAYS_REGULAR_CUMULATIVE=[0,31,59,90,120,151,181,212,243,273,304,334],ydayFromDate=date=>{return(isLeapYear(date.getFullYear())?MONTH_DAYS_LEAP_CUMULATIVE:MONTH_DAYS_REGULAR_CUMULATIVE)[date.getMonth()]+date.getDate()-1};function __localtime_js(time_low,time_high,tmPtr){var time_low=convertI32PairToI53Checked(time_low,time_high),time_high=(tmPtr>>>=0,new Date(1e3*time_low)),time_low=(HEAP32[tmPtr>>>2]=time_high.getSeconds(),HEAP32[tmPtr+4>>>2]=time_high.getMinutes(),HEAP32[tmPtr+8>>>2]=time_high.getHours(),HEAP32[tmPtr+12>>>2]=time_high.getDate(),HEAP32[tmPtr+16>>>2]=time_high.getMonth(),HEAP32[tmPtr+20>>>2]=time_high.getFullYear()-1900,HEAP32[tmPtr+24>>>2]=time_high.getDay(),0|ydayFromDate(time_high)),time_low=(HEAP32[tmPtr+28>>>2]=time_low,HEAP32[tmPtr+36>>>2]=-60*time_high.getTimezoneOffset(),new Date(time_high.getFullYear(),0,1)),summerOffset=new Date(time_high.getFullYear(),6,1).getTimezoneOffset(),time_low=time_low.getTimezoneOffset(),time_high=0|(summerOffset!=time_low&&time_high.getTimezoneOffset()==Math.min(time_low,summerOffset));HEAP32[tmPtr+32>>>2]=time_high}var stringToNewUTF8=str=>{var size=lengthBytesUTF8(str)+1,ret=_malloc(size);return ret&&stringToUTF8(str,ret,size),ret};function __tzset_js(timezone,daylight,tzname){timezone>>>=0,daylight>>>=0,tzname>>>=0;var currentYear=(new Date).getFullYear(),winter=new Date(currentYear,0,1),currentYear=new Date(currentYear,6,1),winterOffset=winter.getTimezoneOffset(),summerOffset=currentYear.getTimezoneOffset(),stdTimezoneOffset=Math.max(winterOffset,summerOffset);function extractZone(date){date=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return date?date[1]:"GMT"}HEAPU32[timezone>>>2]=60*stdTimezoneOffset,HEAP32[daylight>>>2]=Number(winterOffset!=summerOffset);timezone=extractZone(winter),stdTimezoneOffset=extractZone(currentYear),daylight=stringToNewUTF8(timezone),winter=stringToNewUTF8(stdTimezoneOffset);summerOffset<winterOffset?(HEAPU32[tzname>>>2]=daylight,HEAPU32[tzname+4>>>2]=winter):(HEAPU32[tzname>>>2]=winter,HEAPU32[tzname+4>>>2]=daylight)}var _abort=()=>{abort("")};function _emscripten_date_now(){return Date.now()}function _emscripten_memcpy_big(dest,src,num){return HEAPU8.copyWithin((dest>>>=0)>>>0,(src>>>=0)>>>0,src+(num>>>=0)>>>0)}var getHeapMax=()=>4294901760,growMemory=size=>{size=size-wasmMemory.buffer.byteLength+65535>>>16;try{return wasmMemory.grow(size),updateMemoryViews(),1}catch(e){}};function _emscripten_resize_heap(requestedSize){requestedSize>>>=0;var oldSize=HEAPU8.length,maxHeapSize=getHeapMax();if(!(maxHeapSize<requestedSize))for(var multiple,cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown),overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296),overGrownHeapSize=Math.min(maxHeapSize,(overGrownHeapSize=Math.max(requestedSize,overGrownHeapSize))+((multiple=65536)-overGrownHeapSize%multiple)%multiple);if(growMemory(overGrownHeapSize))return!0}return!1}function _emscripten_run_script(ptr){ptr>>>=0,eval(UTF8ToString(ptr))}var ENV={},getExecutableName=()=>thisProgram||"./this.program",getEnvStrings=()=>{if(!getEnvStrings.strings){var env={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:getExecutableName()};for(x in ENV)void 0===ENV[x]?delete env[x]:env[x]=ENV[x];var x,strings=[];for(x in env)strings.push(x+"="+env[x]);getEnvStrings.strings=strings}return getEnvStrings.strings},stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i)HEAP8[buffer++>>>0]=str.charCodeAt(i);HEAP8[buffer>>>0]=0},PATH={isAbs:path=>"/"===path.charAt(0),splitPath:filename=>{return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{for(var up=0,i=parts.length-1;0<=i;i--){var last=parts[i];"."===last?parts.splice(i,1):".."===last?(parts.splice(i,1),up++):up&&(parts.splice(i,1),up--)}if(allowAboveRoot)for(;up;up--)parts.unshift("..");return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash="/"===path.substr(-1);return(path=(path=PATH.normalizeArray(path.split("/").filter(p=>!!p),!isAbsolute).join("/"))||isAbsolute?path:".")&&trailingSlash&&(path+="/"),(isAbsolute?"/":"")+path},dirname:path=>{var path=PATH.splitPath(path),root=path[0],path=path[1];return root||path?root+(path=path&&path.substr(0,path.length-1)):"."},basename:path=>{var lastSlash;return"/"===path?"/":-1===(lastSlash=(path=(path=PATH.normalize(path)).replace(/\/$/,"")).lastIndexOf("/"))?path:path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join("/"))},join2:(l,r)=>PATH.normalize(l+"/"+r)},initRandomFill=()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return view=>crypto.getRandomValues(view);if(ENVIRONMENT_IS_NODE)try{var randomBytes,crypto_module=require("crypto");return crypto_module.randomFillSync?view=>crypto_module.randomFillSync(view):(randomBytes=crypto_module.randomBytes,view=>(view.set(randomBytes(view.byteLength)),view))}catch(e){}abort("initRandomDevice")},randomFill=view=>(randomFill=initRandomFill())(view),PATH_FS={resolve:function(){for(var resolvedPath="",resolvedAbsolute=!1,i=arguments.length-1;-1<=i&&!resolvedAbsolute;i--){var path=0<=i?arguments[i]:FS.cwd();if("string"!=typeof path)throw new TypeError("Arguments to path.resolve must be strings");if(!path)return"";resolvedPath=path+"/"+resolvedPath,resolvedAbsolute=PATH.isAbs(path)}return(resolvedAbsolute?"/":"")+(resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(p=>!!p),!resolvedAbsolute).join("/"))||"."},relative:(from,to)=>{function trim(arr){for(var start=0;start<arr.length&&""===arr[start];start++);for(var end=arr.length-1;0<=end&&""===arr[end];end--);return end<start?[]:arr.slice(start,end-start+1)}from=PATH_FS.resolve(from).substr(1),to=PATH_FS.resolve(to).substr(1);for(var fromParts=trim(from.split("/")),toParts=trim(to.split("/")),length=Math.min(fromParts.length,toParts.length),samePartsLength=length,i=0;i<length;i++)if(fromParts[i]!==toParts[i]){samePartsLength=i;break}for(var outputParts=[],i=samePartsLength;i<fromParts.length;i++)outputParts.push("..");return(outputParts=outputParts.concat(toParts.slice(samePartsLength))).join("/")}},FS_stdin_getChar_buffer=[];function intArrayFromString(stringy,dontAddNull,length){length=0<length?length:lengthBytesUTF8(stringy)+1,length=new Array(length),stringy=stringToUTF8Array(stringy,length,0,length.length);return dontAddNull&&(length.length=stringy),length}var FS_stdin_getChar=()=>{if(!FS_stdin_getChar_buffer.length){var result=null;if(ENVIRONMENT_IS_NODE){var buf=Buffer.alloc(256),bytesRead=0,fd=process.stdin.fd;try{bytesRead=fs.readSync(fd,buf,0,256,-1)}catch(e){if(!e.toString().includes("EOF"))throw e;bytesRead=0}result=0<bytesRead?buf.slice(0,bytesRead).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(result=window.prompt("Input: "))&&(result+="\n"):"function"==typeof readline&&null!==(result=readline())&&(result+="\n");if(!result)return null;FS_stdin_getChar_buffer=intArrayFromString(result,!0)}return FS_stdin_getChar_buffer.shift()},TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops},FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty)throw new FS.ErrnoError(43);stream.tty=tty,stream.seekable=!1},close:function(stream){stream.tty.ops.fsync(stream.tty)},fsync:function(stream){stream.tty.ops.fsync(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char)throw new FS.ErrnoError(60);for(var result,bytesRead=0,i=0;i<length;i++){try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(void 0===result&&0===bytesRead)throw new FS.ErrnoError(6);if(null==result)break;bytesRead++,buffer[offset+i]=result}return bytesRead&&(stream.node.timestamp=Date.now()),bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char)throw new FS.ErrnoError(60);try{for(var i=0;i<length;i++)stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}return length&&(stream.node.timestamp=Date.now()),i}},default_tty_ops:{get_char:function(tty){return FS_stdin_getChar()},put_char:function(tty,val){null===val||10===val?(out(UTF8ArrayToString(tty.output,0)),tty.output=[]):0!=val&&tty.output.push(val)},fsync:function(tty){tty.output&&0<tty.output.length&&(out(UTF8ArrayToString(tty.output,0)),tty.output=[])},ioctl_tcgets:function(tty){return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ioctl_tcsets:function(tty,optional_actions,data){return 0},ioctl_tiocgwinsz:function(tty){return[24,80]}},default_tty1_ops:{put_char:function(tty,val){null===val||10===val?(err(UTF8ArrayToString(tty.output,0)),tty.output=[]):0!=val&&tty.output.push(val)},fsync:function(tty){tty.output&&0<tty.output.length&&(err(UTF8ArrayToString(tty.output,0)),tty.output=[])}}},mmapAlloc=size=>{abort()},MEMFS={ops_table:null,mount(mount){return MEMFS.createNode(null,"/",16895,0)},createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode))throw new FS.ErrnoError(63);MEMFS.ops_table||(MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}});mode=FS.createNode(parent,name,mode,dev);return FS.isDir(mode.mode)?(mode.node_ops=MEMFS.ops_table.dir.node,mode.stream_ops=MEMFS.ops_table.dir.stream,mode.contents={}):FS.isFile(mode.mode)?(mode.node_ops=MEMFS.ops_table.file.node,mode.stream_ops=MEMFS.ops_table.file.stream,mode.usedBytes=0,mode.contents=null):FS.isLink(mode.mode)?(mode.node_ops=MEMFS.ops_table.link.node,mode.stream_ops=MEMFS.ops_table.link.stream):FS.isChrdev(mode.mode)&&(mode.node_ops=MEMFS.ops_table.chrdev.node,mode.stream_ops=MEMFS.ops_table.chrdev.stream),mode.timestamp=Date.now(),parent&&(parent.contents[name]=mode,parent.timestamp=mode.timestamp),mode},getFileDataAsTypedArray(node){return node.contents?node.contents.subarray?node.contents.subarray(0,node.usedBytes):new Uint8Array(node.contents):new Uint8Array(0)},expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;newCapacity<=prevCapacity||(newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<1048576?2:1.125)>>>0),0!=prevCapacity&&(newCapacity=Math.max(newCapacity,256)),prevCapacity=node.contents,node.contents=new Uint8Array(newCapacity),0<node.usedBytes&&node.contents.set(prevCapacity.subarray(0,node.usedBytes),0))},resizeFileStorage(node,newSize){var oldContents;node.usedBytes!=newSize&&(0==newSize?(node.contents=null,node.usedBytes=0):(oldContents=node.contents,node.contents=new Uint8Array(newSize),oldContents&&node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes))),node.usedBytes=newSize))},node_ops:{getattr(node){var attr={};return attr.dev=FS.isChrdev(node.mode)?node.id:1,attr.ino=node.id,attr.mode=node.mode,attr.nlink=1,attr.uid=0,attr.gid=0,attr.rdev=node.rdev,FS.isDir(node.mode)?attr.size=4096:FS.isFile(node.mode)?attr.size=node.usedBytes:FS.isLink(node.mode)?attr.size=node.link.length:attr.size=0,attr.atime=new Date(node.timestamp),attr.mtime=new Date(node.timestamp),attr.ctime=new Date(node.timestamp),attr.blksize=4096,attr.blocks=Math.ceil(attr.size/attr.blksize),attr},setattr(node,attr){void 0!==attr.mode&&(node.mode=attr.mode),void 0!==attr.timestamp&&(node.timestamp=attr.timestamp),void 0!==attr.size&&MEMFS.resizeFileStorage(node,attr.size)},lookup(parent,name){throw FS.genericErrors[44]},mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node)for(var i in new_node.contents)throw new FS.ErrnoError(55)}delete old_node.parent.contents[old_node.name],old_node.parent.timestamp=Date.now(),old_node.name=new_name,new_dir.contents[new_name]=old_node,new_dir.timestamp=old_node.parent.timestamp,old_node.parent=new_dir},unlink(parent,name){delete parent.contents[name],parent.timestamp=Date.now()},rmdir(parent,name){for(var i in FS.lookupNode(parent,name).contents)throw new FS.ErrnoError(55);delete parent.contents[name],parent.timestamp=Date.now()},readdir(node){var key,entries=[".",".."];for(key in node.contents)node.contents.hasOwnProperty(key)&&entries.push(key);return entries},symlink(parent,newname,oldpath){parent=MEMFS.createNode(parent,newname,41471,0);return parent.link=oldpath,parent},readlink(node){if(FS.isLink(node.mode))return node.link;throw new FS.ErrnoError(28)}},stream_ops:{read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(8<size&&contents.subarray)buffer.set(contents.subarray(position,position+size),offset);else for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i];return size},write(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer&&(canOwn=!1),!length)return 0;var node=stream.node;if(node.timestamp=Date.now(),buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn)return node.contents=buffer.subarray(offset,offset+length),node.usedBytes=length;if(0===node.usedBytes&&0===position)return node.contents=buffer.slice(offset,offset+length),node.usedBytes=length;if(position+length<=node.usedBytes)return node.contents.set(buffer.subarray(offset,offset+length),position),length}if(MEMFS.expandFileStorage(node,position+length),node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else for(var i=0;i<length;i++)node.contents[position+i]=buffer[offset+i];return node.usedBytes=Math.max(node.usedBytes,position+length),length},llseek(stream,offset,whence){if(1===whence?offset+=stream.position:2===whence&&FS.isFile(stream.node.mode)&&(offset+=stream.node.usedBytes),offset<0)throw new FS.ErrnoError(28);return offset},allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length),stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode))throw new FS.ErrnoError(43);var ptr,allocated,stream=stream.node.contents;if(2&flags||stream.buffer!==HEAP8.buffer){if((0<position||position+length<stream.length)&&(stream=stream.subarray?stream.subarray(position,position+length):Array.prototype.slice.call(stream,position,position+length)),allocated=!0,!(ptr=mmapAlloc(length)))throw new FS.ErrnoError(48);HEAP8.set(stream,ptr>>>0)}else allocated=!1,ptr=stream.byteOffset;return{ptr:ptr,allocated:allocated}},msync(stream,buffer,offset,length,mmapFlags){return MEMFS.stream_ops.write(stream,buffer,0,length,offset,!1),0}}},asyncLoad=(url,onload,onerror,noRunDep)=>{var dep=noRunDep?"":getUniqueRunDependency("al "+url);readAsync(url,arrayBuffer=>{assert(arrayBuffer,`Loading data file "${url}" failed (no arrayBuffer).`),onload(new Uint8Array(arrayBuffer)),dep&&removeRunDependency(dep)},event=>{if(!onerror)throw`Loading data file "${url}" failed.`;onerror()}),dep&&addRunDependency(dep)},preloadPlugins=Module.preloadPlugins||[];function FS_handledByPreloadPlugin(byteArray,fullname,finish,onerror){"undefined"!=typeof Browser&&Browser.init();var handled=!1;return preloadPlugins.forEach(function(plugin){handled||plugin.canHandle(fullname)&&(plugin.handle(byteArray,fullname,finish,onerror),handled=!0)}),handled}function FS_createPreloadedFile(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent,dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){preFinish&&preFinish(),dontCreateFile||FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn),onload&&onload(),removeRunDependency(dep)}FS_handledByPreloadPlugin(byteArray,fullname,finish,()=>{onerror&&onerror(),removeRunDependency(dep)})||finish(byteArray)}addRunDependency(dep),"string"==typeof url?asyncLoad(url,byteArray=>processData(byteArray),onerror):processData(url)}function FS_modeStringToFlags(str){var flags={r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090}[str];if(void 0===flags)throw new Error("Unknown file open mode: "+str);return flags}function FS_getMode(canRead,canWrite){var mode=0;return canRead&&(mode|=365),canWrite&&(mode|=146),mode}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path,opts={})=>{if(!(path=PATH_FS.resolve(path)))return{path:"",node:null};if(8<(opts=Object.assign({follow_mount:!0,recurse_count:0},opts)).recurse_count)throw new FS.ErrnoError(32);for(var parts=path.split("/").filter(p=>!!p),current=FS.root,current_path="/",i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent)break;if(current=FS.lookupNode(current,parts[i]),current_path=PATH.join2(current_path,parts[i]),!FS.isMountpoint(current)||islast&&!opts.follow_mount||(current=current.mounted.root),!islast||opts.follow)for(var count=0;FS.isLink(current.mode);){var link=FS.readlink(current_path),current_path=PATH_FS.resolve(PATH.dirname(current_path),link),current=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1}).node;if(40<count++)throw new FS.ErrnoError(32)}}return{path:current_path,node:current}},getPath:node=>{for(var path,mount;;){if(FS.isRoot(node))return mount=node.mount.mountpoint,path?"/"!==mount[mount.length-1]?mount+"/"+path:mount+path:mount;path=path?node.name+"/"+path:node.name,node=node.parent}},hashName:(parentid,name)=>{for(var hash=0,i=0;i<name.length;i++)hash=(hash<<5)-hash+name.charCodeAt(i)|0;return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:node=>{var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash],FS.nameTable[hash]=node},hashRemoveNode:node=>{var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node)FS.nameTable[hash]=node.name_next;else for(var current=FS.nameTable[hash];current;){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}},lookupNode:(parent,name)=>{var errCode=FS.mayLookup(parent);if(errCode)throw new FS.ErrnoError(errCode,parent);for(var errCode=FS.hashName(parent.id,name),node=FS.nameTable[errCode];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name)return node}return FS.lookup(parent,name)},createNode:(parent,name,mode,rdev)=>{parent=new FS.FSNode(parent,name,mode,rdev);return FS.hashAddNode(parent),parent},destroyNode:node=>{FS.hashRemoveNode(node)},isRoot:node=>node===node.parent,isMountpoint:node=>!!node.mounted,isFile:mode=>32768==(61440&mode),isDir:mode=>16384==(61440&mode),isLink:mode=>40960==(61440&mode),isChrdev:mode=>8192==(61440&mode),isBlkdev:mode=>24576==(61440&mode),isFIFO:mode=>4096==(61440&mode),isSocket:mode=>49152==(49152&mode),flagsToPermissionString:flag=>{var perms=["r","w","rw"][3&flag];return 512&flag&&(perms+="w"),perms},nodePermissions:(node,perms)=>FS.ignorePermissions||(!perms.includes("r")||292&node.mode)&&(!perms.includes("w")||146&node.mode)&&(!perms.includes("x")||73&node.mode)?0:2,mayLookup:dir=>{var errCode=FS.nodePermissions(dir,"x");return errCode||(dir.node_ops.lookup?0:2)},mayCreate:(dir,name)=>{try{FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete:(dir,name,isdir)=>{var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}name=FS.nodePermissions(dir,"wx");if(name)return name;if(isdir){if(!FS.isDir(node.mode))return 54;if(FS.isRoot(node)||FS.getPath(node)===FS.cwd())return 10}else if(FS.isDir(node.mode))return 31;return 0},mayOpen:(node,flags)=>node?FS.isLink(node.mode)?32:FS.isDir(node.mode)&&("r"!==FS.flagsToPermissionString(flags)||512&flags)?31:FS.nodePermissions(node,FS.flagsToPermissionString(flags)):44,MAX_OPEN_FDS:4096,nextfd:()=>{for(var fd=0;fd<=FS.MAX_OPEN_FDS;fd++)if(!FS.streams[fd])return fd;throw new FS.ErrnoError(33)},getStreamChecked:fd=>{fd=FS.getStream(fd);if(fd)return fd;throw new FS.ErrnoError(8)},getStream:fd=>FS.streams[fd],createStream:(stream,fd=-1)=>(FS.FSStream||(FS.FSStream=function(){this.shared={}},FS.FSStream.prototype={},Object.defineProperties(FS.FSStream.prototype,{object:{get(){return this.node},set(val){this.node=val}},isRead:{get(){return 1!=(2097155&this.flags)}},isWrite:{get(){return 0!=(2097155&this.flags)}},isAppend:{get(){return 1024&this.flags}},flags:{get(){return this.shared.flags},set(val){this.shared.flags=val}},position:{get(){return this.shared.position},set(val){this.shared.position=val}}})),stream=Object.assign(new FS.FSStream,stream),-1==fd&&(fd=FS.nextfd()),stream.fd=fd,FS.streams[fd]=stream),closeStream:fd=>{FS.streams[fd]=null},chrdev_stream_ops:{open:stream=>{var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops,stream.stream_ops.open&&stream.stream_ops.open(stream)},llseek:()=>{throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>255&dev,makedev:(ma,mi)=>ma<<8|mi,registerDevice:(dev,ops)=>{FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts:mount=>{for(var mounts=[],check=[mount];check.length;){var m=check.pop();mounts.push(m),check.push.apply(check,m.mounts)}return mounts},syncfs:(populate,callback)=>{"function"==typeof populate&&(callback=populate,populate=!1),FS.syncFSRequests++,1<FS.syncFSRequests&&err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);var mounts=FS.getMounts(FS.root.mount),completed=0;function doCallback(errCode){return FS.syncFSRequests--,callback(errCode)}function done(errCode){if(errCode)return done.errored?void 0:(done.errored=!0,doCallback(errCode));++completed>=mounts.length&&doCallback(null)}mounts.forEach(mount=>{if(!mount.type.syncfs)return done(null);mount.type.syncfs(mount,populate,done)})},mount:(type,opts,mountpoint)=>{var node,root="/"===mountpoint,pseudo=!mountpoint;if(root&&FS.root)throw new FS.ErrnoError(10);if(!root&&!pseudo){pseudo=FS.lookupPath(mountpoint,{follow_mount:!1});if(mountpoint=pseudo.path,node=pseudo.node,FS.isMountpoint(node))throw new FS.ErrnoError(10);if(!FS.isDir(node.mode))throw new FS.ErrnoError(54)}pseudo={type:type,opts:opts,mountpoint:mountpoint,mounts:[]},opts=type.mount(pseudo);return(opts.mount=pseudo).root=opts,root?FS.root=opts:node&&(node.mounted=pseudo,node.mount)&&node.mount.mounts.push(pseudo),opts},unmount:mountpoint=>{mountpoint=FS.lookupPath(mountpoint,{follow_mount:!1});if(!FS.isMountpoint(mountpoint.node))throw new FS.ErrnoError(28);var mountpoint=mountpoint.node,mount=mountpoint.mounted,mounts=FS.getMounts(mount),mount=(Object.keys(FS.nameTable).forEach(hash=>{for(var current=FS.nameTable[hash];current;){var next=current.name_next;mounts.includes(current.mount)&&FS.destroyNode(current),current=next}}),mountpoint.mounted=null,mountpoint.mount.mounts.indexOf(mount));mountpoint.mount.mounts.splice(mount,1)},lookup:(parent,name)=>parent.node_ops.lookup(parent,name),mknod:(path,mode,dev)=>{var parent=FS.lookupPath(path,{parent:!0}).node,path=PATH.basename(path);if(!path||"."===path||".."===path)throw new FS.ErrnoError(28);var errCode=FS.mayCreate(parent,path);if(errCode)throw new FS.ErrnoError(errCode);if(parent.node_ops.mknod)return parent.node_ops.mknod(parent,path,mode,dev);throw new FS.ErrnoError(63)},create:(path,mode)=>FS.mknod(path,mode=(mode=void 0!==mode?mode:438)&4095|32768,0),mkdir:(path,mode)=>FS.mknod(path,mode=(mode=void 0!==mode?mode:511)&1023|16384,0),mkdirTree:(path,mode)=>{for(var dirs=path.split("/"),d="",i=0;i<dirs.length;++i)if(dirs[i]){d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(20!=e.errno)throw e}}},mkdev:(path,mode,dev)=>(void 0===dev&&(dev=mode,mode=438),FS.mknod(path,mode|=8192,dev)),symlink:(oldpath,newpath)=>{if(!PATH_FS.resolve(oldpath))throw new FS.ErrnoError(44);var parent=FS.lookupPath(newpath,{parent:!0}).node;if(!parent)throw new FS.ErrnoError(44);var newpath=PATH.basename(newpath),errCode=FS.mayCreate(parent,newpath);if(errCode)throw new FS.ErrnoError(errCode);if(parent.node_ops.symlink)return parent.node_ops.symlink(parent,newpath,oldpath);throw new FS.ErrnoError(63)},rename:(old_path,new_path)=>{var old_dirname=PATH.dirname(old_path),new_dirname=PATH.dirname(new_path),old_name=PATH.basename(old_path),new_name=PATH.basename(new_path),lookup=FS.lookupPath(old_path,{parent:!0}),lookup=lookup.node,new_dir=FS.lookupPath(new_path,{parent:!0}).node;if(!lookup||!new_dir)throw new FS.ErrnoError(44);if(lookup.mount!==new_dir.mount)throw new FS.ErrnoError(75);var new_node,old_node=FS.lookupNode(lookup,old_name),old_path=PATH_FS.relative(old_path,new_dirname);if("."!==old_path.charAt(0))throw new FS.ErrnoError(28);if("."!==(old_path=PATH_FS.relative(new_path,old_dirname)).charAt(0))throw new FS.ErrnoError(55);try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node!==new_node){new_dirname=FS.isDir(old_node.mode),new_path=FS.mayDelete(lookup,old_name,new_dirname);if(new_path)throw new FS.ErrnoError(new_path);if(new_path=new_node?FS.mayDelete(new_dir,new_name,new_dirname):FS.mayCreate(new_dir,new_name))throw new FS.ErrnoError(new_path);if(!lookup.node_ops.rename)throw new FS.ErrnoError(63);if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node))throw new FS.ErrnoError(10);if(new_dir!==lookup&&(new_path=FS.nodePermissions(lookup,"w")))throw new FS.ErrnoError(new_path);FS.hashRemoveNode(old_node);try{lookup.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}}},rmdir:path=>{var parent=FS.lookupPath(path,{parent:!0}).node,path=PATH.basename(path),node=FS.lookupNode(parent,path),errCode=FS.mayDelete(parent,path,!0);if(errCode)throw new FS.ErrnoError(errCode);if(!parent.node_ops.rmdir)throw new FS.ErrnoError(63);if(FS.isMountpoint(node))throw new FS.ErrnoError(10);parent.node_ops.rmdir(parent,path),FS.destroyNode(node)},readdir:path=>{path=FS.lookupPath(path,{follow:!0}).node;if(path.node_ops.readdir)return path.node_ops.readdir(path);throw new FS.ErrnoError(54)},unlink:path=>{var parent=FS.lookupPath(path,{parent:!0}).node;if(!parent)throw new FS.ErrnoError(44);var path=PATH.basename(path),node=FS.lookupNode(parent,path),errCode=FS.mayDelete(parent,path,!1);if(errCode)throw new FS.ErrnoError(errCode);if(!parent.node_ops.unlink)throw new FS.ErrnoError(63);if(FS.isMountpoint(node))throw new FS.ErrnoError(10);parent.node_ops.unlink(parent,path),FS.destroyNode(node)},readlink:path=>{path=FS.lookupPath(path).node;if(!path)throw new FS.ErrnoError(44);if(path.node_ops.readlink)return PATH_FS.resolve(FS.getPath(path.parent),path.node_ops.readlink(path));throw new FS.ErrnoError(28)},stat:(path,dontFollow)=>{path=FS.lookupPath(path,{follow:!dontFollow}).node;if(!path)throw new FS.ErrnoError(44);if(path.node_ops.getattr)return path.node_ops.getattr(path);throw new FS.ErrnoError(63)},lstat:path=>FS.stat(path,!0),chmod:(path,mode,dontFollow)=>{if(!(dontFollow="string"==typeof path?FS.lookupPath(path,{follow:!dontFollow}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);dontFollow.node_ops.setattr(dontFollow,{mode:4095&mode|-4096&dontFollow.mode,timestamp:Date.now()})},lchmod:(path,mode)=>{FS.chmod(path,mode,!0)},fchmod:(fd,mode)=>{fd=FS.getStreamChecked(fd);FS.chmod(fd.node,mode)},chown:(path,uid,gid,dontFollow)=>{if(!(dontFollow="string"==typeof path?FS.lookupPath(path,{follow:!dontFollow}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);dontFollow.node_ops.setattr(dontFollow,{timestamp:Date.now()})},lchown:(path,uid,gid)=>{FS.chown(path,uid,gid,!0)},fchown:(fd,uid,gid)=>{fd=FS.getStreamChecked(fd);FS.chown(fd.node,uid,gid)},truncate:(path,len)=>{if(len<0)throw new FS.ErrnoError(28);if(!(path="string"==typeof path?FS.lookupPath(path,{follow:!0}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);if(FS.isDir(path.mode))throw new FS.ErrnoError(31);if(!FS.isFile(path.mode))throw new FS.ErrnoError(28);var errCode=FS.nodePermissions(path,"w");if(errCode)throw new FS.ErrnoError(errCode);path.node_ops.setattr(path,{size:len,timestamp:Date.now()})},ftruncate:(fd,len)=>{fd=FS.getStreamChecked(fd);if(0==(2097155&fd.flags))throw new FS.ErrnoError(28);FS.truncate(fd.node,len)},utime:(path,atime,mtime)=>{path=FS.lookupPath(path,{follow:!0}).node;path.node_ops.setattr(path,{timestamp:Math.max(atime,mtime)})},open:(path,flags,mode)=>{if(""===path)throw new FS.ErrnoError(44);if(mode=void 0===mode?438:mode,mode=64&(flags="string"==typeof flags?FS_modeStringToFlags(flags):flags)?4095&mode|32768:0,"object"==typeof path)node=path;else{path=PATH.normalize(path);try{var node=FS.lookupPath(path,{follow:!(131072&flags)}).node}catch(e){}}var created=!1;if(64&flags)if(node){if(128&flags)throw new FS.ErrnoError(20)}else node=FS.mknod(path,mode,0),created=!0;if(!node)throw new FS.ErrnoError(44);if(FS.isChrdev(node.mode)&&(flags&=-513),65536&flags&&!FS.isDir(node.mode))throw new FS.ErrnoError(54);if(!created){mode=FS.mayOpen(node,flags);if(mode)throw new FS.ErrnoError(mode)}512&flags&&!created&&FS.truncate(node,0),flags&=-131713;mode=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:!0,position:0,stream_ops:node.stream_ops,ungotten:[],error:!1});return mode.stream_ops.open&&mode.stream_ops.open(mode),!Module.logReadFiles||1&flags||(FS.readFiles||(FS.readFiles={}),path in FS.readFiles)||(FS.readFiles[path]=1),mode},close:stream=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);stream.getdents&&(stream.getdents=null);try{stream.stream_ops.close&&stream.stream_ops.close(stream)}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:stream=>null===stream.fd,llseek:(stream,offset,whence)=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(!stream.seekable||!stream.stream_ops.llseek)throw new FS.ErrnoError(70);if(0!=whence&&1!=whence&&2!=whence)throw new FS.ErrnoError(28);return stream.position=stream.stream_ops.llseek(stream,offset,whence),stream.ungotten=[],stream.position},read:(stream,buffer,offset,length,position)=>{if(length<0||position<0)throw new FS.ErrnoError(28);if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(1==(2097155&stream.flags))throw new FS.ErrnoError(8);if(FS.isDir(stream.node.mode))throw new FS.ErrnoError(31);if(!stream.stream_ops.read)throw new FS.ErrnoError(28);var seeking=void 0!==position;if(seeking){if(!stream.seekable)throw new FS.ErrnoError(70)}else position=stream.position;buffer=stream.stream_ops.read(stream,buffer,offset,length,position);return seeking||(stream.position+=buffer),buffer},write:(stream,buffer,offset,length,position,canOwn)=>{if(length<0||position<0)throw new FS.ErrnoError(28);if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(0==(2097155&stream.flags))throw new FS.ErrnoError(8);if(FS.isDir(stream.node.mode))throw new FS.ErrnoError(31);if(!stream.stream_ops.write)throw new FS.ErrnoError(28);stream.seekable&&1024&stream.flags&&FS.llseek(stream,0,2);var seeking=void 0!==position;if(seeking){if(!stream.seekable)throw new FS.ErrnoError(70)}else position=stream.position;buffer=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);return seeking||(stream.position+=buffer),buffer},allocate:(stream,offset,length)=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(offset<0||length<=0)throw new FS.ErrnoError(28);if(0==(2097155&stream.flags))throw new FS.ErrnoError(8);if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode))throw new FS.ErrnoError(43);if(!stream.stream_ops.allocate)throw new FS.ErrnoError(138);stream.stream_ops.allocate(stream,offset,length)},mmap:(stream,length,position,prot,flags)=>{if(0!=(2&prot)&&0==(2&flags)&&2!=(2097155&stream.flags))throw new FS.ErrnoError(2);if(1==(2097155&stream.flags))throw new FS.ErrnoError(2);if(stream.stream_ops.mmap)return stream.stream_ops.mmap(stream,length,position,prot,flags);throw new FS.ErrnoError(43)},msync:(stream,buffer,offset,length,mmapFlags)=>stream.stream_ops.msync?stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags):0,munmap:stream=>0,ioctl:(stream,cmd,arg)=>{if(stream.stream_ops.ioctl)return stream.stream_ops.ioctl(stream,cmd,arg);throw new FS.ErrnoError(59)},readFile:(path,opts={})=>{if(opts.flags=opts.flags||0,opts.encoding=opts.encoding||"binary","utf8"!==opts.encoding&&"binary"!==opts.encoding)throw new Error(`Invalid encoding type "${opts.encoding}"`);var ret,stream=FS.open(path,opts.flags),path=FS.stat(path).size,buf=new Uint8Array(path);return FS.read(stream,buf,0,path,0),"utf8"===opts.encoding?ret=UTF8ArrayToString(buf,0):"binary"===opts.encoding&&(ret=buf),FS.close(stream),ret},writeFile:(path,data,opts={})=>{opts.flags=opts.flags||577;path=FS.open(path,opts.flags,opts.mode);if("string"==typeof data){var buf=new Uint8Array(lengthBytesUTF8(data)+1),actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(path,buf,0,actualNumBytes,void 0,opts.canOwn)}else{if(!ArrayBuffer.isView(data))throw new Error("Unsupported data type");FS.write(path,data,0,data.byteLength,void 0,opts.canOwn)}FS.close(path)},cwd:()=>FS.currentPath,chdir:path=>{path=FS.lookupPath(path,{follow:!0});if(null===path.node)throw new FS.ErrnoError(44);if(!FS.isDir(path.node.mode))throw new FS.ErrnoError(54);var errCode=FS.nodePermissions(path.node,"x");if(errCode)throw new FS.ErrnoError(errCode);FS.currentPath=path.path},createDefaultDirectories:()=>{FS.mkdir("/tmp"),FS.mkdir("/home"),FS.mkdir("/home/web_user")},createDefaultDevices:()=>{FS.mkdir("/dev"),FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length}),FS.mkdev("/dev/null",FS.makedev(1,3)),TTY.register(FS.makedev(5,0),TTY.default_tty_ops),TTY.register(FS.makedev(6,0),TTY.default_tty1_ops),FS.mkdev("/dev/tty",FS.makedev(5,0)),FS.mkdev("/dev/tty1",FS.makedev(6,0));var randomBuffer=new Uint8Array(1024),randomLeft=0,randomByte=()=>(0===randomLeft&&(randomLeft=randomFill(randomBuffer).byteLength),randomBuffer[--randomLeft]);FS.createDevice("/dev","random",randomByte),FS.createDevice("/dev","urandom",randomByte),FS.mkdir("/dev/shm"),FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{FS.mkdir("/proc");var proc_self=FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd"),FS.mount({mount:()=>{var node=FS.createNode(proc_self,"fd",16895,73);return node.node_ops={lookup:(parent,name)=>{var stream=FS.getStreamChecked(+name),name={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>stream.path}};return name.parent=name}},node}},{},"/proc/self/fd")},createStandardStreams:()=>{Module.stdin?FS.createDevice("/dev","stdin",Module.stdin):FS.symlink("/dev/tty","/dev/stdin"),Module.stdout?FS.createDevice("/dev","stdout",null,Module.stdout):FS.symlink("/dev/tty","/dev/stdout"),Module.stderr?FS.createDevice("/dev","stderr",null,Module.stderr):FS.symlink("/dev/tty1","/dev/stderr");FS.open("/dev/stdin",0),FS.open("/dev/stdout",1),FS.open("/dev/stderr",1)},ensureErrnoError:()=>{FS.ErrnoError||(FS.ErrnoError=function(errno,node){this.name="ErrnoError",this.node=node,this.setErrno=function(errno){this.errno=errno},this.setErrno(errno),this.message="FS error"},FS.ErrnoError.prototype=new Error,FS.ErrnoError.prototype.constructor=FS.ErrnoError,[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code),FS.genericErrors[code].stack="<generic error, no stack>"}))},staticInit:()=>{FS.ensureErrnoError(),FS.nameTable=new Array(4096),FS.mount(MEMFS,{},"/"),FS.createDefaultDirectories(),FS.createDefaultDevices(),FS.createSpecialDirectories(),FS.filesystems={MEMFS:MEMFS}},init:(input,output,error)=>{FS.init.initialized=!0,FS.ensureErrnoError(),Module.stdin=input||Module.stdin,Module.stdout=output||Module.stdout,Module.stderr=error||Module.stderr,FS.createStandardStreams()},quit:()=>{FS.init.initialized=!1;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];stream&&FS.close(stream)}},findObject:(path,dontResolveLastLink)=>{path=FS.analyzePath(path,dontResolveLastLink);return path.exists?path.object:null},analyzePath:(path,dontResolveLastLink)=>{try{path=(lookup=FS.lookupPath(path,{follow:!dontResolveLastLink})).path}catch(e){}var ret={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:!0});ret.parentExists=!0,ret.parentPath=lookup.path,ret.parentObject=lookup.node,ret.name=PATH.basename(path),lookup=FS.lookupPath(path,{follow:!dontResolveLastLink}),ret.exists=!0,ret.path=lookup.path,ret.object=lookup.node,ret.name=lookup.node.name,ret.isRoot="/"===lookup.path}catch(e){ret.error=e.errno}return ret},createPath:(parent,path,canRead,canWrite)=>{parent="string"==typeof parent?parent:FS.getPath(parent);for(var parts=path.split("/").reverse();parts.length;){var part=parts.pop();if(part){var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}}return current},createFile:(parent,name,properties,canRead,canWrite)=>{parent=PATH.join2("string"==typeof parent?parent:FS.getPath(parent),name),name=FS_getMode(canRead,canWrite);return FS.create(parent,name)},createDataFile:(parent,name,data,canRead,canWrite,canOwn)=>{var path=name,name=(parent&&(parent="string"==typeof parent?parent:FS.getPath(parent),path=name?PATH.join2(parent,name):parent),FS_getMode(canRead,canWrite)),parent=FS.create(path,name);if(data){if("string"==typeof data){for(var arr=new Array(data.length),i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(parent,146|name);canRead=FS.open(parent,577);FS.write(canRead,data,0,data.length,0,canOwn),FS.close(canRead),FS.chmod(parent,name)}return parent},createDevice:(parent,name,input,output)=>{var parent=PATH.join2("string"==typeof parent?parent:FS.getPath(parent),name),name=FS_getMode(!!input,!!output),dev=(FS.createDevice.major||(FS.createDevice.major=64),FS.makedev(FS.createDevice.major++,0));return FS.registerDevice(dev,{open:stream=>{stream.seekable=!1},close:stream=>{output&&output.buffer&&output.buffer.length&&output(10)},read:(stream,buffer,offset,length,pos)=>{for(var result,bytesRead=0,i=0;i<length;i++){try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(void 0===result&&0===bytesRead)throw new FS.ErrnoError(6);if(null==result)break;bytesRead++,buffer[offset+i]=result}return bytesRead&&(stream.node.timestamp=Date.now()),bytesRead},write:(stream,buffer,offset,length,pos)=>{for(var i=0;i<length;i++)try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}return length&&(stream.node.timestamp=Date.now()),i}}),FS.mkdev(parent,name,dev)},forceLoadFile:obj=>{if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!read_)throw new Error("Cannot load without read() or XMLHttpRequest.");try{obj.contents=intArrayFromString(read_(obj.url),!0),obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}},createLazyFile:(parent,name,url,canRead,canWrite)=>{function LazyUint8Array(){this.lengthKnown=!1,this.chunks=[]}if(LazyUint8Array.prototype.get=function(idx){var chunkOffset;if(!(idx>this.length-1||idx<0))return chunkOffset=idx%this.chunkSize,idx=idx/this.chunkSize|0,this.getter(idx)[chunkOffset]},LazyUint8Array.prototype.setDataGetter=function(getter){this.getter=getter},LazyUint8Array.prototype.cacheLength=function(){var xhr=new XMLHttpRequest;if(xhr.open("HEAD",url,!1),xhr.send(null),!(200<=xhr.status&&xhr.status<300||304===xhr.status))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var header,datalength=Number(xhr.getResponseHeader("Content-length")),hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&"bytes"===header,xhr=(header=xhr.getResponseHeader("Content-Encoding"))&&"gzip"===header,chunkSize=1048576,lazyArray=(hasByteServing||(chunkSize=datalength),this);lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize,end=(chunkNum+1)*chunkSize-1,end=Math.min(end,datalength-1);if(void 0===lazyArray.chunks[chunkNum]&&(lazyArray.chunks[chunkNum]=((from,to)=>{if(to<from)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(datalength-1<to)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;if(xhr.open("GET",url,!1),datalength!==chunkSize&&xhr.setRequestHeader("Range","bytes="+from+"-"+to),xhr.responseType="arraybuffer",xhr.overrideMimeType&&xhr.overrideMimeType("text/plain; charset=x-user-defined"),xhr.send(null),200<=xhr.status&&xhr.status<300||304===xhr.status)return void 0!==xhr.response?new Uint8Array(xhr.response||[]):intArrayFromString(xhr.responseText||"",!0);throw new Error("Couldn't load "+url+". Status: "+xhr.status)})(start,end)),void 0===lazyArray.chunks[chunkNum])throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}),!xhr&&datalength||(chunkSize=datalength=1,datalength=this.getter(0).length,chunkSize=datalength,out("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=datalength,this._chunkSize=chunkSize,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array,lazyArray=(Object.defineProperties(lazyArray,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}}),{isDevice:!1,contents:lazyArray})}else lazyArray={isDevice:!1,url:url};var node=FS.createFile(parent,name,lazyArray,canRead,canWrite),stream_ops=(lazyArray.contents?node.contents=lazyArray.contents:lazyArray.url&&(node.contents=null,node.url=lazyArray.url),Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}}),{});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice)for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i];else for(i=0;i<size;i++)buffer[offset+i]=contents.get(position+i);return size}return Object.keys(node.stream_ops).forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function(){return FS.forceLoadFile(node),fn.apply(null,arguments)}}),stream_ops.read=(stream,buffer,offset,length,position)=>(FS.forceLoadFile(node),writeChunks(stream,buffer,offset,length,position)),stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(ptr)return writeChunks(stream,HEAP8,ptr,length,position),{ptr:ptr,allocated:!0};throw new FS.ErrnoError(48)},node.stream_ops=stream_ops,node}},SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(PATH.isAbs(path))return path;if(dirfd=-100===dirfd?FS.cwd():SYSCALLS.getStreamFromFD(dirfd).path,0!=path.length)return PATH.join2(dirfd,path);if(allowEmpty)return dirfd;throw new FS.ErrnoError(44)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node)))return-54;throw e}HEAP32[buf>>>2]=stat.dev,HEAP32[buf+4>>>2]=stat.mode,HEAPU32[buf+8>>>2]=stat.nlink,HEAP32[buf+12>>>2]=stat.uid,HEAP32[buf+16>>>2]=stat.gid,HEAP32[buf+20>>>2]=stat.rdev,tempI64=[stat.size>>>0,(tempDouble=stat.size,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+24>>>2]=tempI64[0],HEAP32[buf+28>>>2]=tempI64[1],HEAP32[buf+32>>>2]=4096,HEAP32[buf+36>>>2]=stat.blocks;var func=stat.atime.getTime(),path=stat.mtime.getTime(),ctime=stat.ctime.getTime();return tempI64=[Math.floor(func/1e3)>>>0,(tempDouble=Math.floor(func/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>>2]=tempI64[0],HEAP32[buf+44>>>2]=tempI64[1],HEAPU32[buf+48>>>2]=func%1e3*1e3,tempI64=[Math.floor(path/1e3)>>>0,(tempDouble=Math.floor(path/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+56>>>2]=tempI64[0],HEAP32[buf+60>>>2]=tempI64[1],HEAPU32[buf+64>>>2]=path%1e3*1e3,tempI64=[Math.floor(ctime/1e3)>>>0,(tempDouble=Math.floor(ctime/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+72>>>2]=tempI64[0],HEAP32[buf+76>>>2]=tempI64[1],HEAPU32[buf+80>>>2]=ctime%1e3*1e3,tempI64=[stat.ino>>>0,(tempDouble=stat.ino,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+88>>>2]=tempI64[0],HEAP32[buf+92>>>2]=tempI64[1],0},doMsync:function(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode))throw new FS.ErrnoError(43);if(2&flags)return 0;addr=HEAPU8.slice(addr,addr+len);FS.msync(stream,addr,offset,len,flags)},varargs:void 0,get(){return SYSCALLS.varargs+=4,HEAP32[SYSCALLS.varargs-4>>>2]},getStr(ptr){return UTF8ToString(ptr)},getStreamFromFD:function(fd){return FS.getStreamChecked(fd)}};function _environ_get(__environ,environ_buf){__environ>>>=0,environ_buf>>>=0;var bufSize=0;return getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+4*i>>>2]=ptr,stringToAscii(string,ptr),bufSize+=string.length+1}),0}function _environ_sizes_get(penviron_count,penviron_buf_size){penviron_count>>>=0,penviron_buf_size>>>=0;var strings=getEnvStrings(),bufSize=(HEAPU32[penviron_count>>>2]=strings.length,0);return strings.forEach(function(string){bufSize+=string.length+1}),HEAPU32[penviron_buf_size>>>2]=bufSize,0}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);return FS.close(stream),0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var doReadv=(stream,iov,iovcnt,offset)=>{for(var ret=0,i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2],len=HEAPU32[iov+4>>>2],ptr=(iov+=8,FS.read(stream,HEAP8,ptr,len,offset));if(ptr<0)return-1;if(ret+=ptr,ptr<len)break;void 0!==offset&&(offset+=ptr)}return ret};function _fd_read(fd,iov,iovcnt,pnum){iov>>>=0,iovcnt>>>=0,pnum>>>=0;try{var stream=SYSCALLS.getStreamFromFD(fd),num=doReadv(stream,iov,iovcnt);return HEAPU32[pnum>>>2]=num,0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var stream,offset_low=convertI32PairToI53Checked(offset_low,offset_high);newOffset>>>=0;try{return isNaN(offset_low)?61:(stream=SYSCALLS.getStreamFromFD(fd),FS.llseek(stream,offset_low,whence),tempI64=[stream.position>>>0,(tempDouble=stream.position,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>>2]=tempI64[0],HEAP32[newOffset+4>>>2]=tempI64[1],stream.getdents&&0===offset_low&&0===whence&&(stream.getdents=null),0)}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var doWritev=(stream,iov,iovcnt,offset)=>{for(var ret=0,i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2],len=HEAPU32[iov+4>>>2],ptr=(iov+=8,FS.write(stream,HEAP8,ptr,len,offset));if(ptr<0)return-1;ret+=ptr,void 0!==offset&&(offset+=ptr)}return ret};function _fd_write(fd,iov,iovcnt,pnum){iov>>>=0,iovcnt>>>=0,pnum>>>=0;try{var stream=SYSCALLS.getStreamFromFD(fd),num=doWritev(stream,iov,iovcnt);return HEAPU32[pnum>>>2]=num,0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var arraySum=(array,index)=>{for(var sum=0,i=0;i<=index;sum+=array[i++]);return sum},MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31],MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31],addDays=(date,days)=>{for(var newDate=new Date(date.getTime());0<days;){var leap=isLeapYear(newDate.getFullYear()),currentMonth=newDate.getMonth(),leap=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(!(days>leap-newDate.getDate()))return newDate.setDate(newDate.getDate()+days),newDate;days-=leap-newDate.getDate()+1,newDate.setDate(1),currentMonth<11?newDate.setMonth(currentMonth+1):(newDate.setMonth(0),newDate.setFullYear(newDate.getFullYear()+1))}return newDate},writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer>>>0)};function _strftime(s,maxsize,format,tm){s>>>=0,maxsize>>>=0,format>>>=0;var tm_zone=HEAP32[(tm>>>=0)+40>>>2],date={tm_sec:HEAP32[tm>>>2],tm_min:HEAP32[tm+4>>>2],tm_hour:HEAP32[tm+8>>>2],tm_mday:HEAP32[tm+12>>>2],tm_mon:HEAP32[tm+16>>>2],tm_year:HEAP32[tm+20>>>2],tm_wday:HEAP32[tm+24>>>2],tm_yday:HEAP32[tm+28>>>2],tm_isdst:HEAP32[tm+32>>>2],tm_gmtoff:HEAP32[tm+36>>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""},pattern=UTF8ToString(format),EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(rule in EXPANSION_RULES_1)pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule]);var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){for(var str="number"==typeof value?value.toString():value||"";str.length<digits;)str=character[0]+str;return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:0<value?1:0}var compare;return compare=0===(compare=sgn(date1.getFullYear()-date2.getFullYear()))&&0===(compare=sgn(date1.getMonth()-date2.getMonth()))?sgn(date1.getDate()-date2.getDate()):compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var date=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday),janFourthThisYear=new Date(date.getFullYear(),0,4),janFourthNextYear=new Date(date.getFullYear()+1,0,4),janFourthThisYear=getFirstWeekStartDate(janFourthThisYear),janFourthNextYear=getFirstWeekStartDate(janFourthNextYear);return compareByDay(janFourthThisYear,date)<=0?compareByDay(janFourthNextYear,date)<=0?date.getFullYear()+1:date.getFullYear():date.getFullYear()-1}var rule,EXPANSION_RULES_2={"%a":date=>WEEKDAYS[date.tm_wday].substring(0,3),"%A":date=>WEEKDAYS[date.tm_wday],"%b":date=>MONTHS[date.tm_mon].substring(0,3),"%B":date=>MONTHS[date.tm_mon],"%C":date=>{return leadingNulls((date.tm_year+1900)/100|0,2)},"%d":date=>leadingNulls(date.tm_mday,2),"%e":date=>leadingSomething(date.tm_mday,2," "),"%g":date=>getWeekBasedYear(date).toString().substring(2),"%G":date=>getWeekBasedYear(date),"%H":date=>leadingNulls(date.tm_hour,2),"%I":date=>{date=date.tm_hour;return 0==date?date=12:12<date&&(date-=12),leadingNulls(date,2)},"%j":date=>leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3),"%m":date=>leadingNulls(date.tm_mon+1,2),"%M":date=>leadingNulls(date.tm_min,2),"%n":()=>"\n","%p":date=>0<=date.tm_hour&&date.tm_hour<12?"AM":"PM","%S":date=>leadingNulls(date.tm_sec,2),"%t":()=>"\t","%u":date=>date.tm_wday||7,"%U":date=>{date=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(date/7),2)},"%V":date=>{var jan1,val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);return(date.tm_wday+371-date.tm_yday-2)%7<=2&&val++,val?53!=val||4==(jan1=(date.tm_wday+371-date.tm_yday)%7)||3==jan1&&isLeapYear(date.tm_year)||(val=1):(val=52,(4==(jan1=(date.tm_wday+7-date.tm_yday-1)%7)||5==jan1&&isLeapYear(date.tm_year%400-1))&&val++),leadingNulls(val,2)},"%w":date=>date.tm_wday,"%W":date=>{date=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(date/7),2)},"%y":date=>(date.tm_year+1900).toString().substring(2),"%Y":date=>date.tm_year+1900,"%z":date=>{var ahead=0<=(date=date.tm_gmtoff),date=Math.abs(date)/60;return(ahead?"+":"-")+String("0000"+(date/60*100+date%60)).slice(-4)},"%Z":date=>date.tm_zone,"%%":()=>"%"},pattern=pattern.replace(/%%/g,"\0\0");for(rule in EXPANSION_RULES_2)pattern.includes(rule)&&(pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date)));tm=intArrayFromString(pattern=pattern.replace(/\0\0/g,"%"),!1);return tm.length>maxsize?0:(writeArrayToMemory(tm,s),tm.length-1)}function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s>>>=0,maxsize>>>=0,format>>>=0,tm>>>=0)}function uleb128Encode(n,target){n<128?target.push(n):target.push(n%128|128,n>>7)}function sigToWasmTypes(sig){for(var typeNames={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},type={parameters:[],results:"v"==sig[0]?[]:[typeNames[sig[0]]]},i=1;i<sig.length;++i)type.parameters.push(typeNames[sig[i]]);return type}function generateFuncType(sig,target){var sigRet=sig.slice(0,1),sigParam=sig.slice(1),typeCodes={i:127,p:127,j:126,f:125,d:124};target.push(96),uleb128Encode(sigParam.length,target);for(var i=0;i<sigParam.length;++i)target.push(typeCodes[sigParam[i]]);"v"==sigRet?target.push(0):target.push(1,typeCodes[sigRet])}function convertJsFunctionToWasm(func,sig){var bytes;return"function"==typeof WebAssembly.Function?new WebAssembly.Function(sigToWasmTypes(sig),func):(generateFuncType(sig,sig=[1]),uleb128Encode(sig.length,bytes=[0,97,115,109,1,0,0,0,1]),bytes.push.apply(bytes,sig),bytes.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0),sig=new WebAssembly.Module(new Uint8Array(bytes)),new WebAssembly.Instance(sig,{e:{f:func}}).exports.f)}function updateTableMap(offset,count){if(functionsInTableMap)for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);item&&functionsInTableMap.set(item,i)}}var functionsInTableMap=void 0;function getFunctionAddress(func){return functionsInTableMap||(functionsInTableMap=new WeakMap,updateTableMap(0,wasmTable.length)),functionsInTableMap.get(func)||0}var freeTableIndexes=[];function getEmptyTableSlot(){if(freeTableIndexes.length)return freeTableIndexes.pop();try{wasmTable.grow(1)}catch(err){if(err instanceof RangeError)throw"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.";throw err}return wasmTable.length-1}var setWasmTableEntry=(idx,func)=>{wasmTable.set(idx,func),wasmTableMirror[idx]=wasmTable.get(idx)};function addFunction(func,sig){var rtn=getFunctionAddress(func);if(rtn)return rtn;rtn=getEmptyTableSlot();try{setWasmTableEntry(rtn,func)}catch(err){if(!(err instanceof TypeError))throw err;sig=convertJsFunctionToWasm(func,sig);setWasmTableEntry(rtn,sig)}return functionsInTableMap.set(func,rtn),rtn}function removeFunction(index){functionsInTableMap.delete(getWasmTableEntry(index)),freeTableIndexes.push(index)}function getCFunc(ident){return Module["_"+ident]}var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1,ret=stackAlloc(size);return stringToUTF8(str,ret,size),ret},ccall=function(ident,returnType,argTypes,args,opts){var toC={string:str=>{var ret=0;return ret=null!=str&&0!==str?stringToUTF8OnStack(str):ret},array:arr=>{var ret=stackAlloc(arr.length);return writeArrayToMemory(arr,ret),ret}};var ident=getCFunc(ident),cArgs=[],stack=0;if(args)for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];converter?(0===stack&&(stack=stackSave()),cArgs[i]=converter(args[i])):cArgs[i]=args[i]}return function(ret){return 0!==stack&&stackRestore(stack),function(ret){return"string"===returnType?UTF8ToString(ret):"boolean"===returnType?Boolean(ret):ret}(ret)}(ident.apply(null,cArgs))},cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>"number"===type||"boolean"===type);return"string"!==returnType&&numericArgs&&!opts?getCFunc(ident):function(){return ccall(ident,returnType,argTypes,arguments,opts)}},InternalError=Module.InternalError=class InternalError extends Error{constructor(message){super(message),this.name="InternalError"}},FSNode=(embind_init_charCodes(),BindingError=Module.BindingError=class BindingError extends Error{constructor(message){super(message),this.name="BindingError"}},init_ClassHandle(),init_embind(),init_RegisteredPointer(),UnboundTypeError=Module.UnboundTypeError=extendError(Error,"UnboundTypeError"),handleAllocatorInit(),init_emval(),function(parent,name,mode,rdev){this.parent=parent=parent||this,this.mount=parent.mount,this.mounted=null,this.id=FS.nextInode++,this.name=name,this.mode=mode,this.node_ops={},this.stream_ops={},this.rdev=rdev}),readMode=365,writeMode=146,wasmImports=(Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}}),FS.FSNode=FSNode,FS.createPreloadedFile=FS_createPreloadedFile,FS.staticInit(),{b:___assert_fail,d:___cxa_throw,r:__embind_finalize_value_object,B:__embind_register_bigint,M:__embind_register_bool,q:__embind_register_class,p:__embind_register_class_constructor,f:__embind_register_class_function,L:__embind_register_emval,y:__embind_register_float,c:__embind_register_function,n:__embind_register_integer,i:__embind_register_memory_view,x:__embind_register_std_string,u:__embind_register_std_wstring,o:__embind_register_value_object,e:__embind_register_value_object_field,N:__embind_register_void,h:__emval_decref,k:__emval_incref,m:__emval_new_cstring,s:__emval_new_object,l:__emval_set_property,g:__emval_take_value,A:__localtime_js,F:__tzset_js,t:_abort,w:_emscripten_date_now,K:_emscripten_memcpy_big,E:_emscripten_resize_heap,j:_emscripten_run_script,I:_environ_get,J:_environ_sizes_get,H:_fd_close,D:_fd_read,z:_fd_seek,v:_fd_write,a:wasmMemory,G:_strftime,C:_strftime_l}),asm=createWasm(),___wasm_call_ctors=asm.O,_backtest=Module._backtest=asm.P,_free=Module._free=asm.Q,_malloc=Module._malloc=asm.R,___errno_location=asm.__errno_location,_TA_ForEachFunc=Module._TA_ForEachFunc=asm.T,_TA_GetFuncHandle=Module._TA_GetFuncHandle=asm.U,_TA_GetFuncInfo=Module._TA_GetFuncInfo=asm.V,_TA_GetInputParameterInfo=Module._TA_GetInputParameterInfo=asm.W,_TA_GetOptInputParameterInfo=Module._TA_GetOptInputParameterInfo=asm.X,_TA_GetOutputParameterInfo=Module._TA_GetOutputParameterInfo=asm.Y,_TA_ParamHolderAlloc=Module._TA_ParamHolderAlloc=asm.Z,_TA_ParamHolderFree=Module._TA_ParamHolderFree=asm._,_TA_SetInputParamIntegerPtr=Module._TA_SetInputParamIntegerPtr=asm.$,_TA_SetInputParamRealPtr=Module._TA_SetInputParamRealPtr=asm.aa,_TA_SetInputParamPricePtr=Module._TA_SetInputParamPricePtr=asm.ba,_TA_SetOptInputParamInteger=Module._TA_SetOptInputParamInteger=asm.ca,_TA_SetOptInputParamReal=Module._TA_SetOptInputParamReal=asm.da,_TA_SetOutputParamIntegerPtr=Module._TA_SetOutputParamIntegerPtr=asm.ea,_TA_SetOutputParamRealPtr=Module._TA_SetOutputParamRealPtr=asm.fa,_TA_CallFunc=Module._TA_CallFunc=asm.ga,_TA_Initialize=Module._TA_Initialize=asm.ha,_TA_Shutdown=Module._TA_Shutdown=asm.ia,_TA_SetRetCodeInfo=Module._TA_SetRetCodeInfo=asm.ja,_TA_GetVersionString=Module._TA_GetVersionString=asm.ka,___getTypeName=asm.la,__embind_initialize_bindings=Module.__embind_initialize_bindings=asm.ma,stackSave=asm.na,stackRestore=asm.oa,stackAlloc=asm.pa,___cxa_is_pointer_type=asm.qa,dynCall_viijii=Module.dynCall_viijii=asm.ra,dynCall_jiji=Module.dynCall_jiji=asm.sa,dynCall_iiiiij=Module.dynCall_iiiiij=asm.ta,dynCall_iiiiijj=Module.dynCall_iiiiijj=asm.ua,dynCall_iiiiiijj=Module.dynCall_iiiiiijj=asm.va,calledRun;function applySignatureConversions(exports){var makeWrapper_pp=f=>a0=>f(a0)>>>0,makeWrapper_p=f=>()=>f()>>>0;return(exports=Object.assign({},exports)).malloc=makeWrapper_pp(exports.malloc),exports.__errno_location=makeWrapper_p(exports.__errno_location),exports.__getTypeName=makeWrapper_pp(exports.__getTypeName),exports.stackSave=makeWrapper_p(exports.stackSave),exports.stackAlloc=makeWrapper_pp(exports.stackAlloc),exports}function run(){function doRun(){calledRun||(calledRun=!0,Module.calledRun=!0,ABORT)||(initRuntime(),readyPromiseResolve(Module),Module.onRuntimeInitialized&&Module.onRuntimeInitialized(),postRun())}0<runDependencies||(preRun(),0<runDependencies)||(Module.setStatus?(Module.setStatus("Running..."),setTimeout(function(){setTimeout(function(){Module.setStatus("")},1),doRun()},1)):doRun())}if(Module.ccall=ccall,Module.cwrap=cwrap,Module.addFunction=addFunction,Module.removeFunction=removeFunction,dependenciesFulfilled=function runCaller(){calledRun||run(),calledRun||(dependenciesFulfilled=runCaller)},Module.preInit)for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);0<Module.preInit.length;)Module.preInit.pop()();function utf8_encode(string){if("undefined"!=typeof TextEncoder)return(new TextEncoder).encode(string);for(var pos=0,len=string.length,at=0,tlen=Math.max(32,len+(len>>1)+7),target=new Uint8Array(tlen>>3<<3);pos<len;){var extra,value=string.charCodeAt(pos++);if(55296<=value&&value<=56319)if(pos<len&&56320==(64512&(extra=string.charCodeAt(pos)))&&(++pos,value=((1023&value)<<10)+(1023&extra)+65536),55296<=value&&value<=56319)continue;if(at+4>target.length&&(tlen=(tlen=(tlen+=8)*(1+pos/string.length*2))>>3<<3,(extra=new Uint8Array(tlen)).set(target),target=extra),0==(4294967168&value))target[at++]=value;else{if(0==(4294965248&value))target[at++]=value>>6&31|192;else{if(0==(4294901760&value))target[at++]=value>>12&15|224;else{if(0!=(4292870144&value))continue;target[at++]=value>>18&7|240,target[at++]=value>>12&63|128}target[at++]=value>>6&63|128}target[at++]=63&value|128}}return target.slice(0,at)}function valuesToString(values,pos,ch){void 0===ch&&(ch=" ");for(var result="",i=pos=void 0===pos?0:pos;i<values.length;i++)pos<i&&(result+=ch),void 0===values[i]||null===values[i]?result+="null":"string"==typeof values[i]?result+=values[i]:"number"==typeof values[i]||"function"==typeof values[i].getFullYear?result+=values[i].toString():void 0!==values[i].cols&&"string"==typeof values[i].type&&"table"==values[i].type?result+="`"+JSON.stringify(values[i])+"`":result+=JSON.stringify(values[i]);return result=0<result.length?utf8_encode(result):result}function Vector2Array(obj){for(var arr=[],arrSize=obj.size(),i=0;i<arrSize;i++)arr.push(obj.get(i));return arr}function toNonExponential(value){var sign,e;return"number"!=typeof value&&(value=parseFloat(value),isNaN(value))?"":(value<0?(sign="-",value=Math.abs(value)):sign="",value<1?(e=parseInt(value.toString().split("e-")[1]))&&(value*=Math.pow(10,e-1),value="0."+new Array(e).join("0")+value.toString().substring(2)):(e=parseInt(value.toString().split("e+")[1]))&&(value=(value/=Math.pow(10,e))+new Array(e+1).join("0")),sign+value)}return run(),Module.talib=function(){function ReadDouble(p,idx){return getValue(p+4*idx,"double")}function ReadInt(p,idx){return getValue(p+4*idx,"i32")}function ReadStr(p,idx){return UTF8ToString(getValue(p+4*idx,"i32"))}function GetArr(arr,attr,isInteger){var ret=[],tmp=0;isInteger=void 0!==isInteger&&isInteger;for(var i=0;i<arr.length;i++)"number"!=typeof(tmp=arr[i])&&(tmp=arr[i][attr]),isInteger?ret.push(parseInt(tmp)):ret.push(tmp);var data=isInteger?new Uint8Array(new Int32Array(ret).buffer):new Uint8Array(new Float64Array(ret).buffer),ret=Module._malloc(data.length);return writeArrayToMemory(data,ret),ret}Module._TA_Initialize();function throwError(errCode){var retCodeInfo;if(0!==errCode)throw retCodeInfo=Module._malloc(8),TA_SetRetCodeInfo(errCode,retCodeInfo),errCode=ReadStr(retCodeInfo,0)+": "+ReadStr(retCodeInfo,1),Module._free(retCodeInfo),current_func+": "+errCode}var obj={help:function(n){return obj["h_"+n]()},list:[]},TA_GetInputParameterInfo=Module._TA_GetInputParameterInfo,TA_GetOptInputParameterInfo=Module._TA_GetOptInputParameterInfo,TA_GetOutputParameterInfo=Module._TA_GetOutputParameterInfo,TA_ParamHolderAlloc=Module._TA_ParamHolderAlloc,TA_ParamHolderFree=Module._TA_ParamHolderFree,TA_SetInputParamRealPtr=Module._TA_SetInputParamRealPtr,TA_SetInputParamIntegerPtr=Module._TA_SetInputParamIntegerPtr,TA_SetInputParamPricePtr=Module._TA_SetInputParamPricePtr,TA_SetOptInputParamReal=Module._TA_SetOptInputParamReal,TA_SetOptInputParamInteger=Module._TA_SetOptInputParamInteger,TA_SetOutputParamIntegerPtr=Module._TA_SetOutputParamIntegerPtr,TA_SetOutputParamRealPtr=Module._TA_SetOutputParamRealPtr,TA_CallFunc=Module._TA_CallFunc,TA_SetRetCodeInfo=Module._TA_SetRetCodeInfo,current_func="obj",funcCallback=addFunction(function(ptr){var name=ReadStr(ptr,0),group=ReadStr(ptr,1),hint=ReadStr(ptr,2),nbInput=(ReadInt(ptr,4),ReadInt(ptr,5));if(!(1<nbInput&&"OBV"!==name)){for(var nbOptInput=ReadInt(ptr,6),nbOutput=ReadInt(ptr,7),funcHandle=ReadInt(ptr,8),pInfo=Module._malloc(4),inputs=[],optInputs=[],outputs=[],i=0;i<nbInput;i++){throwError(TA_GetInputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);inputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2)})}for(i=0;i<nbOptInput;i++){throwError(TA_GetOptInputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);optInputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2),displayName:ReadStr(ptr,3),defaultValue:ReadDouble(ptr,6),hint:ReadStr(ptr,8)})}for(i=0;i<nbOutput;i++){throwError(TA_GetOutputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);outputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2)})}Module._free(pInfo),obj["h_"+name]=function(){for(var args=[],i=0;i<inputs.length;i++){var type=inputs[i].type,flags=inputs[i].flags,paramName=inputs[i].paramName;1===type?args.push(["Array[Real]",paramName]):2===type?args.push(["Array[Integer]",paramName]):0===type&&(type=[],1&flags&&type.push("Open"),2&flags&&type.push("High"),4&flags&&type.push("Low"),8&flags&&type.push("Close"),16&flags&&type.push("Volume"),32&flags&&type.push("OpenInterest"),64&flags&&type.push("Time"),args.push(["Records["+type.join(",")+"]",paramName]))}for(i=0;i<optInputs.length;i++){var optType="NA";0===optInputs[i].type?optType="RealRange":1===optInputs[i].type?optType="RealList":2===optInputs[i].type?optType="IntegerRange":3===optInputs[i].type&&(optType="IntegerList"),args.push([optType,optInputs[i].paramName,optInputs[i].defaultValue])}for(var rets=[],i=0;i<outputs.length;i++){var outType="Real";1===outputs[i].type&&(outType="Integer"),rets.push([outType,outputs[i].paramName])}return[name,args,rets,hint]},obj.list.push(name);for(var needArg=0,i=0;i<inputs.length;i++){var type=inputs[i].type,flags=inputs[i].flags;(1===type||2===type||0===type&&(1&flags&&needArg++,2&flags&&needArg++,4&flags&&needArg++,8&flags&&needArg++,16&flags))&&needArg++}obj[name]=function(records){var info={handle:funcHandle,name:current_func=name,needArg:needArg,hint:hint,group:group,inputs:inputs,optInputs:optInputs,outputs:outputs};if(void 0===records&&throwError(2),0===records.length){if(0===info.outputs.length)return[];for(var outputArr=[],i=0;i<info.outputs.length;i++)outputArr.push([]);return outputArr}var argPos=0,argv=arguments,moveStep="number"==typeof records[0]?1:0,allocatedParams=(1==moveStep&&arguments.length<info.needArg&&throwError(2),Module._malloc(4)),openPrice=(throwError(TA_ParamHolderAlloc(info.handle,allocatedParams)),null),highPrice=null,lowPrice=null,closePrice=null,volume=null,ints=[],paramsPtr=ReadInt(allocatedParams,0);Module._free(allocatedParams);for(var i=0;i<info.inputs.length;i++){var tmp,type=info.inputs[i].type,flags=info.inputs[i].flags;1===type?(closePrice||(closePrice=GetArr(argv[argPos],"Close"),argPos+=moveStep),throwError(TA_SetInputParamRealPtr(paramsPtr,i,closePrice))):2===type?(tmp=GetArr(argv[argPos],"Close",!0),argPos+=moveStep,ints.push(tmp),throwError(TA_SetInputParamIntegerPtr(paramsPtr,i,tmp))):0===type&&(1&flags&&(openPrice||(openPrice=GetArr(argv[argPos],"Open"),argPos+=moveStep)),2&flags&&(highPrice||(highPrice=GetArr(argv[argPos],"High"),argPos+=moveStep)),4&flags&&(lowPrice||(lowPrice=GetArr(argv[argPos],"Low"),argPos+=moveStep)),8&flags&&(closePrice||(closePrice=GetArr(argv[argPos],"Close"),argPos+=moveStep)),16&flags&&(volume||(volume=GetArr(argv[argPos],"Volume"),argPos+=moveStep)),throwError(TA_SetInputParamPricePtr(paramsPtr,i,openPrice,highPrice,lowPrice,closePrice,volume,null)))}for(0==moveStep&&argPos++,i=0;i<info.optInputs.length;i++)switch(v=argPos+i<arguments.length?arguments[i+argPos]:info.optInputs[i].defaultValue,info.optInputs[i].type){case 0:case 1:TA_SetOptInputParamReal(paramsPtr,i,v);break;case 2:case 3:TA_SetOptInputParamInteger(paramsPtr,i,v);break;default:throw"error"}outputArr=[];for(i=0;i<info.outputs.length;i++){var ptr=null;1===info.outputs[i].type?(ptr=Module._malloc(4*records.length),throwError(TA_SetOutputParamIntegerPtr(paramsPtr,i,ptr))):0===info.outputs[i].type&&(ptr=Module._malloc(8*records.length),throwError(TA_SetOutputParamRealPtr(paramsPtr,i,ptr))),outputArr.push(ptr)}var allocatedParams=Module._malloc(4),outNbElement=Module._malloc(4),beg=(TA_CallFunc(paramsPtr,0,records.length-1,allocatedParams,outNbElement),ReadInt(allocatedParams,0)),num=ReadInt(outNbElement,0),ret=(Module._free(allocatedParams),Module._free(outNbElement),[]);for(i=0;i<info.outputs.length;i++){ptr=outputArr[i];ret[i]=[];for(var v,j=0;j<records.length;j++)j<beg||num<=j-beg?ret[i].push(NaN):(1===info.outputs[i].type?v=ReadInt(ptr,j-beg):0===info.outputs[i].type&&(v=ReadDouble(ptr,2*(j-beg))),ret[i].push(v));Module._free(ptr)}for(throwError(TA_ParamHolderFree(paramsPtr)),openPrice&&Module._free(openPrice),highPrice&&Module._free(highPrice),lowPrice&&Module._free(lowPrice),closePrice&&Module._free(closePrice),volume&&Module._free(volume),i=0;i<ints.length;i++)Module._free(ints[i]);return 1===ret.length?ret[0]:ret}}},"vii");if(0!==ccall("TA_ForEachFunc","number",["pointer","number"],[funcCallback,0]))throw"error";return removeFunction(funcCallback),obj},Module.VMain=function(task){for(var exchanges=[],i=0;i<task.Exchanges.length;i++)exchanges[i]=function(eIdx){var self={},idx=eIdx;return self.cache=[],self.ct="",self.period=task.Options.Period,self.currency=Module.js_Exchange_GetCurrency(eIdx),self.maxBarLen=task.Exchanges[idx].MaxBarLen,self.lastRawJSON="",self.GetName=function(){return Module.js_Exchange_GetName(eIdx)},self.SetData=function(pair,detail){return"string"!=typeof detail&&(detail=JSON.stringify(detail)),Module.js_Exchange_SetData(eIdx,pair,detail)},self.GetPeriod=function(){return self.period/1e3},self.GetCurrency=function(){return self.currency},self.GetLabel=function(){return Module.js_Exchange_GetLabel(eIdx)},self.GetUSDCNY=function(){return Module.js_Exchange_GetUSDCNY(eIdx)},self.GetRate=function(){return Module.js_Exchange_GetRate(eIdx)},self.SetRate=function(n){return Module.js_Exchange_SetRate(eIdx,n=void 0===n?1:n)},self.SetCurrency=function(s){Module.js_Exchange_SetCurrency(eIdx,s),self.currency=Module.js_Exchange_GetCurrency(eIdx)},self.SetBase=function(s){return Module.js_Exchange_SetBase(eIdx,s)},self.GetBase=function(){return Module.js_Exchange_GetBase(eIdx)},self.SetTimeout=function(n){},self.IO=function(k,v){return void 0===v&&(v=1),"currency"==k?self.SetCurrency(v):Module.js_Exchange_IO(eIdx,k,v)},self.SetPrecision=function(a,b){Module.js_Exchange_SetPrecision(eIdx,a,b)},self.SetProxy=function(){},self.GetQuoteCurrency=function(){return Module.js_Exchange_GetQuoteCurrency(eIdx)},self.GetBaseCurrency=function(){return Module.js_Exchange_GetBaseCurrency(eIdx)},self.GetDepth=function(symbol){self.lastRawJSON="";var ret=Module.js_Exchange_GetDepth(eIdx,symbol||"");if(!ret)return null;for(var arr=Vector2Array(ret.Orders),d={Asks:[],Bids:[]},i=0;i<arr.length;i++)(i<ret.AsksLen?d.Asks:d.Bids).push(arr[i]);return d},self.GetTickers=function(){self.lastRawJSON="";var ret=Module.js_Exchange_GetTickers(eIdx);return ret?Vector2Array(ret):null},self.GetMarkets=function(){return JSON.parse(Module.js_Exchange_GetMarkets(eIdx))},self.GetTicker=function(symbol){return self.lastRawJSON="",Module.js_Exchange_GetTicker(eIdx,symbol||"")},self.GetData=function(pair,timeout,offset){"number"!=typeof timeout&&(timeout=6e4),"number"!=typeof offset&&(offset=0),self.lastRawJSON="";pair=Module.js_Exchange_GetData(eIdx,pair,timeout,offset);return 0<pair.Data.length?pair.Data=JSON.parse(pair.Data):pair.Data=null,pair},self.GetTrades=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetTrades(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.SetMaxBarLen=function(n){self.maxBarLen=n},self.GetRecords=function(symbol,period,limit){"number"==typeof symbol?(limit=period,period=symbol,symbol=""):void 0===symbol&&(symbol="",period=-1,limit=0),self.lastRawJSON="";symbol=Module.js_Exchange_GetRecords(eIdx,symbol||"",period=void 0!==period&&-1!=period?period:self.period/1e3,limit="number"!=typeof limit?0:limit);if(!symbol)return null;var records=Vector2Array(symbol),symbol=self.currency+"/"+self.ct+"/"+period.toString();if(void 0===self.cache[symbol])records.length>self.maxBarLen&&(records=records.slice(records.length-self.maxBarLen)),self.cache[symbol]=records;else for(var c=self.cache[symbol],preTime=0<c.length?c[c.length-1].Time:0,i=0;i<records.length;i++)records[i].Time==preTime&&0<c.length?c[c.length-1]=records[i]:records[i].Time>preTime&&(c.push(records[i]),preTime=c[c.length-1].Time,c.length>self.maxBarLen)&&c.shift();let bars=self.cache[symbol];return bars=0<limit&&bars.length>limit?bars.slice(bars.length-limit):bars},self.GetAccount=function(){return self.lastRawJSON="ctpAccount",Module.js_Exchange_GetAccount(eIdx)},self.GetRawJSON=function(){return"ctpAccount"!=self.lastRawJSON?self.lastRawJSON:Module.js_Exchange_GetCTPAccountJSON(eIdx)},self.Buy=function(price,amount){return self.lastRawJSON="",Module.js_Exchange_Buy(eIdx,price,amount,valuesToString(Array.prototype.slice.call(arguments),2))},self.Sell=function(price,amount){return self.lastRawJSON="",Module.js_Exchange_Sell(eIdx,price,amount,valuesToString(Array.prototype.slice.call(arguments),2))},self.CreateOrder=function(symbol,side,price,amount){return self.lastRawJSON="",Module.js_Exchange_CreateOrder(eIdx,symbol,side,price,amount,valuesToString(Array.prototype.slice.call(arguments),4))},self.Log=function(orderType,price,amount){Module.js_Exchange_Log(eIdx,orderType,price,2==orderType?0:amount,valuesToString(Array.prototype.slice.call(arguments),2==orderType?2:3))},self.GetOrders=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetOrders(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.GetHistoryOrders=function(symbol,since,limit){self.lastRawJSON="",void 0===limit&&(limit=0);symbol=Module.js_Exchange_GetHistoryOrders(eIdx,symbol||"",(since=void 0===since?0:since).toString(),limit);return symbol?Vector2Array(symbol):null},self.GetAssets=function(){self.lastRawJSON="";var ret=Module.js_Exchange_GetAssets(eIdx);return ret?Vector2Array(ret):null},self.GetOrder=function(orderId){return self.lastRawJSON="",Module.js_Exchange_GetOrder(eIdx,orderId)},self.CancelOrder=function(orderId){return self.lastRawJSON="",Module.js_Exchange_CancelOrder(eIdx,orderId,valuesToString(Array.prototype.slice.call(arguments),1))},self.SetDirection=function(s){return Module.js_Exchange_SetDirection(eIdx,s)},self.SetMarginLevel=function(symbol,marginLevel){var tmp;return"number"==typeof symbol&&(tmp=marginLevel||"",marginLevel=symbol,symbol=tmp),Module.js_Exchange_SetMarginLevel(eIdx,symbol,marginLevel)},self.SetContractType=function(symbol){var r=Module.js_Exchange_SetContractType(eIdx,symbol);return"string"==typeof r?(self.ct=symbol,JSON.parse(r)):null},self.GetContractType=function(){return self.ct},self.GetPosition=self.GetPositions=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetPositions(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.Go=function(){var args=Array.prototype.slice.call(arguments),ret=self[args[0]].apply(self,args.slice(1));return{wait:function(){return ret}}},self}(i);var gApis={kvdb:{}},__realDate=Date,__cRetryDelay=3e3,runtime=(gApis.RDate=__realDate,gApis.Benchmark=Module.js_Benchmark,gApis._T=function(a,b){return"[trans]"+("string"==typeof b?a+"|"+b:a)+"[/trans]"},gApis._D=function(date,fmt){void 0===fmt&&(fmt="yyyy-MM-dd hh:mm:ss"),"number"==typeof date?date=new __realDate(date):void 0===date&&(date=new __realDate(Module.js_UnixNano()/1e6));var y=date.getFullYear(),yy=(y%100).toString();1==yy.length&&(yy="0"+yy);var M=(M="0"+(date.getMonth()+1)).substring(M.length-2),d=(d="0"+date.getDate()).substring(d.length-2),h=(h="0"+date.getHours()).substring(h.length-2),m=(m="0"+date.getMinutes()).substring(m.length-2),date=(date="0"+date.getSeconds()).substring(date.length-2);return fmt.replace("yyyy",y).replace("MM",M).replace("dd",d).replace("hh",h).replace("mm",m).replace("ss",date).replace("yy",yy)},gApis.Unix=function(){return Module.js_Unix()},gApis.UnixNano=function(){return Module.js_UnixNano()},gApis.Sleep=function(n){Module.js_Sleep(n)},gApis.Log=function(){Module.js_Log(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogError=function(){Module.js_LogError(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogStatus=function(){Module.js_LogStatus(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogProfit=function(profit){Module.js_LogProfit(profit,valuesToString(Array.prototype.slice.call(arguments),1))},gApis.LogReset=function(keep){Module.js_LogReset(keep=void 0===keep?0:keep)},gApis.EnableLog=function(flag){Module.js_EnableLog(flag=void 0===flag?!0:flag)},gApis.LogProfitReset=function(keep){Module.js_LogProfitReset(keep=void 0===keep?0:keep)},gApis.Date=function(s){return void 0===s&&(s=Module.js_UnixNano()/1e6),new __realDate(s)},gApis.Date.UTC=__realDate.UTC,gApis.Date.parse=__realDate.parse,gApis.Date.now=function(){return Module.js_UnixNano()/1e6},gApis._Cross=function(arr1,arr2){if(arr1.length!==arr2.length)throw"cross array length not equal";for(var n=0,i=arr1.length-1;0<=i&&"number"==typeof arr1[i]&&"number"==typeof arr2[i];i--)if(arr1[i]<arr2[i]){if(0<n)break;n--}else{if(!(arr1[i]>arr2[i]))break;if(n<0)break;n++}return n},gApis._N=function(v,precision){"number"!=typeof precision&&(precision=4);var v=parseFloat(v.toFixed(Math.max(10,precision+5))),s=toNonExponential(v).split(".");return!(0<=precision&&(s.length<2||s[1].length<=precision))&&((s=v<0)&&(v=-v),precision=Math.pow(10,precision),v=Math.floor(v*precision)/precision,s)&&0!=v?-v:v},gApis._C=function(method){for(var r;!(r=method.apply(this,Array.prototype.slice.call(arguments).slice(1)));)gApis.Sleep(__cRetryDelay);return r},gApis._CDelay=function(n){0<n&&(__cRetryDelay=n)},gApis.GetPid=function(){return 1},gApis.GetOS=function(){return"linux/amd64"},gApis.GetLastError=function(){return Module.js_GetLastError()},gApis.SetErrorFilter=function(s){},gApis.MD5=function(s){return Module.js_MD5(s)},gApis.UUID=function(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)},gApis.GetCommand=function(){return""},gApis.GetMeta=function(){return""},gApis.Mail=function(){return!0},gApis.Mail_Go=function(){return!0},gApis.EventLoop=function(){gApis.LogError("sandbox not support EventLoop")},gApis.Dial=function(){gApis.LogError("sandbox not support Dial")},gApis.DBExec=function(){gApis.LogError("sandbox not support DBExec")},gApis.Encode=function(){gApis.LogError("sandbox not support Encode")},gApis.HttpQuery=function(url,data,cookies,headers,isReturnHeader,isAsync){null==cookies&&(cookies=""),null==headers&&(headers=""),void 0===isReturnHeader&&(isReturnHeader=!1);var ret=Module.js_HttpQuery(url);return isAsync?{wait:function(){return ret}}:ret},gApis.JSONParse=function(s){return JSON.parse(s)},gApis.StrDecode=function(s){gApis.LogError("sandbox not support StrDecode")},gApis.IsVirtual=function(){return!0},gApis.EnableLogLocal=function(){},gApis.LogVacuum=function(){},gApis.Version=function(){return"3.6"},gApis._G=function(k,v){if(void 0===k)return 1;if(null==k)gApis.kvdb={};else{if(k=k.toLowerCase(),void 0===v)return void 0===gApis.kvdb[k]?null:gApis.kvdb[k];null==v?delete gApis.kvdb[k]:gApis.kvdb[k]=v}},gApis.Chart=function(js){var self={update:function(cfg){Module.js_Chart_New(utf8_encode(JSON.stringify(cfg)))},add:function(seriesIdx,d,replaceId){var arr=[];"number"!=typeof seriesIdx?arr=seriesIdx:(arr=[seriesIdx,d],void 0!==replaceId&&arr.push(replaceId)),Module.js_Chart_Add(utf8_encode(JSON.stringify(arr)))},reset:function(reverse){Module.js_Chart_Reset("number"!=typeof reverse?0:reverse)}};return self.update(js),self},gApis.KLineChart=function(options){(options=void 0===options?{}:options).__isCandle=!0;function newPlot(shape){return void 0===shape.overlay&&(shape.overlay=scope.overlay),"shape"!=shape.type&&"bgcolor"!=shape.type&&"barcolor"!=shape.type&&(shape.title&&!scope.runtime.titles[shape.title]||(shape.title="<"+(shape.title||"plot")+"_"+scope.runtime.count.toString()+">"),scope.runtime.count+=1,shape.title)&&(scope.runtime.titles[shape.title]=!0),shape}var scope={chart:gApis.Chart(options),bar:{},overlay:options.overlay||!1,preTime:0,runtime:{plots:[],signals:[],titles:{},count:0}};return scope.register=function(name,args,pfn){var dic={},names=[];args.forEach(function(s,i){Array.isArray(s)?(names.push(s[0]),dic[s[0]]={pos:i,val:s[1]}):(names.push(s),dic[s]={pos:i})}),scope[name]=function(){if(!(scope.bar.Time<scope.preTime)){var argv={};for(k in dic)void 0!==dic[k].val&&(argv[k]=dic[k].val);for(var i=0;i<arguments.length;i++)if(i==arguments.length-1&&"object"==typeof arguments[i])for(var k in arguments[i])void 0!==dic[k]&&(argv[k]=arguments[i][k]);else void 0!==dic[names[i]]&&(argv[names[i]]=arguments[i]);return pfn(argv)}}},scope.begin=function(bar){scope.bar=bar},scope.reset=function(remain){scope.chart.reset(remain),scope.preTime=0},scope.close=function(){var data;scope.bar.Time<scope.preTime||(data={timestamp:scope.bar.Time,open:scope.bar.Open,high:scope.bar.High,low:scope.bar.Low,close:scope.bar.Close,volume:scope.bar.Volume},0<scope.runtime.plots.length&&(data.runtime||(data.runtime={}),data.runtime.plots=scope.runtime.plots),0<scope.runtime.signals.length&&(data.runtime||(data.runtime={}),data.runtime.signals=scope.runtime.signals),scope.preTime==scope.bar.Time?scope.chart.add(0,data,-1):scope.chart.add(0,data),scope.preTime=scope.bar.Time,scope.runtime.plots=[],scope.runtime.signals=[],scope.runtime.titles={},scope.runtime.count=0)},scope.register("plot",[["series",NaN],"title","color","linewidth",["style","line"],"trackprice",["histbase",0],["offset",0],["join",!1],"editable","show_last",["display","all"],"overlay"],function(argv,idx){if(!isNaN(argv.series))return scope.runtime.plots.push(newPlot({series:argv.series,overlay:argv.overlay,title:argv.title,join:argv.join,color:argv.color,histbase:argv.histbase,type:argv.style,lineWidth:argv.linewidth,display:argv.display,offset:argv.offset})),scope.runtime.plots.length-1}),scope.register("barcolor",["color","offset","editable","show_last","title",["display","all"]],function(argv,idx){"string"==typeof argv.color&&"all"==argv.display&&scope.runtime.plots.push({type:"barcolor",title:argv.title,color:argv.color,offset:argv.offset,showLast:argv.show_last,display:argv.display})}),scope.register("plotarrow",["series","title",["colorup","#00ff00"],["colordown","#ff0000"],["offset",0],["minheight",5],["maxheight",100],["editable",!0],"show_last",["display","all"],"overlay"],function(argv){"all"!=argv.display||isNaN(argv.series)||scope.runtime.plots.push(newPlot({series:argv.series,title:argv.title,colorup:argv.colorup,colordown:argv.colordown,offset:argv.offset,minheight:argv.minheight,maxheight:argv.maxheight,showLast:argv.show_last,type:"shape",style:"arrow",display:argv.display,overlay:argv.overlay}))}),scope.register("hline",["price","title","color",["linestyle","dashed"],"linewidth","editable",["display","all"],"overlay"],function(argv){return scope.runtime.plots.push(newPlot({title:argv.title,price:argv.price,overlay:argv.overlay,color:argv.color,type:"hline",lineStyle:argv.linestyle,lineWidth:argv.linewidth,display:argv.display})),scope.runtime.plots.length-1}),scope.register("bgcolor",["color","offset","editable","show_last","title",["display","all"],"overlay"],function(argv){"string"==typeof argv.color&&"all"==argv.display&&scope.runtime.plots.push(newPlot({title:argv.title,overlay:argv.overlay,color:argv.color,type:"bgcolor",showLast:argv.show_last,offset:argv.offset}))}),scope.register("plotchar",["series","title","char",["location","abovebar"],"color","offset","text","textcolor","editable",["size","auto"],"show_last","display","overlay"],function(argv){"absolute"!=argv.location&&!argv.series||"absolute"==argv.location&&isNaN(argv.series)||!argv.char||scope.runtime.plots.push(newPlot({overlay:argv.overlay,type:"shape",style:"char",char:argv.char,series:argv.series,location:argv.location,color:argv.color,offset:argv.offset,size:argv.size,text:argv.text,textColor:argv.textcolor}))}),scope.register("plotshape",["series","title","style",["location","abovebar"],"color","offset","text","textcolor","editable",["size","auto"],"show_last","display","overlay"],function(argv){"absolute"!=argv.location&&!argv.series||"absolute"==argv.location&&isNaN(argv.series)||scope.runtime.plots.push(newPlot({type:"shape",overlay:argv.overlay,title:argv.title,size:argv.size,style:argv.style,series:argv.series,location:argv.location,color:argv.color,offset:argv.offset,text:argv.text,textColor:argv.textcolor}))}),scope.register("plotcandle",["open","high","low","close","title","color","wickcolor","editable","show_last","bordercolor",["display","all"],"overlay"],function(argv){"all"==argv.display&&scope.runtime.plots.push(newPlot({price:argv.high,open:argv.open,high:argv.high,low:argv.low,close:argv.close,title:argv.title,color:argv.color,wickColor:argv.wickcolor,showLast:argv.show_last,borderColor:argv.bordercolor,type:"candle",display:argv.display,overlay:argv.overlay}))}),scope.register("fill",["plot1","plot2","color","title","editable","show_last","fillgaps",["display","all"]],function(argv){var dst;0<=argv.plot1&&0<=argv.plot2&&argv.plot1<scope.runtime.plots.length&&argv.plot2<scope.runtime.plots.length&&"all"==argv.display&&void 0!==(dst=scope.runtime.plots[argv.plot1])&&(void 0===dst.fill&&(dst.fill=[]),dst.fill.push({value:scope.runtime.plots[argv.plot2].series,color:argv.color,showLast:argv.show_last}))}),scope.register("signal",["direction","price","qty","id"],function(argv){var task={id:argv.id||argv.direction,qty:argv.qty,avgPrice:argv.price};"buy"==argv.direction||"long"==argv.direction?task.direction="long":"sell"==argv.direction||"short"==argv.direction?task.direction="short":"closesell"==argv.direction||"closeshort"==argv.direction?(task.direction="close",task.closeDirection="short"):"closebuy"!=argv.direction&&"closelong"!=argv.direction||(task.direction="close",task.closeDirection="long"),(task.direction||task.closeDirection)&&scope.runtime.signals.push(task)}),scope},gApis.$={},gApis.ORDER_STATE_PENDING=0,gApis.ORDER_STATE_CLOSED=1,gApis.ORDER_STATE_CANCELED=2,gApis.ORDER_STATE_UNKNOWN=3,gApis.ORDER_TYPE_BUY=0,gApis.ORDER_TYPE_SELL=1,gApis.ORDER_OFFSET_OPEN=0,gApis.ORDER_OFFSET_CLOSE=1,gApis.PD_LONG=0,gApis.PD_SHORT=1,gApis.PD_LONG_YD=2,gApis.PD_SHORT_YD=3,gApis.LOG_TYPE_BUY=0,gApis.LOG_TYPE_SELL=1,gApis.LOG_TYPE_CANCEL=2,gApis.LOG_TYPE_ERROR=3,gApis.LOG_TYPE_PROFIT=4,gApis.LOG_TYPE_LOG=5,gApis.LOG_TYPE_RESTART=6,gApis.PERIOD_M1=60,gApis.PERIOD_M3=180,gApis.PERIOD_M5=300,gApis.PERIOD_M15=900,gApis.PERIOD_M30=1800,gApis.PERIOD_H1=3600,gApis.PERIOD_H2=7200,gApis.PERIOD_H4=14400,gApis.PERIOD_H6=21600,gApis.PERIOD_H12=43200,gApis.PERIOD_D1=86400,gApis.PERIOD_D3=259200,gApis.PERIOD_W1=604800,gApis.exchanges=exchanges,gApis.exchange=exchanges[0],gApis.talib=Module.talib(),gApis.TA=TAInstance(function(name){Module.js_LogTA(name,valuesToString(Array.prototype.slice.call(arguments),1,","))}),null),getMapLines=(gApis.__runtime__=function(obj){runtime=obj},function(source){var endPos,rawTxt,mapLinesPos=source.indexOf("//# sourceMappingObj=");return-1!=mapLinesPos?(rawTxt="",rawTxt=-1==(endPos=source.indexOf("\n",mapLinesPos+1))?source.slice(mapLinesPos+"//# sourceMappingObj=".length):source.slice(mapLinesPos+"//# sourceMappingObj=".length,endPos),JSON.parse(rawTxt)):[]}),countLines=function(s){for(var count=1,i=0;i<s.length;i++)"\n"==s[i]&&count++;return count},tpls=task.Code,scope={},k;for(k in gApis)scope[k]=gApis[k];for(var fullSource="",sourceMapObj=[],i=0;i<tpls.length;i++){var tpl=tpls[i],argsLine="",argDic={},suffix=(tpl[1].forEach(function(pair){argsLine+="var "+pair[0]+" = "+JSON.stringify(pair[1])+";",argDic[pair[0]]=pair[1]}),argsLine+="var __arguments = "+JSON.stringify(argDic)+";","\n;if(typeof(init)==='function')init();"),fileName=tpl[2];if(i==tpls.length-1){if(fileName="__FILE__",void 0!==Module.__ret__){scope.__arguments=argDic,tpl[1].forEach(function(pair){scope[pair[0]]=pair[1]}),Module.__ret__.scope=scope,Module.__ret__.Join=Module.js_Join;continue}suffix+=";;main()\nif(typeof(onexit)==='function'){onexit()}"}sourceMapObj.push({baseLine:countLines(fullSource),codeLine:countLines(tpl[0]),fileName:fileName,mapLines:getMapLines(tpl[0])}),fullSource+="(function(){"+argsLine+tpl[0]+suffix+"})();\n"}var evalScope=function(locals,source){with(locals)eval(source)},errMsg,stacks;try{evalScope(scope,fullSource)}catch(err){"EOF"!=err&&(errMsg=err.toString(),stacks=[errMsg],-1==errMsg.indexOf("line:")&&err.stack&&(console.log("\nStacktrace:"),console.log("===================="),console.log(err.stack),err.stack.split("\n").forEach(function(stackLine){var posSearch=stackLine.indexOf("(eval at evalScope ");if(0<posSearch){var pos=stackLine.indexOf("<anonymous>:",posSearch),posSearch=(0<pos&&(e=stackLine.indexOf(")",pos)),stackLine.substring(0,posSearch).split("\n")),stackLine=stackLine.substring(pos+"<anonymous>:".length,e).split(":");if(0<stackLine.length){for(var vLine=parseInt(stackLine[0]),fileName=null,mapLines=[],pIndex=0;pIndex<sourceMapObj.length;pIndex++)if(vLine>=sourceMapObj[pIndex].baseLine&&vLine<sourceMapObj[pIndex].baseLine+sourceMapObj[pIndex].codeLine){fileName=sourceMapObj[pIndex].fileName,mapLines=sourceMapObj[pIndex].mapLines,vLine-=sourceMapObj[pIndex].baseLine-1;break}if(fileName){for(var pItem=0;pItem<mapLines.length;pItem++)if(vLine>=mapLines[pItem][0]&&vLine<=mapLines[pItem][1]){vLine-=mapLines[pItem][2];break}stacks.push(posSearch[posSearch.length-1]+"("+fileName+":"+vLine.toString()+")")}}}})),Module.js_LogError(valuesToString([stacks.join("\n")])))}try{void 0!==task.Step&&task.Step||Module.js_Close(JSON.stringify(runtime))}catch(e){}},Module.VTask=function(task,httpCache,httpGet,callBack,onEnd,retScope){void 0!==retScope&&(Module.__ret__=retScope),void 0!==httpCache&&httpCache||(httpCache={});var retScope=addFunction(function(a,b,c,d){var jsString,a=UTF8ToString(a),a=(void 0!==httpCache[a]?jsString=httpCache[a]:(jsString=httpGet(a),httpCache[a]=jsString),lengthBytesUTF8(jsString)+1),ptr=_malloc(a);return stringToUTF8(jsString,ptr,a+1),setValue(b,ptr,"i32"),setValue(c,a,"i32"),setValue(d,1,"i32"),0},"iiiii"),progressCallback=addFunction(function(st){callBack(JSON.parse(UTF8ToString(st)))},"vi");ccall("backtest","number",["string","string","pointer","pointer"],[JSON.stringify(task),null,retScope,progressCallback]),"function"==typeof onEnd&&onEnd()},moduleArg}})(),fs,os,process,_,math,Decimal,crypto,httpGet,_session,toUnix,fmtTime,toHTML,pdObj,htmlResult,__m;function md5(text){return crypto.createHash("md5").update(text).digest("hex")}function notify(msgType,msg){var msg=Buffer.from(msg),h=Buffer.allocUnsafe(8);h.writeUInt32BE(msgType,0),h.writeUInt32BE(msg.length,4),_session.write(Buffer.concat([h,msg]))}"object"==typeof exports&&"object"==typeof module?module.exports=VBacktest:"function"==typeof define&&define.amd&&define([],()=>VBacktest),"undefined"!=typeof self&&void 0!==self.onmessage?self.onmessage=function(event){var event=event.data,task=event[0],httpCache=event[1],lastProgress=0,lastSummary="";void 0===VBacktest&&importScripts("env.js","decimal.min.js","underscore-min.js","math.min.js",-1==task.Engine.indexOf("wasm")?"sandbox_cpp.js":"sandbox_cpp_wasm.js"),VBacktest().VTask(task,httpCache,function(path){var r=XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");return r.open("GET",path,!1),r.send(null),r.responseText},function(st){var nowProgress;void 0!==st.TaskStatus&&1==st.TaskStatus&&(st.httpCache=httpCache),1==st.TaskStatus?self.postMessage({ret:st}):(nowProgress=st.Progress.toFixed(1))==lastProgress&&lastSummary===st.statusStr||(lastProgress=nowProgress,lastSummary=st.statusStr,self.postMessage({ret:st}))})}:(fs=require("fs"),os=require("os"),process=require("process"),_=this._,math=this.math,Decimal=this.Decimal,crypto=require("crypto"),httpGet=function(url){var tmpCache=os.tmpdir()+"/cache",tmpCache=(fs.existsSync(tmpCache)||fs.mkdirSync(tmpCache),tmpCache+"/botvs_kline_"+md5(url));return fs.existsSync(tmpCache)?fs.readFileSync(tmpCache,"utf-8"):((url=require("sync-request")("GET",url).getBody("utf8"))&&-1!==url.indexOf(",")&&fs.writeFileSync(tmpCache,url,"utf-8"),url)},"undefined"!=typeof s?(_session=s,VBacktest().VTask(__cfg__,null,httpGet,function(st){notify(st.TaskStatus,JSON.stringify(st))},function(){try{_session.end()}catch(e){}})):(toUnix=function(s){var n=parseInt(new Date(s).getTime()/1e3);return-1==s.indexOf(" ")&&(n-=28800),n},fmtTime=function(date,fmt){void 0===fmt&&(fmt="yyyy-MM-dd hh:mm:ss");var y=date.getFullYear(),yy=(y%100).toString();1==yy.length&&(yy="0"+yy);var M=(M="0"+(date.getMonth()+1)).substring(M.length-2),d=(d="0"+date.getDate()).substring(d.length-2),h=(h="0"+date.getHours()).substring(h.length-2),m=(m="0"+date.getMinutes()).substring(m.length-2),date=(date="0"+date.getSeconds()).substring(date.length-2);return fmt.replace("yyyy",y).replace("MM",M).replace("dd",d).replace("hh",h).replace("mm",m).replace("ss",date).replace("yy",yy)},toHTML=function(data){var html="<table><tr><td>";for(i in data.columns)html+="<td>"+data.columns[i]+"</td>";html+="</tr>";for(var rows=[],i=0;i<data.rows.length;i++){for(var rowSkip="",row=(5<=i&&i<data.rows.length-5&&(i=data.rows.length-5,rowSkip="<tr><td>...</td>"),"<tr><td>"+data.index[i]+"</td>"),j=0;j<data.columns.length;j++)0<rowSkip.length&&(rowSkip+="<td>...</td>"),row+="<td>"+data.rows[i][j]+"</td>";0<rowSkip.length&&rows.push(rowSkip+"</tr>"),rows.push(row+"</tr>")}return html=(html+=rows.join("")+"</table>")+("<p>"+data.rows.length+" rows x "+data.columns.length+" columns<p>")},pdObj=function(data){var p=this;p.index=data.index,p.columns=data.columns,data.columns.forEach(function(c){p[c]=[]}),data.rows.forEach(function(row){row.forEach(function(f,idx){idx<data.columns.length&&p[data.columns[idx]].push(f)})}),p._toHtml=function(){return toHTML(data)}},__ctx.exports.get_bars=function(symbol,unit,start,end,count){void 0===count&&(count=1e3),"string"==typeof(unit=void 0===unit?"1d":unit)&&(ec=unit[unit.length-1],unit=parseInt(unit.slice(0,unit.length-1)),"d"==ec?unit*=1440:"h"==ec?unit*=60:"s"==ec&&(unit/=60));var key,ec=parseInt((new Date).getTime()/1e3),params=(void 0!==end&&(ec=toUnix(end)),void 0!==start?(ts_from=toUnix(start),void 0===end&&(ec=ts_from+100*unit*(count+10))):void 0===end?(ts_from=0,ts_end=0):ts_from=ec-100*unit*(count+10),{symbol:symbol,resolution:unit,from:ts_from,to:ec,size:count}),arr=[];for(key in params)arr.push(encodeURIComponent(key)+"="+encodeURIComponent(params[key]));for(var data=JSON.parse(httpGet("https://q.fmz.com/chart/history?"+arr.join("&"))),rows=[],index=[],i=0;i<data.length;i++)index.push(fmtTime(new Date(1e3*data[i][0]))),rows.push(data[i].slice(1,data[i].length));return new pdObj({index:index,rows:rows,columns:["open","high","low","close","volume"]})},htmlResult=function(s){var s=JSON.parse(s),pnl=[],index=[],symbol="",eid="",pt=["Long","Short"],balanceName="stocks";return s.Snapshots.forEach(function(ele){var acc=ele[1][0],close=NaN,balance=(eid=acc.Id,acc.Balance+acc.FrozenBalance),stocks=acc.Stocks+acc.FrozenStocks,symbols=acc.Symbols,commission=acc.Commission||0;if("Futures_CTP"==eid||"Futures_XTP"==eid){if(balanceName="balance",symbols)for(var s in symbols){var pos=symbols[s];for(t in pt)void 0!==pos[pt[t]]&&(balance+=pos[pt[t]].Margin+pos[pt[t]].Profit)}pnl.push([acc.Balance+acc.FrozenBalance,commission,balance])}else if(0==eid.indexOf("Futures_")){var marginNet=0,asset=0;if(symbols)for(var s in symbols){var t,pos=symbols[s];for(t in pt)void 0!==pos[pt[t]]&&(marginNet+=pos[pt[t]].Margin+pos[pt[t]].Profit)}asset="USDT"==acc.QuoteCurrency?(balanceName="USDT",balance):(balanceName=acc.BaseCurrency,stocks),pnl.push([asset,commission,asset+marginNet])}else{if(""==symbol&&symbols)for(var s in symbols){symbol=s;break}""!=symbol&&(close=symbols[symbol].Last),pnl.push([close,balance,stocks,commission,balance+stocks*close])}index.push(fmtTime(new Date(ele[0])))}),columns=["close","balance","stocks","fee","net"],0==eid.indexOf("Futures_")&&(columns=[balanceName,"fee","net"]),new pdObj({columns:columns,index:index,rows:pnl})},__m=VBacktest(),void 0===global.talib&&(global.talib=__m.talib(),global.TA=__m.TA,global.plot=function(data,layout){void 0!==data.index&&void 0!==data.columns&&(arr=[],data.columns.forEach(function(c){arr.push({name:c,x:data.index,y:data[c]})}),data=arr),Array.isArray(data)&&0<data.length&&"number"==typeof data[0]&&(obj={x:[],y:data},data.forEach(function(ele,idx){obj.x.push(idx+1)}),data=[obj]),void 0===layout&&(layout={});var arr,obj,timestamp=(new Date).getTime(),timestamp=["<div class='plotly-plot'>","<div id='notebook-plot-"+timestamp+"'></div>","<script>","function plot(){","Plotly.plot('notebook-plot-"+timestamp+"',",JSON.stringify(data),",",JSON.stringify(layout),",",JSON.stringify({displaylogo:!1}),");","}","if(window.Plotly){","plot();","}else{","var head = document.head || document.getElementsByTagName('head')[0];","var s = document.createElement('script');","s.charset='utf-8';","s.src = 'https://www.fmz.com/pkg/plotly-latest.min.js';","s.type = 'text/javascript';","s.async = false;","s.onreadystatechange = s.onload = plot;","head.appendChild(s);","}","<\/script>","</div>"].join("");$$.html(timestamp)}),__ctx.exports.VCtx=function(obj){function periodToMs(s,def){var tmp;return s.length<2||(tmp=parseInt(s.slice(0,s.length-1)),"d"==(s=s[s.length-1])?def=6e4*tmp*60*24:"m"==s?def=6e4*tmp:"h"==s&&(def=36e4*tmp)),def}function dicGet(obj,k,v){return void 0!==obj[k]?obj[k]:v}var k,period=periodToMs(obj.period,36e5),basePeriod=36e5,exchanges=("string"==typeof obj.basePeriod?basePeriod=periodToMs(obj.basePeriod,basePeriod):864e5==period?basePeriod=36e5:36e5==period?basePeriod=18e5:18e5==period?basePeriod=9e5:9e5==period?basePeriod=3e5:3e5==period&&(basePeriod=6e4),[]),feeDef={Huobi:[150,200],OKX:[150,200],Binance:[150,200],Futures_BitMEX:[8,10],Futures_OKX:[30,30],Futures_HuobiDM:[30,30],Futures_CTP:[25,25],Futures_XTP:[30,130]},isCNY=!1,period=(obj.exchanges.forEach(function(e){var arr=e.currency.toUpperCase().split("_"),fee=(1==arr.length&&arr.push(-1!=e.eid.indexOf("CTP")?"CNY":"USD"),[200,200]),v=e.fee,fee=void 0!==v?[1e3*v[0],1e3*v[1]]:feeDef[e.eid]||[200,200];cfg={Balance:dicGet(e,"balance",1e4),BaseCurrency:arr[0],BasePeriod:basePeriod,DepthDeep:5,DepthAmount:20,FaultTolerant:0,PreBarLen:1e3,FeeDenominator:5,FeeMaker:fee[0],FeeTaker:fee[1],FeeMin:dicGet(e,"feeMin",0),Id:e.eid,Label:e.eid,QuoteCurrency:arr[1],SlipPoint:0,Stocks:dicGet(e,"stocks",3)},"Futures_CTP"==e.eid||"Futures_XTP"==e.eid?(cfg.DepthDeep=1,isCNY=!0):"Futures_OKX"!=e.eid&&"Futures_HuobiDM"!=e.eid&&"Bitfinex"!=e.eid&&"Binance"!=e.eid&&("Futures_BitMEX"==e.eid?15!=(v=cfg.BasePeriod/6e4)&&30!=v||(cfg.BasePeriod=3e5):e.eid.indexOf("Futures")),exchanges.push(cfg)}),(options={DataServer:obj.dataServer||(isCNY?"https://q.youquant.com":"https://q.fmz.com"),MaxChartLogs:800,MaxProfitLogs:800,MaxRuntimeLogs:800,NetDelay:200,Period:period,RetFlags:189,UpdatePeriod:5e3}).TimeBegin=toUnix(obj.start),options.TimeEnd=toUnix(obj.end),86400),obj=options.TimeEnd-options.TimeBegin,ctx=(obj/3600<=2?period=60:obj/86400<=2?period=300:obj/86400<30&&(period=3600),options.SnapshotPeriod=1e3*period,options.RetFlags|=256,{});for(k in __m.VTask({Code:[["function main() {}",[],"main"]],Exchanges:exchanges,Options:options,Step:!0},null,httpGet,function(st){},function(){},ctx),ctx.scope)"Date"!=k&&(global[k]=ctx.scope[k]);var realJoin=ctx.Join;return ctx.Join=function(report){var r=realJoin();return report?htmlResult(r):r},ctx}));