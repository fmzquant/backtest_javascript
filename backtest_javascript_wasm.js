"undefined"==typeof __ctx&&(__ctx={}),__ctx.INITIAL_MEMORY=335544320,"undefined"!=typeof module&&(__ctx.module=module),"undefined"!=typeof exports&&(__ctx.exports=exports),"undefined"==typeof module&&"undefined"==typeof exports||(module=void 0,exports=void 0,print=console.log),!function(n){"use strict";function e(n){var e,i,t,r=n.length-1,s="",o=n[0];if(0<r){for(s+=o,e=1;e<r;e++)t=n[e]+"",(i=Sn-t.length)&&(s+=l(i)),s+=t;o=n[e],(i=Sn-(t=o+"").length)&&(s+=l(i))}else if(0===o)return"0";for(;o%10==0;)o/=10;return s+o}function i(n,e,i){if(n!==~~n||n<e||i<n)throw Error(yn+n)}function t(n,e,i,t){for(var r,u,s=n[0];10<=s;s/=10)--e;return--e<0?(e+=Sn,r=0):(r=Math.ceil((e+1)/Sn),e%=Sn),s=qn(10,Sn-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),i<4&&99999==u||3<i&&49999==u||5e4==u||0==u):(i<4&&u+1==s||3<i&&u+1==s/2)&&(n[r+1]/s/100|0)==qn(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),(t||i<4)&&9999==u||!t&&3<i&&4999==u):((t||i<4)&&u+1==s||!t&&3<i&&u+1==s/2)&&(n[r+1]/s/1e3|0)==qn(10,e-3)-1}function r(n,e,i){for(var t,r,s=[0],o=0,u=n.length;o<u;){for(r=s.length;r--;)s[r]*=e;for(s[0]+=mn.indexOf(n.charAt(o++)),t=0;t<s.length;t++)i-1<s[t]&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i)}return s.reverse()}function o(n,e,i,t){var r,s,o,u,c,h,a,l,d=n.constructor;n:if(null!=e){if(!(a=n.d))return n;for(r=1,u=a[0];10<=u;u/=10)r++;if((s=e-r)<0)s+=Sn,o=e,c=(h=a[l=0])/qn(10,r-o-1)%10|0;else if(l=Math.ceil((s+1)/Sn),(u=a.length)<=l){if(!t)break n;for(;u++<=l;)a.push(0);h=c=0,o=(s%=Sn)-Sn+(r=1)}else{for(h=u=a[l],r=1;10<=u;u/=10)r++;c=(o=(s%=Sn)-Sn+r)<0?0:h/qn(10,r-o-1)%10|0}if(t=t||e<0||void 0!==a[l+1]||(o<0?h:h%qn(10,r-o-1)),c=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):5<c||5==c&&(4==i||t||6==i&&(0<s?0<o?h/qn(10,r-o):0:a[l-1])%10&1||i==(n.s<0?8:7)),e<1||!a[0])return a.length=0,c?(e-=n.e+1,a[0]=qn(10,(Sn-e%Sn)%Sn),n.e=-e||0):a[0]=n.e=0,n;if(0==s?(a.length=l,u=1,l--):(a.length=l+1,u=qn(10,Sn-s),a[l]=0<o?(h/qn(10,r-o)%qn(10,o)|0)*u:0),c)for(;;){if(0==l){for(s=1,o=a[0];10<=o;o/=10)s++;for(o=a[0]+=u,u=1;10<=o;o/=10)u++;s!=u&&(n.e++,a[0]==Rn)&&(a[0]=1);break}if(a[l]+=u,a[l]!=Rn)break;a[l--]=0,u=1}for(s=a.length;0===a[--s];)a.pop()}return En&&(n.e>d.maxE?(n.d=null,n.e=NaN):n.e<d.minE&&(n.e=0,n.d=[0])),n}function u(n,i,t){var r,s,o,u;return n.isFinite()?(s=n.e,u=(o=e(n.d)).length,i?(t&&0<(r=t-u)?o=o.charAt(0)+"."+o.slice(1)+l(r):1<u&&(o=o.charAt(0)+"."+o.slice(1)),o=o+(n.e<0?"e":"e+")+n.e):s<0?(o="0."+l(-s-1)+o,t&&0<(r=t-u)&&(o+=l(r))):u<=s?(o+=l(s+1-u),t&&0<(r=t-s-1)&&(o=o+"."+l(r))):((r=s+1)<u&&(o=o.slice(0,r)+"."+o.slice(r)),t&&0<(r=t-u)&&(s+1===u&&(o+="."),o+=l(r))),o):v(n)}function c(n,e){for(var i=1,t=n[0];10<=t;t/=10)i++;return i+e*Sn-1}function f(n,e,i){if(Un<e)throw En=!0,i&&(n.precision=i),Error(An);return o(new n(vn),e,1,!0)}function h(n,e,i){if(_n<e)throw Error(An);return o(new n(Nn),e,i,!0)}function a(n){var e=n.length-1,i=e*Sn+1;if(e=n[e]){for(;e%10==0;e/=10)i--;for(e=n[0];10<=e;e/=10)i++}return i}function l(n){for(var e="";n--;)e+="0";return e}function d(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/Sn+4);for(En=!1;;){if(i%2&&A((s=s.times(e)).d,o)&&(r=!0),0===(i=On(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break}A((e=e.times(e)).d,o)}return En=!0,s}function g(n){return 1&n.d[n.d.length-1]}function p(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break}r[i](t)&&(r=t)}return r}function w(n,i){var r,s,u,c,f,h,a,l=0,d=0,g=0,p=n.constructor,w=p.rounding,m=p.precision;if(!n.d||!n.d[0]||17<n.e)return new p(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(a=null==i?(En=!1,m):i,h=new p(.03125);-2<n.e;)n=n.times(h),g+=5;for(a+=s=Math.log(qn(2,g))/Math.LN10*2+5|0,r=c=f=new p(1),p.precision=a;;){if(c=o(c.times(n),a,1),r=r.times(++d),e((h=f.plus(Tn(c,r,a,1))).d).slice(0,a)===e(f.d).slice(0,a)){for(u=g;u--;)f=o(f.times(f),a,1);if(null!=i)return p.precision=m,f;if(!(l<3&&t(f.d,a-s,w,l)))return o(f,p.precision=m,w,En=!0);p.precision=a+=10,r=c=h=new p(1),d=0,l++}f=h}}function m(n,i){var r,s,u,c,h,a,l,d,g,p,w,v=1,x=n,b=x.d,E=x.constructor,M=E.rounding,y=E.precision;if(x.s<0||!b||!b[0]||!x.e&&1==b[0]&&1==b.length)return new E(b&&!b[0]?-1/0:1!=x.s?NaN:b?0:x);if(g=null==i?(En=!1,y):i,E.precision=g+=10,s=(r=e(b)).charAt(0),!(Math.abs(c=x.e)<15e14))return d=f(E,g+2,y).times(c+""),x=m(new E(s+"."+r.slice(1)),g-10).plus(d),E.precision=y,null==i?o(x,y,M,En=!0):x;for(;s<7&&1!=s||1==s&&3<r.charAt(1);)s=(r=e((x=x.times(n)).d)).charAt(0),v++;for(c=x.e,1<s?(x=new E("0."+r),c++):x=new E(s+"."+r.slice(1)),l=h=x=Tn((p=x).minus(1),x.plus(1),g,1),w=o(x.times(x),g,1),u=3;;){if(h=o(h.times(w),g,1),e((d=l.plus(Tn(h,new E(u),g,1))).d).slice(0,g)===e(l.d).slice(0,g)){if(l=l.times(2),0!==c&&(l=l.plus(f(E,g+2,y).times(c+""))),l=Tn(l,new E(v),g,1),null!=i)return E.precision=y,l;if(!t(l.d,g-10,M,a))return o(l,E.precision=y,M,En=!0);E.precision=g+=10,d=h=x=Tn(p.minus(1),p.plus(1),g,1),w=o(x.times(x),g,1),u=a=1}l=d,u+=2}}function v(n){return String(n.s*n.s/0)}function N(n,e){var i,t,r;for(0<(t=(e=-1<(i=e.indexOf("."))?e.replace(".",""):e).search(/e/i))?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++);for(r=e.length;48===e.charCodeAt(r-1);--r);if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%Sn,i<0&&(t+=Sn),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=Sn;t<r;)n.d.push(+e.slice(t,t+=Sn));e=e.slice(t),t=Sn-e.length}else t-=r;for(;t--;)e+="0";n.d.push(+e),En&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function x(n,e){var i,t,s,o,u,f,h,a;if("Infinity"===e||"NaN"===e)return+e||(n.s=NaN),n.e=NaN,n.d=null,n;if(Dn.test(e))i=16,e=e.toLowerCase();else if(Fn.test(e))i=2;else{if(!Zn.test(e))throw Error(yn+e);i=8}for(o=(e=0<(o=e.search(/p/i))?(h=+e.slice(o+1),e.substring(2,o)):e.slice(2)).indexOf("."),t=n.constructor,(u=0<=o)&&(o=(f=(e=e.replace(".","")).length)-o,s=d(t,new t(i),o,2*o)),o=e=(a=r(e,i,Rn)).length-1;0===a[o];--o)a.pop();return o<0?new t(0*n.s):(n.e=c(a,e),n.d=a,En=!1,u&&(n=Tn(n,s,4*f)),h&&(n=n.times((Math.abs(h)<54?Math:xn).pow(2,h))),En=!0,n)}function E(n,e,i,t,r){var s,o,u,c,h=n.precision,a=Math.ceil(h/Sn);for(En=!1,c=i.times(i),u=new n(t);;){if(o=Tn(u.times(c),new n(e++*e++),h,1),u=r?t.plus(o):t.minus(o),t=Tn(o.times(c),new n(e++*e++),h,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;);if(-1==s)break}s=u,u=t,t=o,o=s,0}return En=!0,o.d.length=a+1,o}function M(n,e){var i,t=e.s<0,n=h(n,n.precision,1),s=n.times(.5);if((e=e.abs()).lte(s))return gn=t?4:1,e;if((i=e.divToInt(n)).isZero())gn=t?3:2;else{if((e=e.minus(i.times(n))).lte(s))return gn=g(i)?t?2:3:t?4:1,e;gn=g(i)?t?1:4:t?3:2}return e.minus(n).abs()}function y(n,e,t,s){var o,c,f,a,l,d,g,p,w=n.constructor,m=void 0!==t;if(m?(i(t,1,wn),void 0===s?s=w.rounding:i(s,0,8)):(t=w.precision,s=w.rounding),n.isFinite()){for(m?(o=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):o=e,0<=(f=(d=u(n)).indexOf("."))&&(d=d.replace(".",""),(p=new w(1)).e=d.length-f,p.d=r(u(p),10,o),p.e=p.d.length),c=a=(g=r(d,10,o)).length;0==g[--a];)g.pop();if(g[0]){if(f<0?c--:((n=new w(n)).d=g,n.e=c,g=(n=Tn(n,p,t,s,0,o)).d,c=n.e,l=ln),f=g[t],w=o/2,l=l||void 0!==g[t+1],l=s<4?(void 0!==f||l)&&(0===s||s===(n.s<0?3:2)):w<f||f===w&&(4===s||l||6===s&&1&g[t-1]||s===(n.s<0?8:7)),g.length=t,l)for(;++g[--t]>o-1;)g[t]=0,t||(++c,g.unshift(1));for(a=g.length;!g[a-1];--a);for(f=0,d="";f<a;f++)d+=mn.charAt(g[f]);if(m){if(1<a)if(16==e||8==e){for(f=16==e?4:3,--a;a%f;a++)d+="0";for(a=(g=r(d,o,e)).length;!g[a-1];--a);for(f=1,d="1.";f<a;f++)d+=mn.charAt(g[f])}else d=d.charAt(0)+"."+d.slice(1);d=d+(c<0?"p":"p+")+c}else if(c<0){for(;++c;)d="0"+d;d="0."+d}else if(++c>a)for(c-=a;c--;)d+="0";else c<a&&(d=d.slice(0,c)+"."+d.slice(c))}else d=m?"0p+0":"0";d=(16==e?"0x":2==e?"0b":8==e?"0o":"")+d}else d=v(n);return n.s<0?"-"+d:d}function A(n,e){return n.length>e&&(n.length=e,1)}function O(n){return new this(n).abs()}function q(n){return new this(n).acos()}function F(n){return new this(n).acosh()}function D(n,e){return new this(n).plus(e)}function Z(n){return new this(n).asin()}function P(n){return new this(n).asinh()}function R(n){return new this(n).atan()}function S(n){return new this(n).atanh()}function L(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?h(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=h(this,s,1).times(.5)).s=n.s:i=e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Tn(n,e,s,1)),e=h(this,s,1),this.precision=t,this.rounding=r,n.s<0?i.minus(e):i.plus(e)):this.atan(Tn(n,e,s,1)):(i=h(this,s,1).times(0<e.s?.25:.75)).s=n.s:i=new this(NaN),i}function U(n){return new this(n).cbrt()}function _(n){return o(n=new this(n),n.e+1,2)}function k(n){if(!n||"object"!=typeof n)throw Error(Mn+"Object expected");for(var i,t,r=["precision",1,wn,"rounding",0,8,"toExpNeg",-pn,0,"toExpPos",0,pn,"maxE",0,pn,"minE",-pn,0,"modulo",0,9],e=0;e<r.length;e+=3)if(void 0!==(t=n[i=r[e]])){if(!(On(t)===t&&r[e+1]<=t&&t<=r[e+2]))throw Error(yn+i+": "+t);this[i]=t}if(n.hasOwnProperty(i="crypto"))if(void 0===(t=n[i]))this[i]=t;else{if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(yn+i+": "+t);this[i]=!(!t||!bn||!bn.getRandomValues&&!bn.randomBytes)}return this}function T(n){return new this(n).cos()}function C(n){return new this(n).cosh()}function H(n,e){return new this(n).div(e)}function B(n){return new this(n).exp()}function V(n){return o(n=new this(n),n.e+1,3)}function j(n){var e,i,t,s;if("string"!=typeof n||!n)throw Error(yn+n);if(t=n.length,s=mn.indexOf(n.charAt(0)),1===t)return new this(81<s?[-1/0,1/0,NaN][s-82]:40<s?-(s-41):s);if(64&s)e=(i=16&s)?(7&s)-3:(15&s)-7,t=1;else{if(2===t)return new this(2816<=(s=88*s+mn.indexOf(n.charAt(1)))?-(s-2816)-41:s+41);if(i=32&s,!(31&s))return n=r(n.slice(1),88,10).join(""),new this(i?"-"+n:n);t=(e=15&s)+1,e=1===e?mn.indexOf(n.charAt(1)):2===e?88*mn.indexOf(n.charAt(1))+mn.indexOf(n.charAt(2)):+r(n.slice(1,t),88,10).join(""),16&s&&(e=-e)}return n=(n=r(n.slice(t),88,10).join(""))+"e"+(e=e-n.length+1),new this(i?"-"+n:n)}function $(){var n,e,i=new this(0);for(En=!1,n=0;n<arguments.length;)if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return En=!0,new this(1/0);i=e}return En=!0,i.sqrt()}function J(n){return new this(n).ln()}function W(n,e){return new this(n).log(e)}function z(n){return new this(n).log(2)}function G(n){return new this(n).log(10)}function K(){return p(this,arguments,"lt")}function Q(){return p(this,arguments,"gt")}function X(n,e){return new this(n).mod(e)}function Y(n,e){return new this(n).mul(e)}function nn(n,e){return new this(n).pow(e)}function en(n){var e,t,r,s,o=0,u=new this(1),c=[];if(void 0===n?n=this.precision:i(n,1,wn),r=Math.ceil(n/Sn),!1===this.crypto)for(;o<r;)c[o++]=1e7*Math.random()|0;else if(bn&&bn.getRandomValues)for(e=bn.getRandomValues(new Uint32Array(r));o<r;)429e7<=(s=e[o])?e[o]=bn.getRandomValues(new Uint32Array(1))[0]:c[o++]=s%1e7;else if(bn&&bn.randomBytes){for(e=bn.randomBytes(r*=4);o<r;)214e7<=(s=e[o]+(e[o+1]<<8)+(e[o+2]<<16)+((127&e[o+3])<<24))?bn.randomBytes(4).copy(e,o):(c.push(s%1e7),o+=4);o=r/4}else{if(this.crypto)throw Error(Mn+"crypto unavailable");for(;o<r;)c[o++]=1e7*Math.random()|0}for(r=c[--o],n%=Sn,r&&n&&(s=qn(10,Sn-n),c[o]=(r/s|0)*s);0===c[o];o--)c.pop();if(o<0)c=[t=0];else{for(t=-1;0===c[0];t-=Sn)c.shift();for(r=1,s=c[0];10<=s;s/=10)r++;r<Sn&&(t-=Sn-r)}return u.e=t,u.d=c,u}function tn(n){return o(n=new this(n),n.e+1,this.rounding)}function rn(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN}function sn(n){return new this(n).sin()}function on(n){return new this(n).sinh()}function un(n){return new this(n).sqrt()}function cn(n,e){return new this(n).sub(e)}function fn(n){return new this(n).tan()}function hn(n){return new this(n).tanh()}function an(n){return o(n=new this(n),n.e+1,1)}var ln,dn,gn,pn=9e15,wn=1e9,mn="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%()*+,-./:;=?@[]^_`{|}~",vn="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",Nn="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",xn={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-pn,maxE:pn,crypto:void 0},bn=void 0!==crypto?crypto:null,En=!0,Mn="[DecimalError] ",yn=Mn+"Invalid argument: ",An=Mn+"Precision limit exceeded",On=Math.floor,qn=Math.pow,Fn=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,Dn=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,Zn=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,Pn=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,Rn=1e7,Sn=7,Un=vn.length-1,_n=Nn.length-1,kn={},Tn=(kn.absoluteValue=kn.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),o(n)},kn.ceil=function(){return o(new this.constructor(this),this.e+1,2)},kn.comparedTo=kn.cmp=function(n){var e,i,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(f=o.length)<(s=u.length)?f:s;e<i;++e)if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;return f===s?0:s<f^c<0?1:-1},kn.cosine=kn.cos=function(){var n,e,i=this,t=i.constructor;return i.d?i.d[0]?(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+Sn,t.rounding=1,i=function(n,e){var i,r=(r=e.d.length)<32?(i=Math.ceil(r/3),Math.pow(4,-i).toString()):(i=16,"2.3283064365386962890625e-10");n.precision+=i,e=E(n,1,e.times(r),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1)}return n.precision-=i,e}(t,M(t,i)),t.precision=n,t.rounding=e,o(2==gn||3==gn?i.neg():i,n,e,!0)):new t(1):new t(NaN)},kn.cubeRoot=kn.cbrt=function(){var n,i,t,r,s,u,c,f,h,a,l=this,d=l.constructor;if(!l.isFinite()||l.isZero())return new d(l);for(En=!1,(u=l.s*Math.pow(l.s*l,1/3))&&Math.abs(u)!=1/0?r=new d(u.toString()):(t=e(l.d),(u=((n=l.e)-t.length+1)%3)&&(t+=1==u||-2==u?"0":"00"),u=Math.pow(t,1/3),n=On((n+1)/3)-(n%3==(n<0?-1:2)),(r=new d(t=u==1/0?"5e"+n:(t=u.toExponential()).slice(0,t.indexOf("e")+1)+n)).s=l.s),c=(n=d.precision)+3;;)if(a=(h=(f=r).times(f).times(f)).plus(l),r=Tn(a.plus(l).times(f),a.plus(h),c+2,1),e(f.d).slice(0,c)===(t=e(r.d)).slice(0,c)){if("9999"!=(t=t.slice(c-3,c+1))&&(s||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(o(r,n+1,1),i=!r.times(r).times(r).eq(l));break}if(!s&&(o(f,n+1,0),f.times(f).times(f).eq(l))){r=f;break}c+=4,s=1}return En=!0,o(r,n,d.rounding,i)},kn.decimalPlaces=kn.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-On(this.e/Sn))*Sn,n=e[n])for(;n%10==0;n/=10)i--;i<0&&(i=0)}return i},kn.dividedBy=kn.div=function(n){return Tn(this,new this.constructor(n))},kn.dividedToIntegerBy=kn.divToInt=function(n){var i=this.constructor;return o(Tn(this,new i(n),0,1,1),i.precision,i.rounding)},kn.equals=kn.eq=function(n){return 0===this.cmp(n)},kn.floor=function(){return o(new this.constructor(this),this.e+1,3)},kn.greaterThan=kn.gt=function(n){return 0<this.cmp(n)},kn.greaterThanOrEqualTo=kn.gte=function(n){n=this.cmp(n);return 1==n||0===n},kn.hyperbolicCosine=kn.cosh=function(){var n,i,t,u=(s=this).constructor,c=new u(1);if(!s.isFinite())return new u(s.s?1/0:NaN);if(s.isZero())return c;i=u.precision,t=u.rounding,u.precision=i+Math.max(s.e,s.sd())+4,u.rounding=1;for(var f,r=(r=s.d.length)<32?(n=Math.ceil(r/3),Math.pow(4,-n).toString()):(n=16,"2.3283064365386962890625e-10"),s=E(u,1,s.times(r),new u(1),!0),h=n,a=new u(8);h--;)f=s.times(s),s=c.minus(f.times(a.minus(f.times(a))));return o(s,u.precision=i,u.rounding=t,!0)},kn.hyperbolicSine=kn.sinh=function(){var e,i,t,s=(r=this).constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=E(s,2,r,r,!0);else for(var u,n=16<(n=1.4*Math.sqrt(t))?16:0|n,r=E(s,2,r=r.times(Math.pow(5,-n)),r,!0),c=new s(5),f=new s(16),h=new s(20);n--;)u=r.times(r),r=r.times(c.plus(u.times(f.times(u).plus(h))));return o(r,s.precision=e,s.rounding=i,!0)},kn.hyperbolicTangent=kn.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Tn(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s)},kn.inverseCosine=kn.acos=function(){var e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?h(i,r,s):new i(0):new i(NaN):e.isZero()?h(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),t=h(i,r+4,s).times(.5),i.precision=r,i.rounding=s,t.minus(e))},kn.inverseHyperbolicCosine=kn.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,En=!1,i=i.times(i).minus(1).sqrt().plus(i),En=!0,t.precision=n,t.rounding=e,i.ln()):new t(i)},kn.inverseHyperbolicSine=kn.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,En=!1,i=i.times(i).plus(1).sqrt().plus(i),En=!0,t.precision=n,t.rounding=e,i.ln())},kn.inverseHyperbolicTangent=kn.atanh=function(){var n,e,t,r=this,s=r.constructor;return r.isFinite()?0<=r.e?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?o(new s(r),n,e,!0):(s.precision=t=t-r.e,r=Tn(r.plus(1),new s(1).minus(r),t+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN)},kn.inverseSine=kn.asin=function(){var e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((e=h(s,i+4,t).times(.5)).s=r.s,e):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)))},kn.inverseTangent=kn.atan=function(){var n,e,i,t,r,s,u,c,f,a=this,l=a.constructor,d=l.precision,g=l.rounding;if(a.isFinite()){if(a.isZero())return new l(a);if(a.abs().eq(1)&&d+4<=_n)return(u=h(l,d+4,g).times(.25)).s=a.s,u}else{if(!a.s)return new l(NaN);if(d+4<=_n)return(u=h(l,d+4,g).times(.5)).s=a.s,u}for(l.precision=c=d+10,l.rounding=1,n=i=Math.min(28,c/Sn+2|0);n;--n)a=a.div(a.times(a).plus(1).sqrt().plus(1));for(En=!1,e=Math.ceil(c/Sn),t=1,f=a.times(a),u=new l(a),r=a;-1!==n;)if(r=r.times(f),s=u.minus(r.div(t+=2)),r=r.times(f),void 0!==(u=s.plus(r.div(t+=2))).d[e])for(n=e;u.d[n]===s.d[n]&&n--;);return i&&(u=u.times(2<<i-1)),En=!0,o(u,l.precision=d,l.rounding=g,!0)},kn.isFinite=function(){return!!this.d},kn.isInteger=kn.isInt=function(){return!!this.d&&On(this.e/Sn)>this.d.length-2},kn.isNaN=function(){return!this.s},kn.isNegative=kn.isNeg=function(){return this.s<0},kn.isPositive=kn.isPos=function(){return 0<this.s},kn.isZero=function(){return!!this.d&&0===this.d[0]},kn.lessThan=kn.lt=function(n){return this.cmp(n)<0},kn.lessThanOrEqualTo=kn.lte=function(n){return this.cmp(n)<1},kn.logarithm=kn.log=function(n){var i,r,s,u,c,h,a,l,d=this,g=d.constructor,p=g.precision,w=g.rounding;if(null==n)n=new g(10),i=!0;else{if(r=(n=new g(n)).d,n.s<0||!r||!r[0]||n.eq(1))return new g(NaN);i=n.eq(10)}if(r=d.d,d.s<0||!r||!r[0]||d.eq(1))return new g(r&&!r[0]?-1/0:1!=d.s?NaN:r?0:1/0);if(i)if(1<r.length)c=!0;else{for(u=r[0];u%10==0;)u/=10;c=1!==u}if(En=!1,h=m(d,a=p+5),s=i?f(g,a+10):m(n,a),t((l=Tn(h,s,a,1)).d,u=p,w))do{if(h=m(d,a+=10),s=i?f(g,a+10):m(n,a),l=Tn(h,s,a,1),!c){+e(l.d).slice(u+1,u+15)+1==1e14&&(l=o(l,p+1,0));break}}while(t(l.d,u+=10,w));return En=!0,o(l,p,w)},kn.minus=kn.sub=function(n){var e,i,t,r,s,u,f,h,a,d,g,p=this,w=p.constructor;if(n=new w(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new w(n.d||p.s!==n.s?p:NaN):n=new w(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(a=p.d,g=n.d,f=w.precision,h=w.rounding,!a[0]||!g[0]){if(g[0])n.s=-n.s;else{if(!a[0])return new w(3===h?-0:0);n=new w(p)}return En?o(n,f,h):n}if(i=On(n.e/Sn),p=On(p.e/Sn),a=a.slice(),s=p-i){for(u=((d=s<0)?(e=a,s=-s,g):(e=g,i=p,a)).length,(t=Math.max(Math.ceil(f/Sn),u)+2)<s&&(s=t,e.length=1),e.reverse(),t=s;t--;)e.push(0);e.reverse()}else{for((d=(t=a.length)<(u=g.length))&&(u=t),t=0;t<u;t++)if(a[t]!=g[t]){d=a[t]<g[t];break}s=0}for(d&&(e=a,a=g,g=e,n.s=-n.s),u=a.length,t=g.length-u;0<t;--t)a[u++]=0;for(t=g.length;s<t;){if(a[--t]<g[t]){for(r=t;r&&0===a[--r];)a[r]=Rn-1;--a[r],a[t]+=Rn}a[t]-=g[t]}for(;0===a[--u];)a.pop();for(;0===a[0];a.shift())--i;return a[0]?(n.d=a,n.e=c(a,i),En?o(n,f,h):n):new w(3===h?-0:0)},kn.modulo=kn.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?o(new t(i),t.precision,t.rounding):(En=!1,9==t.modulo?(e=Tn(i,n.abs(),0,3,1)).s*=n.s:e=Tn(i,n,0,t.modulo,1),e=e.times(n),En=!0,i.minus(e))},kn.naturalExponential=kn.exp=function(){return w(this)},kn.naturalLogarithm=kn.ln=function(){return m(this)},kn.negated=kn.neg=function(){var n=new this.constructor(this);return n.s=-n.s,o(n)},kn.plus=kn.add=function(n){var e,i,t,r,s,u,f,h,a,l,d=this,g=d.constructor;if(n=new g(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new g(n.d||d.s===n.s?d:NaN)):n=new g(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(a=d.d,l=n.d,f=g.precision,h=g.rounding,a[0]&&l[0]){if(s=On(d.e/Sn),t=On(n.e/Sn),a=a.slice(),r=s-t){for((u=(u=(r<0?(i=a,r=-r,l):(i=l,t=s,a)).length)<(s=Math.ceil(f/Sn))?s+1:u+1)<r&&(r=u,i.length=1),i.reverse();r--;)i.push(0);i.reverse()}for((u=a.length)-(r=l.length)<0&&(r=u,i=l,l=a,a=i),e=0;r;)e=(a[--r]=a[r]+l[r]+e)/Rn|0,a[r]%=Rn;for(e&&(a.unshift(e),++t),u=a.length;0==a[--u];)a.pop();n.d=a,n.e=c(a,t)}else l[0]||(n=new g(d));return En?o(n,f,h):n},kn.precision=kn.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(yn+n);return i.d?(e=a(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e},kn.round=function(){var n=this,e=n.constructor;return o(new e(n),n.e+1,e.rounding)},kn.sine=kn.sin=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+Sn,t.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return E(n,2,e,e);i=16<(i=1.4*Math.sqrt(t))?16:0|i,e=E(n,2,e=e.times(Math.pow(5,-i)),e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;)r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));return e}(t,M(t,i)),t.precision=n,t.rounding=e,o(2<gn?i.neg():i,n,e,!0)):new t(NaN)},kn.squareRoot=kn.sqrt=function(){var n,i,t,r,s,u,c=this,f=c.d,h=c.e,a=c.s,l=c.constructor;if(1!==a||!f||!f[0])return new l(!a||a<0&&(!f||f[0])?NaN:f?c:1/0);for(En=!1,r=0==(a=Math.sqrt(+c))||a==1/0?(((i=e(f)).length+h)%2==0&&(i+="0"),a=Math.sqrt(i),h=On((h+1)/2)-(h<0||h%2),new l(i=a==1/0?"1e"+h:(i=a.toExponential()).slice(0,i.indexOf("e")+1)+h)):new l(a.toString()),t=(h=l.precision)+3;;)if(r=(u=r).plus(Tn(c,u,t+2,1)).times(.5),e(u.d).slice(0,t)===(i=e(r.d)).slice(0,t)){if("9999"!=(i=i.slice(t-3,t+1))&&(s||"4999"!=i)){+i&&(+i.slice(1)||"5"!=i.charAt(0))||(o(r,h+1,1),n=!r.times(r).eq(c));break}if(!s&&(o(u,h+1,0),u.times(u).eq(c))){r=u;break}t+=4,s=1}return En=!0,o(r,h,l.rounding,n)},kn.tangent=kn.tan=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+10,t.rounding=1,(i=i.sin()).s=1,i=Tn(i,new t(1).minus(i.times(i)).sqrt(),n+10,0),t.precision=n,t.rounding=e,o(2==gn||4==gn?i.neg():i,n,e,!0)):new t(NaN)},kn.times=kn.mul=function(n){var e,t,r,s,u,f,h,a,l=this,d=l.constructor,g=l.d,p=(n=new d(n)).d;if(n.s*=l.s,!(g&&g[0]&&p&&p[0]))return new d(!n.s||g&&!g[0]&&!p||p&&!p[0]&&!g?NaN:g&&p?0*n.s:n.s/0);for(l=On(l.e/Sn)+On(n.e/Sn),(h=g.length)<(a=p.length)&&(s=g,g=p,p=s,u=h,h=a,a=u),s=[],t=u=h+a;t--;)s.push(0);for(t=a;0<=--t;){for(e=0,r=h+t;t<r;)f=s[r]+p[t]*g[r-t-1]+e,s[r--]=f%Rn|0,e=f/Rn|0;s[r]=(s[r]+e)%Rn|0}for(;!s[--u];)s.pop();for(e?++l:s.shift(),t=s.length;!s[--t];)s.pop();return n.d=s,n.e=c(s,l),En?o(n,d.precision,d.rounding):n},kn.toBinary=function(n,e){return y(this,2,n,e)},kn.toDecimalPlaces=kn.toDP=function(n,e){var r=this.constructor,t=new r(this);return void 0===n?t:(i(n,0,wn),void 0===e?e=r.rounding:i(e,0,8),o(t,n+t.e+1,e))},kn.toExponential=function(n,e){var r=this,s=r.constructor,s=void 0===n?u(r,!0):(i(n,0,wn),void 0===e?e=s.rounding:i(e,0,8),u(r=o(new s(r),n+1,e),!0,n+1));return r.isNeg()&&!r.isZero()?"-"+s:s},kn.toFixed=function(n,e){var s=this,c=s.constructor,e=void 0===n?u(s):(i(n,0,wn),void 0===e?e=c.rounding:i(e,0,8),u(c=o(new c(s),n+s.e+1,e),!1,n+c.e+1));return s.isNeg()&&!s.isZero()?"-"+e:e},kn.toFraction=function(n){var i,t,r,s,o,c,f,h,u,d,p=this,w=p.d,m=p.constructor;if(!w)return new m(p);if(h=t=new m(1),r=f=new m(0),o=(i=new m(r)).e=a(w)-p.e-1,i.d[0]=qn(10,(u=o%Sn)<0?Sn+u:u),null==n)n=0<o?i:h;else{if(!(c=new m(n)).isInt()||c.lt(h))throw Error(yn+c);n=c.gt(i)?0<o?i:h:c}for(En=!1,c=new m(e(w)),u=m.precision,m.precision=o=w.length*Sn*2;d=Tn(c,i,0,1,1),1!=(s=t.plus(d.times(r))).cmp(n);)t=r,r=s,s=h,h=f.plus(d.times(s)),f=s,s=i,i=c.minus(d.times(s)),c=s;return s=Tn(n.minus(t),r,0,1,1),f=f.plus(s.times(h)),t=t.plus(s.times(r)),f.s=h.s=p.s,w=Tn(h,r,o,1).minus(p).abs().cmp(Tn(f,t,o,1).minus(p).abs())<1?[h,r]:[f,t],m.precision=u,En=!0,w},kn.toHexadecimal=kn.toHex=function(n,e){return y(this,16,n,e)},kn.toJSON=function(){var n,i,t,s,o,u,c,h=this,a=h.s<0;if(!h.d)return mn.charAt(h.s?a?82:83:84);if(i=h.e,1===h.d.length&&i<4&&0<=i&&(u=h.d[0])<2857)return u<41?mn.charAt(a?u+41:u):(u-=41,a&&(u+=2816),mn.charAt(s=u/88|0)+mn.charAt(u-88*s));if(h=e(h.d),c="",!a&&i<=8&&-7<=i)s=64+i+7;else if(a&&i<=4&&-3<=i)s=80+i+3;else if(h.length===i+1)s=32*a;else if(s=32*a+16*(i<0),(i=Math.abs(i))<88)s+=1,c=mn.charAt(i);else if(i<7744)s+=2,c=mn.charAt(u=i/88|0)+mn.charAt(i-88*u);else for(s+=o=(n=r(String(i),10,88)).length,t=0;t<o;t++)c+=mn.charAt(n[t]);for(c=mn.charAt(s)+c,o=(n=r(h,10,88)).length,t=0;t<o;t++)c+=mn.charAt(n[t]);return c},kn.toNearest=function(n,e){var r=(t=this).constructor,t=new r(t);if(null==n){if(!t.d)return t;n=new r(1),e=r.rounding}else{if(n=new r(n),void 0!==e&&i(e,0,8),!t.d)return n.s?t:n;if(!n.d)return n.s&&(n.s=t.s),n}return n.d[0]?(En=!1,t=Tn(t,n,0,e=e<4?[4,5,7,8][e]:e,1).times(n),En=!0,o(t)):(n.s=t.s,t=n),t},kn.toNumber=function(){return+this},kn.toOctal=function(n,e){return y(this,8,n,e)},kn.toPower=kn.pow=function(n){var i,r,s,u,c,f,a=this,l=a.constructor,g=+(n=new l(n));if(!(a.d&&n.d&&a.d[0]&&n.d[0]))return new l(qn(+a,g));if((a=new l(a)).eq(1))return a;if(s=l.precision,c=l.rounding,n.eq(1))return o(a,s,c);if(i=On(n.e/Sn),r=n.d.length-1,f=a.s,r<=i){if((r=g<0?-g:g)<=9007199254740991)return u=d(l,a,r,s),n.s<0?new l(1).div(u):o(u,s,c)}else if(f<0)return new l(NaN);return f=f<0&&1&n.d[Math.max(i,r)]?-1:1,(i=0!=(r=qn(+a,g))&&isFinite(r)?new l(r+"").e:On(g*(Math.log("0."+e(a.d))/Math.LN10+a.e+1)))>l.maxE+1||i<l.minE-1?new l(0<i?f/0:0):(En=!1,l.rounding=a.s=1,r=Math.min(12,(i+"").length),(u=t((u=o(u=w(n.times(m(a,s+r)),s),s+5,1)).d,s,c)&&+e((u=o(w(n.times(m(a,(i=s+10)+r)),i),i+5,1)).d).slice(s+1,s+15)+1==1e14?o(u,s+1,0):u).s=f,En=!0,o(u,s,l.rounding=c))},kn.toPrecision=function(n,e){var r=this,s=r.constructor,e=void 0===n?u(r,r.e<=s.toExpNeg||r.e>=s.toExpPos):(i(n,1,wn),void 0===e?e=s.rounding:i(e,0,8),u(r=o(new s(r),n,e),n<=r.e||r.e<=s.toExpNeg,n));return r.isNeg()&&!r.isZero()?"-"+e:e},kn.toSignificantDigits=kn.toSD=function(n,e){var r=this.constructor;return void 0===n?(n=r.precision,e=r.rounding):(i(n,1,wn),void 0===e?e=r.rounding:i(e,0,8)),o(new r(this),n,e)},kn.toString=function(){var n=this,e=n.constructor,e=u(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?"-"+e:e},kn.truncated=kn.trunc=function(){return o(new this.constructor(this),this.e+1,1)},kn.valueOf=function(){var n=this,e=n.constructor,e=u(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?"-"+e:e},function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;)t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;return r&&n.unshift(r),n}function e(n,e,i,t){var r,s;if(i!=t)s=t<i?1:-1;else for(r=s=0;r<i;r++)if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break}return s}function i(n,e,i,t){for(var r=0;i--;)n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];for(;!n[0]&&1<n.length;)n.shift()}return function(t,r,s,u,c,f){var h,a,l,d,g,p,w,m,N,x,b,E,M,y,A,O,q,F,D,Z=t.constructor,P=t.s==r.s?1:-1,R=t.d,S=r.d;if(!(R&&R[0]&&S&&S[0]))return new Z(t.s&&r.s&&(R?!S||R[0]!=S[0]:S)?R&&0==R[0]||!S?0*P:P/0:NaN);for(a=f?(g=1,t.e-r.e):(f=Rn,On(t.e/(g=Sn))-On(r.e/g)),F=S.length,O=R.length,N=(P=new Z(P)).d=[],l=0;S[l]==(R[l]||0);l++);if(S[l]>(R[l]||0)&&a--,null==s?(M=s=Z.precision,u=Z.rounding):M=c?s+(t.e-r.e)+1:s,M<0)N.push(1),p=!0;else{if(M=M/g+2|0,l=0,1==F){for(S=S[d=0],M++;(l<O||d)&&M--;l++)y=d*f+(R[l]||0),N[l]=y/S|0,d=y%S|0;p=d||l<O}else{for(1<(d=f/(S[0]+1)|0)&&(S=n(S,d,f),R=n(R,d,f),F=S.length,O=R.length),A=F,b=(x=R.slice(0,F)).length;b<F;)x[b++]=0;for((D=S.slice()).unshift(0),q=S[0],S[1]>=f/2&&++q;d=0,(h=e(S,x,F,b))<0?(E=x[0],1<(d=(E=F!=b?E*f+(x[1]||0):E)/q|0)?1==(h=e(w=n(S,d=f<=d?f-1:d,f),x,m=w.length,b=x.length))&&(d--,i(w,F<m?D:S,m,f)):(0==d&&(h=d=1),w=S.slice()),(m=w.length)<b&&w.unshift(0),i(x,w,b,f),-1==h&&(h=e(S,x,F,b=x.length))<1&&(d++,i(x,F<b?D:S,b,f)),b=x.length):0===h&&(d++,x=[0]),N[l++]=d,h&&x[0]?x[b++]=R[A]||0:(x=[R[A]],b=1),(A++<O||void 0!==x[0])&&M--;);p=void 0!==x[0]}N[0]||N.shift()}if(1==g)P.e=a,ln=p;else{for(l=1,d=N[0];10<=d;d/=10)l++;P.e=l+a*g-1,o(P,c?s+P.e+1:s,u,p)}return P}}()),vn=new(xn=function I(n){function e(n){var i,t,r,s=this;if(!(s instanceof e))return new e(n);if(!(n instanceof(s.constructor=e))){if("number"==(r=typeof n)){if(0===n)return s.s=1/n<0?-1:1,s.e=0,void(s.d=[0]);if(n<0?(n=-n,s.s=-1):s.s=1,n===~~n&&n<1e7){for(i=0,t=n;10<=t;t/=10)i++;return s.e=i,void(s.d=[n])}return 0*n!=0?(n||(s.s=NaN),s.e=NaN,void(s.d=null)):N(s,n.toString())}if("string"!=r)throw Error(yn+n);return 45===n.charCodeAt(0)?(n=n.slice(1),s.s=-1):s.s=1,(Pn.test(n)?N:x)(s,n)}s.s=n.s,s.e=n.e,s.d=(n=n.d)&&n.slice()}var i,t,r;if(e.prototype=kn,e.ROUND_UP=0,e.ROUND_DOWN=1,e.ROUND_CEIL=2,e.ROUND_FLOOR=3,e.ROUND_HALF_UP=4,e.ROUND_HALF_DOWN=5,e.ROUND_HALF_EVEN=6,e.ROUND_HALF_CEIL=7,e.ROUND_HALF_FLOOR=8,e.EUCLID=9,e.config=k,e.clone=I,e.abs=O,e.acos=q,e.acosh=F,e.add=D,e.asin=Z,e.asinh=P,e.atan=R,e.atanh=S,e.atan2=L,e.cbrt=U,e.ceil=_,e.cos=T,e.cosh=C,e.div=H,e.exp=B,e.floor=V,e.fromJSON=j,e.hypot=$,e.ln=J,e.log=W,e.log10=G,e.log2=z,e.max=K,e.min=Q,e.mod=X,e.mul=Y,e.pow=nn,e.random=en,e.round=tn,e.sign=rn,e.sin=sn,e.sinh=on,e.sqrt=un,e.sub=cn,e.tan=fn,e.tanh=hn,e.trunc=an,n=void 0===n?{}:n)for(r=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],i=0;i<r.length;)n.hasOwnProperty(t=r[i++])||(n[t]=this[t]);return e.config(n),e}(xn))(vn),Nn=new xn(Nn);if("function"==typeof define&&define.amd)define(function(){return xn});else if("undefined"!=typeof module&&module.exports){if(module.exports=xn,!bn)try{bn=require("crypto")}catch(Cn){}}else n=n||("undefined"!=typeof self&&self&&self.self==self?self:Function("return this")()),dn=n.Decimal,xn.noConflict=function(){return n.Decimal=dn,xn},n.Decimal=xn}(this),!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.math=t():e.math=t()}(this,function(){return e=[function(e,t,r){var i=r(1);e.exports=function n(e){e=i.create(e);return e.create=n,e.import(r(13)),e}()},function(e,t,r){e.exports=r(2)},function(e,t,r){var n=r(3).isFactory,i=r(3).deepExtend,a=r(4),o=r(8),s=r(10),u=r(12);t.create=function(e){function t(e){var i,a;if(n(e))return-1===(a=r.indexOf(e))?(i=!0===e.math?e.factory(f.type,l,t,f.typed,f):e.factory(f.type,l,t,f.typed),r.push(e),c.push(i)):i=c[a],i;throw new Error("Factory object with properties `type`, `name`, and `factory` expected")}if("function"!=typeof Object.create)throw new Error("ES5 not supported by this JavaScript engine. Please load the es5-shim and es5-sham library for compatibility.");var r=[],c=[],f=o.mixin({}),l=(f.type={},f.expression={transform:Object.create(f)},f.typed=a.create(f.type),{epsilon:1e-14,matrix:"matrix",number:"number",precision:64,predictable:!1});return e&&i(l,e),f.import=t(s),f.config=t(u),f}},function(e,t){"use strict";t.clone=function r(e){var t=typeof e;if("number"==t||"string"==t||"boolean"==t||null==e)return e;if("function"==typeof e.clone)return e.clone();if(Array.isArray(e))return e.map(r);if(e instanceof Number)return new Number(e.valueOf());if(e instanceof String)return new String(e.valueOf());if(e instanceof Boolean)return new Boolean(e.valueOf());if(e instanceof Date)return new Date(e.valueOf());if(e&&!0===e.isBigNumber)return e;if(e instanceof RegExp)throw new TypeError("Cannot clone "+e);var i,n={};for(i in e)e.hasOwnProperty(i)&&(n[i]=r(e[i]));return n},t.extend=function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e},t.deepExtend=function n(e,t){if(Array.isArray(t))throw new TypeError("Arrays are not supported by deepExtend");for(var r in t)if(t.hasOwnProperty(r))if(t[r]&&t[r].constructor===Object)void 0===e[r]&&(e[r]={}),e[r].constructor===Object?n(e[r],t[r]):e[r]=t[r];else{if(Array.isArray(t[r]))throw new TypeError("Arrays are not supported by deepExtend");e[r]=t[r]}return e},t.deepEqual=function(e,r){var n,i,a;if(Array.isArray(e)){if(!Array.isArray(r))return!1;if(e.length!=r.length)return!1;for(i=0,a=e.length;i<a;i++)if(!t.deepEqual(e[i],r[i]))return!1;return!0}if(e instanceof Object){if(Array.isArray(r)||!(r instanceof Object))return!1;for(n in e)if(!t.deepEqual(e[n],r[n]))return!1;for(n in r)if(!t.deepEqual(e[n],r[n]))return!1;return!0}return typeof e==typeof r&&e==r},t.canDefineProperty=function(){try{if(Object.defineProperty)return Object.defineProperty({},"x",{get:function(){}}),!0}catch(e){}return!1},t.lazy=function(e,r,n){var i,a;t.canDefineProperty()?(a=!0,Object.defineProperty(e,r,{get:function(){return a&&(i=n(),a=!1),i},set:function(e){i=e,a=!1},configurable:!0,enumerable:!0})):e[r]=n()},t.traverse=function(e,t){var r=e;if(t)for(var n=t.split("."),i=0;i<n.length;i++){var a=n[i];a in r||(r[a]={}),r=r[a]}return r},t.isFactory=function(e){return e&&"function"==typeof e.factory}},function(e,t,r){var n=r(5),i=r(6).digits,a=function(){return a=n.create,n};t.create=function(e){var t=a();return t.types=[{name:"number",test:function(e){return"number"==typeof e}},{name:"Complex",test:function(e){return e&&e.isComplex}},{name:"BigNumber",test:function(e){return e&&e.isBigNumber}},{name:"Fraction",test:function(e){return e&&e.isFraction}},{name:"Unit",test:function(e){return e&&e.isUnit}},{name:"string",test:function(e){return"string"==typeof e}},{name:"Array",test:Array.isArray},{name:"Matrix",test:function(e){return e&&e.isMatrix}},{name:"DenseMatrix",test:function(e){return e&&e.isDenseMatrix}},{name:"SparseMatrix",test:function(e){return e&&e.isSparseMatrix}},{name:"ImmutableDenseMatrix",test:function(e){return e&&e.isImmutableDenseMatrix}},{name:"Range",test:function(e){return e&&e.isRange}},{name:"Index",test:function(e){return e&&e.isIndex}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"ResultSet",test:function(e){return e&&e.isResultSet}},{name:"Help",test:function(e){return e&&e.isHelp}},{name:"function",test:function(e){return"function"==typeof e}},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:function(e){return"object"==typeof e}},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],t.conversions=[{from:"number",to:"BigNumber",convert:function(t){if(15<i(t))throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+t+"). Use function bignumber(x) to convert to BigNumber.");return new e.BigNumber(t)}},{from:"number",to:"Complex",convert:function(t){return new e.Complex(t,0)}},{from:"number",to:"string",convert:function(e){return e+""}},{from:"BigNumber",to:"Complex",convert:function(t){return new e.Complex(t.toNumber(),0)}},{from:"number",to:"Fraction",convert:function(t){if(15<i(t))throw new TypeError("Cannot implicitly convert a number with >15 significant digits to Fraction (value: "+t+"). Use function fraction(x) to convert to Fraction.");return new e.Fraction(t)}},{from:"string",to:"number",convert:function(e){var t=Number(e);if(isNaN(t))throw new Error('Cannot convert "'+e+'" to a number');return t}},{from:"boolean",to:"number",convert:function(e){return+e}},{from:"boolean",to:"BigNumber",convert:function(t){return new e.BigNumber(+t)}},{from:"boolean",to:"string",convert:function(e){return+e}},{from:"null",to:"number",convert:function(){return 0}},{from:"null",to:"string",convert:function(){return"null"}},{from:"null",to:"BigNumber",convert:function(){return new e.BigNumber(0)}},{from:"Array",to:"Matrix",convert:function(t){return new e.DenseMatrix(t)}},{from:"Matrix",to:"Array",convert:function(e){return e.valueOf()}}],t}},function(e,t,r){var n;void 0!==(t="function"==typeof(n=function(){function e(){function t(e){for(var t,r=0;r<N.types.length;r++){var n=N.types[r];if(n.name===e){t=n.test;break}}if(!t){var i;for(r=0;r<N.types.length;r++)if(n=N.types[r],n.name.toLowerCase()==e.toLowerCase()){i=n.name;break}throw new Error('Unknown type "'+e+'"'+(i?'. Did you mean "'+i+'"?':""))}return t}function r(e){for(var t="",r=0;r<e.length;r++){var n=e[r];if(""!=n.name)if(""==t)t=n.name;else if(t!=n.name){var i=new Error("Function names do not match (expected: "+t+", actual: "+n.name+")");throw i.data={actual:n.name,expected:t},i}}return t}function n(e,t,r,n,i){var a,o=h(n),s=i?i.split(","):null,u=e||"unnamed",c=s&&g(s,"any"),f={fn:e,index:r,actual:n,expected:s};a=s?t>r&&!c?"Unexpected type of argument in function "+u+" (expected: "+s.join(" or ")+", actual: "+o+", index: "+r+")":"Too few arguments in function "+u+" (expected: "+s.join(" or ")+", index: "+r+")":"Too many arguments in function "+u+" (expected: "+r+", actual: "+t+")";var l=new TypeError(a);return l.data=f,l}function i(e){this.name=e||"refs",this.categories={}}function a(e,t){if("string"==typeof e){var r=e.trim(),n="..."===r.substr(0,3);if(n&&(r=r.substr(3)),""===r)this.types=["any"];else{this.types=r.split("|");for(var i=0;i<this.types.length;i++)this.types[i]=this.types[i].trim()}}else{if(!Array.isArray(e)){if(e instanceof a)return e.clone();throw new Error("String or Array expected")}this.types=e}this.conversions=[],this.varArgs=n||t||!1,this.anyType=-1!==this.types.indexOf("any")}function o(e,t){var r;if("string"==typeof e)r=""!==e?e.split(","):[];else{if(!Array.isArray(e))throw new Error("string or Array expected");r=e}this.params=new Array(r.length);for(var n=0;n<r.length;n++){var i=new a(r[n]);if(this.params[n]=i,n===r.length-1)this.varArgs=i.varArgs;else if(i.varArgs)throw new SyntaxError('Unexpected variable arguments operator "..."')}this.fn=t}function s(e,t,r){this.path=e||[],this.param=e[e.length-1]||null,this.signature=t||null,this.childs=r||[]}function u(e){var t,r,n={},i=[];for(var a in e)if(e.hasOwnProperty(a)){var s=e[a];if(t=new o(a,s),t.ignore())continue;var u=t.expand();for(r=0;r<u.length;r++){var c=u[r],f=c.toString(),l=n[f];if(l){var p=o.compare(c,l);if(0>p)n[f]=c;else if(0===p)throw new Error('Signature "'+f+'" is defined twice')}else n[f]=c}}for(f in n)n.hasOwnProperty(f)&&i.push(n[f]);for(i.sort(function(e,t){return o.compare(e,t)}),r=0;r<i.length;r++)if(t=i[r],t.varArgs)for(var m=t.params.length-1,h=t.params[m],v=0;v<h.types.length;){if(h.conversions[v])for(var d=h.types[v],y=0;y<i.length;y++){var x=i[y],b=x.params[m];if(x!==t&&b&&g(b.types,d)&&!b.conversions[m]){h.types.splice(v,1),h.conversions.splice(v,1),v--;break}}v++}return i}function c(e){for(var t={},r=0;r<e.length;r++){var n=e[r];if(n.fn&&!n.hasConversions()){var i=n.params.join(",");t[i]=n.fn}}return t}function f(e,t){var r,n,i,o=t.length,u=[];for(r=0;r<e.length;r++)n=e[r],n.params.length!==o||i||(i=n),void 0!=n.params[o]&&u.push(n);u.sort(function(e,t){return a.compare(e.params[o],t.params[o])});var c=[];for(r=0;r<u.length;r++){n=u[r];var l=n.params[o],p=c.filter(function(e){return e.param.overlapping(l)})[0];if(p){if(p.param.varArgs)throw new Error('Conflicting types "'+p.param+'" and "'+l+'"');p.signatures.push(n)}else c.push({param:l,signatures:[n]})}var m=new Array(c.length);for(r=0;r<c.length;r++){var h=c[r];m[r]=f(h.signatures,t.concat(h.param))}return new s(t,i,m)}function l(e){for(var t=[],r=0;e>r;r++)t[r]="arg"+r;return t}function p(e,t){var r=new i,a=u(t);if(0==a.length)throw new Error("No signatures provided");var o=f(a,[]),s=[],p=e||"",h=l(m(a));s.push("function "+p+"("+h.join(", ")+") {"),s.push('  "use strict";'),s.push("  var name = '"+p+"';"),s.push(o.toCode(r,"  ")),s.push("}");var g=[r.toCode(),"return "+s.join("\n")].join("\n"),v=new Function(r.name,"createError",g),d=v(r,n);return d.signatures=c(a),d}function m(e){for(var t=0,r=0;r<e.length;r++){var n=e[r].params.length;n>t&&(t=n)}return t}function h(e){for(var t,r=0;r<N.types.length;r++){var n=N.types[r];if("Object"===n.name)t=n;else if(n.test(e))return n.name}return t&&t.test(e)?t.name:"unknown"}function g(e,t){return-1!==e.indexOf(t)}function v(e,t){if(!e.signatures)throw new TypeError("Function is no typed-function");var r;if("string"==typeof t){r=t.split(",");for(var n=0;n<r.length;n++)r[n]=r[n].trim()}else{if(!Array.isArray(t))throw new TypeError("String array or a comma separated string expected");r=t}var i=r.join(","),a=e.signatures[i];if(a)return a;throw new TypeError("Signature not found (signature: "+(e.name||"unnamed")+"("+r.join(", ")+"))")}function d(e,t){var r=h(e);if(t===r)return e;for(var n=0;n<N.conversions.length;n++){var i=N.conversions[n];if(i.from===r&&i.to===t)return i.convert(e)}throw new Error("Cannot convert from "+r+" to "+t)}i.prototype.add=function(e,t){var r=t||"fn";this.categories[r]||(this.categories[r]=[]);var n=this.categories[r].indexOf(e);return-1==n&&(n=this.categories[r].length,this.categories[r].push(e)),r+n},i.prototype.toCode=function(){var e=[],t=this.name+".categories",r=this.categories;for(var n in r)if(r.hasOwnProperty(n))for(var i=r[n],a=0;a<i.length;a++)e.push("var "+n+a+" = "+t+"['"+n+"']["+a+"];");return e.join("\n")},a.compare=function(e,t){if(e.anyType)return 1;if(t.anyType)return-1;if(g(e.types,"Object"))return 1;if(g(t.types,"Object"))return-1;if(e.hasConversions()){if(t.hasConversions()){var r,n,i;for(r=0;r<e.conversions.length;r++)if(void 0!==e.conversions[r]){n=e.conversions[r];break}for(r=0;r<t.conversions.length;r++)if(void 0!==t.conversions[r]){i=t.conversions[r];break}return N.conversions.indexOf(n)-N.conversions.indexOf(i)}return 1}if(t.hasConversions())return-1;var a,o;for(r=0;r<N.types.length;r++)if(N.types[r].name===e.types[0]){a=r;break}for(r=0;r<N.types.length;r++)if(N.types[r].name===t.types[0]){o=r;break}return a-o},a.prototype.overlapping=function(e){for(var t=0;t<this.types.length;t++)if(g(e.types,this.types[t]))return!0;return!1},a.prototype.clone=function(){var e=new a(this.types.slice(),this.varArgs);return e.conversions=this.conversions.slice(),e},a.prototype.hasConversions=function(){return this.conversions.length>0},a.prototype.contains=function(e){for(var t=0;t<this.types.length;t++)if(e[this.types[t]])return!0;return!1},a.prototype.toString=function(e){for(var t=[],r={},n=0;n<this.types.length;n++){var i=this.conversions[n],a=e&&i?i.to:this.types[n];a in r||(r[a]=!0,t.push(a))}return(this.varArgs?"...":"")+t.join("|")},o.prototype.clone=function(){return new o(this.params.slice(),this.fn)},o.prototype.expand=function(){function e(r,n){if(n.length<r.params.length){var i,s,u,c=r.params[n.length];if(c.varArgs){for(s=c.clone(),i=0;i<N.conversions.length;i++)if(u=N.conversions[i],!g(c.types,u.from)&&g(c.types,u.to)){var f=s.types.length;s.types[f]=u.from,s.conversions[f]=u}e(r,n.concat(s))}else{for(i=0;i<c.types.length;i++)e(r,n.concat(new a(c.types[i])));for(i=0;i<N.conversions.length;i++)u=N.conversions[i],!g(c.types,u.from)&&g(c.types,u.to)&&(s=new a(u.from),s.conversions[0]=u,e(r,n.concat(s)))}}else t.push(new o(n,r.fn))}var t=[];return e(this,[]),t},o.compare=function(e,t){if(e.params.length>t.params.length)return 1;if(e.params.length<t.params.length)return-1;var r,n=e.params.length,i=0,o=0;for(r=0;n>r;r++)e.params[r].hasConversions()&&i++,t.params[r].hasConversions()&&o++;if(i>o)return 1;if(o>i)return-1;for(r=0;r<e.params.length;r++){var s=a.compare(e.params[r],t.params[r]);if(0!==s)return s}return 0},o.prototype.hasConversions=function(){for(var e=0;e<this.params.length;e++)if(this.params[e].hasConversions())return!0;return!1},o.prototype.ignore=function(){for(var e={},t=0;t<N.ignore.length;t++)e[N.ignore[t]]=!0;for(t=0;t<this.params.length;t++)if(this.params[t].contains(e))return!0;return!1},o.prototype.toCode=function(e,t){for(var r=[],n=new Array(this.params.length),i=0;i<this.params.length;i++){var a=this.params[i],o=a.conversions[0];a.varArgs?n[i]="varArgs":o?n[i]=e.add(o.convert,"convert")+"(arg"+i+")":n[i]="arg"+i}var s=this.fn?e.add(this.fn,"signature"):void 0;return s?t+"return "+s+"("+n.join(", ")+"); // signature: "+this.params.join(", "):r.join("\n")},o.prototype.toString=function(){return this.params.join(", ")},s.prototype.toCode=function(e,r,n){var i=[];if(this.param){var a=this.path.length-1,o=this.param.conversions[0],s="// type: "+(o?o.from+" (convert to "+o.to+")":this.param);if(this.param.varArgs)if(this.param.anyType)i.push(r+"if (arguments.length > "+a+") {"),i.push(r+"  var varArgs = [];"),i.push(r+"  for (var i = "+a+"; i < arguments.length; i++) {"),i.push(r+"    varArgs.push(arguments[i]);"),i.push(r+"  }"),i.push(this.signature.toCode(e,r+"  ")),i.push(r+"}");else{for(var u=function(r,n){for(var i=[],a=0;a<r.length;a++)i[a]=e.add(t(r[a]),"test")+"("+n+")";return i.join(" || ")}.bind(this),c=this.param.types,f=[],l=0;l<c.length;l++)void 0===this.param.conversions[l]&&f.push(c[l]);i.push(r+"if ("+u(c,"arg"+a)+") { "+s),i.push(r+"  var varArgs = [arg"+a+"];"),i.push(r+"  for (var i = "+(a+1)+"; i < arguments.length; i++) {"),i.push(r+"    if ("+u(f,"arguments[i]")+") {"),i.push(r+"      varArgs.push(arguments[i]);");for(var l=0;l<c.length;l++){var p=this.param.conversions[l];if(p){var m=e.add(t(c[l]),"test"),h=e.add(p.convert,"convert");i.push(r+"    }"),i.push(r+"    else if ("+m+"(arguments[i])) {"),i.push(r+"      varArgs.push("+h+"(arguments[i]));")}}i.push(r+"    } else {"),i.push(r+"      throw createError(name, arguments.length, i, arguments[i], '"+f.join(",")+"');"),i.push(r+"    }"),i.push(r+"  }"),i.push(this.signature.toCode(e,r+"  ")),i.push(r+"}")}else if(this.param.anyType)i.push(r+"// type: any"),i.push(this._innerCode(e,r,n));else{var g=this.param.types[0],m="any"!==g?e.add(t(g),"test"):null;i.push(r+"if ("+m+"(arg"+a+")) { "+s),i.push(this._innerCode(e,r+"  ",n)),i.push(r+"}")}}else i.push(this._innerCode(e,r,n));return i.join("\n")},s.prototype._innerCode=function(e,t,r){var n,i=[];this.signature&&(i.push(t+"if (arguments.length === "+this.path.length+") {"),i.push(this.signature.toCode(e,t+"  ")),i.push(t+"}"));var a;for(n=0;n<this.childs.length;n++)if(this.childs[n].param.anyType){a=this.childs[n];break}for(n=0;n<this.childs.length;n++)i.push(this.childs[n].toCode(e,t,a));r&&!this.param.anyType&&i.push(r.toCode(e,t,a));var o=this._exceptions(e,t);return o&&i.push(o),i.join("\n")},s.prototype._exceptions=function(e,t){var r=this.path.length;if(0===this.childs.length)return[t+"if (arguments.length > "+r+") {",t+"  throw createError(name, arguments.length, "+r+", arguments["+r+"]);",t+"}"].join("\n");for(var n={},i=[],a=0;a<this.childs.length;a++){var o=this.childs[a];if(o.param)for(var s=0;s<o.param.types.length;s++){var u=o.param.types[s];u in n||o.param.conversions[s]||(n[u]=!0,i.push(u))}}return t+"throw createError(name, arguments.length, "+r+", arguments["+r+"], '"+i.join(",")+"');"};var y=[{name:"number",test:function(e){return"number"==typeof e}},{name:"string",test:function(e){return"string"==typeof e}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"Function",test:function(e){return"function"==typeof e}},{name:"Array",test:Array.isArray},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:function(e){return"object"==typeof e}},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],x={},b=[],w=[],N={config:x,types:y,conversions:b,ignore:w};return N=p("typed",{Object:function(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(e[n]);var i=r(t);return p(i,e)},"string, Object":p,"...Function":function(e){for(var t,n=r(e),i={},a=0;a<e.length;a++){var o=e[a];if("object"!=typeof o.signatures)throw t=new TypeError("Function is no typed-function (index: "+a+")"),t.data={index:a},t;for(var s in o.signatures)if(o.signatures.hasOwnProperty(s))if(i.hasOwnProperty(s)){if(o.signatures[s]!==i[s])throw t=new Error('Signature "'+s+'" is defined twice'),t.data={signature:s},t}else i[s]=o.signatures[s]}return p(n,i)}}),N.config=x,N.types=y,N.conversions=b,N.ignore=w,N.create=e,N.find=v,N.convert=d,N.addType=function(e){if(!e||"string"!=typeof e.name||"function"!=typeof e.test)throw new TypeError("Object with properties {name: string, test: function} expected");N.types.push(e)},N.addConversion=function(e){if(!e||"string"!=typeof e.from||"string"!=typeof e.to||"function"!=typeof e.convert)throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");N.conversions.push(e)},N}return e()})?n.apply(t,[]):n)&&(e.exports=t)},function(e,t,r){"use strict";var n=r(7);t.isNumber=function(e){return"number"==typeof e},t.isInteger=function(e){return!!isFinite(e)&&e==Math.round(e)},t.sign=function(e){return 0<e?1:e<0?-1:0},t.format=function(e,r){if("function"==typeof r)return r(e);if(e===1/0)return"Infinity";if(e===-1/0)return"-Infinity";if(isNaN(e))return"NaN";var n="auto",i=void 0;switch(r&&(r.notation&&(n=r.notation),t.isNumber(r)?i=r:r.precision&&(i=r.precision)),n){case"fixed":return t.toFixed(e,i);case"exponential":return t.toExponential(e,i);case"engineering":return t.toEngineering(e,i);case"auto":return t.toPrecision(e,i,r&&r.exponential).replace(/((\.\d*?)(0+))($|e)/,function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t});default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", or "fixed".')}},t.toExponential=function(e,t){return new n(e).toExponential(t)},t.toEngineering=function(e,t){return new n(e).toEngineering(t)},t.toFixed=function(e,t){return new n(e).toFixed(t)},t.toPrecision=function(e,t,r){return new n(e).toPrecision(t,r)},t.digits=function(e){return e.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length},t.DBL_EPSILON=Number.EPSILON||2220446049250313e-31,t.nearlyEqual=function(e,r,n){var i;return null==n?e==r:e==r||!(isNaN(e)||isNaN(r)||!isFinite(e)||!isFinite(r)||!((i=Math.abs(e-r))<t.DBL_EPSILON||i<=Math.max(Math.abs(e),Math.abs(r))*n))}},function(e,t){"use strict";function r(e){e=String(e).toLowerCase().match(/^0*?(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!e)throw new SyntaxError("Invalid number");var r=e[1],n=e[2],i=parseFloat(e[4]||"0"),e=n.indexOf(".");i+=-1!==e?e-1:n.length-1,this.sign=r,this.coefficients=n.replace(".","").replace(/^0*/,function(e){return i-=e.length,""}).replace(/0*$/,"").split("").map(function(e){return parseInt(e)}),0===this.coefficients.length&&(this.coefficients.push(0),i++),this.exponent=i}function n(e){for(var t=[],r=0;r<e;r++)t.push(0);return t}r.prototype.toEngineering=function(e){var e=this.roundDigits(e),r=e.exponent,i=e.coefficients,a=r%3==0?r:r<0?r-3-r%3:r-r%3,o=0<=r?r:Math.abs(a);i.length-1<o&&(i=i.concat(n(o-(i.length-1))));for(var s=Math.abs(r-a),u=1;0<=--s;)u++;o=i.slice(u).join(""),o=o.match(/[1-9]/)?"."+o:"",i=i.slice(0,u).join("")+o;return i+="e"+(0<=r?"+":"")+a.toString(),e.sign+i},r.prototype.toFixed=function(e){var t=this.roundDigits(this.exponent+1+(e||0)),r=t.coefficients,t=t.exponent+1,a=t+(e||0);return r.length<a&&(r=r.concat(n(a-r.length))),t<0&&(r=n(1-t).concat(r),t=1),e&&r.splice(t,0,0===t?"0.":"."),this.sign+r.join("")},r.prototype.toExponential=function(e){var t=e?this.roundDigits(e):this.clone(),r=t.coefficients,t=t.exponent,e=(r=r.length<e?r.concat(n(e-r.length)):r).shift();return this.sign+e+(0<r.length?"."+r.join(""):"")+"e"+(0<=t?"+":"")+t},r.prototype.toPrecision=function(e,t){var r=t&&void 0!==t.lower?t.lower:.001,t=t&&void 0!==t.upper?t.upper:1e5,a=Math.abs(Math.pow(10,this.exponent));return a<r||t<=a?this.toExponential(e):(t=(r=e?this.roundDigits(e):this.clone()).coefficients,a=r.exponent,t=(t=t.length<e?t.concat(n(e-t.length)):t).concat(n(a-t.length+1+(t.length<e?e-t.length:0))),(r=0<a?a:0)<(t=n(-a).concat(t)).length-1&&t.splice(r+1,0,"."),this.sign+t.join(""))},r.prototype.clone=function(){var e=new r("0");return e.sign=this.sign,e.coefficients=this.coefficients.slice(0),e.exponent=this.exponent,e},r.prototype.roundDigits=function(e){for(var t=this.clone(),r=t.coefficients;e<=0;)r.unshift(0),t.exponent++,e++;if(r.length>e&&5<=r.splice(e,r.length-e)[0]){var i=e-1;for(r[i]++;10===r[i];)r.pop(),0===i&&(r.unshift(0),t.exponent++,i++),r[--i]++}return t},e.exports=r},function(e,t,r){var n=r(9);t.mixin=function(e){var t=new n;return e.on=t.on.bind(t),e.off=t.off.bind(t),e.once=t.once.bind(t),e.emit=t.emit.bind(t),e}},function(e,t){function r(){}r.prototype={on:function(e,t,r){var n=this.e||(this.e={});return(n[e]||(n[e]=[])).push({fn:t,ctx:r}),this},once:function(e,t,r){function n(){i.off(e,n),t.apply(r,arguments)}var i=this;return n._=t,this.on(e,n,r)},emit:function(e){for(var t=[].slice.call(arguments,1),r=((this.e||(this.e={}))[e]||[]).slice(),n=0,i=r.length;n<i;n++)r[n].fn.apply(r[n].ctx,t);return this},off:function(e,t){var r=this.e||(this.e={}),n=r[e],i=[];if(n&&t)for(var a=0,o=n.length;a<o;a++)n[a].fn!==t&&n[a].fn._!==t&&i.push(n[a]);return i.length?r[e]=i:delete r[e],this}},e.exports=r},function(e,t,r){"use strict";var i=r(3).lazy,a=r(3).isFactory,o=r(3).traverse,s=(r(3).extend,r(11));t.math=!0,t.name="import",t.factory=function(e,t,r,n,u){function f(e,t,r){if(r.wrap&&"function"==typeof t&&(t=function(e){function t(){for(var t=[],r=0,n=arguments.length;r<n;r++){var i=arguments[r];t[r]=i&&i.valueOf()}return e.apply(u,t)}return e.transform&&(t.transform=e.transform),t}(t)),g(u[e])&&g(t))return t=r.override?n(e,t.signatures):n(u[e],t),l(e,u[e]=t),u.emit("import",e,function(){return t});if(void 0===u[e]||r.override)return l(e,u[e]=t),u.emit("import",e,function(){return t});if(!r.silent)throw new Error('Cannot import "'+e+'": already exists')}function l(e,t){t&&"function"==typeof t.transform&&(u.expression.transform[e]=t.transform)}function m(e,t){var a,s,c,f;"string"==typeof e.name?(a=e.name,s=e.path?o(u,e.path):u,c=s.hasOwnProperty(a)?s[a]:void 0,!(f=function(){var i=r(e);if(g(c)&&g(i))return i=t.override?i:n(c,i);if(void 0===c||t.override)return i;if(!t.silent)throw new Error('Cannot import "'+a+'": already exists')})!==e.lazy?i(s,a,f):s[a]=f(),u.emit("import",a,f,e.path)):r(e)}function g(e){return"function"==typeof e&&"object"==typeof e.signatures}return function c(e,t){var i,r=arguments.length;if(1!=r&&2!=r)throw new s("import",r,1,2);if(t=t||{},a(e))m(e,t);else if(Array.isArray(e))e.forEach(function(e){c(e,t)});else if("object"==typeof e)for(var n in e)e.hasOwnProperty(n)&&(function(e){return"function"==typeof e||"number"==typeof e||"string"==typeof e||"boolean"==typeof e||null===e||e&&!0===e.isUnit||e&&!0===e.isComplex}(i=e[n])?f(n,i,t):a(e)?m(e,t):c(i,t));else if(!t.silent)throw new TypeError("Factory, Object, or Array expected")}},t.lazy=!0},function(e,t){"use strict";function r(e,t,n,i){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.fn=e,this.count=t,this.min=n,this.max=i,this.message="Wrong number of arguments in function "+e+" ("+t+" provided, "+n+(null!=i?"-"+i:"")+" expected)",this.stack=(new Error).stack}(r.prototype=new Error).constructor=Error,r.prototype.name="ArgumentsError",r.prototype.isArgumentsError=!0,e.exports=r},function(e,t,r){"use strict";var i=r(3);t.name="config",t.math=!0,t.factory=function(e,t,r,n,a){return function(e){var r;return e?(r=i.clone(t),i.deepExtend(t,e),e=i.clone(t),a.emit("config",e,r),e):i.clone(t)}}},function(e,t,r){e.exports=[r(14),r(92),r(96),r(320),r(495),r(497)]},function(e,t,r){e.exports=[r(15),r(20),r(21),r(26),r(30),r(36),r(68),r(69),r(71),r(72)]},function(e,t,r){e.exports=[r(16),r(18)]},function(e,t,r){var i=r(17);r(6).digits,t.name="BigNumber",t.path="type",t.factory=function(e,t,r,n,a){var o=i.constructor(t);return o.prototype.type="BigNumber",o.prototype.isBigNumber=!0,o.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},o.fromJSON=function(e){return new o(e.value)},a.on("config",function(e,t){e.precision!==t.precision&&o.config({precision:e.precision})}),o},t.math=!0},function(e,t,r){var n;!function(i){"use strict";function a(e){for(var t,r,n=1,i=e.length,a=e[0]+"";n<i;n++){for(t=e[n]+"",r=_-t.length;r--;)t="0"+t;a+=t}for(i=a.length;48===a.charCodeAt(--i););return a.slice(0,i+1||1)}function o(e,t,r,n){for(var i,a=1,o=e[0];10<=o;o/=10,a++);return(o=t-a)<0?(o+=_,i=0):(i=Math.ceil((o+1)/_),o%=_),a=E(10,_-o),t=e[i]%a|0,null==n?o<3?(0==o?t=t/100|0:1==o&&(t=t/10|0),r<4&&99999==t||3<r&&49999==t||5e4==t||0==t):(r<4&&t+1==a||3<r&&t+1==a/2)&&(e[i+1]/a/100|0)==E(10,o-2)-1||(t==a/2||0==t)&&0==(e[i+1]/a/100|0):o<4?(0==o?t=t/1e3|0:1==o?t=t/100|0:2==o&&(t=t/10|0),(n||r<4)&&9999==t||!n&&3<r&&4999==t):((n||r<4)&&t+1==a||!n&&3<r&&t+1==a/2)&&(e[i+1]/a/1e3|0)==E(10,o-3)-1}function s(e,t,r){e=e.constructor;return null==t||((y=t<0||8<t)||0!==t&&(e.errors?parseInt:parseFloat)(t)!=t)&&!p(e,"rounding mode",t,r,0)?e.rounding:0|t}function u(e,t,r,n){e=e.constructor;return!(y=t<(n||0)||S+1<=t)&&(0===t||(e.errors?parseInt:parseFloat)(t)==t)||p(e,"argument",t,r,0)}function c(e,t){var r,n,i,s,u,c,f,l=0,p=0,m=0,h=e.constructor,v=h.ONE,d=h.rounding,y=h.precision;if(!e.c||!e.c[0]||17<e.e)return new h(e.c?e.c[0]?e.s<0?0:1/0:v:e.s?e.s<0?0:e:NaN);for(u=null==t?(b=!1,y):t,f=new h(.03125);-2<e.e;)e=e.times(f),m+=5;for(u+=n=Math.log(E(2,m))/Math.LN10*2+5|0,r=s=c=new h(v),h.precision=u;;){if(s=g(s.times(e),u,1),r=r.times(++p),a((f=c.plus(k(s,r,u,1))).c).slice(0,u)===a(c.c).slice(0,u)){for(i=m;i--;)c=g(c.times(c),u,1);if(null!=t)return h.precision=y,c;if(!(l<3&&o(c.c,u-n,d,l)))return g(c,h.precision=y,d,b=!0);h.precision=u+=10,r=s=f=new h(v),p=0,l++}c=f}}function f(e,t,r,n){var i,o,s=e.constructor,u=(e=new s(e)).e;if(r=null==t?0:(g(e,++t,r),n?t:t+e.e-u),u=e.e,i=a(e.c),1==n||2==n&&(t<=u||u<=s.toExpNeg)){for(;i.length<r;i+="0");1<i.length&&(i=i.charAt(0)+"."+i.slice(1)),i+=(u<0?"e":"e+")+u}else{if(n=i.length,u<0){for(o=r-n;++u;i="0"+i);i="0."+i}else if(++u>n){for(o=r-u,u-=n;u--;i+="0");0<o&&(i+=".")}else o=r-n,u<n?i=i.slice(0,u)+"."+i.slice(u):0<o&&(i+=".");if(0<o)for(;o--;i+="0");}return e.s<0&&e.c[0]?"-"+i:i}function l(e){var t=e.length-1,r=t*_+1;if(t=e[t]){for(;t%10==0;t/=10,r--);for(t=e[0];10<=t;t/=10,r++);}return r}function p(e,t,r,n,i){if(e.errors)throw(e=new Error((n||["new Decimal","cmp","div","eq","gt","gte","lt","lte","minus","mod","plus","times","toFraction","pow","random","log","sqrt","toNearest","divToInt"][w?w<0?-w:w:1/w<0?1:0])+"() "+(["number type has more than 15 significant digits","LN10 out of digits"][t]||t+([y?" out of range":" not an integer"," not a boolean or binary digit"][i]||""))+": "+r)).name="Decimal Error",y=w=0,e}function m(e,t,r){var n=new e(e.ONE);for(b=!1;1&r&&(n=n.times(t)),r>>=1;)t=t.times(t);return b=!0,n}function h(e,t){var r,n,i,s,u,c,f,l,m,v,d,y=1,w=e,N=w.c,E=w.constructor,M=E.ONE,A=E.rounding,_=E.precision;if(w.s<0||!N||!N[0]||!w.e&&1==N[0]&&1==N.length)return new E(N&&!N[0]?-1/0:1!=w.s?NaN:N?0:w);if(f=null==t?(b=!1,_):t,E.precision=f+=10,n=(r=a(N)).charAt(0),!(Math.abs(s=w.e)<15e14))return w=new E(n+"."+r.slice(1)),B.length<f+2&&p(E,1,f+2,"ln"),w=h(w,f-10).plus(new E(B.slice(0,f+2)).times(s+"")),E.precision=_,null==t?g(w,_,A,b=!0):w;for(;n<7&&1!=n||1==n&&3<r.charAt(1);)n=(r=a((w=w.times(e)).c)).charAt(0),y++;for(s=w.e,1<n?(w=new E("0."+r),s++):w=new E(n+"."+r.slice(1)),l=u=w=k((v=w).minus(M),w.plus(M),f,1),d=g(w.times(w),f,1),i=3;;){if(u=g(u.times(d),f,1),a((m=l.plus(k(u,new E(i),f,1))).c).slice(0,f)===a(l.c).slice(0,f)){if(l=l.times(2),0!==s&&(B.length<f+2&&p(E,1,f+2,"ln"),l=l.plus(new E(B.slice(0,f+2)).times(s+""))),l=k(l,new E(y),f,1),null!=t)return E.precision=_,l;if(!o(l.c,f-10,A,c))return g(l,E.precision=_,A,b=!0);E.precision=f+=10,m=u=w=k(v.minus(M),v.plus(M),f,1),d=g(w.times(w),f,1),i=c=1}l=m,i+=2}}function g(e,t,r,n){var i,a,o,s,u,c,f,l,p=e.constructor;e:if(null!=t){if(!(f=e.c))return e;for(i=1,s=f[0];10<=s;s/=10,i++);if((a=t-i)<0)a+=_,o=t,c=(u=f[l=0])/E(10,i-o-1)%10|0;else if((l=Math.ceil((a+1)/_))>=f.length){if(!n)break e;for(;f.length<=l;f.push(0));u=c=0,o=(a%=_)-_+(i=1)}else{for(u=s=f[l],i=1;10<=s;s/=10,i++);c=(o=(a%=_)-_+i)<0?0:N(u/E(10,i-o-1)%10)}if(n=n||t<0||null!=f[l+1]||(o<0?u:u%E(10,i-o-1)),n=r<4?(c||n)&&(0==r||r==(e.s<0?3:2)):5<c||5==c&&(4==r||n||6==r&&(0<a?0<o?u/E(10,i-o):0:f[l-1])%10&1||r==(e.s<0?8:7)),t<1||!f[0])return f.length=0,n?(t-=e.e+1,f[0]=E(10,(_-t%_)%_),e.e=-t||0):f[0]=e.e=0,e;if(0==a?(f.length=l,s=1,l--):(f.length=l+1,s=E(10,_-a),f[l]=0<o?(u/E(10,i-o)%E(10,o)|0)*s:0),n)for(;;){if(0==l){for(a=1,o=f[0];10<=o;o/=10,a++);for(o=f[0]+=s,s=1;10<=o;o/=10,s++);a!=s&&(e.e++,f[0]==A)&&(f[0]=1);break}if(f[l]+=s,f[l]!=A)break;f[l--]=0,s=1}for(a=f.length;0===f[--a];f.pop());}return b&&(e.e>p.maxE?e.c=e.e=null:e.e<p.minE&&(e.c=[e.e=0])),e}var v,y,x=i.crypto,b=!0,w=0,N=Math.floor,E=Math.pow,M=Object.prototype.toString,A=1e7,_=7,O="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_",T={},C=9e15,S=1e9,B="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",k=(T.absoluteValue=T.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),g(e)},T.ceil=function(){return g(new this.constructor(this),this.e+1,2)},T.comparedTo=T.cmp=function(e,t){var r,n=this,i=n.c,a=(w=-w,(e=new n.constructor(e,t)).c),o=n.s,s=e.s,n=n.e,e=e.e;if(!o||!s)return null;if(r=i&&!i[0],t=a&&!a[0],r||t)return r?t?0:-s:o;if(o!=s)return o;if(r=o<0,!i||!a)return n==e?0:!i^r?1:-1;if(n!=e)return e<n^r?1:-1;for(o=-1,s=(n=i.length)<(e=a.length)?n:e;++o<s;)if(i[o]!=a[o])return i[o]>a[o]^r?1:-1;return n==e?0:e<n^r?1:-1},T.decimalPlaces=T.dp=function(){var e,t,r=null;if(e=this.c){if(r=((t=e.length-1)-N(this.e/_))*_,t=e[t])for(;t%10==0;t/=10,r--);r<0&&(r=0)}return r},T.dividedBy=T.div=function(e,t){return w=2,k(this,new this.constructor(e,t))},T.dividedToIntegerBy=T.divToInt=function(e,t){var n=this.constructor;return w=18,g(k(this,new n(e,t),0,1,1),n.precision,n.rounding)},T.equals=T.eq=function(e,t){return w=3,0===this.cmp(e,t)},T.exponential=T.exp=function(){return c(this)},T.floor=function(){return g(new this.constructor(this),this.e+1,3)},T.greaterThan=T.gt=function(e,t){return w=4,0<this.cmp(e,t)},T.greaterThanOrEqualTo=T.gte=function(e,t){return w=5,1==(t=this.cmp(e,t))||0===t},T.isFinite=function(){return!!this.c},T.isInteger=T.isInt=function(){return!!this.c&&N(this.e/_)>this.c.length-2},T.isNaN=function(){return!this.s},T.isNegative=T.isNeg=function(){return this.s<0},T.isZero=function(){return!!this.c&&0==this.c[0]},T.lessThan=T.lt=function(e,t){return w=6,this.cmp(e,t)<0},T.lessThanOrEqualTo=T.lte=function(e,t){return w=7,-1==(t=this.cmp(e,t))||0===t},T.logarithm=T.log=function(e,t){var r,n,i,s,u,c,f,l,m,v=this,d=v.constructor,y=d.precision,x=d.rounding;if(null==e)e=new d(10),r=!0;else{if(w=15,n=(e=new d(e,t)).c,e.s<0||!n||!n[0]||!e.e&&1==n[0]&&1==n.length)return new d(NaN);r=e.eq(10)}if(n=v.c,v.s<0||!n||!n[0]||!v.e&&1==n[0]&&1==n.length)return new d(n&&!n[0]?-1/0:1!=v.s?NaN:n?0:1/0);if(u=r&&(s=n[0],1<n.length||1!=s&&10!=s&&100!=s&&1e3!=s&&1e4!=s&&1e5!=s&&1e6!=s),b=!1,l=(f=y+5)+10,c=h(v,f),i=r?(B.length<l&&p(d,1,l,"log"),new d(B.slice(0,l))):h(e,f),o((m=k(c,i,f,1)).c,s=y,x))do{if(c=h(v,f+=10),i=r?(B.length<(l=f+10)&&p(d,1,l,"log"),new d(B.slice(0,l))):h(e,f),m=k(c,i,f,1),!u){+a(m.c).slice(s+1,s+15)+1==1e14&&(m=g(m,y+1,0));break}}while(o(m.c,s+=10,x));return b=!0,g(m,y,x)},T.minus=function(e,t){var r,n,i,a,o=this,s=o.constructor,u=o.s;if(w=8,t=(e=new s(e,t)).s,!u||!t)return new s(NaN);if(u!=t)return e.s=-t,o.plus(e);var c=o.c,f=e.c,l=N(e.e/_),p=N(o.e/_),m=s.precision,h=s.rounding;if(!p||!l){if(!c||!f)return c?(e.s=-t,e):new s(f?o:NaN);if(!c[0]||!f[0])return o=f[0]?(e.s=-t,e):new s(c[0]?o:3==h?-0:0),b?g(o,m,h):o}if(n=(c=c.slice()).length,u=p-l){for((a=u<0)?(u=-u,r=c,n=f.length):(l=p,r=f),(p=Math.ceil(m/_))>n&&(n=p),u>(n+=2)&&(u=n,r.length=1),r.reverse(),t=u;t--;r.push(0));r.reverse()}else for((a=n<(i=f.length))&&(i=n),u=t=0;t<i;t++)if(c[t]!=f[t]){a=c[t]<f[t];break}if(a&&(r=c,c=f,f=r,e.s=-e.s),0<(t=-((i=c.length)-f.length)))for(;t--;c[i++]=0);for(p=A-1,t=f.length;u<t;){if(c[--t]<f[t]){for(n=t;n&&!c[--n];c[n]=p);--c[n],c[t]+=A}c[t]-=f[t]}for(;0==c[--i];c.pop());for(;0==c[0];c.shift(),--l);for(c[0]||(c=[l=0],e.s=3==h?-1:1),u=1,t=(e.c=c)[0];10<=t;t/=10,u++);return e.e=u+l*_-1,b?g(e,m,h):e},T.modulo=T.mod=function(e,t){var r,n,i=this,a=i.constructor,o=a.modulo;return w=9,t=(e=new a(e,t)).s,(r=!i.c||!t||e.c&&!e.c[0])||!e.c||i.c&&!i.c[0]?r?new a(NaN):g(new a(i),a.precision,a.rounding):(b=!1,9==o?(e.s=1,n=k(i,e,0,3,1),e.s=t,n.s*=t):n=k(i,e,0,o,1),n=n.times(e),b=!0,i.minus(n))},T.naturalLogarithm=T.ln=function(){return h(this)},T.negated=T.neg=function(){var e=new this.constructor(this);return e.s=-e.s||null,g(e)},T.plus=function(e,t){var r,n=this,i=n.constructor,a=n.s;if(w=10,t=(e=new i(e,t)).s,!a||!t)return new i(NaN);if(a!=t)return e.s=-t,n.minus(e);var o=n.c,s=e.c,u=N(e.e/_),c=N(n.e/_),f=i.precision,l=i.rounding;if(!c||!u){if(!o||!s)return new i(a/0);if(!o[0]||!s[0])return n=s[0]?e:new i(o[0]?n:0*a),b?g(n,f,l):n}if(o=o.slice(),a=c-u){for(t=(a<0?(a=-a,r=o,s):(u=c,r=s,o)).length,(c=Math.ceil(f/_))>t&&(t=c),a>++t&&(a=t,r.length=1),r.reverse();a--;r.push(0));r.reverse()}for(o.length-s.length<0&&(r=s,s=o,o=r),a=s.length,t=0,c=A;a;o[a]%=c)t=(o[--a]=o[a]+s[a]+t)/c|0;for(t&&(o.unshift(t),++u),a=o.length;0==o[--a];o.pop());for(a=1,t=(e.c=o)[0];10<=t;t/=10,a++);return e.e=a+u*_-1,b?g(e,f,l):e},T.precision=T.sd=function(e){var t=null,r=this;return e!=t&&e!==!!e&&1!==e&&0!==e&&p(r.constructor,"argument",e,"precision",1),t=r.c&&(t=l(r.c),e)&&r.e+1>t?r.e+1:t},T.round=function(){var e=this,t=e.constructor;return g(new t(e),e.e+1,t.rounding)},T.squareRoot=T.sqrt=function(){var e,t,r,n,i,o,s=this,u=s.c,c=s.s,f=s.e,l=s.constructor,p=new l(.5);if(1!==c||!u||!u[0])return new l(!c||c<0&&(!u||u[0])?NaN:u?s:1/0);for(b=!1,n=0==(c=Math.sqrt(+s))||c==1/0?(((t=a(u)).length+f)%2==0&&(t+="0"),c=Math.sqrt(t),f=N((f+1)/2)-(f<0||f%2),new l(t=c==1/0?"1e"+f:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+f)):new l(c.toString()),r=(f=l.precision)+3;;)if(o=n,n=p.times(o.plus(k(s,o,r+2,1))),a(o.c).slice(0,r)===(t=a(n.c)).slice(0,r)){if("9999"!=(t=t.slice(r-3,r+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(g(n,f+1,1),e=!n.times(n).eq(s));break}if(!i&&(g(o,f+1,0),o.times(o).eq(s))){n=o;break}r+=4,i=1}return b=!0,g(n,f,l.rounding,e)},T.times=function(e,t){var r,i=this,a=i.constructor,o=i.c,s=(w=11,(e=new a(e,t)).c),u=N(i.e/_),c=N(e.e/_),f=i.s;if(t=e.s,e.s=f==t?1:-1,!(u||o&&o[0])||!(c||s&&s[0]))return new a(!f||!t||o&&!o[0]&&!s||s&&!s[0]&&!o?NaN:o&&s?0*e.s:e.s/0);for(i=u+c,(f=o.length)<(t=s.length)&&(r=o,o=s,s=r,c=f,f=t,t=c),c=f+t,r=[];c--;r.push(0));for(u=t-1;-1<u;u--){for(t=0,c=f+u;u<c;)t=r[c]+s[u]*o[c-u-1]+t,r[c--]=t%A|0,t=t/A|0;r[c]=(r[c]+t)%A|0}for(t?++i:r[0]||r.shift(),c=r.length;!r[--c];r.pop());for(f=1,t=(e.c=r)[0];10<=t;t/=10,f++);return e.e=f+i*_-1,b?g(e,a.precision,a.rounding):e},T.toDecimalPlaces=T.toDP=function(e,t){var r=new this.constructor(this);return null!=e&&u(r,e,"toDP")?g(r,(0|e)+r.e+1,s(r,t,"toDP")):r},T.toExponential=function(e,t){var r=this;return r.c?f(r,null!=e&&u(r,e,"toExponential")?0|e:null,null!=e&&s(r,t,"toExponential"),1):r.toString()},T.toFixed=function(e,t){var r,n=this,i=n.constructor,a=i.toExpNeg,o=i.toExpPos;return null!=e&&(e=u(n,e,r="toFixed")?n.e+(0|e):null,t=s(n,t,r)),i.toExpNeg=-(i.toExpPos=1/0),null!=e&&n.c?(r=f(n,e,t),n.s<0&&n.c&&(n.c[0]?r.indexOf("-")<0&&(r="-"+r):r=r.replace("-",""))):r=n.toString(),i.toExpNeg=a,i.toExpPos=o,r},T.toFormat=function(e,t){var r=this;if(!r.c)return r.toString();var n,i=r.s<0,a=r.constructor.format,o=a.groupSeparator,s=+a.groupSize,u=+a.secondaryGroupSize,r=r.toFixed(e,t).split("."),f=r[0],e=r[1],p=i?f.slice(1):f,m=p.length;if(u&&(n=s,s=u,m-=u=n),0<s&&0<m){for(f=p.substr(0,n=m%s||s);n<m;n+=s)f+=o+p.substr(n,s);0<u&&(f+=o+p.slice(n)),i&&(f="-"+f)}return e?f+a.decimalSeparator+((u=+a.fractionGroupSize)?e.replace(new RegExp("\\d{"+u+"}\\B","g"),"$&"+a.fractionGroupSeparator):e):f},T.toFraction=function(e){var t,r,n,o,s,u,c,f=this,m=f.constructor,h=t=new m(m.ONE),g=s=new m(0),v=f.c,d=new m(g);if(!v)return f.toString();for(n=d.e=l(v)-f.e-1,d.c[0]=E(10,(u=n%_)<0?_+u:u),(null==e||(w=12,(!(o=new m(e)).s||(y=o.cmp(h)<0||!o.c)||m.errors&&N(o.e/_)<o.c.length-1)&&!p(m,"max denominator",e,"toFraction",0))||0<(e=o).cmp(d))&&(e=0<n?d:h),b=!1,o=new m(a(v)),u=m.precision,m.precision=n=v.length*_*2;c=k(o,d,0,1,1),1!=(r=t.plus(c.times(g))).cmp(e);)t=g,g=r,h=s.plus(c.times(r=h)),s=r,d=o.minus(c.times(r=d)),o=r;return r=k(e.minus(t),g,0,1,1),s=s.plus(r.times(h)),t=t.plus(r.times(g)),s.s=h.s=f.s,v=k(h,g,n,1).minus(f).abs().cmp(k(s,t,n,1).minus(f).abs())<1?[h+"",g+""]:[s+"",t+""],b=!0,m.precision=u,v},T.toNearest=function(e,t){var n=(r=this).constructor,r=new n(r);return t=null==e?(e=new n(n.ONE),n.rounding):(w=17,e=new n(e),s(r,t,"toNearest")),e.c?r.c&&(e.c[0]?(b=!1,r=k(r,e,0,t<4?[4,5,7,8][t]:t,1).times(e),b=!0,g(r)):r.c=[r.e=0]):r.s&&(e.s&&(e.s=r.s),r=e),r},T.toNumber=function(){var e=this;return+e||(e.s?0*e.s:NaN)},T.toPower=T.pow=function(e,t){var r,n,i,s,u=this,f=u.constructor,l=u.s,p=(w=13,+(e=new f(e,t))),v=p<0?-p:p,d=f.precision,y=f.rounding;if(!u.c||!e.c||(i=!u.c[0])||!e.c[0])return new f(E(i?0*l:+u,p));if(r=(u=new f(u)).c.length,!u.e&&u.c[0]==u.s&&1==r)return u;if(t=e.c.length-1,e.e||e.c[0]!=e.s||t)if(!(i=t<=(n=N(e.e/_)))&&l<0)s=new f(NaN);else{if(i&&r*_*v<3e3){if(s=m(f,u,v),e.s<0)return f.ONE.div(s)}else{if(l=l<0&&1&e.c[Math.max(n,t)]?-1:1,(n=0!=(t=E(+u,p))&&isFinite(t)?new f(t+"").e:N(p*(Math.log("0."+a(u.c))/Math.LN10+u.e+1)))>f.maxE+1||n<f.minE-1)return new f(0<n?l/0:0);b=!1,f.rounding=u.s=1,v=Math.min(12,(n+"").length),(s=o((s=g(s=c(e.times(h(u,d+v)),d),d+5,1)).c,d,y)&&+a((s=g(c(e.times(h(u,(n=d+10)+v)),n),n+5,1)).c).slice(d+1,d+15)+1==1e14?g(s,d+1,0):s).s=l,b=!0,f.rounding=y}s=g(s,d,y)}else s=g(u,d,y);return s},T.toPrecision=function(e,t){var r=this;return null!=e&&u(r,e,"toPrecision",1)&&r.c?f(r,0|--e,s(r,t,"toPrecision"),2):r.toString()},T.toSignificantDigits=T.toSD=function(e,t){var n=this.constructor,r=new n(this);return null!=e&&u(r,e,"toSD",1)?g(r,0|e,s(r,t,"toSD")):g(r,n.precision,n.rounding)},T.toString=function(e){var t,r,n,i=this,o=i.constructor,s=i.e;if(null===s)r=i.s?"Infinity":"NaN";else{if(e===t&&(s<=o.toExpNeg||s>=o.toExpPos))return f(i,null,o.rounding,1);if(r=a(i.c),s<0){for(;++s;r="0"+r);r="0."+r}else if(n=r.length,0<s)if(++s>n)for(s-=n;s--;r+="0");else s<n&&(r=r.slice(0,s)+"."+r.slice(s));else if(t=r.charAt(0),1<n)r=t+"."+r.slice(1);else if("0"==t)return t;if(null!=e)if((y=!(2<=e&&e<65))||e!=(0|e)&&o.errors)p(o,"base",e,"toString",0);else if("0"==(r=v(o,r,0|e,10,i.s)))return r}return i.s<0?"-"+r:r},T.truncated=T.trunc=function(){return g(new this.constructor(this),this.e+1,1)},T.valueOf=T.toJSON=function(){return this.toString()},v=function(){function e(e,t,r){for(var n,i,a=[0],o=0,s=e.length;o<s;){for(i=a.length;i--;a[i]*=t);for(a[n=0]+=O.indexOf(e.charAt(o++));n<a.length;n++)r-1<a[n]&&(null==a[n+1]&&(a[n+1]=0),a[n+1]+=a[n]/r|0,a[n]%=r)}return a.reverse()}return function(t,r,n,i,a){var o,s,u,c,f,l,p=r.indexOf("."),h=t.precision,g=t.rounding;for(i<37&&(r=r.toLowerCase()),0<=p&&(r=r.replace(".",""),l=new t(i),c=m(t,l,r.length-p),l.c=e(c.toFixed(),10,n),l.e=l.c.length),o=s=(f=e(r,i,n)).length;0==f[--s];f.pop());if(!f[0])return"0";if(p<0?o--:(c.c=f,c.e=o,c.s=a,f=(c=k(c,l,h,g,0,n)).c,u=c.r,o=c.e),p=f[h],s=n/2,u=u||null!=f[h+1],g<4?(null!=p||u)&&(0==g||g==(a<0?3:2)):s<p||p==s&&(4==g||u||6==g&&1&f[h-1]||g==(a<0?8:7)))for(f.length=h,--n;++f[--h]>n;)f[h]=0,h||(++o,f.unshift(1));else f.length=h;for(s=f.length;!f[--s];);for(p=0,r="";p<=s;r+=O.charAt(f[p++]));if(o<0){for(;++o;r="0"+r);r="0."+r}else if(++o>(p=r.length))for(o-=p;o--;r+="0");else o<p&&(r=r.slice(0,o)+"."+r.slice(o));return r}}(),function(){function e(e,t,r){var n,i=0,a=e.length;for(e=e.slice();a--;)n=e[a]*t+i,e[a]=n%r|0,i=n/r|0;return i&&e.unshift(i),e}function t(e,t,r,n){var i,a;if(r!=n)a=n<r?1:-1;else for(i=a=0;i<r;i++)if(e[i]!=t[i]){a=e[i]>t[i]?1:-1;break}return a}function r(e,t,r,n){for(var i=0;r--;)e[r]-=i,i=e[r]<t[r]?1:0,e[r]=i*n+e[r]-t[r];for(;!e[0]&&1<e.length;e.shift());}return function(n,i,a,o,s,u){var c,f,l,p,m,h,v,d,y,x,b,w,E,M,O,T,C,S,z,B=n.constructor,k=n.s==i.s?1:-1,I=n.c,R=i.c;if(!(I&&I[0]&&R&&R[0]))return new B(n.s&&i.s&&(I?!R||I[0]!=R[0]:R)?I&&0==I[0]||!R?0*k:k/0:NaN);for(f=u?(p=1,n.e-i.e):(u=A,N(n.e/(p=_))-N(i.e/p)),S=R.length,T=I.length,x=(y=new B(k)).c=[],l=0;R[l]==(I[l]||0);l++);if(R[l]>(I[l]||0)&&f--,null==a?(k=a=B.precision,o=B.rounding):k=s?a+(n.e-i.e)+1:a,k<0)x.push(1),m=!0;else{if(k=k/p+2|0,l=0,1==S){for(R=R[h=0],k++;(l<T||h)&&k--;l++)M=h*u+(I[l]||0),x[l]=M/R|0,h=M%R|0;m=h||l<T}else{for(1<(h=u/(R[0]+1)|0)&&(R=e(R,h,u),I=e(I,h,u),S=R.length,T=I.length),O=S,w=(b=I.slice(0,S)).length;w<S;b[w++]=0);for((z=R.slice()).unshift(0),C=R[0],R[1]>=u/2&&C++;h=0,(c=t(R,b,S,w))<0?(E=b[0],1<(h=(E=S!=w?E*u+(b[1]||0):E)/C|0)?1==(c=t(v=e(R,h=u<=h?u-1:h,u),b,d=v.length,w=b.length))&&(h--,r(v,S<d?z:R,d,u)):(0==h&&(c=h=1),v=R.slice()),(d=v.length)<w&&v.unshift(0),r(b,v,w,u),-1==c&&(c=t(R,b,S,w=b.length))<1&&(h++,r(b,S<w?z:R,w,u)),w=b.length):0===c&&(h++,b=[0]),x[l++]=h,c&&b[0]?b[w++]=I[O]||0:(b=[I[O]],w=1),(O++<T||null!=b[0])&&k--;);m=null!=b[0]}x[0]||x.shift()}if(1==p)y.e=f,y.r=+m;else{for(l=1,k=x[0];10<=k;k/=10,l++);y.e=l+f*p-1,g(y,s?a+y.e+1:a,o,m)}return y}}()),d=function(){function e(e){var t,r,n,i=this,a="config",o=i.errors?parseInt:parseFloat;return e==r||("object"!=typeof e?!p(i,"object expected",e,a):((n=e[t="precision"])!=r&&((y=n<1||S<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(n=e[t="rounding"])!=r&&((y=n<0||8<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(n=e[t="toExpNeg"])!=r&&((y=n<-C||0<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="toExpPos"])!=r&&((y=n<0||C<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="minE"])!=r&&((y=n<-C||0<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="maxE"])!=r&&((y=n<0||C<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="errors"])!=r&&(n===!!n||1===n||0===n?(y=w=0,i[t]=!!n):p(i,t,n,a,1)),(n=e[t="crypto"])!=r&&(n===!!n||1===n||0===n?i[t]=!(!n||!x||"object"!=typeof x):p(i,t,n,a,1)),(n=e[t="modulo"])!=r&&((y=n<0||9<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(e=e[t="format"])!=r&&("object"==typeof e?i[t]=e:p(i,"format object expected",e,a)))),i}function t(e){return new this(e).exp()}function r(e){return new this(e).ln()}function n(e,t){return new this(e).log(t)}function i(e,t,r){for(var i,a=0,n=new e((t="[object Array]"==M.call(t[0])?t[0]:t)[0]);++a<t.length;){if(!(i=new e(t[a])).s){n=i;break}n[r](i)&&(n=i)}return n}function a(){return i(this,arguments,"lt")}function o(){return i(this,arguments,"gt")}function s(e,t){return new this(e).pow(t)}function c(e){var t,r,n,i=0,a=[],o=this,s=new o(o.ONE);if(null!=e&&u(s,e,"random")?e|=0:e=o.precision,r=Math.ceil(e/_),o.crypto)if(x&&x.getRandomValues)for(t=x.getRandomValues(new Uint32Array(r));i<r;)429e7<=(n=t[i])?t[i]=x.getRandomValues(new Uint32Array(1))[0]:a[i++]=n%1e7;else if(x&&x.randomBytes){for(t=x.randomBytes(r*=4);i<r;)214e7<=(n=t[i]+(t[i+1]<<8)+(t[i+2]<<16)+((127&t[i+3])<<24))?x.randomBytes(4).copy(t,i):(a.push(n%1e7),i+=4);i=r/4}else p(o,"crypto unavailable",x,"random");if(!i)for(;i<r;)a[i++]=1e7*Math.random()|0;for(r=a[--i],e%=_,r&&e&&(n=E(10,_-e),a[i]=(r/n|0)*n);0===a[i];i--)a.pop();if(i<0)a=[r=0];else{for(r=-1;0===a[0];)a.shift(),r-=_;for(i=1,n=a[0];10<=n;)n/=10,i++;i<_&&(r-=_-i)}return s.e=r,s.c=a,s}function f(e){return new this(e).sqrt()}var m=function(){var e=/^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,t=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};return function(r,n,i,a){var o,u,c,l,f=i="string"!=typeof i?(c="number"==typeof i||"[object Number]"==M.call(i))&&0===i&&1/i<0?"-0":i+"":i;if(null==a&&e.test(i))n.s=45===i.charCodeAt(0)?(i=i.slice(1),-1):1;else{if(10==a)return g(new r(i),r.precision,r.rounding);if(i=t.call(i).replace(/^\+(?!-)/,""),n.s=45===i.charCodeAt(0)?(i=i.replace(/^-(?!-)/,""),-1):1,null!=a?a!=(0|a)&&r.errors||(y=!(2<=a&&a<65))?(p(r,"base",a,0,0),l=e.test(i)):(o="["+O.slice(0,a|=0)+"]+",i=i.replace(/\.$/,"").replace(/^\./,"0."),(l=new RegExp("^"+o+"(?:\\."+o+")?$",a<37?"i":"").test(i))?(c&&(15<i.replace(/^0\.0*|\./,"").length&&p(r,0,f),c=!c),i=v(r,i,10,a,n.s)):"Infinity"!=i&&"NaN"!=i&&(p(r,"not a base "+a+" number",f),i="NaN")):l=e.test(i),!l)return n.c=n.e=null,"Infinity"!=i&&("NaN"!=i&&p(r,"not a number",f),n.s=null),w=0,n}for(0<(u=(i=-1<(o=i.indexOf("."))?i.replace(".",""):i).search(/e/i))?(o<0&&(o=u),o+=+i.slice(u+1),i=i.substring(0,u)):o<0&&(o=i.length),u=0;48===i.charCodeAt(u);u++);for(a=i.length;48===i.charCodeAt(--a););if(i=i.slice(u,a+1)){if(a=i.length,c&&15<a&&p(r,0,f),n.e=o=o-u-1,n.c=[],u=(o+1)%_,o<0&&(u+=_),u<a){for(u&&n.c.push(+i.slice(0,u)),a-=_;u<a;)n.c.push(+i.slice(u,u+=_));i=i.slice(u),u=_-i.length}else u-=a;for(;u--;i+="0");n.c.push(+i),b&&(n.e>r.maxE?n.c=n.e=null:n.e<r.minE&&(n.c=[n.e=0]))}else n.c=[n.e=0];return w=0,n}}();return function l(i){function u(e,t){var r=this;if(!(r instanceof u))return p(u,"Decimal called without new",e),new u(e,t);if(e instanceof(r.constructor=u)){if(null==t)return w=0,r.s=e.s,r.e=e.e,r.c=(e=e.c)&&e.slice(),r;if(10==t)return g(new u(e),u.precision,u.rounding);e+=""}return m(u,r,e,t)}return u.precision=20,u.rounding=4,u.modulo=1,u.toExpNeg=-7,u.toExpPos=21,u.minE=-C,u.maxE=C,u.errors=!0,u.crypto=!1,u.format={decimalSeparator:".",groupSeparator:",",groupSize:3,secondaryGroupSize:0,fractionGroupSeparator:" ",fractionGroupSize:0},u.prototype=T,u.ONE=new u(1),u.ROUND_UP=0,u.ROUND_DOWN=1,u.ROUND_CEIL=2,u.ROUND_FLOOR=3,u.ROUND_HALF_UP=4,u.ROUND_HALF_DOWN=5,u.ROUND_HALF_EVEN=6,u.ROUND_HALF_CEIL=7,u.ROUND_HALF_FLOOR=8,u.EUCLID=9,u.config=e,u.constructor=l,u.exp=t,u.ln=r,u.log=n,u.max=a,u.min=o,u.pow=s,u.sqrt=f,u.random=c,null!=i&&u.config(i),u}()}();void 0!==(n=function(){return d}.call(t,r,t,e))&&(e.exports=n)}(this)},function(e,t,r){"use strict";var i=r(19);t.name="bignumber",t.factory=function(e,t,r,n){var a=n("bignumber",{"":function(){return new e.BigNumber(0)},number:function(t){return new e.BigNumber(t+"")},string:function(t){return new e.BigNumber(t)},BigNumber:function(e){return e},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={0:"0",1:"\\left(${args[0]}\\right)"},a}},function(e,t){"use strict";e.exports=function r(e,t,n){return e&&"function"==typeof e.map?e.map(function(e){return r(e,t,n)}):t(e)}},function(e,t,r){"use strict";var i=r(19);t.name="boolean",t.factory=function(e,t,r,n){var a=n("bool",{"":function(){return!1},boolean:function(e){return e},number:function(e){return!!e},BigNumber:function(e){return!e.isZero()},string:function(e){var t=e.toLowerCase();if("true"===t)return!0;if("false"===t)return!1;t=Number(e);if(""==e||isNaN(t))throw new Error('Cannot convert "'+e+'" to a boolean');return!!t},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){e.exports=[r(22),r(25)]},function(e,t,r){"use strict";var i=r(23).format,a=r(3).lazy;t.name="Chain",t.path="type",t.factory=function(e,t,r,n,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");e&&e.isChain?this.value=e.value:this.value=e}function u(e,t){"function"==typeof t&&(s.prototype[e]=f(t))}function f(e){return function(){for(var t=[this.value],r=0;r<arguments.length;r++)t[r+1]=arguments[r];return new s(e.apply(e,t))}}return s.prototype.type="Chain",s.prototype.isChain=!0,s.prototype.done=function(){return this.value},s.prototype.valueOf=function(){return this.value},s.prototype.toString=function(){return i(this.value)},(s.createProxy=function(e,t){if("string"==typeof e)u(e,t);else for(var r in e)e.hasOwnProperty(r)&&u(r,e[r])})(o),o.on("import",function(e,t,r){void 0===r&&function(e,t){a(s.prototype,e,function(){var e=t();return"function"==typeof e?f(e):void 0})}(e,t)}),s},t.math=!0,t.lazy=!1},function(e,t,r){"use strict";var i=r(6).format,a=r(24).format;t.isString=function(e){return"string"==typeof e},t.endsWith=function(e,t){var r=e.length-t.length,n=e.length;return e.substring(r,n)===t},t.format=function(e,r){return"number"==typeof e?i(e,r):e&&!0===e.isBigNumber?a(e,r):e&&!0===e.isFraction?r&&"decimal"===r.fraction?e.toString():e.s*e.n+"/"+e.d:Array.isArray(e)?function n(e,r){if(Array.isArray(e)){for(var i="[",a=e.length,o=0;o<a;o++)0!=o&&(i+=", "),i+=n(e[o],r);return i+"]"}return t.format(e,r)}(e,r):t.isString(e)?'"'+e+'"':"function"==typeof e?e.syntax?e.syntax+"":"function":"object"==typeof e?"function"==typeof e.format?e.format(r):e.toString():String(e)}},function(e,t){t.format=function(e,r){if("function"==typeof r)return r(e);if(!e.isFinite())return e.isNaN()?"NaN":e.gt(0)?"Infinity":"-Infinity";var n="auto",i=void 0;switch(void 0!==r&&(r.notation&&(n=r.notation),"number"==typeof r?i=r:r.precision&&(i=r.precision)),n){case"fixed":return t.toFixed(e,i);case"exponential":return t.toExponential(e,i);case"auto":var u,a=.001,o=1e5;return r&&r.exponential&&(void 0!==r.exponential.lower&&(a=r.exponential.lower),void 0!==r.exponential.upper)&&(o=r.exponential.upper),e.constructor.toExpNeg,e.constructor.toExpPos,(e.constructor.config({toExpNeg:Math.round(Math.log(a)/Math.LN10),toExpPos:Math.round(Math.log(o)/Math.LN10)}),e.isZero())?"0":((u=e.abs()).gte(a)&&u.lt(o)?e.toSignificantDigits(i).toFixed():t.toExponential(e,i)).replace(/((\.\d*?)(0+))($|e)/,function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t});default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", or "fixed".')}},t.toExponential=function(e,t){return void 0!==t?e.toExponential(t-1):e.toExponential()},t.toFixed=function(e,t){return e.toFixed(t||0)}},function(e,t){"use strict";t.name="chain",t.factory=function(e,t,r,n){return n("chain",{"":function(){return new e.Chain},any:function(t){return new e.Chain(t)}})}},function(e,t,r){e.exports=[r(27),r(28)]},function(e,t,r){"use strict";var i=r(6).isNumber,a=r(6).format;t.name="Complex",t.path="type",t.factory=function(e,t,r,n){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");switch(arguments.length){case 0:this.re=0,this.im=0;break;case 1:var r=e;if("object"==typeof r){if("re"in r&&"im"in r){var n=new o(r.re,r.im);this.re=n.re,this.im=n.im;break}if("r"in r&&"phi"in r){n=o.fromPolar(r.r,r.phi);this.re=n.re,this.im=n.im;break}}throw new SyntaxError("Object with the re and im or r and phi properties expected.");case 2:if(!i(e)||!i(t))throw new TypeError("Two numbers expected in Complex constructor");this.re=e,this.im=t;break;default:throw new SyntaxError("One, two or three arguments expected in Complex constructor")}}function s(){for(;" "==d||"\t"==d;)f()}function c(e){return"0"<=e&&e<="9"}function f(){v++,d=g.charAt(v)}function l(e){v=e,d=g.charAt(v)}function p(){var t="",e=v;if("+"==d?f():"-"==d&&(t+=d,f()),!function(e){return"0"<=e&&e<="9"||"."==e}(d))return l(e),null;if("."==d){if(t+=d,f(),!c(d))return l(e),null}else{for(;c(d);)t+=d,f();"."==d&&(t+=d,f())}for(;c(d);)t+=d,f();if("E"==d||"e"==d){if(t+=d,f(),"+"!=d&&"-"!=d||(t+=d,f()),!c(d))return l(e),null;for(;c(d);)t+=d,f()}return t}function m(){var e=g.charAt(v+1);return"I"==d||"i"==d?(f(),"1"):"+"!=d&&"-"!=d||"I"!=e&&"i"!=e?null:(e="+"==d?"1":"-1",f(),f(),e)}function h(){return new SyntaxError('End of string expected, got "'+g.substr(v)+'"')}var g,v,d;return o.prototype.isComplex=!0,o.prototype.type="Complex",o.parse=function(e){if(v=-1,d="","string"!=typeof(g=e))throw new TypeError("Invalid argument in Complex.parse, string expected");f(),s();var t=p();if(t){if("I"==d||"i"==d){if(f(),s(),d)throw h();return new o(0,Number(t))}s();var r=d;if("+"!=r&&"-"!=r){if(s(),d)throw h();return new o(Number(t),0)}f(),s();var n=p();if(n){if("I"!=d&&"i"!=d)throw new SyntaxError('Character "i" expected, got "'+d+'"');f()}else if(!(n=m()))throw new SyntaxError("Imaginary part expected");if("-"==r&&(n="-"==n[0]?"+"+n.substring(1):"-"+n),f(),s(),d)throw h();return new o(Number(t),Number(n))}if(t=m()){if(s(),d)throw h();return new o(0,Number(t))}throw new SyntaxError('Could not parse: "'+e+'" as complex number')},o.fromPolar=function(e){switch(arguments.length){case 1:if("object"==typeof e)return o.fromPolar(e.r,e.phi);throw new TypeError("Input has to be an object with r and phi keys.");case 2:var r=e,n=arguments[1];if(i(r)){if(n&&n.isUnit&&n.hasBase("ANGLE")&&(n=n.toNumber("rad")),i(n))return new o(r*Math.cos(n),r*Math.sin(n));throw new TypeError("Phi is not a number nor an angle unit.")}throw new TypeError("Radius r is not a number.");default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},o.prototype.toPolar=function(){return{r:Math.sqrt(this.re*this.re+this.im*this.im),phi:Math.atan2(this.im,this.re)}},o.prototype.clone=function(){return new o(this.re,this.im)},o.prototype.equals=function(e){return this.re===e.re&&this.im===e.im},o.prototype.format=function(e){var r=this.im,n=this.re,o=a(this.re,e),s=a(this.im,e),e=i(e)?e:e?e.precision:null;return 0==(r=null!==e&&(e=Math.pow(10,-e),Math.abs(n/r)<e&&(n=0),Math.abs(r/n)<e)?0:r)?o:0==n?1==r?"i":-1==r?"-i":s+"i":0<r?1==r?o+" + i":o+" + "+s+"i":-1==r?o+" - i":o+" - "+s.substring(1)+"i"},o.prototype.toString=function(){return this.format()},o.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},o.fromJSON=function(e){return new o(e)},o.prototype.valueOf=o.prototype.toString,o}},function(e,t,r){"use strict";var i=r(19);t.name="complex",t.factory=function(e,t,n,a){var o=r(29),s=a("complex",{"":function(){return new e.Complex(0,0)},number:function(t){return new e.Complex(t,0)},"number, number":function(t,r){return new e.Complex(t,r)},"BigNumber, BigNumber":function(t,r){return new e.Complex(t.toNumber(),r.toNumber())},Complex:function(e){return e.clone()},string:function(t){return e.Complex.parse(t)},Object:function(t){if("re"in t&&"im"in t)return new e.Complex(t.re,t.im);if("r"in t&&"phi"in t)return e.Complex.fromPolar(t.r,t.phi);throw new Error("Expected object with either properties re and im, or properties r and phi.")},"Array | Matrix":function(e){return i(e,s)}});return s.toTex={0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)+"+o.symbols.i+"\\cdot\\left(${args[1]}\\right)\\right)"},s}},function(e,t){"use strict";t.symbols={Alpha:"A",alpha:"\\alpha",Beta:"B",beta:"\\beta",Gamma:"\\Gamma",gamma:"\\gamma",Delta:"\\Delta",delta:"\\delta",Epsilon:"E",epsilon:"\\epsilon",varepsilon:"\\varepsilon",Zeta:"Z",zeta:"\\zeta",Eta:"H",eta:"\\eta",Theta:"\\Theta",theta:"\\theta",vartheta:"\\vartheta",Iota:"I",iota:"\\iota",Kappa:"K",kappa:"\\kappa",varkappa:"\\varkappa",Lambda:"\\Lambda",lambda:"\\lambda",Mu:"M",mu:"\\mu",Nu:"N",nu:"\\nu",Xi:"\\Xi",xi:"\\xi",Omicron:"O",omicron:"o",Pi:"\\Pi",pi:"\\pi",varpi:"\\varpi",Rho:"P",rho:"\\rho",varrho:"\\varrho",Sigma:"\\Sigma",sigma:"\\sigma",varsigma:"\\varsigma",Tau:"T",tau:"\\tau",Upsilon:"\\Upsilon",upsilon:"\\upsilon",Phi:"\\Phi",phi:"\\phi",varphi:"\\varphi",Chi:"X",chi:"\\chi",Psi:"\\Psi",psi:"\\psi",Omega:"\\Omega",omega:"\\omega",true:"\\mathrm{True}",false:"\\mathrm{False}",i:"i",inf:"\\infty",Inf:"\\infty",infinity:"\\infty",Infinity:"\\infty",oo:"\\infty",lim:"\\lim",undefined:"\\mathbf{?}"},t.operators={transpose:"^\\top",factorial:"!",pow:"^",dotPow:".^\\wedge",unaryPlus:"+",unaryMinus:"-",bitNot:"~",not:"\\neg",multiply:"\\cdot",divide:"\\frac",dotMultiply:".\\cdot",dotDivide:".:",mod:"\\mod",add:"+",subtract:"-",to:"\\rightarrow",leftShift:"<<",rightArithShift:">>",rightLogShift:">>>",equal:"=",unequal:"\\neq",smaller:"<",larger:">",smallerEq:"\\leq",largerEq:"\\geq",bitAnd:"\\&",bitXor:"\\underline{|}",bitOr:"|",and:"\\wedge",xor:"\\veebar",or:"\\vee"},t.defaultTemplate="\\mathrm{${name}}\\left(${args}\\right)";var r={deg:"^\\circ"};t.toSymbol=function(e,n){return(n=void 0!==n&&n)?r.hasOwnProperty(e)?r[e]:"\\mathrm{"+e+"}":t.symbols.hasOwnProperty(e)?t.symbols[e]:-1!==e.indexOf("_")?(n=e.indexOf("_"),t.toSymbol(e.substring(0,n))+"_{"+t.toSymbol(e.substring(n+1))+"}"):e}},function(e,t,r){e.exports=[r(31),r(35)]},function(e,t,r){var i=r(32);i.prototype.type="Fraction",i.prototype.isFraction=!0,i.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},i.fromJSON=function(e){return new i(e)},t.name="Fraction",t.path="type",t.factory=function(e,t,r,n){return i}},function(e,t,r){var i;!function(e){!function(){"use strict";function o(e,t){return isNaN(e=parseInt(e,10))&&s(),e*t}function s(){throw"Invalid Param"}function u(e,t){return this instanceof u?(l(e,t),e=u.REDUCE?g(f.d,f.n):1,this.s=f.s,this.n=f.n/e,void(this.d=f.d/e)):new u(e,t)}function l(e,t){var r,n=0,i=1,a=1,u=0,c=0,l=0,p=1,m=1,h=0,g=1,v=1,d=1,y=1e7;if(null!=e)if(void 0!==t)a=(n=e)*(i=t);else switch(typeof e){case"object":"d"in e&&"n"in e?(n=e.n,i=e.d,"s"in e&&(n*=e.s)):0 in e?(n=e[0],1 in e&&(i=e[1])):s(),a=n*i;break;case"number":if((e=e<0?-(a=e):e)%1==0)n=e;else if(0<e){for(1<=e&&(e/=m=Math.pow(10,Math.floor(1+Math.log(e)/Math.LN10)));g<=y&&d<=y;){if(e===(r=(h+v)/(g+d))){i=g+d<=y?(n=h+v,g+d):g<d?(n=v,d):(n=h,g);break}r<e?(h+=v,g+=d):(v+=h,d+=g),i=y<g?(n=v,d):(n=h,g)}n*=m}break;case"string":if("-"===(g=e.match(/\d+|./g))[h]?(a=-1,h++):"+"===g[h]&&h++,g.length===h+1?c=o(g[h++],a):"."===g[h+1]||"."===g[h]?("."!==g[h]&&(u=o(g[h++],a)),(++h+1===g.length||"("===g[h+1]&&")"===g[h+3]||"'"===g[h+1]&&"'"===g[h+3])&&(c=o(g[h],a),p=Math.pow(10,g[h].length),h++),("("===g[h]&&")"===g[h+2]||"'"===g[h]&&"'"===g[h+2])&&(l=o(g[h+1],a),m=Math.pow(10,g[h+1].length)-1,h+=3)):"/"===g[h+1]||":"===g[h+1]?(c=o(g[h],a),p=o(g[h+2],1),h+=3):"/"===g[h+3]&&" "===g[h+1]&&(u=o(g[h],a),c=o(g[h+2],a),p=o(g[h+4],1),h+=5),g.length<=h){a=n=l+m*(u*p+c),i=p*m;break}default:s()}if(!i)throw"DIV/0";f.s=a<0?-1:1,f.n=Math.abs(n),f.d=Math.abs(i)}function g(e,t){if(!e)return t;if(!t)return e;for(;;){if(!(e%=t))return t;if(!(t%=e))return e}}var f={s:1,n:0,d:1};u.REDUCE=1,u.prototype={s:1,n:0,d:1,abs:function(){return new u(this.n,this.d)},neg:function(){return new u(-this.s*this.n,this.d)},add:function(e,t){return l(e,t),new u(this.s*this.n*f.d+f.s*this.d*f.n,this.d*f.d)},sub:function(e,t){return l(e,t),new u(this.s*this.n*f.d-f.s*this.d*f.n,this.d*f.d)},mul:function(e,t){return l(e,t),new u(this.s*f.s*this.n*f.n,this.d*f.d)},div:function(e,t){return l(e,t),new u(this.s*f.s*this.n*f.d,this.d*f.n)},clone:function(){return new u(this)},mod:function(e,t){return void 0===e?new u(this.s*this.n%this.d,1):(l(e,t),0==f.n*this.d&&u(0,0),new u(this.s*f.d*this.n%(f.n*this.d),f.d*this.d))},gcd:function(e,t){return l(e,t),new u(g(f.n,this.n),f.d*this.d/g(f.d,this.d))},lcm:function(e,t){return l(e,t),new u(f.n*this.n/g(f.n,this.n),g(f.d,this.d))},ceil:function(){return new u(Math.ceil(this.s*this.n/this.d),1)},floor:function(){return new u(Math.floor(this.s*this.n/this.d),1)},round:function(){return new u(Math.round(this.s*this.n/this.d),1)},inverse:function(){return new u(this.s*this.d,this.n)},pow:function(e){var t=this.d,r=this.n;return e<0?(this.d=Math.pow(r,-e),this.n=Math.pow(t,-e)):(this.d=Math.pow(t,e),this.n=Math.pow(r,e)),0==e%2&&(this.s=1),this},equals:function(e,t){return l(e,t),this.s*this.n*f.d==f.s*f.n*this.d},compare:function(e,t){l(e,t);e=this.s*this.n*f.d-f.s*f.n*this.d;return(0<e)-(e<0)},divisible:function(e,t){return l(e,t),!(!(f.n*this.d)||this.n*f.d%(f.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(e){var r="",n=this.n,i=this.d;return this.s<0&&(r+="-"),1===i?r+=n:(e&&0<(e=Math.floor(n/i))&&(r=r+e+" ",n%=i),r=(r+=n)+"/"+i),r},toLatex:function(e){var r="",n=this.n,i=this.d;return this.s<0&&(r+="-"),1===i?r+=n:(e&&0<(e=Math.floor(n/i))&&(r+=e,n%=i),r=(r=(r+="\\frac{")+n+"}{")+i+"}"),r},toString:function(){var e,t=this.n,r=this.d;u.REDUCE||(t/=e=g(t,r),r/=e);for(var n=String(t).split(""),i=0,a=[~this.s?"":"-","",""],o="",s=function(t){for(;t%2==0;t/=2);for(;t%5==0;t/=5);if(1===t)return 0;for(var r=10%t,n=1;1!==r;n++)if(r=10*r%t,2e3<n)return 0;return n}(r),c=function(t,r){for(var n=1,i=function(e,t,r){for(var n=1;0<t;e=e*e%r,t>>=1)1&t&&(n=n*e%r);return n}(10,r,t),a=0;a<300;a++){if(n===i)return a;n=10*n%t,i=10*i%t}return 0}(r,s),f=-1,l=1,p=10+s+c+n.length,v=0;v<p;v++,i*=10){if(v<n.length?i+=Number(n[v]):(l=2,f++),0<s)if(f===c)a[l]+=o+"(",o="";else if(f===s+c){a[l]+=o+")";break}r<=i?(a[l]+=o+(i/r|0),o="",i%=r):1<l?o+="0":a[l]&&(a[l]+="0")}return a[0]+=a[1]||"0",a[2]?a[0]+"."+a[2]:a[0]}},r(34).amd?void 0!==(i=function(){return u}.apply(t,[]))&&(e.exports=i):e.exports=u}()}.call(t,r(33)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children=[],e.webpackPolyfill=1),e}},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,r){"use strict";var i=r(19);t.name="fraction",t.factory=function(e,t,r,n){var a=n("fraction",{number:function(t){if(!isFinite(t)||isNaN(t))throw new Error(t+" cannot be represented as a fraction");return new e.Fraction(t)},string:function(t){return new e.Fraction(t)},"number, number":function(t,r){return new e.Fraction(t,r)},Fraction:function(e){return e},Object:function(t){return new e.Fraction(t)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){e.exports=[r(37),r(45),r(46),r(48),r(57),r(63),r(64),r(65),r(66),r(50),r(67)]},function(e,t,r){"use strict";var o=r(38).string.isString;t.name="Matrix",t.path="type",t.factory=function(e,t,r,n){function i(){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator")}return i.prototype.type="Matrix",i.prototype.isMatrix=!0,i.storage=function(e){if(!o(e))throw new TypeError("format must be a string value");var t=i._storage[e];if(t)return t;throw new SyntaxError("Unsupported matrix storage format: "+e)},i._storage={},i.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},i.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},i.prototype.create=function(e,t){throw new Error("Cannot invoke create on a Matrix interface")},i.prototype.subset=function(e,t,r){throw new Error("Cannot invoke subset on a Matrix interface")},i.prototype.get=function(e){throw new Error("Cannot invoke get on a Matrix interface")},i.prototype.set=function(e,t,r){throw new Error("Cannot invoke set on a Matrix interface")},i.prototype.resize=function(e,t){throw new Error("Cannot invoke resize on a Matrix interface")},i.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},i.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},i.prototype.map=function(e,t){throw new Error("Cannot invoke map on a Matrix interface")},i.prototype.forEach=function(e){throw new Error("Cannot invoke forEach on a Matrix interface")},i.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},i.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},i.prototype.format=function(e){throw new Error("Cannot invoke format on a Matrix interface")},i.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},i}},function(e,t,r){"use strict";t.array=r(39),t.boolean=r(43),t.function=r(44),t.number=r(6),t.object=r(3),t.string=r(23),t.types=r(40),t.emitter=r(8)},function(e,t,r){"use strict";function i(e,r,n,a){var s,u=e.length,f=r[n],l=Math.min(u,f);if(e.length=f,n<r.length-1){for(var p=n+1,o=0;o<l;o++)s=e[o],Array.isArray(s)||(e[o]=s=[s]),i(s,r,p,a);for(o=l;o<f;o++)i(e[o]=s=[],r,p,a)}else{for(o=0;o<l;o++)for(;Array.isArray(e[o]);)e[o]=e[o][0];if(a!==t.UNINITIALIZED)for(o=l;o<f;o++)e[o]=c.clone(a)}}var s=r(6),u=r(23),c=r(3),f=(r(40),r(41)),l=r(42);t.size=function(e){for(var t=[];Array.isArray(e);)t.push(e.length),e=e[0];return t},t.validate=function(e,t){if(0==t.length){if(Array.isArray(e))throw new f(e.length,0)}else!function n(e,t,r){var a=e.length;if(a!=t[r])throw new f(a,t[r]);if(r<t.length-1)for(var o=r+1,i=0;i<a;i++){var s=e[i];if(!Array.isArray(s))throw new f(t.length-1,t.length,"<");n(e[i],t,o)}else for(i=0;i<a;i++)if(Array.isArray(e[i]))throw new f(t.length+1,t.length,">")}(e,t,0)},t.validateIndex=function(e,t){if(!s.isNumber(e)||!s.isInteger(e))throw new TypeError("Index must be an integer (value: "+e+")");if(e<0)throw new l(e);if(void 0!==t&&t<=e)throw new l(e,t)},t.UNINITIALIZED={},t.resize=function(e,t,r){if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new Error("Resizing to scalar is not supported");return t.forEach(function(e){if(!s.isNumber(e)||!s.isInteger(e)||e<0)throw new TypeError("Invalid size, must contain positive integers (size: "+u.format(t)+")")}),i(e,t,0,void 0!==r?r:0),e},t.squeeze=function(e,r){for(var n=r||t.size(e);Array.isArray(e)&&1===e.length;)e=e[0],n.shift();for(var i=n.length;1===n[i-1];)i--;return i<n.length&&(e=function a(e,t,r){if(r<t)for(var o=r+1,n=0,i=e.length;n<i;n++)e[n]=a(e[n],t,o);else for(;Array.isArray(e);)e=e[0];return e}(e,i,0),n.length=i),e},t.unsqueeze=function(e,r,n,i){var a=i||t.size(e);if(n)for(var s=0;s<n;s++)e=[e],a.unshift(1);for(e=function o(e,t,r){if(Array.isArray(e))for(var a=r+1,n=0,i=e.length;n<i;n++)e[n]=o(e[n],t,a);else for(var s=r;s<t;s++)e=[e];return e}(e,r,0);a.length<r;)a.push(1);return e},t.flatten=function(e){var t;return Array.isArray(e)?(t=[],e.forEach(function r(e){Array.isArray(e)?e.forEach(r):t.push(e)}),t):e},t.isArray=Array.isArray},function(e,t){"use strict";t.type=function(e){var t=typeof e;return"object"==t?null===e?"null":e instanceof Boolean?"boolean":e instanceof Number?"number":e instanceof String?"string":Array.isArray(e)?"Array":e instanceof Date?"Date":e instanceof RegExp?"RegExp":"Object":"function"==t?"Function":t}},function(e,t){"use strict";function r(e,t,n){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.actual=e,this.expected=t,this.relation=n,this.message="Dimension mismatch ("+(Array.isArray(e)?"["+e.join(", ")+"]":e)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=(new Error).stack}(r.prototype=new RangeError).constructor=RangeError,r.prototype.name="DimensionError",r.prototype.isDimensionError=!0,e.exports=r},function(e,t){"use strict";function r(e,t,n){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.index=e,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=n),void 0!==this.min&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":void 0!==this.max&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=(new Error).stack}(r.prototype=new RangeError).constructor=RangeError,r.prototype.name="IndexError",r.prototype.isIndexError=!0,e.exports=r},function(e,t){"use strict";t.isBoolean=function(e){return"boolean"==typeof e}},function(e,t){t.memoize=function(e,t){return function r(){"object"!=typeof r.cache&&(r.cache={});for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];var a=t?t(n):JSON.stringify(n);return a in r.cache?r.cache[a]:r.cache[a]=e.apply(e,n)}}},function(e,t,r){"use strict";var i=r(38),a=r(41),o=i.string,s=i.array,u=i.object,c=i.number,f=Array.isArray,l=c.isNumber,p=c.isInteger,m=o.isString,h=s.validateIndex;t.name="DenseMatrix",t.path="type",t.factory=function(e,t,n,c){function g(e,t){if(!(this instanceof g))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!m(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix)"DenseMatrix"===e.type?(this._data=u.clone(e._data),this._size=u.clone(e._size)):(this._data=e.toArray(),this._size=e.size()),this._datatype=t||e._datatype;else if(e&&f(e.data)&&f(e.size))this._data=e.data,this._size=e.size,this._datatype=t||e.datatype;else{if(f(e))this._data=function w(e){for(var t=0,r=e.length;t<r;t++){var n=e[t];f(n)?e[t]=w(n):n&&!0===n.isMatrix&&(e[t]=w(n.valueOf()))}return e}(e),this._size=s.size(this._data),s.validate(this._data,this._size);else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._data=[],this._size=[0]}this._datatype=t}}function v(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var n=t.size();if(n.length!=e._size.length)throw new a(n.length,e._size.length);for(var i=t.min(),o=t.max(),s=0,u=e._size.length;s<u;s++)h(i[s],e._size[s]),h(o[s],e._size[s]);return new g(function d(e,t,r,n){var i=n==r-1,a=t.dimension(n);return(i?a.map(function(t){return e[t]}):a.map(function(i){i=e[i];return d(i,t,r,n+1)})).valueOf()}(e._data,t,n.length,0),e._datatype)}function x(e,t,r,n,i){var a=i==n-1,o=t.dimension(i);a?o.forEach(function(t,n){h(t),e[t]=r[n[0]]}):o.forEach(function(a,o){h(a),x(e[a],t,r[o[0]],n,i+1)})}function b(e,t,r){for(var n=u.clone(e._size),i=!1;n.length<t.length;)n.push(0),i=!0;for(var a=0,o=t.length;a<o;a++)t[a]>n[a]&&(n[a]=t[a],i=!0);i&&E(e,n,r)}var n=n(r(37)),E=((g.prototype=new n).type="DenseMatrix",g.prototype.isDenseMatrix=!0,g.prototype.storage=function(){return"dense"},g.prototype.datatype=function(){return this._datatype},g.prototype.create=function(e,t){return new g(e,t)},g.prototype.subset=function(e,t,r){switch(arguments.length){case 1:return v(this,e);case 2:case 3:return function(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var i,o=t.size(),c=t.isScalar();if(r&&!0===r.isMatrix?(i=r.size(),r=r.valueOf()):i=s.size(r),c){if(0!==i.length)throw new TypeError("Scalar expected");e.set(t.min(),r,n)}else{if(o.length<e._size.length)throw new a(o.length,e._size.length,"<");if(i.length<o.length){for(var f=0,l=0;1===o[f]&&1===i[f];)f++;for(;1===o[f];)l++,f++;r=s.unsqueeze(r,o.length,l,i)}if(!u.deepEqual(o,i))throw new a(o,i,">");b(e,t.max().map(function(e){return e+1}),n);c=o.length;x(e._data,t,r,c,0)}return e}(this,e,t,r);default:throw new SyntaxError("Wrong number of arguments")}},g.prototype.get=function(e){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);for(var t=0;t<e.length;t++)h(e[t],this._size[t]);for(var r=this._data,n=0,i=e.length;n<i;n++){var o=e[n];h(o,r.length),r=r[o]}return u.clone(r)},g.prototype.set=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(e.length<this._size.length)throw new a(e.length,this._size.length,"<");b(this,e.map(function(e){return e+1}),r);for(var o,u=this._data,n=0,i=e.length-1;n<i;n++)o=e[n],h(o,u.length),u=u[o];return o=e[e.length-1],h(o,u.length),u[o]=t,this},g.prototype.resize=function(e,t,r){if(f(e))return r=r?this.clone():this,E(r,e,t);throw new TypeError("Array expected")},function(e,t,r){if(0!==t.length)return e._size=u.clone(t),e._data=s.resize(e._data,e._size,r),e;for(var n=e._data;f(n);)n=n[0];return u.clone(n)});return g.prototype.clone=function(){return new g({data:u.clone(this._data),size:u.clone(this._size),datatype:this._datatype})},g.prototype.size=function(){return this._size},g.prototype.map=function(e){var t=this,r=function(n,i){return f(n)?n.map(function(e,t){return r(e,i.concat(t))}):e(n,i,t)};return new g({data:r(this._data,[]),size:u.clone(this._size),datatype:this._datatype})},g.prototype.forEach=function(e){var t=this,r=function(n,i){f(n)?n.forEach(function(e,t){r(e,i.concat(t))}):e(n,i,t)};r(this._data,[])},g.prototype.toArray=function(){return u.clone(this._data)},g.prototype.valueOf=function(){return this._data},g.prototype.format=function(e){return o.format(this._data,e)},g.prototype.toString=function(){return o.format(this._data)},g.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},g.prototype.diagonal=function(e){if(e){if(!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e))throw new TypeError("The parameter k must be an integer number")}else e=0;for(var t=0<e?e:0,r=e<0?-e:0,e=this._size[0],i=this._size[1],a=Math.min(e-r,i-t),o=[],s=0;s<a;s++)o[s]=u.clone(this._data[s+r][s+t]);return new g({data:o,size:[a],datatype:this._datatype})},g.diagonal=function(t,r,n,i,a){if(!f(t))throw new TypeError("Array expected, size parameter");if(2!==t.length)throw new Error("Only two dimensions matrix are supported");if(t=t.map(function(e){if(e&&!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e)||e<1)throw new Error("Size values must be positive integers");return e}),n){if(n&&!0===n.isBigNumber&&(n=n.toNumber()),!l(n)||!p(n))throw new TypeError("The parameter k must be an integer number")}else n=0;i&&m(a)&&(i=c.convert(i,a));var o,u=0<n?n:0,h=n<0?-n:0,a=t[0],n=t[1],y=Math.min(a-h,n-u);if(f(r)){if(r.length!==y)throw new Error("Invalid value array length");o=function(e){return r[e]}}else if(r&&!0===r.isMatrix){var x=r.size();if(1!==x.length||x[0]!==y)throw new Error("Invalid matrix length");o=function(e){return r.get([e])}}else o=function(){return r};i=i||(o(0)&&!0===o(0).isBigNumber?new e.BigNumber(0):0);var b=[];if(0<t.length)for(var b=s.resize(b,t,i),w=0;w<y;w++)b[w+h][w+u]=o(w);return new g({data:b,size:[a,n]})},g.fromJSON=function(e){return new g(e)},g.prototype.swapRows=function(e,t){if(!(l(e)&&p(e)&&l(t)&&p(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return h(e,this._size[0]),h(t,this._size[0]),g._swapRows(e,t,this._data),this},g._swapRows=function(e,t,r){var n=r[e];r[e]=r[t],r[t]=n},e.Matrix._storage.dense=g,e.Matrix._storage.default=g},t.lazy=!1},function(e,t,r){"use strict";var i=r(38),a=r(41),o=i.array,s=i.object,u=i.string,c=i.number,f=Array.isArray,l=c.isNumber,p=c.isInteger,m=u.isString,h=o.validateIndex;t.name="SparseMatrix",t.path="type",t.factory=function(e,t,n,g){function v(e,t){if(!(this instanceof v))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!m(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix)!function(e,t,r){"SparseMatrix"===t.type?(e._values=t._values?s.clone(t._values):void 0,e._index=s.clone(t._index),e._ptr=s.clone(t._ptr),e._size=s.clone(t._size),e._datatype=r||t._datatype):b(e,t.valueOf(),r||t._datatype)}(this,e,t);else if(e&&f(e.index)&&f(e.ptr)&&f(e.size))this._values=e.values,this._index=e.index,this._ptr=e.ptr,this._size=e.size,this._datatype=t||e.datatype;else if(f(e))b(this,e,t);else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=t}}var d=n(r(37)),y=n(r(47)),b=function(e,t,r){e._values=[],e._index=[],e._ptr=[],e._datatype=r;var n=t.length,i=0,a=y,o=0;if(m(r)&&(a=g.find(y,[r,r])||y,o=g.convert(0,r)),0<n){var s=0;do{e._ptr.push(e._index.length);for(var u=0;u<n;u++){var l,c=t[u];f(c)?(0===s&&i<c.length&&(i=c.length),s<c.length&&(a(l=c[s],o)||(e._values.push(l),e._index.push(u)))):(0===s&&i<1&&(i=1),a(c,o)||(e._values.push(c),e._index.push(u)))}}while(++s<i)}e._ptr.push(e._index.length),e._size=[n,i]},w=((v.prototype=new d).type="SparseMatrix",v.prototype.isSparseMatrix=!0,v.prototype.storage=function(){return"sparse"},v.prototype.datatype=function(){return this._datatype},v.prototype.create=function(e,t){return new v(e,t)},v.prototype.density=function(){var e=this._size[0],t=this._size[1];return 0!==e&&0!==t?this._index.length/(e*t):0},v.prototype.subset=function(e,t,r){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return w(this,e);case 2:case 3:return N(this,e,t,r);default:throw new SyntaxError("Wrong number of arguments")}},function(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var n=t.size();if(n.length!=e._size.length)throw new a(n.length,e._size.length);for(var s,u,c=t.min(),f=t.max(),i=0,o=e._size.length;i<o;i++)h(c[i],e._size[i]),h(f[i],e._size[i]);var l=e._values,p=e._index,m=e._ptr,g=t.dimension(0),t=t.dimension(1),y=[],x=[],b=(g.forEach(function(e,t){x[e]=t[0],y[e]=!0}),l?[]:void 0),w=[],N=[];return t.forEach(function(e){for(N.push(w.length),s=m[e],u=m[e+1];s<u;s++)i=p[s],!0===y[i]&&(w.push(x[i]),b)&&b.push(l[s])}),N.push(w.length),new v({values:b,index:w,ptr:N,size:n,datatype:e._datatype})}),N=function(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var i,u=t.size(),c=t.isScalar();if(r&&!0===r.isMatrix?(i=r.size(),r=r.toArray()):i=o.size(r),c){if(0!==i.length)throw new TypeError("Scalar expected");e.set(t.min(),r,n)}else{if(1!==u.length&&2!==u.length)throw new a(u.length,e._size.length,"<");if(i.length<u.length){for(var f=0,l=0;1===u[f]&&1===i[f];)f++;for(;1===u[f];)l++,f++;r=o.unsqueeze(r,u.length,l,i)}if(!s.deepEqual(u,i))throw new a(u,i,">");for(var p=t.min()[0],m=t.min()[1],h=i[0],g=i[1],v=0;v<h;v++)for(var d=0;d<g;d++){var y=r[v][d];e.set([v+p,d+m],y,n)}}return e},E=(v.prototype.get=function(e){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);var t,n;if(this._values)return t=e[0],e=e[1],h(t,this._size[0]),h(e,this._size[1]),(n=E(t,this._ptr[e],this._ptr[e+1],this._index))<this._ptr[e+1]&&this._index[n]===t?s.clone(this._values[n]):0;throw new Error("Cannot invoke get on a Pattern only matrix")},v.prototype.set=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);var n,o,s,u,c;if(this._values)return n=e[0],e=e[1],o=this._size[0],s=this._size[1],u=y,c=0,m(this._datatype)&&(u=g.find(y,[this._datatype,this._datatype])||y,c=g.convert(0,this._datatype)),(o-1<n||s-1<e)&&(_(this,Math.max(n+1,o),Math.max(e+1,s),r),o=this._size[0],s=this._size[1]),h(n,o),h(e,s),(r=E(n,this._ptr[e],this._ptr[e+1],this._index))<this._ptr[e+1]&&this._index[r]===n?u(t,c)?M(r,e,this._values,this._index,this._ptr):this._values[r]=t:A(r,n,e,t,this._values,this._index,this._ptr),this;throw new Error("Cannot invoke set on a Pattern only matrix")},function(e,t,r,n){if(r-t==0)return r;for(var i=t;i<r;i++)if(n[i]===e)return i;return t}),M=function(e,t,r,n,i){r.splice(e,1),n.splice(e,1);for(var a=t+1;a<i.length;a++)i[a]--},A=function(e,t,r,n,i,a,o){i.splice(e,0,n),a.splice(e,0,t);for(var s=r+1;s<o.length;s++)o[s]++},_=(v.prototype.resize=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");e.forEach(function(t){if(!c.isNumber(t)||!c.isInteger(t)||t<0)throw new TypeError("Invalid size, must contain positive integers (size: "+u.format(e)+")")});r=r?this.clone():this;return _(r,e[0],e[1],t)},function(e,t,r,n){var i=n||0,n=y,o=0;m(e._datatype)&&(n=g.find(y,[e._datatype,e._datatype])||y,o=g.convert(0,e._datatype),i=g.convert(i,e._datatype));var f=!n(i,o),l=e._size[0],p=e._size[1];if(p<r){for(u=p;u<r;u++)if(e._ptr[u]=e._values.length,f)for(s=0;s<l;s++)e._values.push(i),e._index.push(s);e._ptr[r]=e._values.length}else r<p&&(e._ptr.splice(r+1,p-r),e._values.splice(e._ptr[r],e._values.length),e._index.splice(e._ptr[r],e._index.length));if(p=r,l<t){if(f){for(var h=0,u=0;u<p;u++){e._ptr[u]=e._ptr[u]+h;for(var c=e._ptr[u+1]+h,v=0,s=l;s<t;s++,v++)e._values.splice(c+v,0,i),e._index.splice(c+v,0,s),h++}e._ptr[p]=e._values.length}}else if(t<l){var d=0;for(u=0;u<p;u++){e._ptr[u]=e._ptr[u]-d;var x=e._ptr[u],b=e._ptr[u+1]-d;for(c=x;c<b;c++)t-1<(s=e._index[c])&&(e._values.splice(c,1),e._index.splice(c,1),d++)}e._ptr[u]=e._values.length}return e._size[0]=t,e._size[1]=r,e}),O=(v.prototype.clone=function(){return new v({values:this._values?s.clone(this._values):void 0,index:s.clone(this._index),ptr:s.clone(this._ptr),size:s.clone(this._size),datatype:this._datatype})},v.prototype.size=function(){return s.clone(this._size)},v.prototype.map=function(e,t){var r,n,i;if(this._values)return n=(r=this)._size[0],i=this._size[1],O(this,0,n-1,0,i-1,function(t,n,i){return e(t,[n,i],r)},t);throw new Error("Cannot invoke map on a Pattern only matrix")},function(e,t,r,n,i,a,o){var s=[],u=[],c=[],f=y,l=0;m(e._datatype)&&(f=g.find(y,[e._datatype,e._datatype])||y,l=g.convert(0,e._datatype));for(var p=function(e,t,r){e=a(e,t,r),f(e,l)||(s.push(e),u.push(t))},h=n;h<=i;h++){c.push(s.length);for(var d=e._ptr[h],x=e._ptr[h+1],b=t,w=d;w<x;w++){var N=e._index[w];if(t<=N&&N<=r){if(!o)for(var E=b;E<N;E++)p(0,E-t,h-n);p(e._values[w],N-t,h-n)}b=N+1}if(!o)for(var M=b;M<=r;M++)p(0,M-t,h-n)}return c.push(s.length),new v({values:s,index:u,ptr:c,size:[r-t+1,i-n+1]})}),T=(v.prototype.forEach=function(e,t){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var r=this,n=this._size[0],i=this._size[1],a=0;a<i;a++){for(var o=this._ptr[a],s=this._ptr[a+1],u=0,c=o;c<s;c++){var f=this._index[c];if(!t)for(var l=u;l<f;l++)e(0,[l,a],r);e(this._values[c],[f,a],r),u=f+1}if(!t)for(var p=u;p<n;p++)e(0,[p,a],r)}},v.prototype.toArray=function(){return T(this._values,this._index,this._ptr,this._size,!0)},v.prototype.valueOf=function(){return T(this._values,this._index,this._ptr,this._size,!1)},function(e,t,r,n,i){for(var o,u=n[0],c=n[1],f=[],a=0;a<u;a++)for(f[a]=[],o=0;o<c;o++)f[a][o]=0;for(o=0;o<c;o++)for(var l=r[o],p=r[o+1],m=l;m<p;m++)f[a=t[m]][o]=e?i?s.clone(e[m]):e[m]:1;return f});return v.prototype.format=function(e){for(var t=this._size[0],r=this._size[1],n=this.density(),i="Sparse Matrix ["+u.format(t,e)+" x "+u.format(r,e)+"] density: "+u.format(n,e)+"\n",a=0;a<r;a++)for(var o=this._ptr[a],s=this._ptr[a+1],c=o;c<s;c++){var f=this._index[c];i+="\n    ("+u.format(f,e)+", "+u.format(a,e)+") ==> "+(this._values?u.format(this._values[c],e):"X")}return i},v.prototype.toString=function(){return u.format(this.toArray())},v.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},v.prototype.diagonal=function(e){if(e){if(!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e))throw new TypeError("The parameter k must be an integer number")}else e=0;var t=0<e?e:0,r=e<0?-e:0,e=this._size[0],i=this._size[1],a=Math.min(e-r,i-t),o=[],u=[],e=[];e[0]=0;for(var f=t;f<i&&o.length<a;f++)for(var m=this._ptr[f],h=this._ptr[f+1],g=m;g<h;g++){var d=this._index[g];if(d===f-t+r){o.push(s.clone(this._values[g])),u[o.length-1]=d-r;break}}return e.push(o.length),new v({values:o,index:u,ptr:e,size:[a,1]})},v.fromJSON=function(e){return new v(e)},v.diagonal=function(e,t,r,n,i){if(!f(e))throw new TypeError("Array expected, size parameter");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");if(e=e.map(function(e){if(e&&!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e)||e<1)throw new Error("Size values must be positive integers");return e}),r){if(!0===r.isBigNumber&&(r=r.toNumber()),!l(r)||!p(r))throw new TypeError("The parameter k must be an integer number")}else r=0;var a=y,o=0;m(i)&&(a=g.find(y,[i,i])||y,o=g.convert(0,i));var s,u=0<r?r:0,c=r<0?-r:0,i=e[0],d=e[1],x=Math.min(i-c,d-u);if(f(t)){if(t.length!==x)throw new Error("Invalid value array length");s=function(e){return t[e]}}else if(t&&!0===t.isMatrix){r=t.size();if(1!==r.length||r[0]!==x)throw new Error("Invalid matrix length");s=function(e){return t.get([e])}}else s=function(){return t};for(var w=[],N=[],E=[],M=0;M<d;M++){E.push(w.length);var _,A=M-u;0<=A&&A<x&&(a(_=s(A),o)||(N.push(A+c),w.push(_)))}return E.push(w.length),new v({values:w,index:N,ptr:E,size:[i,d]})},v.prototype.swapRows=function(e,t){if(!(l(e)&&p(e)&&l(t)&&p(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return h(e,this._size[0]),h(t,this._size[0]),v._swapRows(e,t,this._size[1],this._values,this._index,this._ptr),this},v._forEachRow=function(e,t,r,n,i){for(var a=n[e],o=n[e+1],s=a;s<o;s++)i(r[s],t[s])},v._swapRows=function(e,t,r,n,i,a){for(var o=0;o<r;o++){var l,s=a[o],u=a[o+1],c=E(e,s,u,i),s=E(t,s,u,i);c<u&&s<u&&i[c]===e&&i[s]===t?n&&(l=n[c],n[c]=n[s],n[s]=l):c<u&&i[c]===e&&(u<=s||i[s]!==t)?(l=n?n[c]:void 0,i.splice(s,0,t),n&&n.splice(s,0,l),i.splice(s<=c?c+1:c,1),n&&n.splice(s<=c?c+1:c,1)):s<u&&i[s]===t&&(u<=c||i[c]!==e)&&(u=n?n[s]:void 0,i.splice(c,0,e),n&&n.splice(c,0,u),i.splice(c<=s?s+1:s,1),n)&&n.splice(c<=s?s+1:s,1)}},e.Matrix._storage.sparse=v},t.lazy=!1},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.factory=function(e,t,r,n){var a=n("equalScalar",{"boolean, boolean":function(e,t){return e===t},"number, number":function(e,r){return e===r||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.eq(t)},"Fraction, Fraction":function(e,t){return e.equals(t)},"Complex, Complex":function(e,r){return(e.re===r.re||i(e.re,r.re,t.epsilon))&&(e.im===r.im||i(e.im,r.im,t.epsilon))},"Unit, Unit":function(e,t){if(e.equalBase(t))return a(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e===t}});return a}},function(e,t,r){"use strict";t.name="Spa",t.path="type",t.factory=function(e,t,n){function i(){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");this._values=[],this._heap=new e.FibonacciHeap}var a=n(r(49)),o=n(r(47));return i.prototype.type="Spa",i.prototype.isSpa=!0,i.prototype.set=function(e,t){this._values[e]?this._values[e].value=t:(t=this._heap.insert(e,t),this._values[e]=t)},i.prototype.get=function(e){e=this._values[e];return e?e.value:0},i.prototype.accumulate=function(e,t){var r=this._values[e];r?r.value=a(r.value,t):(r=this._heap.insert(e,t),this._values[e]=r)},i.prototype.forEach=function(e,t,r){var n=this._heap,i=this._values,a=[];for((s=n.extractMinimum())&&a.push(s);s&&s.key<=t;)s.key>=e&&(o(s.value,0)||r(s.key,s.value,this)),(s=n.extractMinimum())&&a.push(s);for(var u=0;u<a.length;u++){var s,c=a[u];i[(s=n.insert(c.key,c.value)).key]=s}},i.prototype.swap=function(e,t){var r=this._values[e],n=this._values[t];!r&&n?(r=this._heap.insert(e,n.value),this._heap.remove(n),this._values[e]=r,this._values[t]=void 0):r&&!n?(n=this._heap.insert(t,r.value),this._heap.remove(r),this._values[t]=n,this._values[e]=void 0):r&&n&&(t=r.value,r.value=n.value,n.value=t)},i}},function(e,t,r){"use strict";var i=r(3).extend;t.name="add",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(51)),u=r(29),c=n(r(52)),f=n(r(53)),l=n(r(54)),p=n(r(55)),m=n(r(56)),h=a("add",i({"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,s):c(t,e,s,!0):"sparse"===t.storage()?c(e,t,s,!1):p(e,t,s);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,s,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,s,!0);return t},"Array, any":function(e,t){return m(o(e),t,s,!1).valueOf()},"any, Array":function(e,t){return m(o(t),e,s,!0).valueOf()}},s.signatures));return h.toTex="\\left(${args[0]}"+u.operators.add+"${args[1]}\\right)",h}},function(e,t){"use strict";t.name="matrix",t.factory=function(e,t,r,n){function i(t,r,n){return new(e.Matrix.storage(r||"default"))(t,n)}return(n=n("matrix",{"":function(){return i([])},string:function(e){return i([],e)},"string, string":function(e,t){return i([],e,t)},Array:function(e){return i(e)},Matrix:function(e){return i(e,e.storage())},"Array | Matrix, string":i,"Array | Matrix, string, string":i})).toTex={0:"\\begin{bmatrix}\\end{bmatrix}",1:"\\left(${args[0]}\\right)",2:"\\left(${args[0]}\\right)"},n}},function(e,t){"use strict";t.factory=function(e,t,r,n){var i=n("add",{"number, number":function(e,t){return e+t},"Complex, Complex":function(t,r){return new e.Complex(t.re+r.re,t.im+r.im)},"BigNumber, BigNumber":function(e,t){return e.plus(t)},"Fraction, Fraction":function(e,t){return e.add(t)},"Unit, Unit":function(e,t){if(null==e.value)throw new Error("Parameter x contains a unit with undefined value");if(null==t.value)throw new Error("Parameter y contains a unit with undefined value");if(e.equalBase(t))return(e=e.clone()).value=i(e.value,t.value),e.fixPrefix=!1,e;throw new Error("Units do not match")}});return i}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm01",t.factory=function(e,t,r,n){var a=e.DenseMatrix;return function(e,t,r,o){var s=e._data,u=e._size,e=e._datatype,f=t._values,l=t._index,p=t._ptr,m=t._size,t=t._datatype;if(u.length!==m.length)throw new i(u.length,m.length);if(u[0]!==m[0]||u[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+m+")");if(!f)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");for(var d=u[0],y=u[1],m="string"==typeof e&&e===t?e:void 0,b=m?n.find(r,[m,m]):r,w=[],g=0;g<d;g++)w[g]=[];for(var N=[],E=[],v=0;v<y;v++){for(var M=v+1,A=p[v],_=p[v+1],O=A;O<_;O++)N[g=l[O]]=o?b(f[O],s[g][v]):b(s[g][v],f[O]),E[g]=M;for(g=0;g<d;g++)w[g][v]=E[g]===M?N[g]:s[g][v]}return new a({data:w,size:[d,y],datatype:m})}}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm04",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var E,T=n&&p?[]:void 0,C=[],S=[],f=new s({values:T,index:C,ptr:S,size:[g,x],datatype:d}),B=n&&p?[]:void 0,k=n&&p?[]:void 0,I=[],R=[],M=0;M<x;M++){S[M]=C.length;for(var U,P=M+1,_=c[M],O=c[M+1],A=_;A<O;A++)E=u[A],C.push(E),I[E]=P,B&&(B[E]=n[A]);for(_=h[M],O=h[M+1],A=_;A<O;A++)I[E=m[A]]===P?B&&(b(U=N(B[E],p[A]),w)?I[E]=null:B[E]=U):(C.push(E),R[E]=P,k&&(k[E]=p[A]));if(B&&k)for(A=S[M];A<C.length;)I[E=C[A]]===P?(T[A]=B[E],A++):R[E]===P?(T[A]=k[E],A++):C.splice(A,1)}return S[x]=C.length,f}}},function(e,t){"use strict";t.name="algorithm10",t.factory=function(e,t,r,n){var i=e.DenseMatrix;return function(e,t,r,a){var o=e._values,s=e._index,u=e._ptr,c=e._size,e=e._datatype;if(!o)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var l,p=c[0],m=c[1],h=r;"string"==typeof e&&(t=n.convert(t,l=e),h=n.find(r,[l,l]));for(var g=[],c=new i({data:g,size:[p,m],datatype:l}),d=[],y=[],x=0;x<m;x++){for(var b=x+1,w=u[x],N=u[x+1],E=w;E<N;E++){var M=s[E];d[M]=o[E],y[M]=b}for(var A=0;A<p;A++)0===x&&(g[A]=[]),g[A][x]=y[A]===b?a?h(t,d[A]):h(d[A],t):t}return c}}},function(e,t,r){"use strict";var i=r(38),a=r(41);i.string.isString,t.name="algorithm13",t.factory=function(e,t,r,n){var i=e.DenseMatrix,s=function(e,t,r,n,i,a){var o=[];if(t===r.length-1)for(var u=0;u<n;u++)o[u]=e(i[u],a[u]);else for(var c=0;c<n;c++)o[c]=s(e,t+1,r,r[t+1],i[c],a[c]);return o};return function(e,t,r){var o=e._data,u=e._size,e=e._datatype,f=t._data,l=t._size,p=t._datatype,m=[];if(u.length!==l.length)throw new a(u.length,l.length);for(var h=0;h<u.length;h++){if(u[h]!==l[h])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+l+")");m[h]=u[h]}var g,v=r,p=("string"==typeof e&&e===p&&(t=n.convert(t,g=e),v=n.find(r,[g,g])),0<m.length?s(v,0,m,m[0],o,f):[]);return new i({data:p,size:m,datatype:g})}}},function(e,t,r){"use strict";var i=r(3).clone;t.name="algorithm14",t.factory=function(e,t,r,n){var a=e.DenseMatrix,s=function(e,t,r,n,i,a,o){var u=[];if(t===r.length-1)for(var c=0;c<n;c++)u[c]=o?e(a,i[c]):e(i[c],a);else for(var f=0;f<n;f++)u[f]=s(e,t+1,r,r[t+1],i[f],a,o);return u};return function(e,t,r,o){var u,c=e._data,f=e._size,e=e._datatype,p=r,e=("string"==typeof e&&(t=n.convert(t,u=e),p=n.find(r,[u,u])),0<f.length?s(p,0,f,f[0],c,t,o):[]);return new a({data:e,size:i(f),datatype:u})}}},function(e,t,r){"use strict";t.name="FibonacciHeap",t.path="type",t.factory=function(e,t,n,i){function a(){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");this._minimum=null,this._size=0}var o=n(r(58)),s=n(r(62)),u=1/Math.log((1+Math.sqrt(5))/2),c=(a.prototype.type="FibonacciHeap",a.prototype.isFibonacciHeap=!0,a.prototype.insert=function(e,t){var n,t={key:e,value:t,degree:0};return this._minimum?(n=this._minimum,t.left=n,t.right=n.right,(n.right=t).right.left=t,o(e,n.key)&&(this._minimum=t)):this._minimum=(t.left=t).right=t,this._size++,t},a.prototype.size=function(){return this._size},a.prototype.clear=function(){this._minimum=null,this._size=0},a.prototype.isEmpty=function(){return!!this._minimum},a.prototype.extractMinimum=function(){var e=this._minimum;if(null!==e){for(var t=this._minimum,r=e.degree,n=e.child;0<r;){var i=n.right;n.left.right=n.right,n.right.left=n.left,n.left=t,n.right=t.right,((t.right=n).right.left=n).parent=null,n=i,r--}e.left.right=e.right,e.right.left=e.left,t=e==e.right?null:(t=e.right,m(t,this._size)),this._size--,this._minimum=t}return e},a.prototype.remove=function(e){this._minimum=c(this._minimum,e,-1),this.extractMinimum()},function(e,t,r){t.key=r;r=t.parent;return r&&o(t.key,r.key)&&(f(e,t,r),l(e,r)),e=o(t.key,e.key)?t:e}),f=function(e,t,r){t.left.right=t.right,t.right.left=t.left,r.degree--,r.child==t&&(r.child=t.right),0===r.degree&&(r.child=null),t.left=e,t.right=e.right,((e.right=t).right.left=t).parent=null,t.mark=!1},l=function(e,t){var r=t.parent;r&&(t.mark?(f(e,t,r),l(r)):t.mark=!0)},m=function(e,t){var r=Math.floor(Math.log(t)*u)+1,n=new Array(r),i=0;if(a=e)for(i++,a=a.right;a!==e;)i++,a=a.right;for(;0<i;){for(var m,c,a,f=a.degree,l=a.right;c=n[f];)s(a.key,c.key)&&(m=c,c=a,a=m),function(e,t){e.left.right=e.right,e.right.left=e.left,(e.parent=t).child?(e.left=t.child,e.right=t.child.right,(t.child.right=e).right.left=e):((t.child=e).right=e).left=e,t.degree++,e.mark=!1}(c,a),n[f]=null,f++;n[f]=a,a=l,i--}e=null;for(var h=0;h<r;h++)!(c=n[h])||e&&(c.left.right=c.right,c.right.left=c.left,c.left=e,c.right=e.right,(e.right=c).right.left=c,!o(c.key,e.key))||(e=c);return e};return a}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="smaller",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("smaller",{"boolean, boolean":function(e,t){return e<t},"number, number":function(e,r){return e<r&&!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lt(t)},"Fraction, Fraction":function(e,t){return-1===e.compare(t)},"Complex, Complex":function(e,t){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e<t},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.smaller+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm03",t.factory=function(e,t,r,n){var a=e.DenseMatrix;return function(e,t,r,o){var s=e._data,u=e._size,e=e._datatype,f=t._values,l=t._index,p=t._ptr,m=t._size,t=t._datatype;if(u.length!==m.length)throw new i(u.length,m.length);if(u[0]!==m[0]||u[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+m+")");if(!f)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var g,v=u[0],d=u[1],y=0,x=r;"string"==typeof e&&e===t&&(y=n.convert(0,g=e),x=n.find(r,[g,g]));for(var b=[],w=0;w<v;w++)b[w]=[];for(var N=[],E=[],M=0;M<d;M++){for(var A=M+1,_=p[M],O=p[M+1],T=_;T<O;T++){var C=l[T];N[C]=o?x(f[T],s[C][M]):x(s[C][M],f[T]),E[C]=A}for(var S=0;S<v;S++)b[S][M]=E[S]===A?N[S]:o?x(y,s[S][M]):x(s[S][M],y)}return new a({data:b,size:[v,d],datatype:g})}}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm07",t.factory=function(e,t,r,n){function s(e,t,r,n,i){for(var a=e._values,o=e._index,u=(e=e._ptr)[t],c=e[t+1];u<c;u++){var f=o[u];r[f]=i,n[f]=a[u]}}var a=e.DenseMatrix;return function(e,t,r){var o=e._size,u=e._datatype,c=t._size,f=t._datatype;if(o.length!==c.length)throw new i(o.length,c.length);if(o[0]!==c[0]||o[1]!==c[1])throw new RangeError("Dimension mismatch. Matrix A ("+o+") must match Matrix B ("+c+")");var l,p=o[0],m=o[1],h=0,g=r;"string"==typeof u&&u===f&&(h=n.convert(0,l=u),g=n.find(r,[l,l]));for(var y=[],v=0;v<p;v++)y[v]=[];for(var c=new a({data:y,size:[p,m],datatype:l}),b=[],w=[],N=[],E=[],d=0;d<m;d++){var M=d+1;for(s(e,d,N,b,M),s(t,d,E,w,M),v=0;v<p;v++)y[v][d]=g(N[v]===M?b[v]:h,E[v]===M?w[v]:h)}return c}}},function(e,t){"use strict";t.name="algorithm12",t.factory=function(e,t,r,n){var i=e.DenseMatrix;return function(e,t,r,a){var o=e._values,s=e._index,u=e._ptr,c=e._size,e=e._datatype;if(!o)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var l,p=c[0],m=c[1],h=r;"string"==typeof e&&(t=n.convert(t,l=e),h=n.find(r,[l,l]));for(var g=[],c=new i({data:g,size:[p,m],datatype:l}),d=[],y=[],x=0;x<m;x++){for(var b=x+1,w=u[x],N=u[x+1],E=w;E<N;E++){var M=s[E];d[M]=o[E],y[M]=b}for(var A=0;A<p;A++)0===x&&(g[A]=[]),g[A][x]=y[A]===b?a?h(t,d[A]):h(d[A],t):a?h(t,0):h(0,t)}return c}}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="larger",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("larger",{"boolean, boolean":function(e,t){return t<e},"number, number":function(e,r){return r<e&&!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gt(t)},"Fraction, Fraction":function(e,t){return 1===e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return t<e},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.larger+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(38),a=i.string,o=i.object,s=Array.isArray,u=a.isString;t.name="ImmutableDenseMatrix",t.path="type",t.factory=function(e,t,n){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!u(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix||s(e)){var r=new c(e,t);this._data=r._data,this._size=r._size,this._datatype=r._datatype,this._min=null,this._max=null}else if(e&&s(e.data)&&s(e.size))this._data=e.data,this._size=e.size,this._datatype=e.datatype,this._min=void 0!==e.min?e.min:null,this._max=void 0!==e.max?e.max:null;else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._data=[],this._size=[0],this._datatype=t,this._min=null,this._max=null}}var c=n(r(45)),f=n(r(58));return(a.prototype=new c).type="ImmutableDenseMatrix",a.prototype.isImmutableDenseMatrix=!0,a.prototype.subset=function(e){switch(arguments.length){case 1:var t=c.prototype.subset.call(this,e);return t.isMatrix?new a({data:t._data,size:t._size,datatype:t._datatype}):t;case 2:case 3:throw new Error("Cannot invoke set subset on an Immutable Matrix instance");default:throw new SyntaxError("Wrong number of arguments")}},a.prototype.set=function(){throw new Error("Cannot invoke set on an Immutable Matrix instance")},a.prototype.resize=function(){throw new Error("Cannot invoke resize on an Immutable Matrix instance")},a.prototype.clone=function(){return new a({data:o.clone(this._data),size:o.clone(this._size),datatype:this._datatype})},a.prototype.toJSON=function(){return{mathjs:"ImmutableDenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},a.fromJSON=function(e){return new a(e)},a.prototype.swapRows=function(){throw new Error("Cannot invoke swapRows on an Immutable Matrix instance")},a.prototype.min=function(){var e;return null===this._min&&(e=null,this.forEach(function(t){null!==e&&!f(t,e)||(e=t)}),this._min=null!==e?e:void 0),this._min},a.prototype.max=function(){var e;return null===this._max&&(e=null,this.forEach(function(t){null!==e&&!f(e,t)||(e=t)}),this._max=null!==e?e:void 0),this._max},a}},function(e,t,r){"use strict";var i=r(3).clone,a=r(6).isInteger;t.name="Index",t.path="type",t.factory=function(e){function t(e){if(!(this instanceof t))throw new SyntaxError("Constructor must be called with the new operator");this._dimensions=[],this._isScalar=!0;for(var n=0,i=arguments.length;n<i;n++){var a=arguments[n];if(a&&!0===a.isRange)this._dimensions.push(a),this._isScalar=!1;else if(a&&(Array.isArray(a)||!0===a.isMatrix)){var o=r(a.valueOf()),o=(this._dimensions.push(o),o.size());1===o.length&&1===o[0]||(this._isScalar=!1)}else{if("number"!=typeof a)throw new TypeError("Dimension must be an Array, Matrix, Number or Range");this._dimensions.push(r([a]))}}}function r(t){for(var r=0,n=t.length;r<n;r++)if("number"!=typeof t[r]||!a(t[r]))throw new TypeError("Index parameters must be positive integer numbers");return new e.ImmutableDenseMatrix(t)}return t.prototype.type="Index",t.prototype.isIndex=!0,t.prototype.clone=function(){var e=new t;return e._dimensions=i(this._dimensions),e._isScalar=this._isScalar,e},t.create=function(e){var r=new t;return t.apply(r,e),r},t.prototype.size=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.size()[0]}return e},t.prototype.max=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.max()}return e},t.prototype.min=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.min()}return e},t.prototype.forEach=function(e){for(var t=0,r=this._dimensions.length;t<r;t++)e(this._dimensions[t],t,this)},t.prototype.dimension=function(e){return this._dimensions[e]||null},t.prototype.isScalar=function(){return this._isScalar},t.prototype.valueOf=t.prototype.toArray=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++)e.push(this._dimensions[t].toArray());return e},t.prototype.toString=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++)e.push(this._dimensions[t].toString());return"["+e.join(", ")+"]"},t.prototype.toJSON=function(){return{mathjs:"Index",dimensions:this._dimensions}},t.fromJSON=function(e){return t.create(e.dimensions)},t}},function(e,t,r){"use strict";var i=r(6);t.name="Range",t.path="type",t.factory=function(e,t,r,n){function a(e,t,r){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(null!=e)if(!0===e.isBigNumber)e=e.toNumber();else if("number"!=typeof e)throw new TypeError("Parameter start must be a number");if(null!=t)if(!0===t.isBigNumber)t=t.toNumber();else if("number"!=typeof t)throw new TypeError("Parameter end must be a number");if(null!=r)if(!0===r.isBigNumber)r=r.toNumber();else if("number"!=typeof r)throw new TypeError("Parameter step must be a number");this.start=null!=e?parseFloat(e):0,this.end=null!=t?parseFloat(t):0,this.step=null!=r?parseFloat(r):1}return a.prototype.type="Range",a.prototype.isRange=!0,a.parse=function(e){if("string"!=typeof e)return null;var r=e.split(":").map(function(e){return parseFloat(e)});if(r.some(function(e){return isNaN(e)}))return null;switch(r.length){case 2:return new a(r[0],r[1]);case 3:return new a(r[0],r[2],r[1]);default:return null}},a.prototype.clone=function(){return new a(this.start,this.end,this.step)},a.prototype.size=function(){var e=0,t=this.start,r=this.step,t=this.end-t;return i.sign(r)==i.sign(t)?e=Math.ceil(t/r):0==t&&(e=0),[e=isNaN(e)?0:e]},a.prototype.min=function(){var e=this.size()[0];return 0<e?0<this.step?this.start:this.start+(e-1)*this.step:void 0},a.prototype.max=function(){var e=this.size()[0];return 0<e?0<this.step?this.start+(e-1)*this.step:this.start:void 0},a.prototype.forEach=function(e){var t=this.start,r=this.step,n=this.end,i=0;if(0<r)for(;t<n;)e(t,[i],this),t+=r,i++;else if(r<0)for(;n<t;)e(t,[i],this),t+=r,i++},a.prototype.map=function(e){var t=[];return this.forEach(function(r,n,i){t[n[0]]=e(r,n,i)}),t},a.prototype.toArray=function(){var e=[];return this.forEach(function(t,r){e[r[0]]=t}),e},a.prototype.valueOf=function(){return this.toArray()},a.prototype.format=function(e){var t=i.format(this.start,e);return 1!=this.step&&(t+=":"+i.format(this.step,e)),t+(":"+i.format(this.end,e))},a.prototype.toString=function(){return this.format()},a.prototype.toJSON=function(){return{mathjs:"Range",start:this.start,end:this.end,step:this.step}},a.fromJSON=function(e){return new a(e.start,e.end,e.step)},a}},function(e,t){"use strict";t.name="index",t.factory=function(e,t,r,n){return n("index",{"...number | BigNumber | Range | Array | Matrix":function(t){var t=t.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e&&(Array.isArray(e)||!0===e.isMatrix)?e.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e}):e}),n=new e.Index;return e.Index.apply(n,t),n}})}},function(e,t){"use strict";t.name="sparse",t.factory=function(e,t,r,n){var i=e.SparseMatrix;return(e=n("sparse",{"":function(){return new i([])},string:function(e){return new i([],e)},"Array | Matrix":function(e){return new i(e)},"Array | Matrix, string":function(e,t){return new i(e,t)}})).toTex={0:"\\begin{bsparse}\\end{bsparse}",1:"\\left(${args[0]}\\right)"},e}},function(e,t,r){"use strict";var i=r(19);t.name="number",t.factory=function(e,t,r,n){var a=n("number",{"":function(){return 0},number:function(e){return e},string:function(e){var t=Number(e);if(isNaN(t))throw new SyntaxError('String "'+e+'" is no valid number');return t},BigNumber:function(e){return e.toNumber()},Fraction:function(e){return e.valueOf()},Unit:function(e){throw new Error("Second argument with valueless unit expected")},"Unit, string | Unit":function(e,t){return e.toNumber(t)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},a}},function(e,t,r){e.exports=[r(70)]},function(e,t){"use strict";t.name="ResultSet",t.path="type",t.factory=function(e,t,r,n){function i(e){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");this.entries=e||[]}return i.prototype.type="ResultSet",i.prototype.isResultSet=!0,i.prototype.valueOf=function(){return this.entries},i.prototype.toString=function(){return"["+this.entries.join(", ")+"]"},i.prototype.toJSON=function(){return{mathjs:"ResultSet",entries:this.entries}},i.fromJSON=function(e){return new i(e.entries)},i}},function(e,t,r){"use strict";var i=r(19),a=r(6);t.name="string",t.factory=function(e,t,r,n){var o=n("string",{"":function(){return""},number:a.format,null:function(e){return"null"},boolean:function(e){return e+""},string:function(e){return e},"Array | Matrix":function(e){return i(e,o)},any:function(e){return String(e)}});return o.toTex={0:'\\mathtt{""}',1:"\\mathrm{string}\\left(${args[0]}\\right)"},o}},function(e,t,r){e.exports=[r(73),r(90),r(91)]},function(e,t,r){"use strict";var i=r(23).endsWith,a=r(3).clone;t.name="Unit",t.path="type",t.factory=function(e,t,n,o){function s(e,t){if(!(this instanceof s))throw new Error("Constructor must be called with the new operator");if(void 0!==e&&!M(e)&&!e.isComplex)throw new TypeError("First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined");if(null!=t&&("string"!=typeof t||""==t))throw new TypeError("Second parameter in Unit constructor must be a string");null!=t?(t=s.parse(t),this.units=t.units,this.dimensions=t.dimensions):(this.units=[{unit:q,prefix:I,power:0}],this.dimensions=[0,0,0,0,0,0,0,0,0]),this.value=null!=e?this._normalize(e):null,this.fixPrefix=!1,this.isUnitListSimplified=!0}function u(){for(;" "==z||"\t"==z;)l()}function f(e){return"0"<=e&&e<="9"}function l(){S++,z=C.charAt(S)}function p(e){S=e,z=C.charAt(S)}function m(){var t="",e=S;if("+"==z?l():"-"==z&&(t+=z,l()),!function(e){return"0"<=e&&e<="9"||"."==e}(z))return p(e),null;if("."==z){if(t+=z,l(),!f(z))return p(e),null}else{for(;f(z);)t+=z,l();"."==z&&(t+=z,l())}for(;f(z);)t+=z,l();if("E"==z||"e"==z){var e="",n=S;if(e+=z,l(),"+"!=z&&"-"!=z||(e+=z,l()),!f(z))return p(n),t;for(t+=e;f(z);)t+=z,l()}return t}function g(e){return z===e&&(l(),e)}function v(e){for(var t in L)if(L.hasOwnProperty(t)&&i(e,t)){var r=L[t],t=e.length-t.length,t=e.substring(0,t),t=r.prefixes[t];if(void 0!==t)return{unit:r,prefix:t}}return null}var C,S,z,d=n(r(51)),y=n(r(74)),x=n(r(77)),b=n(r(78)),w=n(r(79)),N=n(r(85)),E=n(r(86)),M=n(r(87)),A=n(r(88)),_=n(r(89)),O=n(r(68)),n=n(r(27)),B=(s.prototype.type="Unit",s.prototype.isUnit=!0,s.parse=function(r){if(S=-1,z="","string"!=typeof(C=r))throw new TypeError("Invalid argument in Unit.parse, string expected");var n=new s,i=(n.units=[],l(),u(),m()),a=null;i&&(a="bignumber"===t.number?new e.BigNumber(i):"fraction"===t.number?new e.Fraction(i):parseFloat(i)),u();for(var o=1,c=!1,f=[],p=1;;){for(u();"("===z;)f.push(o),p*=o,o=1,l(),u();if(!z)break;var d=z,y=function(){for(var e="",t=C.charCodeAt(S);48<=t&&t<=57||65<=t&&t<=90||97<=t&&t<=122;)e+=z,l(),t=C.charCodeAt(S);return(65<=(t=e.charCodeAt(0))&&t<=90||97<=t&&t<=122)&&e||null}();if(null==y)throw new SyntaxError('Unexpected "'+d+'" in "'+C+'" at index '+S.toString());var x=v(y);if(null==x)throw new SyntaxError('Unit "'+y+'" not found.');var b=o*p;if(u(),g("^")){u();d=m();if(null==d)throw new SyntaxError('In "'+r+'", "^" must be followed by a floating-point number');b*=d}n.units.push({unit:x.unit,prefix:x.prefix,power:b});for(var N=0;N<R.length;N++)n.dimensions[N]+=x.unit.dimensions[N]*b;for(u();")"===z;){if(0===f.length)throw new SyntaxError('Unmatched ")" in "'+C+'" at index '+S.toString());p/=f.pop(),l(),u()}c=!1,g("*")?(o=1,c=!0):g("/")?(o=-1,c=!0):o=1;y=x.unit.base.key;D.auto[y]={unit:x.unit,prefix:x.prefix}}if(u(),z)throw new SyntaxError('Could not parse: "'+r+'"');if(c)throw new SyntaxError('Trailing characters: "'+r+'"');if(0!==f.length)throw new SyntaxError('Unmatched "(" in "'+C+'"');if(0==n.units.length)throw new SyntaxError('"'+r+'" contains no units');return n.value=null!=a?n._normalize(a):null,n},s.prototype.clone=function(){var e=new s;e.fixPrefix=this.fixPrefix,e.isUnitListSimplified=this.isUnitListSimplified,e.value=a(this.value),e.dimensions=this.dimensions.slice(0),e.units=[];for(var t=0;t<this.units.length;t++)for(var r in e.units[t]={},this.units[t])this.units[t].hasOwnProperty(r)&&(e.units[t][r]=this.units[t][r]);return e},s.prototype._isDerived=function(){return 0!==this.units.length&&(1<this.units.length||1e-15<Math.abs(this.units[0].power-1))},s.prototype._normalize=function(e){var t,r,n,i;if(null==e||0===this.units.length)return e;if(this._isDerived()){for(var o=e,a=s._getNumberConverter(_(e)),u=0;u<this.units.length;u++)t=a(this.units[u].unit.value),i=a(this.units[u].prefix.value),n=a(this.units[u].power),o=x(o,w(x(t,i),n));return o}return t=(a=s._getNumberConverter(_(e)))(this.units[0].unit.value),r=a(this.units[0].unit.offset),i=a(this.units[0].prefix.value),x(d(e,r),x(t,i))},s.prototype._denormalize=function(e,t){var r,n,i,a;if(null==e||0===this.units.length)return e;if(this._isDerived()){for(var u=e,o=s._getNumberConverter(_(e)),c=0;c<this.units.length;c++)r=o(this.units[c].unit.value),a=o(this.units[c].prefix.value),i=o(this.units[c].power),u=b(u,w(x(r,a),i));return u}return r=(o=s._getNumberConverter(_(e)))(this.units[0].unit.value),a=o(this.units[0].prefix.value),n=o(this.units[0].unit.offset),y(b(b(e,r),null==t?a:t),n)},s.isValuelessUnit=function(e){return null!=v(e)},s.prototype.hasBase=function(e){if(!(e="string"==typeof e?P[e]:e))return!1;for(var t=0;t<R.length;t++)if(1e-12<Math.abs(this.dimensions[t]-e.dimensions[t]))return!1;return!0},s.prototype.equalBase=function(e){for(var t=0;t<R.length;t++)if(1e-12<Math.abs(this.dimensions[t]-e.dimensions[t]))return!1;return!0},s.prototype.equals=function(e){return this.equalBase(e)&&E(this.value,e.value)},s.prototype.multiply=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]+e.dimensions[r];for(var i,a,r=0;r<e.units.length;r++){var n=JSON.parse(JSON.stringify(e.units[r]));t.units.push(n)}return null!=this.value||null!=e.value?(i=null==this.value?this._normalize(1):this.value,a=null==e.value?e._normalize(1):e.value,t.value=x(i,a)):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.divide=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]-e.dimensions[r];for(var i,a,r=0;r<e.units.length;r++){var n=JSON.parse(JSON.stringify(e.units[r]));n.power=-n.power,t.units.push(n)}return null!=this.value||null!=e.value?(i=null==this.value?this._normalize(1):this.value,a=null==e.value?e._normalize(1):e.value,t.value=b(i,a)):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.pow=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]*e;for(r=0;r<t.units.length;r++)t.units[r].power*=e;return null!=t.value?t.value=w(t.value,e):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.abs=function(){var t,e=this.clone();for(t in e.value=N(e.value),e.units)"VA"!==e.units[t].unit.name&&"VAR"!==e.units[t].unit.name||(e.units[t].unit=L.W);return e},s.prototype.to=function(e){var t,r=null==this.value?this._normalize(1):this.value;if("string"==typeof e){if(t=s.parse(e),!this.equalBase(t))throw new Error("Units do not match");if(null!==t.value)throw new Error("Cannot convert to a unit with a value");return t.value=a(r),t.fixPrefix=!0,t.isUnitListSimplified=!0,t}if(e&&e.isUnit){if(!this.equalBase(e))throw new Error("Units do not match");if(null!==e.value)throw new Error("Cannot convert to a unit with a value");return(t=e.clone()).value=a(r),t.fixPrefix=!0,t.isUnitListSimplified=!0,t}throw new Error("String or Unit expected as parameter")},s.prototype.toNumber=function(e){return O(this.toNumeric(e))},s.prototype.toNumeric=function(e){e=this.to(e);return e._isDerived()?e._denormalize(e.value):e._denormalize(e.value,e.units[0].prefix.value)},s.prototype.toString=function(){return this.format()},s.prototype.toJSON=function(){return{mathjs:"Unit",value:this._denormalize(this.value),unit:this.formatUnits(),fixPrefix:this.fixPrefix}},s.fromJSON=function(e){var t=new s(e.value,e.unit);return t.fixPrefix=e.fixPrefix||!1,t},s.prototype.valueOf=s.prototype.toString,s.prototype.simplifyUnitListLazy=function(){if(!this.isUnitListSimplified&&null!=this.value){var e,r,n,t=[];for(r in $)if(this.hasBase(P[r])){e=r;break}if("NONE"===e)this.units=[];else if(n=e&&$.hasOwnProperty(e)?$[e]:n)this.units=[{unit:n.unit,prefix:n.prefix,power:1}];else{for(var i=0;i<R.length;i++){var a=R[i];1e-12<Math.abs(this.dimensions[i])&&t.push({unit:$[a].unit,prefix:$[a].prefix,power:this.dimensions[i]})}t.length<this.units.length&&(this.units=t)}this.isUnitListSimplified=!0}},s.prototype.formatUnits=function(){this.simplifyUnitListLazy();for(var e="",t="",r=0,n=0,i=0;i<this.units.length;i++)0<this.units[i].power?(r++,e+=" "+this.units[i].prefix.name+this.units[i].unit.name,1e-15<Math.abs(this.units[i].power-1)&&(e+="^"+this.units[i].power)):this.units[i].power<0&&n++;if(0<n)for(i=0;i<this.units.length;i++)this.units[i].power<0&&(0<r?(t+=" "+this.units[i].prefix.name+this.units[i].unit.name,1e-15<Math.abs(this.units[i].power+1)&&(t+="^"+-this.units[i].power)):t=(t+=" "+this.units[i].prefix.name+this.units[i].unit.name)+("^"+this.units[i].power));var e=e.substr(1),t=t.substr(1),a=e=1<r&&0<n?"("+e+")":e;return 0<r&&0<n&&(a+=" / "),a+(t=1<n&&0<r?"("+t+")":t)},s.prototype.format=function(e){this.simplifyUnitListLazy();var n,t=!1;for(n in void 0!==this.value&&null!==this.value&&this.value.isComplex&&(t=Math.abs(this.value.re)<1e-14,Math.abs(this.value.im)),this.units)this.units[n].unit&&("VA"===this.units[n].unit.name&&t?this.units[n].unit=L.VAR:"VAR"!==this.units[n].unit.name||t||(this.units[n].unit=L.VA));1!==this.units.length||this.fixPrefix||Math.abs(this.units[0].power-Math.round(this.units[0].power))<1e-14&&(this.units[0].prefix=this._bestPrefix());var i=this._denormalize(this.value),i=null!==this.value?A(i,e||{}):"",e=this.formatUnits();return this.value&&this.value.isComplex&&(i="("+i+")"),0<e.length&&0<i.length&&(i+=" "),i+e},{NONE:{"":{name:"",value:1,scientific:!0}},SHORT:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:10,scientific:!(s.prototype._bestPrefix=function(){if(1!==this.units.length)throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");if(1e-14<=Math.abs(this.units[0].power-Math.round(this.units[0].power)))throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");var e=N(this.value),t=N(this.units[0].unit.value),r=this.units[0].prefix;if(0!==e){var o,s,u,n=this.units[0].power,i=Math.abs(Math.log(e/Math.pow(r.value*t,n))/Math.LN10-1.2),a=this.units[0].unit.prefixes;for(o in a)a.hasOwnProperty(o)&&(s=a[o]).scientific&&((u=Math.abs(Math.log(e/Math.pow(s.value*t,n))/Math.LN10-1.2))<i||u===i&&s.name.length<r.name.length)&&(r=s,i=u)}return r})},h:{name:"h",value:100,scientific:!1},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0},d:{name:"d",value:.1,scientific:!1},c:{name:"c",value:.01,scientific:!1},m:{name:"m",value:.001,scientific:!0},u:{name:"u",value:1e-6,scientific:!0},n:{name:"n",value:1e-9,scientific:!0},p:{name:"p",value:1e-12,scientific:!0},f:{name:"f",value:1e-15,scientific:!0},a:{name:"a",value:1e-18,scientific:!0},z:{name:"z",value:1e-21,scientific:!0},y:{name:"y",value:1e-24,scientific:!0}},LONG:{"":{name:"",value:1,scientific:!0},deca:{name:"deca",value:10,scientific:!1},hecto:{name:"hecto",value:100,scientific:!1},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0},deci:{name:"deci",value:.1,scientific:!1},centi:{name:"centi",value:.01,scientific:!1},milli:{name:"milli",value:.001,scientific:!0},micro:{name:"micro",value:1e-6,scientific:!0},nano:{name:"nano",value:1e-9,scientific:!0},pico:{name:"pico",value:1e-12,scientific:!0},femto:{name:"femto",value:1e-15,scientific:!0},atto:{name:"atto",value:1e-18,scientific:!0},zepto:{name:"zepto",value:1e-21,scientific:!0},yocto:{name:"yocto",value:1e-24,scientific:!0}},SQUARED:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:100,scientific:!1},h:{name:"h",value:1e4,scientific:!1},k:{name:"k",value:1e6,scientific:!0},M:{name:"M",value:1e12,scientific:!0},G:{name:"G",value:1e18,scientific:!0},T:{name:"T",value:1e24,scientific:!0},P:{name:"P",value:1e30,scientific:!0},E:{name:"E",value:1e36,scientific:!0},Z:{name:"Z",value:1e42,scientific:!0},Y:{name:"Y",value:1e48,scientific:!0},d:{name:"d",value:.01,scientific:!1},c:{name:"c",value:1e-4,scientific:!1},m:{name:"m",value:1e-6,scientific:!0},u:{name:"u",value:1e-12,scientific:!0},n:{name:"n",value:1e-18,scientific:!0},p:{name:"p",value:1e-24,scientific:!0},f:{name:"f",value:1e-30,scientific:!0},a:{name:"a",value:1e-36,scientific:!0},z:{name:"z",value:1e-42,scientific:!0},y:{name:"y",value:1e-48,scientific:!0}},CUBIC:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:1e3,scientific:!1},h:{name:"h",value:1e6,scientific:!1},k:{name:"k",value:1e9,scientific:!0},M:{name:"M",value:1e18,scientific:!0},G:{name:"G",value:1e27,scientific:!0},T:{name:"T",value:1e36,scientific:!0},P:{name:"P",value:1e45,scientific:!0},E:{name:"E",value:1e54,scientific:!0},Z:{name:"Z",value:1e63,scientific:!0},Y:{name:"Y",value:1e72,scientific:!0},d:{name:"d",value:.001,scientific:!1},c:{name:"c",value:1e-6,scientific:!1},m:{name:"m",value:1e-9,scientific:!0},u:{name:"u",value:1e-18,scientific:!0},n:{name:"n",value:1e-27,scientific:!0},p:{name:"p",value:1e-36,scientific:!0},f:{name:"f",value:1e-45,scientific:!0},a:{name:"a",value:1e-54,scientific:!0},z:{name:"z",value:1e-63,scientific:!0},y:{name:"y",value:1e-72,scientific:!0}},BINARY_SHORT:{"":{name:"",value:1,scientific:!0},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0},Ki:{name:"Ki",value:1024,scientific:!0},Mi:{name:"Mi",value:Math.pow(1024,2),scientific:!0},Gi:{name:"Gi",value:Math.pow(1024,3),scientific:!0},Ti:{name:"Ti",value:Math.pow(1024,4),scientific:!0},Pi:{name:"Pi",value:Math.pow(1024,5),scientific:!0},Ei:{name:"Ei",value:Math.pow(1024,6),scientific:!0},Zi:{name:"Zi",value:Math.pow(1024,7),scientific:!0},Yi:{name:"Yi",value:Math.pow(1024,8),scientific:!0}},BINARY_LONG:{"":{name:"",value:1,scientific:!0},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0},kibi:{name:"kibi",value:1024,scientific:!0},mebi:{name:"mebi",value:Math.pow(1024,2),scientific:!0},gibi:{name:"gibi",value:Math.pow(1024,3),scientific:!0},tebi:{name:"tebi",value:Math.pow(1024,4),scientific:!0},pebi:{name:"pebi",value:Math.pow(1024,5),scientific:!0},exi:{name:"exi",value:Math.pow(1024,6),scientific:!0},zebi:{name:"zebi",value:Math.pow(1024,7),scientific:!0},yobi:{name:"yobi",value:Math.pow(1024,8),scientific:!0}},BTU:{"":{name:"",value:1,scientific:!0},MM:{name:"MM",value:1e6,scientific:!0}}});for(k in B.SHORTLONG={},B.SHORT)B.SHORT.hasOwnProperty(k)&&(B.SHORTLONG[k]=B.SHORT[k]);for(k in B.LONG)B.LONG.hasOwnProperty(k)&&(B.SHORTLONG[k]=B.LONG[k]);var I={name:"",value:1,scientific:!0},R=["MASS","LENGTH","TIME","CURRENT","TEMPERATURE","LUMINOUS_INTENSITY","AMOUNT_OF_SUBSTANCE","ANGLE","BIT"],P={NONE:{dimensions:[0,0,0,0,0,0,0,0,0]},MASS:{dimensions:[1,0,0,0,0,0,0,0,0]},LENGTH:{dimensions:[0,1,0,0,0,0,0,0,0]},TIME:{dimensions:[0,0,1,0,0,0,0,0,0]},CURRENT:{dimensions:[0,0,0,1,0,0,0,0,0]},TEMPERATURE:{dimensions:[0,0,0,0,1,0,0,0,0]},LUMINOUS_INTENSITY:{dimensions:[0,0,0,0,0,1,0,0,0]},AMOUNT_OF_SUBSTANCE:{dimensions:[0,0,0,0,0,0,1,0,0]},FORCE:{dimensions:[1,1,-2,0,0,0,0,0,0]},SURFACE:{dimensions:[0,2,0,0,0,0,0,0,0]},VOLUME:{dimensions:[0,3,0,0,0,0,0,0,0]},ENERGY:{dimensions:[1,2,-2,0,0,0,0,0,0]},POWER:{dimensions:[1,2,-3,0,0,0,0,0,0]},PRESSURE:{dimensions:[1,-1,-2,0,0,0,0,0,0]},ELECTRIC_CHARGE:{dimensions:[0,0,1,1,0,0,0,0,0]},ELECTRIC_CAPACITANCE:{dimensions:[-1,-2,4,2,0,0,0,0,0]},ELECTRIC_POTENTIAL:{dimensions:[1,2,-3,-1,0,0,0,0,0]},ELECTRIC_RESISTANCE:{dimensions:[1,2,-3,-2,0,0,0,0,0]},ELECTRIC_INDUCTANCE:{dimensions:[1,2,-2,-2,0,0,0,0,0]},ELECTRIC_CONDUCTANCE:{dimensions:[-1,-2,3,2,0,0,0,0,0]},MAGNETIC_FLUX:{dimensions:[1,2,-2,-1,0,0,0,0,0]},MAGNETIC_FLUX_DENSITY:{dimensions:[1,0,-2,-1,0,0,0,0,0]},FREQUENCY:{dimensions:[0,0,-1,0,0,0,0,0,0]},ANGLE:{dimensions:[0,0,0,0,0,0,0,1,0]},BIT:{dimensions:[0,0,0,0,0,0,0,0,1]}};for(k in P)P[k].key=k;var k,G,j,H,q={name:"",base:{},value:1,offset:0,dimensions:[0,0,0,0,0,0,0,0,0]},L={meter:{name:"meter",base:P.LENGTH,prefixes:B.LONG,value:1,offset:0},inch:{name:"inch",base:P.LENGTH,prefixes:B.NONE,value:.0254,offset:0},foot:{name:"foot",base:P.LENGTH,prefixes:B.NONE,value:.3048,offset:0},yard:{name:"yard",base:P.LENGTH,prefixes:B.NONE,value:.9144,offset:0},mile:{name:"mile",base:P.LENGTH,prefixes:B.NONE,value:1609.344,offset:0},link:{name:"link",base:P.LENGTH,prefixes:B.NONE,value:.201168,offset:0},rod:{name:"rod",base:P.LENGTH,prefixes:B.NONE,value:5.02921,offset:0},chain:{name:"chain",base:P.LENGTH,prefixes:B.NONE,value:20.1168,offset:0},angstrom:{name:"angstrom",base:P.LENGTH,prefixes:B.NONE,value:1e-10,offset:0},m:{name:"m",base:P.LENGTH,prefixes:B.SHORT,value:1,offset:0},in:{name:"in",base:P.LENGTH,prefixes:B.NONE,value:.0254,offset:0},ft:{name:"ft",base:P.LENGTH,prefixes:B.NONE,value:.3048,offset:0},yd:{name:"yd",base:P.LENGTH,prefixes:B.NONE,value:.9144,offset:0},mi:{name:"mi",base:P.LENGTH,prefixes:B.NONE,value:1609.344,offset:0},li:{name:"li",base:P.LENGTH,prefixes:B.NONE,value:.201168,offset:0},rd:{name:"rd",base:P.LENGTH,prefixes:B.NONE,value:5.02921,offset:0},ch:{name:"ch",base:P.LENGTH,prefixes:B.NONE,value:20.1168,offset:0},mil:{name:"mil",base:P.LENGTH,prefixes:B.NONE,value:254e-7,offset:0},m2:{name:"m2",base:P.SURFACE,prefixes:B.SQUARED,value:1,offset:0},sqin:{name:"sqin",base:P.SURFACE,prefixes:B.NONE,value:64516e-8,offset:0},sqft:{name:"sqft",base:P.SURFACE,prefixes:B.NONE,value:.09290304,offset:0},sqyd:{name:"sqyd",base:P.SURFACE,prefixes:B.NONE,value:.83612736,offset:0},sqmi:{name:"sqmi",base:P.SURFACE,prefixes:B.NONE,value:2589988.110336,offset:0},sqrd:{name:"sqrd",base:P.SURFACE,prefixes:B.NONE,value:25.29295,offset:0},sqch:{name:"sqch",base:P.SURFACE,prefixes:B.NONE,value:404.6873,offset:0},sqmil:{name:"sqmil",base:P.SURFACE,prefixes:B.NONE,value:6.4516e-10,offset:0},m3:{name:"m3",base:P.VOLUME,prefixes:B.CUBIC,value:1,offset:0},L:{name:"L",base:P.VOLUME,prefixes:B.SHORT,value:.001,offset:0},l:{name:"l",base:P.VOLUME,prefixes:B.SHORT,value:.001,offset:0},litre:{name:"litre",base:P.VOLUME,prefixes:B.LONG,value:.001,offset:0},cuin:{name:"cuin",base:P.VOLUME,prefixes:B.NONE,value:16387064e-12,offset:0},cuft:{name:"cuft",base:P.VOLUME,prefixes:B.NONE,value:.028316846592,offset:0},cuyd:{name:"cuyd",base:P.VOLUME,prefixes:B.NONE,value:.764554857984,offset:0},teaspoon:{name:"teaspoon",base:P.VOLUME,prefixes:B.NONE,value:5e-6,offset:0},tablespoon:{name:"tablespoon",base:P.VOLUME,prefixes:B.NONE,value:15e-6,offset:0},drop:{name:"drop",base:P.VOLUME,prefixes:B.NONE,value:5e-8,offset:0},gtt:{name:"gtt",base:P.VOLUME,prefixes:B.NONE,value:5e-8,offset:0},minim:{name:"minim",base:P.VOLUME,prefixes:B.NONE,value:6.161152e-8,offset:0},fluiddram:{name:"fluiddram",base:P.VOLUME,prefixes:B.NONE,value:36966911e-13,offset:0},fluidounce:{name:"fluidounce",base:P.VOLUME,prefixes:B.NONE,value:2957353e-11,offset:0},gill:{name:"gill",base:P.VOLUME,prefixes:B.NONE,value:.0001182941,offset:0},cc:{name:"cc",base:P.VOLUME,prefixes:B.NONE,value:1e-6,offset:0},cup:{name:"cup",base:P.VOLUME,prefixes:B.NONE,value:.0002365882,offset:0},pint:{name:"pint",base:P.VOLUME,prefixes:B.NONE,value:.0004731765,offset:0},quart:{name:"quart",base:P.VOLUME,prefixes:B.NONE,value:.0009463529,offset:0},gallon:{name:"gallon",base:P.VOLUME,prefixes:B.NONE,value:.003785412,offset:0},beerbarrel:{name:"beerbarrel",base:P.VOLUME,prefixes:B.NONE,value:.1173478,offset:0},oilbarrel:{name:"oilbarrel",base:P.VOLUME,prefixes:B.NONE,value:.1589873,offset:0},hogshead:{name:"hogshead",base:P.VOLUME,prefixes:B.NONE,value:.238481,offset:0},fldr:{name:"fldr",base:P.VOLUME,prefixes:B.NONE,value:36966911e-13,offset:0},floz:{name:"floz",base:P.VOLUME,prefixes:B.NONE,value:2957353e-11,offset:0},gi:{name:"gi",base:P.VOLUME,prefixes:B.NONE,value:.0001182941,offset:0},cp:{name:"cp",base:P.VOLUME,prefixes:B.NONE,value:.0002365882,offset:0},pt:{name:"pt",base:P.VOLUME,prefixes:B.NONE,value:.0004731765,offset:0},qt:{name:"qt",base:P.VOLUME,prefixes:B.NONE,value:.0009463529,offset:0},gal:{name:"gal",base:P.VOLUME,prefixes:B.NONE,value:.003785412,offset:0},bbl:{name:"bbl",base:P.VOLUME,prefixes:B.NONE,value:.1173478,offset:0},obl:{name:"obl",base:P.VOLUME,prefixes:B.NONE,value:.1589873,offset:0},g:{name:"g",base:P.MASS,prefixes:B.SHORT,value:.001,offset:0},gram:{name:"gram",base:P.MASS,prefixes:B.LONG,value:.001,offset:0},ton:{name:"ton",base:P.MASS,prefixes:B.SHORT,value:907.18474,offset:0},tonne:{name:"tonne",base:P.MASS,prefixes:B.SHORT,value:1e3,offset:0},grain:{name:"grain",base:P.MASS,prefixes:B.NONE,value:6479891e-11,offset:0},dram:{name:"dram",base:P.MASS,prefixes:B.NONE,value:.0017718451953125,offset:0},ounce:{name:"ounce",base:P.MASS,prefixes:B.NONE,value:.028349523125,offset:0},poundmass:{name:"poundmass",base:P.MASS,prefixes:B.NONE,value:.45359237,offset:0},hundredweight:{name:"hundredweight",base:P.MASS,prefixes:B.NONE,value:45.359237,offset:0},stick:{name:"stick",base:P.MASS,prefixes:B.NONE,value:.115,offset:0},stone:{name:"stone",base:P.MASS,prefixes:B.NONE,value:6.35029318,offset:0},gr:{name:"gr",base:P.MASS,prefixes:B.NONE,value:6479891e-11,offset:0},dr:{name:"dr",base:P.MASS,prefixes:B.NONE,value:.0017718451953125,offset:0},oz:{name:"oz",base:P.MASS,prefixes:B.NONE,value:.028349523125,offset:0},lbm:{name:"lbm",base:P.MASS,prefixes:B.NONE,value:.45359237,offset:0},cwt:{name:"cwt",base:P.MASS,prefixes:B.NONE,value:45.359237,offset:0},s:{name:"s",base:P.TIME,prefixes:B.SHORT,value:1,offset:0},min:{name:"min",base:P.TIME,prefixes:B.NONE,value:60,offset:0},h:{name:"h",base:P.TIME,prefixes:B.NONE,value:3600,offset:0},second:{name:"second",base:P.TIME,prefixes:B.LONG,value:1,offset:0},sec:{name:"sec",base:P.TIME,prefixes:B.LONG,value:1,offset:0},minute:{name:"minute",base:P.TIME,prefixes:B.NONE,value:60,offset:0},hour:{name:"hour",base:P.TIME,prefixes:B.NONE,value:3600,offset:0},day:{name:"day",base:P.TIME,prefixes:B.NONE,value:86400,offset:0},week:{name:"week",base:P.TIME,prefixes:B.NONE,value:604800,offset:0},month:{name:"month",base:P.TIME,prefixes:B.NONE,value:2629800,offset:0},year:{name:"year",base:P.TIME,prefixes:B.NONE,value:31557600,offset:0},decade:{name:"year",base:P.TIME,prefixes:B.NONE,value:315576e3,offset:0},century:{name:"century",base:P.TIME,prefixes:B.NONE,value:315576e4,offset:0},millennium:{name:"millennium",base:P.TIME,prefixes:B.NONE,value:315576e5,offset:0},hertz:{name:"Hertz",base:P.FREQUENCY,prefixes:B.LONG,value:1,offset:0,reciprocal:!0},Hz:{name:"Hz",base:P.FREQUENCY,prefixes:B.SHORT,value:1,offset:0,reciprocal:!0},rad:{name:"rad",base:P.ANGLE,prefixes:B.NONE,value:1,offset:0},deg:{name:"deg",base:P.ANGLE,prefixes:B.NONE,value:.017453292519943295,offset:0},grad:{name:"grad",base:P.ANGLE,prefixes:B.NONE,value:.015707963267948967,offset:0},cycle:{name:"cycle",base:P.ANGLE,prefixes:B.NONE,value:6.283185307179586,offset:0},arcsec:{name:"arcsec",base:P.ANGLE,prefixes:B.NONE,value:484813681109536e-20,offset:0},arcmin:{name:"arcmin",base:P.ANGLE,prefixes:B.NONE,value:.0002908882086657216,offset:0},A:{name:"A",base:P.CURRENT,prefixes:B.SHORT,value:1,offset:0},ampere:{name:"ampere",base:P.CURRENT,prefixes:B.LONG,value:1,offset:0},K:{name:"K",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:0},degC:{name:"degC",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:273.15},degF:{name:"degF",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:459.67},degR:{name:"degR",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:0},kelvin:{name:"kelvin",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:0},celsius:{name:"celsius",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:273.15},fahrenheit:{name:"fahrenheit",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:459.67},rankine:{name:"rankine",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:0},mol:{name:"mol",base:P.AMOUNT_OF_SUBSTANCE,prefixes:B.NONE,value:1,offset:0},mole:{name:"mole",base:P.AMOUNT_OF_SUBSTANCE,prefixes:B.NONE,value:1,offset:0},cd:{name:"cd",base:P.LUMINOUS_INTENSITY,prefixes:B.NONE,value:1,offset:0},candela:{name:"candela",base:P.LUMINOUS_INTENSITY,prefixes:B.NONE,value:1,offset:0},N:{name:"N",base:P.FORCE,prefixes:B.SHORT,value:1,offset:0},newton:{name:"newton",base:P.FORCE,prefixes:B.LONG,value:1,offset:0},dyn:{name:"dyn",base:P.FORCE,prefixes:B.SHORT,value:1e-5,offset:0},dyne:{name:"dyne",base:P.FORCE,prefixes:B.LONG,value:1e-5,offset:0},lbf:{name:"lbf",base:P.FORCE,prefixes:B.NONE,value:4.4482216152605,offset:0},poundforce:{name:"poundforce",base:P.FORCE,prefixes:B.NONE,value:4.4482216152605,offset:0},J:{name:"J",base:P.ENERGY,prefixes:B.SHORT,value:1,offset:0},joule:{name:"joule",base:P.ENERGY,prefixes:B.SHORT,value:1,offset:0},erg:{name:"erg",base:P.ENERGY,prefixes:B.NONE,value:1e-5,offset:0},Wh:{name:"Wh",base:P.ENERGY,prefixes:B.SHORT,value:3600,offset:0},BTU:{name:"BTU",base:P.ENERGY,prefixes:B.BTU,value:1055.05585262,offset:0},eV:{name:"eV",base:P.ENERGY,prefixes:B.SHORT,value:1602176565e-28,offset:0},electronvolt:{name:"electronvolt",base:P.ENERGY,prefixes:B.LONG,value:1602176565e-28,offset:0},W:{name:"W",base:P.POWER,prefixes:B.SHORT,value:1,offset:0},watt:{name:"W",base:P.POWER,prefixes:B.LONG,value:1,offset:0},hp:{name:"hp",base:P.POWER,prefixes:B.NONE,value:745.6998715386,offset:0},VAR:{name:"VAR",base:P.POWER,prefixes:B.SHORT,value:new n(0,1),offset:0},VA:{name:"VA",base:P.POWER,prefixes:B.SHORT,value:1,offset:0},Pa:{name:"Pa",base:P.PRESSURE,prefixes:B.SHORT,value:1,offset:0},psi:{name:"psi",base:P.PRESSURE,prefixes:B.NONE,value:6894.75729276459,offset:0},atm:{name:"atm",base:P.PRESSURE,prefixes:B.NONE,value:101325,offset:0},coulomb:{name:"coulomb",base:P.ELECTRIC_CHARGE,prefixes:B.LONG,value:1,offset:0},C:{name:"C",base:P.ELECTRIC_CHARGE,prefixes:B.SHORT,value:1,offset:0},farad:{name:"farad",base:P.ELECTRIC_CAPACITANCE,prefixes:B.LONG,value:1,offset:0},F:{name:"F",base:P.ELECTRIC_CAPACITANCE,prefixes:B.SHORT,value:1,offset:0},volt:{name:"volt",base:P.ELECTRIC_POTENTIAL,prefixes:B.LONG,value:1,offset:0},V:{name:"V",base:P.ELECTRIC_POTENTIAL,prefixes:B.SHORT,value:1,offset:0},ohm:{name:"ohm",base:P.ELECTRIC_RESISTANCE,prefixes:B.SHORTLONG,value:1,offset:0},henry:{name:"henry",base:P.ELECTRIC_INDUCTANCE,prefixes:B.LONG,value:1,offset:0},H:{name:"H",base:P.ELECTRIC_INDUCTANCE,prefixes:B.SHORT,value:1,offset:0},siemens:{name:"siemens",base:P.ELECTRIC_CONDUCTANCE,prefixes:B.LONG,value:1,offset:0},S:{name:"S",base:P.ELECTRIC_CONDUCTANCE,prefixes:B.SHORT,value:1,offset:0},weber:{name:"weber",base:P.MAGNETIC_FLUX,prefixes:B.LONG,value:1,offset:0},Wb:{name:"Wb",base:P.MAGNETIC_FLUX,prefixes:B.SHORT,value:1,offset:0},tesla:{name:"tesla",base:P.MAGNETIC_FLUX_DENSITY,prefixes:B.LONG,value:1,offset:0},T:{name:"T",base:P.MAGNETIC_FLUX_DENSITY,prefixes:B.SHORT,value:1,offset:0},b:{name:"b",base:P.BIT,prefixes:B.BINARY_SHORT,value:1,offset:0},bits:{name:"bits",base:P.BIT,prefixes:B.BINARY_LONG,value:1,offset:0},B:{name:"B",base:P.BIT,prefixes:B.BINARY_SHORT,value:8,offset:0},bytes:{name:"bytes",base:P.BIT,prefixes:B.BINARY_LONG,value:8,offset:0}},F={meters:"meter",inches:"inch",feet:"foot",yards:"yard",miles:"mile",links:"link",rods:"rod",chains:"chain",angstroms:"angstrom",lt:"l",litres:"litre",liter:"litre",liters:"litre",teaspoons:"teaspoon",tablespoons:"tablespoon",minims:"minim",fluiddrams:"fluiddram",fluidounces:"fluidounce",gills:"gill",cups:"cup",pints:"pint",quarts:"quart",gallons:"gallon",beerbarrels:"beerbarrel",oilbarrels:"oilbarrel",hogsheads:"hogshead",gtts:"gtt",grams:"gram",tons:"ton",tonnes:"tonne",grains:"grain",drams:"dram",ounces:"ounce",poundmasses:"poundmass",hundredweights:"hundredweight",sticks:"stick",lb:"lbm",lbs:"lbm",seconds:"second",minutes:"minute",hours:"hour",days:"day",hertz:"hertz",radians:"rad",degree:"deg",degrees:"deg",gradian:"grad",gradians:"grad",cycles:"cycle",arcsecond:"arcsec",arcseconds:"arcsec",arcminute:"arcmin",arcminutes:"arcmin",BTUs:"BTU",watts:"watt",joules:"joule",amperes:"ampere",coulombs:"coulomb",volts:"volt",ohms:"ohm",farads:"farad",webers:"weber",teslas:"tesla",electronvolts:"electronvolt",moles:"mole"},D={si:{NONE:{unit:q,prefix:B.NONE[""]},LENGTH:{unit:L.m,prefix:B.SHORT[""]},MASS:{unit:L.g,prefix:B.SHORT.k},TIME:{unit:L.s,prefix:B.SHORT[""]},CURRENT:{unit:L.A,prefix:B.SHORT[""]},TEMPERATURE:{unit:L.K,prefix:B.SHORT[""]},LUMINOUS_INTENSITY:{unit:L.cd,prefix:B.SHORT[""]},AMOUNT_OF_SUBSTANCE:{unit:L.mol,prefix:B.SHORT[""]},ANGLE:{unit:L.rad,prefix:B.SHORT[""]},BIT:{unit:L.bit,prefix:B.SHORT[""]},FORCE:{unit:L.N,prefix:B.SHORT[""]},ENERGY:{unit:L.J,prefix:B.SHORT[""]},POWER:{unit:L.W,prefix:B.SHORT[""]},PRESSURE:{unit:L.Pa,prefix:B.SHORT[""]},ELECTRIC_CHARGE:{unit:L.C,prefix:B.SHORT[""]},ELECTRIC_CAPACITANCE:{unit:L.F,prefix:B.SHORT[""]},ELECTRIC_POTENTIAL:{unit:L.V,prefix:B.SHORT[""]},ELECTRIC_RESISTANCE:{unit:L.ohm,prefix:B.SHORT[""]},ELECTRIC_INDUCTANCE:{unit:L.H,prefix:B.SHORT[""]},ELECTRIC_CONDUCTANCE:{unit:L.S,prefix:B.SHORT[""]},MAGNETIC_FLUX:{unit:L.Wb,prefix:B.SHORT[""]},MAGNETIC_FLUX_DENSITY:{unit:L.T,prefix:B.SHORT[""]},FREQUENCY:{unit:L.Hz,prefix:B.SHORT[""]}}},$=(D.cgs=JSON.parse(JSON.stringify(D.si)),D.cgs.LENGTH={unit:L.m,prefix:B.SHORT.c},D.cgs.MASS={unit:L.g,prefix:B.SHORT[""]},D.cgs.FORCE={unit:L.dyn,prefix:B.SHORT[""]},D.cgs.ENERGY={unit:L.erg,prefix:B.NONE[""]},D.us=JSON.parse(JSON.stringify(D.si)),D.us.LENGTH={unit:L.ft,prefix:B.NONE[""]},D.us.MASS={unit:L.lbm,prefix:B.NONE[""]},D.us.TEMPERATURE={unit:L.degF,prefix:B.NONE[""]},D.us.FORCE={unit:L.lbf,prefix:B.NONE[""]},D.us.ENERGY={unit:L.BTU,prefix:B.BTU[""]},D.us.POWER={unit:L.hp,prefix:B.NONE[""]},D.us.PRESSURE={unit:L.psi,prefix:B.NONE[""]},D.auto=JSON.parse(JSON.stringify(D.si)),D.auto);for(k in s.setUnitSystem=function(e){if(!D.hasOwnProperty(e))throw new Error("Unit system "+e+" does not exist. Choices are: "+Object.keys(D).join(", "));$=D[e]},s.getUnitSystem=function(){for(var e in D)if(D[e]===$)return e},s.typeConverters={BigNumber:function(t){return new e.BigNumber(t+"")},Fraction:function(t){return new e.Fraction(t)},Complex:function(e){return e},number:function(e){return e}},s._getNumberConverter=function(e){if(s.typeConverters[e])return s.typeConverters[e];throw new TypeError('Unsupported type "'+e+'"')},L)(j=L[k]).dimensions=j.base.dimensions;for(G in F)F.hasOwnProperty(G)&&(j=L[F[G]],(H=Object.create(j)).name=G,L[G]=H);return s.PREFIXES=B,s.BASE_UNITS=P,s.UNITS=L,s.UNIT_SYSTEMS=D,s}},function(e,t,r){"use strict";var i=r(41);t.name="subtract",t.factory=function(e,t,n,a){var o=r(29),s=n(r(50)),u=n(r(51)),c=n(r(75)),f=n(r(52)),l=n(r(59)),p=n(r(76)),m=n(r(54)),h=n(r(55)),g=n(r(56)),v=a("subtract",{"number, number":function(e,t){return e-t},"Complex, Complex":function(t,r){return new e.Complex(t.re-r.re,t.im-r.im)},"BigNumber, BigNumber":function(e,t){return e.minus(t)},"Fraction, Fraction":function(e,t){return e.sub(t)},"Unit, Unit":function(e,t){if(null==e.value)throw new Error("Parameter x contains a unit with undefined value");if(null==t.value)throw new Error("Parameter y contains a unit with undefined value");if(e.equalBase(t))return(e=e.clone()).value=v(e.value,t.value),e.fixPrefix=!1,e;throw new Error("Units do not match")},"Matrix, Matrix":function(e,t){var r=e.size(),n=t.size();if(r.length!==n.length)throw new i(r.length,n.length);return"sparse"===e.storage()?"sparse"===t.storage()?p(e,t,v):l(t,e,v,!0):"sparse"===t.storage()?f(e,t,v,!1):h(e,t,v)},"Array, Array":function(e,t){return v(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return v(s(e),t)},"Matrix, Array":function(e,t){return v(e,s(t))},"Matrix, any":function(e,t){e="sparse"===e.storage()?m(e,c(t),u):g(e,t,v);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?m:g)(t,e,v,!0);return t},"Array, any":function(e,t){return g(s(e),t,v,!1).valueOf()},"any, Array":function(e,t){return g(s(t),e,v,!0).valueOf()}});return v.toTex="\\left(${args[0]}"+o.operators.subtract+"${args[1]}\\right)",v}},function(e,t,r){"use strict";var i=r(19);t.name="unaryMinus",t.factory=function(e,t,n,a){var o=r(29),s=a("unaryMinus",{number:function(e){return-e},Complex:function(t){return new e.Complex(-t.re,-t.im)},BigNumber:function(e){return e.neg()},Fraction:function(e){return e.neg()},Unit:function(e){var t=e.clone();return t.value=s(e.value),t},"Array | Matrix":function(e){return i(e,s,!0)}});return s.toTex=o.operators.unaryMinus+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm05",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var O=n&&p?[]:void 0,T=[],C=[],f=new s({values:O,index:T,ptr:C,size:[g,x],datatype:d}),z=O?[]:void 0,B=O?[]:void 0,k=[],I=[],M=0;M<x;M++){C[M]=T.length;for(var R=M+1,A=c[M],_=c[M+1];A<_;A++)E=u[A],T.push(E),k[E]=R,z&&(z[E]=n[A]);for(A=h[M],_=h[M+1];A<_;A++)k[E=m[A]]!==R&&T.push(E),I[E]=R,B&&(B[E]=p[A]);if(O)for(A=C[M];A<T.length;){var E,P=k[E=T[A]],U=I[E];P!==R&&U!==R||(b(P=N(P===R?z[E]:w,U===R?B[E]:w),w)?T.splice(A,1):(O.push(P),A++))}}return C[x]=T.length,f}}},function(e,t){"use strict";t.factory=function(e,t,r,n){var i=n("multiplyScalar",{"number, number":function(e,t){return e*t},"Complex, Complex":function(t,r){return new e.Complex(t.re*r.re-t.im*r.im,t.re*r.im+t.im*r.re)},"BigNumber, BigNumber":function(e,t){return e.times(t)},"Fraction, Fraction":function(e,t){return e.mul(t)},"number | Fraction | BigNumber | Complex, Unit":function(e,t){t=t.clone();return t.value=null===t.value?t._normalize(e):i(t.value,e),t},"Unit, number | Fraction | BigNumber | Complex":function(e,t){e=e.clone();return e.value=null===e.value?e._normalize(t):i(e.value,t),e},"Unit, Unit":function(e,t){return e.multiply(t)}});return i}},function(e,t,r){"use strict";t.factory=function(e,t,n,i){var o=n(r(77)),s=i("divide",{"number, number":function(e,t){return e/t},"Complex, Complex":function(t,r){var n=r.re*r.re+r.im*r.im;return 0!=n?new e.Complex((t.re*r.re+t.im*r.im)/n,(t.im*r.re-t.re*r.im)/n):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?t.im/0:0)},"BigNumber, BigNumber":function(e,t){return e.div(t)},"Fraction, Fraction":function(e,t){return e.div(t)},"Unit, number | Fraction | BigNumber":function(e,t){e=e.clone();return e.value=s(null===e.value?e._normalize(1):e.value,t),e},"number | Fraction | BigNumber, Unit":function(e,t){t=t.pow(-1);return t.value=o(null===t.value?t._normalize(1):t.value,e),t},"Unit, Unit":function(e,t){return e.divide(t)}});return s}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).size;t.name="pow",t.factory=function(e,t,n,o){function s(r,n){return i(n)||0<=r||t.predictable?Math.pow(r,n):u(new e.Complex(r,0),new e.Complex(n,0))}function u(e,t){return p(g(h(e),t))}function c(e,t){if(!i(t)||t<0)throw new TypeError("For A^b, b must be a positive integer (value is "+t+")");var r=a(e);if(2!=r.length)throw new Error("For A^b, A must be 2 dimensional (A has "+r.length+" dimensions)");if(r[0]!=r[1])throw new Error("For A^b, A must be square (size is "+r[0]+"x"+r[1]+")");for(var n=m(r[0]).valueOf(),o=e;1<=t;)1==(1&t)&&(n=g(o,n)),t>>=1,o=g(o,o);return n}function f(e,t){return v(c(e.valueOf(),t))}var l=r(29),p=n(r(80)),m=n(r(81)),h=n(r(82)),g=n(r(83)),v=n(r(50));return(n=o("pow",{"number, number":s,"Complex, Complex":u,"BigNumber, BigNumber":function(r,n){return n.isInteger()||0<=r||t.predictable?r.pow(n):u(new e.Complex(r.toNumber(),0),new e.Complex(n.toNumber(),0))},"Fraction, Fraction":function(e,r){if(1===r.d)return e.pow(r);if(t.predictable)throw new Error("Function pow does not support non-integer exponents for fractions.");return s(e.valueOf(),r.valueOf())},"Array, number":c,"Array, BigNumber":function(e,t){return c(e,t.toNumber())},"Matrix, number":f,"Matrix, BigNumber":function(e,t){return f(e,t.toNumber())},"Unit, number":function(e,t){return e.pow(t)}})).toTex="\\left(${args[0]}\\right)"+l.operators.pow+"{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(19);t.name="exp",t.factory=function(e,t,r,n){var a=n("exp",{number:Math.exp,Complex:function(t){var r=Math.exp(t.re);return new e.Complex(r*Math.cos(t.im),r*Math.sin(t.im))},BigNumber:function(e){return e.exp()},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\exp\\left(${args[0]}\\right)",a}},function(e,t,r){"use strict";var i=r(39),a=r(6).isInteger;t.name="eye",t.factory=function(e,t,n,o){function s(e,t){switch(e.length){case 0:return t?c(t):[];case 1:return u(e[0],e[0],t);case 2:return u(e[0],e[1],t);default:throw new Error("Vector containing two values expected")}}function u(t,r,n){var o=t&&!0===t.isBigNumber||r&&!0===r.isBigNumber?e.BigNumber:null;if(t&&!0===t.isBigNumber&&(t=t.toNumber()),r&&!0===r.isBigNumber&&(r=r.toNumber()),!a(t)||t<1)throw new Error("Parameters in function eye must be positive integers");if(!a(r)||r<1)throw new Error("Parameters in function eye must be positive integers");var s=o?new e.BigNumber(1):1,o=o?new o(0):0,c=[t,r];if(n)return e.Matrix.storage(n).diagonal(c,s,0,o);for(var l=i.resize([],c,o),p=t<r?t:r,m=0;m<p;m++)l[m][m]=s;return l}var c=n(r(50));return(n=o("eye",{"":function(){return"matrix"===t.matrix?c([]):[]},string:function(e){return c(e)},"number | BigNumber":function(e){return u(e,e,"matrix"===t.matrix?"default":void 0)},"number | BigNumber, string":function(e,t){return u(e,e,t)},"number | BigNumber, number | BigNumber":function(e,r){return u(e,r,"matrix"===t.matrix?"default":void 0)},"number | BigNumber, number | BigNumber, string":u,Array:function(e){return s(e)},"Array, string":s,Matrix:function(e){return s(e.valueOf(),e.storage())},"Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(19);t.name="log",t.factory=function(e,t,n,a){function s(t){return new e.Complex(Math.log(Math.sqrt(t.re*t.re+t.im*t.im)),Math.atan2(t.im,t.re))}var u=n(r(78)),c=a("log",{number:function(r){return 0<=r||t.predictable?Math.log(r):c(new e.Complex(r,0))},Complex:s,BigNumber:function(r){return!r.isNegative()||t.predictable?r.ln():s(new e.Complex(r.toNumber(),0))},"Array | Matrix":function(e){return i(e,c)},"any, any":function(e,t){return u(c(e),c(t))}});return c.toTex={1:"\\ln\\left(${args[0]}\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}\\right)"},c}},function(e,t,r){"use strict";var i=r(3).extend,a=r(39);t.name="multiply",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(51)),f=n(r(77)),l=n(r(47)),p=n(r(84)),m=n(r(56)),h=e.DenseMatrix,g=e.SparseMatrix,v=o("multiply",i({"Array, Array":function(e,t){d(a.size(e),a.size(t));e=v(u(e),u(t));return e&&!0===e.isMatrix?e.valueOf():e},"Matrix, Matrix":function(e,t){var r=e.size(),n=t.size();return d(r,n),1===r.length?1===n.length?y(e,t,r[0]):x(e,t):(1===n.length?w:N)(e,t)},"Matrix, Array":function(e,t){return v(e,u(t))},"Array, Matrix":function(e,t){return v(u(e,t.storage()),t)},"Matrix, any":function(e,t){var r;switch(e.storage()){case"sparse":r=p(e,t,f,!1);break;case"dense":r=m(e,t,f,!1)}return r},"any, Matrix":function(e,t){var r;switch(t.storage()){case"sparse":r=p(t,e,f,!0);break;case"dense":r=m(t,e,f,!0)}return r},"Array, any":function(e,t){return m(u(e),t,f,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,f,!0).valueOf()}},f.signatures)),d=function(e,t){switch(e.length){case 1:switch(t.length){case 1:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+e[0]+") must match Matrix rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;case 2:switch(t.length){case 1:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+e[1]+") must match Vector length ("+t[0]+")");break;case 2:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+e[1]+") must match Matrix B rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+e.length+" dimensions)")}},y=function(e,t,r){if(0===r)throw new Error("Cannot multiply two empty vectors");var i=e._data,e=e._datatype,s=t._data,t=t._datatype,l=c,p=f;e&&t&&e===t&&"string"==typeof e&&(l=o.find(c,[t=e,t]),p=o.find(f,[t,t]));for(var m=p(i[0],s[0]),h=1;h<r;h++)m=l(m,p(i[h],s[h]));return m},x=function(e,t){if("dense"===t.storage())return b(e,t);throw new Error("Not implemented")},b=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,u=t._size,t=t._datatype,p=i[0],m=u[1],g=c,v=f;e&&t&&e===t&&"string"==typeof e&&(g=o.find(c,[r=e,r]),v=o.find(f,[r,r]));for(var d=[],y=0;y<m;y++){for(var x=v(n[0],s[0][y]),b=1;b<p;b++)x=g(x,v(n[b],s[b][y]));d[y]=x}return 1===m?d[0]:new h({data:d,size:[m],datatype:r})},w=function(e,t){switch(e.storage()){case"dense":return E(e,t);case"sparse":return _(e,t)}},N=function(e,t){switch(e.storage()){case"dense":switch(t.storage()){case"dense":return M(e,t);case"sparse":return A(e,t)}break;case"sparse":switch(t.storage()){case"dense":return O(e,t);case"sparse":return T(e,t)}}},E=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,t=t._datatype,l=i[0],p=i[1],m=c,g=f;e&&t&&e===t&&"string"==typeof e&&(m=o.find(c,[r=e,r]),g=o.find(f,[r,r]));for(var v=[],d=0;d<l;d++){for(var y=n[d],x=g(y[0],s[0]),b=1;b<p;b++)x=m(x,g(y[b],s[b]));v[d]=x}return 1===l?v[0]:new h({data:v,size:[l],datatype:r})},M=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,u=t._size,t=t._datatype,p=i[0],m=i[1],g=u[1],v=c,d=f;e&&t&&e===t&&"string"==typeof e&&(v=o.find(c,[r=e,r]),d=o.find(f,[r,r]));for(var y=[],x=0;x<p;x++){var b=n[x];y[x]=[];for(var w=0;w<g;w++){for(var N=d(b[0],s[0][w]),E=1;E<m;E++)N=v(N,d(b[E],s[E][w]));y[x][w]=N}}return 1===p&&1===g?y[0][0]:new h({data:y,size:[p,g],datatype:r})},A=function(e,t){var r=e._data,n=e._size,e=e._datatype,a=t._values,s=t._index,u=t._ptr,p=t._size,t=t._datatype;if(!a)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var h,v=n[0],d=p[1],y=c,x=f,b=l,w=0;e&&t&&e===t&&"string"==typeof e&&(y=o.find(c,[h=e,h]),x=o.find(f,[h,h]),b=o.find(l,[h,h]),w=o.convert(0,h));for(var N=[],E=[],M=[],n=new g({values:N,index:E,ptr:M,size:[v,d],datatype:h}),_=0;_<d;_++){M[_]=E.length;var O=u[_],T=u[_+1];if(O<T)for(var C=0,S=0;S<v;S++){for(var z,B=S+1,k=O;k<T;k++){var I=s[k];C!==B?(z=x(r[S][I],a[k]),C=B):z=y(z,x(r[S][I],a[k]))}C!==B||b(z,w)||(E.push(S),N.push(z))}}return M[d]=E.length,1===v&&1===d?1===N.length?N[0]:0:n},_=function(e,t){var r=e._values,n=e._index,i=e._ptr,a=e._datatype;if(!r)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");for(var s,u=t._data,p=t._datatype,e=e._size[0],h=t._size[0],v=[],d=[],t=[],x=c,b=f,w=l,N=0,E=(a&&p&&a===p&&"string"==typeof a&&(x=o.find(c,[s=a,s]),b=o.find(f,[s,s]),w=o.find(l,[s,s]),N=o.convert(0,s)),[]),M=[],A=t[0]=0;A<h;A++){var _=u[A];if(!w(_,N))for(var O=i[A],T=i[A+1],C=O;C<T;C++){var S=n[C];M[S]?E[S]=x(E[S],b(_,r[C])):(M[S]=!0,d.push(S),E[S]=b(_,r[C]))}}for(var z=d.length,B=0;B<z;B++)v[B]=E[d[B]];return t[1]=d.length,1===e?1===v.length?v[0]:0:new g({values:v,index:d,ptr:t,size:[e,1],datatype:s})},O=function(e,t){var r=e._values,n=e._index,i=e._ptr,a=e._datatype;if(!r)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var s,u=t._data,p=t._datatype,e=e._size[0],h=t._size[0],v=t._size[1],d=c,y=f,x=l,b=0;a&&p&&a===p&&"string"==typeof a&&(d=o.find(c,[s=a,s]),y=o.find(f,[s,s]),x=o.find(l,[s,s]),b=o.convert(0,s));for(var w=[],N=[],E=[],t=new g({values:w,index:N,ptr:E,size:[e,v],datatype:s}),A=[],_=[],O=0;O<v;O++){E[O]=N.length;for(var T=O+1,C=0;C<h;C++){var S=u[C][O];if(!x(S,b))for(var z=i[C],B=i[C+1],k=z;k<B;k++){var I=n[k];_[I]!==T?(_[I]=T,N.push(I),A[I]=y(S,r[k])):A[I]=d(A[I],y(S,r[k]))}}for(var R=E[O],P=N.length,U=R;U<P;U++){var q=N[U];w[U]=A[q]}}return E[v]=N.length,1===e&&1===v?1===w.length?w[0]:0:t},T=function(e,t){var r,n=e._values,i=e._index,a=e._ptr,s=e._datatype,u=t._values,l=t._index,p=t._ptr,m=t._datatype,e=e._size[0],v=t._size[1],d=n&&u,y=c,x=f;s&&m&&s===m&&"string"==typeof s&&(y=o.find(c,[r=s,r]),x=o.find(f,[r,r]));for(var b,w,N,_,O,T=d?[]:void 0,C=[],S=[],t=new g({values:T,index:C,ptr:S,size:[e,v],datatype:r}),B=d?[]:void 0,k=[],I=0;I<v;I++){S[I]=C.length;for(var R=I+1,M=p[I],A=p[I+1],E=M;E<A;E++)if(O=l[E],d)for(w=a[O],N=a[O+1],b=w;b<N;b++)k[_=i[b]]!==R?(k[_]=R,C.push(_),B[_]=x(u[E],n[b])):B[_]=y(B[_],x(u[E],n[b]));else for(w=a[O],N=a[O+1],b=w;b<N;b++)k[_=i[b]]!==R&&(k[_]=R,C.push(_));if(d)for(var M=S[I],U=C.length,q=M;q<U;q++){var L=C[q];T[q]=B[L]}}return S[v]=C.length,1===e&&1===v&&d?1===T.length?T[0]:0:t};return v.toTex="\\left(${args[0]}"+s.operators.multiply+"${args[1]}\\right)",v}},function(e,t,r){"use strict";t.name="algorithm11",t.factory=function(e,t,n,i){var a=n(r(47)),o=e.SparseMatrix;return function(e,t,r,n){var s=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype;if(!s)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var p,m=f[0],h=f[1],g=a,v=0,d=r;"string"==typeof e&&(g=i.find(a,[p=e,p]),v=i.convert(0,p),t=i.convert(t,p),d=i.find(r,[p,p]));for(var y=[],x=[],b=[],f=new o({values:y,index:x,ptr:b,size:[m,h],datatype:p}),N=0;N<h;N++){b[N]=x.length;for(var E=c[N],M=c[N+1],A=E;A<M;A++){var _=u[A],O=n?d(t,s[A]):d(s[A],t);g(O,v)||(x.push(_),y.push(O))}}return b[h]=x.length,f}}},function(e,t,r){"use strict";var i=r(19);t.name="abs",t.factory=function(e,t,r,n){var a=n("abs",{number:Math.abs,Complex:function(e){var n,t=Math.abs(e.re),e=Math.abs(e.im);return t<1e3&&e<1e3?Math.sqrt(t*t+e*e):e<=t?(n=e/t,t*Math.sqrt(1+n*n)):(n=t/e,e*Math.sqrt(1+n*n))},BigNumber:function(e){return e.abs()},Fraction:function(e){return e.abs()},"Array | Matrix":function(e){return i(e,a,!0)},Unit:function(e){return e.abs()}});return a.toTex="\\left|${args[0]}\\right|",a}},function(e,t,r){"use strict";t.name="equal",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(47)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=i("equal",{"any, any":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:o(e,t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,o):s(t,e,o,!0):"sparse"===t.storage()?s(e,t,o,!1):f(e,t,o);return e},"Array, Array":function(e,t){return m(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return m(a(e),t)},"Matrix, Array":function(e,t){return m(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,o,!0);return t},"Array, any":function(e,t){return l(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return l(a(t),e,o,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.equal+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isNumeric",t.factory=function(e,t,r,n){var a=n("isNumeric",{"number | BigNumber | Fraction | boolean":function(){return!0},"Complex | Unit | string":function(){return!1},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";var i=r(23);t.name="format",t.factory=function(e,t,r,n){return(n=n("format",{any:i.format,"any, Object | function | number":i.format})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(40);t.name="typeof",t.factory=function(e,t,r,n){return(n=n("_typeof",{any:function(e){var t=i.type(e);if("Object"===t){if(!0===e.isBigNumber)return"BigNumber";if(!0===e.isComplex)return"Complex";if(!0===e.isFraction)return"Fraction";if(!0===e.isMatrix)return"Matrix";if(!0===e.isUnit)return"Unit";if(!0===e.isIndex)return"Index";if(!0===e.isRange)return"Range";if(!0===e.isChain)return"Chain";if(!0===e.isHelp)return"Help"}return t}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(19);t.name="unit",t.factory=function(e,t,r,n){var a=n("unit",{Unit:function(e){return e.clone()},string:function(t){return e.Unit.isValuelessUnit(t)?new e.Unit(null,t):e.Unit.parse(t)},"number | BigNumber | Fraction | Complex, string":function(t,r){return new e.Unit(t,r)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},a}},function(e,t,r){var i=r(3).lazy;t.factory=function(e,t,r,n,a){function o(t){t=e.Unit.parse(t);return t.fixPrefix=!0,t}i(a,"speedOfLight",function(){return o("299792458 m s^-1")}),i(a,"gravitationConstant",function(){return o("6.6738480e-11 m^3 kg^-1 s^-2")}),i(a,"planckConstant",function(){return o("6.626069311e-34 J s")}),i(a,"reducedPlanckConstant",function(){return o("1.05457172647e-34 J s")}),i(a,"magneticConstant",function(){return o("1.2566370614e-6 N A^-2")}),i(a,"electricConstant",function(){return o("8.854187817e-12 F m^-1")}),i(a,"vacuumImpedance",function(){return o("376.730313461 ohm")}),i(a,"coulomb",function(){return o("8.9875517873681764e9 N m^2 C^-2")}),i(a,"elementaryCharge",function(){return o("1.60217656535e-19 C")}),i(a,"bohrMagneton",function(){return o("9.2740096820e-24 J T^-1")}),i(a,"conductanceQuantum",function(){return o("7.748091734625e-5 S")}),i(a,"inverseConductanceQuantum",function(){return o("12906.403721742 ohm")}),i(a,"magneticFluxQuantum",function(){return o("2.06783375846e-15 Wb")}),i(a,"nuclearMagneton",function(){return o("5.0507835311e-27 J T^-1")}),i(a,"klitzing",function(){return o("25812.807443484 ohm")}),i(a,"bohrRadius",function(){return o("5.291772109217e-11 m")}),i(a,"classicalElectronRadius",function(){return o("2.817940326727e-15 m")}),i(a,"electronMass",function(){return o("9.1093829140e-31 kg")}),i(a,"fermiCoupling",function(){return o("1.1663645e-5 GeV^-2")}),i(a,"fineStructure",function(){return.007297352569824}),i(a,"hartreeEnergy",function(){return o("4.3597443419e-18 J")}),i(a,"protonMass",function(){return o("1.67262177774e-27 kg")}),i(a,"deuteronMass",function(){return o("3.3435830926e-27 kg")}),i(a,"neutronMass",function(){return o("1.6749271613e-27 kg")}),i(a,"quantumOfCirculation",function(){return o("3.636947552024e-4 m^2 s^-1")}),i(a,"rydberg",function(){return o("10973731.56853955 m^-1")}),i(a,"thomsonCrossSection",function(){return o("6.65245873413e-29 m^2")}),i(a,"weakMixingAngle",function(){return.222321}),i(a,"efimovFactor",function(){return 22.7}),i(a,"atomicMass",function(){return o("1.66053892173e-27 kg")}),i(a,"avogadro",function(){return o("6.0221412927e23 mol^-1")}),i(a,"boltzmann",function(){return o("1.380648813e-23 J K^-1")}),i(a,"faraday",function(){return o("96485.336521 C mol^-1")}),i(a,"firstRadiation",function(){return o("3.7417715317e-16 W m^2")}),i(a,"loschmidt",function(){return o("2.686780524e25 m^-3")}),i(a,"gasConstant",function(){return o("8.314462175 J K^-1 mol^-1")}),i(a,"molarPlanckConstant",function(){return o("3.990312717628e-10 J s mol^-1")}),i(a,"molarVolume",function(){return o("2.241396820e-10 m^3 mol^-1")}),i(a,"sackurTetrode",function(){return-1.164870823}),i(a,"secondRadiation",function(){return o("1.438777013e-2 m K")}),i(a,"stefanBoltzmann",function(){return o("5.67037321e-8 W m^-2 K^-4")}),i(a,"wienDisplacement",function(){return o("2.897772126e-3 m K")}),i(a,"molarMass",function(){return o("1e-3 kg mol^-1")}),i(a,"molarMassC12",function(){return o("1.2e-2 kg mol^-1")}),i(a,"gravity",function(){return o("9.80665 m s^-2")}),i(a,"planckLength",function(){return o("1.61619997e-35 m")}),i(a,"planckMass",function(){return o("2.1765113e-8 kg")}),i(a,"planckTime",function(){return o("5.3910632e-44 s")}),i(a,"planckCharge",function(){return o("1.87554595641e-18 C")}),i(a,"planckTemperature",function(){return o("1.41683385e+32 K")})},t.lazy=!1,t.math=!0},function(e,t,r){"use strict";var i=r(3),a=r(93);t.factory=function n(e,t,o,s,u){u.on("config",function(r,i){r.number!==i.number&&n(e,t,o,s,u)}),u.true=!0,u.false=!1,u.null=null,u.uninitialized=r(39).UNINITIALIZED,"bignumber"===t.number?(u.Infinity=new e.BigNumber(1/0),u.NaN=new e.BigNumber(NaN),i.lazy(u,"pi",function(){return a.pi(e.BigNumber)}),i.lazy(u,"tau",function(){return a.tau(e.BigNumber)}),i.lazy(u,"e",function(){return a.e(e.BigNumber)}),i.lazy(u,"phi",function(){return a.phi(e.BigNumber)}),i.lazy(u,"E",function(){return u.e}),i.lazy(u,"LN2",function(){return new e.BigNumber(2).ln()}),i.lazy(u,"LN10",function(){return new e.BigNumber(10).ln()}),i.lazy(u,"LOG2E",function(){return new e.BigNumber(1).div(new e.BigNumber(2).ln())}),i.lazy(u,"LOG10E",function(){return new e.BigNumber(1).div(new e.BigNumber(10).ln())}),i.lazy(u,"PI",function(){return u.pi}),i.lazy(u,"SQRT1_2",function(){return new e.BigNumber("0.5").sqrt()}),i.lazy(u,"SQRT2",function(){return new e.BigNumber(2).sqrt()})):(u.Infinity=1/0,u.NaN=NaN,u.pi=Math.PI,u.tau=2*Math.PI,u.e=Math.E,u.phi=1.618033988749895,u.E=u.e,u.LN2=Math.LN2,u.LN10=Math.LN10,u.LOG2E=Math.LOG2E,u.LOG10E=Math.LOG10E,u.PI=u.pi,u.SQRT1_2=Math.SQRT1_2,u.SQRT2=Math.SQRT2),u.i=new e.Complex(0,1),u.version=r(95)},t.lazy=!1,t.math=!0},function(e,t,r){function n(e){return e[0].precision}var i=r(44).memoize,a=r(94);t.e=i(function(e){return new e(1).exp()},n),t.phi=i(function(e){return new e(1).plus(new e(5).sqrt()).div(2)},n),t.pi=i(function(e){var t=e.constructor({precision:e.precision+4}),t=new t(4).times(a(new t(1).div(5))).minus(a(new t(1).div(239)));return new e(4).times(t)},n),t.tau=i(function(e){var r=t.pi(e.constructor({precision:e.precision+2}));return new e(2).times(r)},n)},function(e,t){e.exports=function(e){for(var t=e,r=NaN,n=e.times(e),i=e,a=!0,o=3;!t.equals(r);o+=2)i=i.times(n),r=t,t=(a=!a)?t.plus(i.div(o)):t.minus(i.div(o));return t}},function(e,t){e.exports="2.6.0"},function(e,t,r){e.exports=[r(97),r(267),r(291),r(292),r(319),r(269),r(290)]},function(e,t,r){t.name="docs",t.path="expression",t.factory=function(e,t,n,i){var a={};return a.bignumber=r(98),a.boolean=r(99),a.complex=r(100),a.fraction=r(101),a.index=r(102),a.matrix=r(103),a.number=r(104),a.sparse=r(105),a.string=r(106),a.unit=r(107),a.e=r(108),a.E=r(108),a.false=r(109),a.i=r(110),a.Infinity=r(111),a.LN2=r(112),a.LN10=r(113),a.LOG2E=r(114),a.LOG10E=r(115),a.NaN=r(116),a.null=r(117),a.pi=r(118),a.PI=r(118),a.phi=r(119),a.SQRT1_2=r(120),a.SQRT2=r(121),a.tau=r(122),a.true=r(123),a.version=r(124),a.speedOfLight={description:"Speed of light in vacuum",examples:["speedOfLight"]},a.gravitationConstant={description:"Newtonian constant of gravitation",examples:["gravitationConstant"]},a.planckConstant={description:"Planck constant",examples:["planckConstant"]},a.reducedPlanckConstant={description:"Reduced Planck constant",examples:["reducedPlanckConstant"]},a.magneticConstant={description:"Magnetic constant (vacuum permeability)",examples:["magneticConstant"]},a.electricConstant={description:"Electric constant (vacuum permeability)",examples:["electricConstant"]},a.vacuumImpedance={description:"Characteristic impedance of vacuum",examples:["vacuumImpedance"]},a.coulomb={description:"Coulomb's constant",examples:["coulomb"]},a.elementaryCharge={description:"Elementary charge",examples:["elementaryCharge"]},a.bohrMagneton={description:"Borh magneton",examples:["bohrMagneton"]},a.conductanceQuantum={description:"Conductance quantum",examples:["conductanceQuantum"]},a.inverseConductanceQuantum={description:"Inverse conductance quantum",examples:["inverseConductanceQuantum"]},a.magneticFluxQuantum={description:"Magnetic flux quantum",examples:["magneticFluxQuantum"]},a.nuclearMagneton={description:"Nuclear magneton",examples:["nuclearMagneton"]},a.klitzing={description:"Von Klitzing constant",examples:["klitzing"]},a.bohrRadius={description:"Borh radius",examples:["bohrRadius"]},a.classicalElectronRadius={description:"Classical electron radius",examples:["classicalElectronRadius"]},a.electronMass={description:"Electron mass",examples:["electronMass"]},a.fermiCoupling={description:"Fermi coupling constant",examples:["fermiCoupling"]},a.fineStructure={description:"Fine-structure constant",examples:["fineStructure"]},a.hartreeEnergy={description:"Hartree energy",examples:["hartreeEnergy"]},a.protonMass={description:"Proton mass",examples:["protonMass"]},a.deuteronMass={description:"Deuteron Mass",examples:["deuteronMass"]},a.neutronMass={description:"Neutron mass",examples:["neutronMass"]},a.quantumOfCirculation={description:"Quantum of circulation",examples:["quantumOfCirculation"]},a.rydberg={description:"Rydberg constant",examples:["rydberg"]},a.thomsonCrossSection={description:"Thomson cross section",examples:["thomsonCrossSection"]},a.weakMixingAngle={description:"Weak mixing angle",examples:["weakMixingAngle"]},a.efimovFactor={description:"Efimov factor",examples:["efimovFactor"]},a.atomicMass={description:"Atomic mass constant",examples:["atomicMass"]},a.avogadro={description:"Avogadro's number",examples:["avogadro"]},a.boltzmann={description:"Boltzmann constant",examples:["boltzmann"]},a.faraday={description:"Faraday constant",examples:["faraday"]},a.firstRadiation={description:"First radiation constant",examples:["firstRadiation"]},a.loschmidt={description:"Loschmidt constant at T=273.15 K and p=101.325 kPa",examples:["loschmidt"]},a.gasConstant={description:"Gas constant",examples:["gasConstant"]},a.molarPlanckConstant={description:"Molar Planck constant",examples:["molarPlanckConstant"]},a.molarVolume={description:"Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",examples:["molarVolume"]},a.sackurTetrode={description:"Sackur-Tetrode constant at T=1 K and p=101.325 kPa",examples:["sackurTetrode"]},a.secondRadiation={description:"Second radiation constant",examples:["secondRadiation"]},a.stefanBoltzmann={description:"Stefan-Boltzmann constant",examples:["stefanBoltzmann"]},a.wienDisplacement={description:"Wien displacement law constant",examples:["wienDisplacement"]},a.molarMass={description:"Molar mass constant",examples:["molarMass"]},a.molarMassC12={description:"Molar mass constant of carbon-12",examples:["molarMassC12"]},a.gravity={description:"Standard acceleration of gravity (standard acceleration of free-fall on Earth)",examples:["gravity"]},a.planckLength={description:"Planck length",examples:["planckLength"]},a.planckMass={description:"Planck mass",examples:["planckMass"]},a.planckTime={description:"Planck time",examples:["planckTime"]},a.planckCharge={description:"Planck charge",examples:["planckCharge"]},a.planckTemperature={description:"Planck temperature",examples:["planckTemperature"]},a.lsolve=r(125),a.lup=r(126),a.lusolve=r(127),a.slu=r(128),a.usolve=r(129),a.abs=r(130),a.add=r(131),a.cbrt=r(132),a.ceil=r(133),a.cube=r(134),a.divide=r(135),a.dotDivide=r(136),a.dotMultiply=r(137),a.dotPow=r(138),a.exp=r(139),a.fix=r(140),a.floor=r(141),a.gcd=r(142),a.hypot=r(143),a.lcm=r(144),a.log=r(145),a.log10=r(146),a.mod=r(147),a.multiply=r(148),a.norm=r(149),a.nthRoot=r(150),a.pow=r(151),a.round=r(152),a.sign=r(153),a.sqrt=r(154),a.square=r(155),a.subtract=r(156),a.unaryMinus=r(157),a.unaryPlus=r(158),a.xgcd=r(159),a.bitAnd=r(160),a.bitNot=r(161),a.bitOr=r(162),a.bitXor=r(163),a.leftShift=r(164),a.rightArithShift=r(165),a.rightLogShift=r(166),a.bellNumbers=r(167),a.catalan=r(168),a.composition=r(169),a.stirlingS2=r(170),a.arg=r(171),a.conj=r(172),a.re=r(173),a.im=r(174),a.eval=r(175),a.help=r(176),a.distance=r(177),a.intersect=r(178),a.and=r(179),a.not=r(180),a.or=r(181),a.xor=r(182),a.concat=r(183),a.cross=r(184),a.det=r(185),a.diag=r(186),a.dot=r(187),a.eye=r(188),a.flatten=r(189),a.inv=r(190),a.ones=r(191),a.range=r(192),a.resize=r(193),a.size=r(194),a.squeeze=r(195),a.subset=r(196),a.trace=r(197),a.transpose=r(198),a.zeros=r(199),a.combinations=r(200),a.factorial=r(201),a.gamma=r(202),a.kldivergence=r(203),a.multinomial=r(204),a.permutations=r(205),a.pickRandom=r(206),a.random=r(207),a.randomInt=r(208),a.compare=r(209),a.deepEqual=r(210),a.equal=r(211),a.larger=r(212),a.largerEq=r(213),a.smaller=r(214),a.smallerEq=r(215),a.unequal=r(216),a.max=r(217),a.mean=r(218),a.median=r(219),a.min=r(220),a.mode=r(221),a.prod=r(222),a.quantileSeq=r(223),a.std=r(224),a.sum=r(225),a.var=r(226),a.acos=r(227),a.acosh=r(228),a.acot=r(229),a.acoth=r(230),a.acsc=r(231),a.acsch=r(232),a.asec=r(233),a.asech=r(234),a.asin=r(235),a.asinh=r(236),a.atan=r(237),a.atanh=r(238),a.atan2=r(239),a.cos=r(240),a.cosh=r(241),a.cot=r(242),a.coth=r(243),a.csc=r(244),a.csch=r(245),a.sec=r(246),a.sech=r(247),a.sin=r(248),a.sinh=r(249),a.tan=r(250),a.tanh=r(251),a.to=r(252),a.clone=r(253),a.map=r(254),a.partitionSelect=r(255),a.filter=r(256),a.forEach=r(257),a.format=r(258),a.isInteger=r(259),a.isNegative=r(260),a.isNumeric=r(261),a.isPositive=r(262),a.isZero=r(263),a.import=r(264),a.sort=r(265),a.typeof=r(266),a}},function(e,t){e.exports={name:"bignumber",category:"Type",syntax:["bignumber(x)"],description:"Create a big number from a number or string.",examples:["0.1 + 0.2","bignumber(0.1) + bignumber(0.2)",'bignumber("7.2")','bignumber("7.2e500")',"bignumber([0.1, 0.2, 0.3])"],seealso:["boolean","complex","fraction","index","matrix","string","unit"]}},function(e,t){e.exports={name:"boolean",category:"Type",syntax:["x","boolean(x)"],description:"Convert a string or number into a boolean.",examples:["boolean(0)","boolean(1)","boolean(3)",'boolean("true")','boolean("false")',"boolean([1, 0, 1, 1])"],seealso:["bignumber","complex","index","matrix","number","string","unit"]}},function(e,t){e.exports={name:"complex",category:"Type",syntax:["complex()","complex(re, im)","complex(string)"],description:"Create a complex number.",examples:["complex()","complex(2, 3)",'complex("7 - 2i")'],seealso:["bignumber","boolean","index","matrix","number","string","unit"]}},function(e,t){e.exports={name:"fraction",category:"Type",syntax:["fraction(num)","fraction(num,den)"],description:"Create a fraction from a number or from a numerator and denominator.",examples:["fraction(0.125)","fraction(1, 3) + fraction(2, 5)"],seealso:["bignumber","boolean","complex","index","matrix","string","unit"]}},function(e,t){e.exports={name:"index",category:"Type",syntax:["[start]","[start:end]","[start:step:end]","[start1, start 2, ...]","[start1:end1, start2:end2, ...]","[start1:step1:end1, start2:step2:end2, ...]"],description:"Create an index to get or replace a subset of a matrix",examples:["[]","[1, 2, 3]","A = [1, 2, 3; 4, 5, 6]","A[1, :]","A[1, 2] = 50","A[0:2, 0:2] = ones(2, 2)"],seealso:["bignumber","boolean","complex","matrix,","number","range","string","unit"]}},function(e,t){e.exports={name:"matrix",category:"Type",syntax:["[]","[a1, b1, ...; a2, b2, ...]","matrix()",'matrix("dense")',"matrix([...])"],description:"Create a matrix.",examples:["[]","[1, 2, 3]","[1, 2, 3; 4, 5, 6]","matrix()","matrix([3, 4])",'matrix([3, 4; 5, 6], "sparse")','matrix([3, 4; 5, 6], "sparse", "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","sparse"]}},function(e,t){e.exports={name:"number",category:"Type",syntax:["x","number(x)"],description:"Create a number or convert a string or boolean into a number.",examples:["2","2e3","4.05","number(2)",'number("7.2")',"number(true)","number([true, false, true, true])",'number("52cm", "m")'],seealso:["bignumber","boolean","complex","fraction","index","matrix","string","unit"]}},function(e,t){e.exports={name:"sparse",category:"Type",syntax:["sparse()","sparse([a1, b1, ...; a1, b2, ...])",'sparse([a1, b1, ...; a1, b2, ...], "number")'],description:"Create a sparse matrix.",examples:["sparse()","sparse([3, 4; 5, 6])",'sparse([3, 0; 5, 0], "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","matrix"]}},function(e,t){e.exports={name:"string",category:"Type",syntax:['"text"',"string(x)"],description:"Create a string or convert a value to a string",examples:['"Hello World!"',"string(4.2)","string(3 + 2i)"],seealso:["bignumber","boolean","complex","index","matrix","number","unit"]}},function(e,t){e.exports={name:"unit",category:"Type",syntax:["value unit","unit(value, unit)","unit(string)"],description:"Create a unit.",examples:["5.5 mm","3 inch",'unit(7.1, "kilogram")','unit("23 deg")'],seealso:["bignumber","boolean","complex","index","matrix","number","string"]}},function(e,t){e.exports={name:"e",category:"Constants",syntax:["e"],description:"Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",examples:["e","e ^ 2","exp(2)","log(e)"],seealso:["exp"]}},function(e,t){e.exports={name:"false",category:"Constants",syntax:["false"],description:"Boolean value false",examples:["false"],seealso:["true"]}},function(e,t){e.exports={name:"i",category:"Constants",syntax:["i"],description:"Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",examples:["i","i * i","sqrt(-1)"],seealso:[]}},function(e,t){e.exports={name:"Infinity",category:"Constants",syntax:["Infinity"],description:"Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",examples:["Infinity","1 / 0"],seealso:[]}},function(e,t){e.exports={name:"LN2",category:"Constants",syntax:["LN2"],description:"Returns the natural logarithm of 2, approximately equal to 0.693",examples:["LN2","log(2)"],seealso:[]}},function(e,t){e.exports={name:"LN10",category:"Constants",syntax:["LN10"],description:"Returns the natural logarithm of 10, approximately equal to 2.302",examples:["LN10","log(10)"],seealso:[]}},function(e,t){e.exports={name:"LOG2E",category:"Constants",syntax:["LOG2E"],description:"Returns the base-2 logarithm of E, approximately equal to 1.442",examples:["LOG2E","log(e, 2)"],seealso:[]}},function(e,t){e.exports={name:"LOG10E",category:"Constants",syntax:["LOG10E"],description:"Returns the base-10 logarithm of E, approximately equal to 0.434",examples:["LOG10E","log(e, 10)"],seealso:[]}},function(e,t){e.exports={name:"NaN",category:"Constants",syntax:["NaN"],description:"Not a number",examples:["NaN","0 / 0"],seealso:[]}},function(e,t){e.exports={name:"null",category:"Constants",syntax:["null"],description:"Value null",examples:["null"],seealso:["true","false"]}},function(e,t){e.exports={name:"pi",category:"Constants",syntax:["pi"],description:"The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",examples:["pi","sin(pi/2)"],seealso:["tau"]}},function(e,t){e.exports={name:"phi",category:"Constants",syntax:["phi"],description:"Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",examples:["tau"],seealso:[]}},function(e,t){e.exports={name:"SQRT1_2",category:"Constants",syntax:["SQRT1_2"],description:"Returns the square root of 1/2, approximately equal to 0.707",examples:["SQRT1_2","sqrt(1/2)"],seealso:[]}},function(e,t){e.exports={name:"SQRT2",category:"Constants",syntax:["SQRT2"],description:"Returns the square root of 2, approximately equal to 1.414",examples:["SQRT2","sqrt(2)"],seealso:[]}},function(e,t){e.exports={name:"tau",category:"Constants",syntax:["tau"],description:"Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",examples:["tau","2 * pi"],seealso:["pi"]}},function(e,t){e.exports={name:"true",category:"Constants",syntax:["true"],description:"Boolean value true",examples:["true"],seealso:["false"]}},function(e,t){e.exports={name:"version",category:"Constants",syntax:["version"],description:"A string with the version number of math.js",examples:["version"],seealso:[]}},function(e,t){e.exports={name:"lsolve",category:"Algebra",syntax:["x=lsolve(L, b)"],description:"Solves the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lup","lusolve","usolve","matrix","sparse"]}},function(e,t){e.exports={name:"lup",category:"Algebra",syntax:["lup(m)"],description:"Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",examples:["lup([[2, 1], [1, 4]])","lup(matrix([[2, 1], [1, 4]]))","lup(sparse([[2, 1], [1, 4]]))"],seealso:["lusolve","lsolve","usolve","matrix","sparse","slu"]}},function(e,t){e.exports={name:"lusolve",category:"Algebra",syntax:["x=lusolve(A, b)","x=lusolve(lu, b)"],description:"Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lusolve(a, b)"],seealso:["lup","slu","lsolve","usolve","matrix","sparse"]}},function(e,t){e.exports={name:"slu",category:"Algebra",syntax:["slu(A, order, threshold)"],description:"Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",examples:["slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)"],seealso:["lusolve","lsolve","usolve","matrix","sparse","lup"]}},function(e,t){e.exports={name:"usolve",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Solves the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["lup","lusolve","lsolve","matrix","sparse"]}},function(e,t){e.exports={name:"abs",category:"Arithmetic",syntax:["abs(x)"],description:"Compute the absolute value.",examples:["abs(3.5)","abs(-4.2)"],seealso:["sign"]}},function(e,t){e.exports={name:"add",category:"Operators",syntax:["x + y","add(x, y)"],description:"Add two values.",examples:["a = 2.1 + 3.6","a - 3.6","3 + 2i","3 cm + 2 inch",'"2.3" + "4"'],seealso:["subtract"]}},function(e,t){e.exports={name:"cbrt",category:"Arithmetic",syntax:["cbrt(x)","cbrt(x, allRoots)"],description:"Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",examples:["cbrt(64)","cube(4)","cbrt(-8)","cbrt(2 + 3i)","cbrt(8i)","cbrt(8i, true)","cbrt(27 m^3)"],seealso:["square","sqrt","cube","multiply"]}},function(e,t){e.exports={name:"ceil",category:"Arithmetic",syntax:["ceil(x)"],description:"Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",examples:["ceil(3.2)","ceil(3.8)","ceil(-4.2)"],seealso:["floor","fix","round"]}},function(e,t){e.exports={name:"cube",category:"Arithmetic",syntax:["cube(x)"],description:"Compute the cube of a value. The cube of x is x * x * x.",examples:["cube(2)","2^3","2 * 2 * 2"],seealso:["multiply","square","pow"]}},function(e,t){e.exports={name:"divide",category:"Operators",syntax:["x / y","divide(x, y)"],description:"Divide two values.",examples:["a = 2 / 3","a * 3","4.5 / 2","3 + 4 / 2","(3 + 4) / 2","18 km / 4.5"],seealso:["multiply"]}},function(e,t){e.exports={name:"dotDivide",category:"Operators",syntax:["x ./ y","dotDivide(x, y)"],description:"Divide two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a ./ b"],seealso:["multiply","dotMultiply","divide"]}},function(e,t){e.exports={name:"dotMultiply",category:"Operators",syntax:["x .* y","dotMultiply(x, y)"],description:"Multiply two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a .* b"],seealso:["multiply","divide","dotDivide"]}},function(e,t){e.exports={name:"dotpow",category:"Operators",syntax:["x .^ y","dotpow(x, y)"],description:"Calculates the power of x to y element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","a .^ 2"],seealso:["pow"]}},function(e,t){e.exports={name:"exp",category:"Arithmetic",syntax:["exp(x)"],description:"Calculate the exponent of a value.",examples:["exp(1.3)","e ^ 1.3","log(exp(1.3))","x = 2.4","(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula"],seealso:["pow","log"]}},function(e,t){e.exports={name:"fix",category:"Arithmetic",syntax:["fix(x)"],description:"Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",examples:["fix(3.2)","fix(3.8)","fix(-4.2)","fix(-4.8)"],seealso:["ceil","floor","round"]}},function(e,t){e.exports={name:"floor",category:"Arithmetic",syntax:["floor(x)"],description:"Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",examples:["floor(3.2)","floor(3.8)","floor(-4.2)"],seealso:["ceil","fix","round"]}},function(e,t){e.exports={name:"gcd",category:"Arithmetic",syntax:["gcd(a, b)","gcd(a, b, c, ...)"],description:"Compute the greatest common divisor.",examples:["gcd(8, 12)","gcd(-4, 6)","gcd(25, 15, -10)"],seealso:["lcm","xgcd"]}},function(e,t){e.exports={name:"hypot",category:"Arithmetic",syntax:["hypot(a, b, c, ...)","hypot([a, b, c, ...])"],description:"Calculate the hypotenusa of a list with values. ",examples:["hypot(3, 4)","sqrt(3^2 + 4^2)","hypot(-2)","hypot([3, 4, 5])"],seealso:["abs","norm"]}},function(e,t){e.exports={name:"lcm",category:"Arithmetic",syntax:["lcm(x, y)"],description:"Compute the least common multiple.",examples:["lcm(4, 6)","lcm(6, 21)","lcm(6, 21, 5)"],seealso:["gcd"]}},function(e,t){e.exports={name:"log",category:"Arithmetic",syntax:["log(x)","log(x, base)"],description:"Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",examples:["log(3.5)","a = log(2.4)","exp(a)","10 ^ 4","log(10000, 10)","log(10000) / log(10)","b = log(1024, 2)","2 ^ b"],seealso:["exp","log10"]}},function(e,t){e.exports={name:"log10",category:"Arithmetic",syntax:["log10(x)"],description:"Compute the 10-base logarithm of a value.",examples:["log10(0.00001)","log10(10000)","10 ^ 4","log(10000) / log(10)","log(10000, 10)"],seealso:["exp","log"]}},function(e,t){e.exports={name:"mod",category:"Operators",syntax:["x % y","x mod y","mod(x, y)"],description:"Calculates the modulus, the remainder of an integer division.",examples:["7 % 3","11 % 2","10 mod 4","function isOdd(x) = x % 2","isOdd(2)","isOdd(3)"],seealso:["divide"]}},function(e,t){e.exports={name:"multiply",category:"Operators",syntax:["x * y","multiply(x, y)"],description:"multiply two values.",examples:["a = 2.1 * 3.4","a / 3.4","2 * 3 + 4","2 * (3 + 4)","3 * 2.1 km"],seealso:["divide"]}},function(e,t){e.exports={name:"norm",category:"Arithmetic",syntax:["norm(x)","norm(x, p)"],description:"Calculate the norm of a number, vector or matrix.",examples:["abs(-3.5)","norm(-3.5)","norm(3 - 4i))","norm([1, 2, -3], Infinity)","norm([1, 2, -3], -Infinity)","norm([3, 4], 2)","norm([[1, 2], [3, 4]], 1)","norm([[1, 2], [3, 4]], 'inf')","norm([[1, 2], [3, 4]], 'fro')"]}},function(e,t){e.exports={name:"nthRoot",category:"Arithmetic",syntax:["nthRoot(a)","nthRoot(a, root)"],description:'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',examples:["4 ^ 3","nthRoot(64, 3)","nthRoot(9, 2)","sqrt(9)"],seealso:["sqrt","pow"]}},function(e,t){e.exports={name:"pow",category:"Operators",syntax:["x ^ y","pow(x, y)"],description:"Calculates the power of x to y, x^y.",examples:["2^3 = 8","2*2*2","1 + e ^ (pi * i)"],seealso:["multiply"]}},function(e,t){e.exports={name:"round",category:"Arithmetic",syntax:["round(x)","round(x, n)"],description:"round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",examples:["round(3.2)","round(3.8)","round(-4.2)","round(-4.8)","round(pi, 3)","round(123.45678, 2)"],seealso:["ceil","floor","fix"]}},function(e,t){e.exports={name:"sign",category:"Arithmetic",syntax:["sign(x)"],description:"Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",examples:["sign(3.5)","sign(-4.2)","sign(0)"],seealso:["abs"]}},function(e,t){e.exports={name:"sqrt",category:"Arithmetic",syntax:["sqrt(x)"],description:"Compute the square root value. If x = y * y, then y is the square root of x.",examples:["sqrt(25)","5 * 5","sqrt(-1)"],seealso:["square","multiply"]}},function(e,t){e.exports={name:"square",category:"Arithmetic",syntax:["square(x)"],description:"Compute the square of a value. The square of x is x * x.",examples:["square(3)","sqrt(9)","3^2","3 * 3"],seealso:["multiply","pow","sqrt","cube"]}},function(e,t){e.exports={name:"subtract",category:"Operators",syntax:["x - y","subtract(x, y)"],description:"subtract two values.",examples:["a = 5.3 - 2","a + 2","2/3 - 1/6","2 * 3 - 3","2.1 km - 500m"],seealso:["add"]}},function(e,t){e.exports={name:"unaryMinus",category:"Operators",syntax:["-x","unaryMinus(x)"],description:"Inverse the sign of a value. Converts booleans and strings to numbers.",examples:["-4.5","-(-5.6)",'-"22"'],seealso:["add","subtract","unaryPlus"]}},function(e,t){e.exports={name:"unaryPlus",category:"Operators",syntax:["+x","unaryPlus(x)"],description:"Converts booleans and strings to numbers.",examples:["+true",'+"2"'],seealso:["add","subtract","unaryMinus"]}},function(e,t){e.exports={name:"xgcd",category:"Arithmetic",syntax:["xgcd(a, b)"],description:"Calculate the extended greatest common divisor for two values",examples:["xgcd(8, 12)","gcd(8, 12)","xgcd(36163, 21199)"],seealso:["gcd","lcm"]}},function(e,t){e.exports={name:"bitAnd",category:"Bitwise",syntax:["x & y","bitAnd(x, y)"],description:"Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",examples:["5 & 3","bitAnd(53, 131)","[1, 12, 31] & 42"],seealso:["bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitNot",category:"Bitwise",syntax:["~x","bitNot(x)"],description:"Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",examples:["~1","~2","bitNot([2, -3, 4])"],seealso:["bitAnd","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitOr",category:"Bitwise",syntax:["x | y","bitOr(x, y)"],description:"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",examples:["5 | 3","bitOr([1, 2, 3], 4)"],seealso:["bitAnd","bitNot","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitXor",category:"Bitwise",syntax:["bitXor(x, y)"],description:"Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",examples:["bitOr(1, 2)","bitXor([2, 3, 4], 4)"],seealso:["bitAnd","bitNot","bitOr","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"leftShift",category:"Bitwise",syntax:["x << y","leftShift(x, y)"],description:"Bitwise left logical shift of a value x by y number of bits.",examples:["4 << 1","8 >> 1"],seealso:["bitAnd","bitNot","bitOr","bitXor","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"rightArithShift",category:"Bitwise",syntax:["x >> y","leftShift(x, y)"],description:"Bitwise right arithmetic shift of a value x by y number of bits.",examples:["8 >> 1","4 << 1","-12 >> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightLogShift"]}},function(e,t){e.exports={name:"rightLogShift",category:"Bitwise",syntax:["x >> y","leftShift(x, y)"],description:"Bitwise right logical shift of a value x by y number of bits.",examples:["8 >>> 1","4 << 1","-12 >>> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift"]}},function(e,t){e.exports={name:"bellNumbers",category:"Combinatorics",syntax:["bellNumbers(n)"],description:"The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["bellNumbers(3)","bellNumbers(8)"],seealso:["stirlingS2"]}},function(e,t){e.exports={name:"catalan",category:"Combinatorics",syntax:["catalan(n)"],description:"The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["catalan(3)","catalan(8)"],seealso:["bellNumbers"]}},function(e,t){e.exports={name:"composition",category:"Combinatorics",syntax:["composition(n, k)"],description:"The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",examples:["composition(5, 3)"],seealso:["combinations"]}},function(e,t){e.exports={name:"stirlingS2",category:"Combinatorics",syntax:["stirlingS2(n, k)"],description:"he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",examples:["stirlingS2(5, 3)"],seealso:["bellNumbers"]}},function(e,t){e.exports={name:"arg",category:"Complex",syntax:["arg(x)"],description:"Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",examples:["arg(2 + 2i)","atan2(3, 2)","arg(2 + 3i)"],seealso:["re","im","conj","abs"]}},function(e,t){e.exports={name:"conj",category:"Complex",syntax:["conj(x)"],description:"Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",examples:["conj(2 + 3i)","conj(2 - 3i)","conj(-5.2i)"],seealso:["re","im","abs","arg"]}},function(e,t){e.exports={name:"re",category:"Complex",syntax:["re(x)"],description:"Get the real part of a complex number.",examples:["re(2 + 3i)","im(2 + 3i)","re(-5.2i)","re(2.4)"],seealso:["im","conj","abs","arg"]}},function(e,t){e.exports={name:"im",category:"Complex",syntax:["im(x)"],description:"Get the imaginary part of a complex number.",examples:["im(2 + 3i)","re(2 + 3i)","im(-5.2i)","im(2.4)"],seealso:["re","conj","abs","arg"]}},function(e,t){e.exports={name:"eval",category:"Expression",syntax:["eval(expression)","eval([expr1, expr2, expr3, ...])"],description:"Evaluate an expression or an array with expressions.",examples:['eval("2 + 3")','eval("sqrt(" + 4 + ")")'],seealso:[]}},function(e,t){e.exports={name:"help",category:"Expression",syntax:["help(object)","help(string)"],description:"Display documentation on a function or data type.",examples:["help(sqrt)",'help("complex")'],seealso:[]}},function(e,t){e.exports={name:"distance",category:"Geometry",syntax:["distance([x1, y1], [x2, y2])","distance([[x1, y1], [x2, y2])"],description:"Calculates the Euclidean distance between two points.",examples:["distance([0,0], [4,4])","distance([[0,0], [4,4]])"],seealso:[]}},function(e,t){e.exports={name:"intersect",category:"Geometry",syntax:["intersect(expr1, expr2, expr3, expr4)","intersect(expr1, expr2, expr3)"],description:"Computes the intersection point of lines and/or planes.",examples:["intersect([0, 0], [10, 10], [10, 0], [0, 10])","intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])"],seealso:[]}},function(e,t){e.exports={name:"and",category:"Logical",syntax:["x and y","and(x, y)"],description:"Logical and. Test whether two values are both defined with a nonzero/nonempty value.",examples:["true and false","true and true","2 and 4"],seealso:["not","or","xor"]}},function(e,t){e.exports={name:"not",category:"Logical",syntax:["not x","not(x)"],description:"Logical not. Flips the boolean value of given argument.",examples:["not true","not false","not 2","not 0"],seealso:["and","or","xor"]}},function(e,t){e.exports={name:"or",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical or. Test if at least one value is defined with a nonzero/nonempty value.",examples:["true or false","false or false","0 or 4"],seealso:["not","and","xor"]}},function(e,t){e.exports={name:"xor",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",examples:["true xor false","false xor false","true xor true","0 or 4"],seealso:["not","and","or"]}},function(e,t){e.exports={name:"concat",category:"Matrix",syntax:["concat(A, B, C, ...)","concat(A, B, C, ..., dim)"],description:"Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",examples:["A = [1, 2; 5, 6]","B = [3, 4; 7, 8]","concat(A, B)","concat(A, B, 1)","concat(A, B, 2)"],seealso:["det","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"cross",category:"Matrix",syntax:["cross(A, B)"],description:"Calculate the cross product for two vectors in three dimensional space.",examples:["cross([1, 1, 0],  [0, 1, 1])","cross([3, -3, 1], [4, 9, 2])","cross([2, 3, 4],  [5, 6, 7])"],seealso:["multiply","dot"]}},function(e,t){e.exports={name:"det",category:"Matrix",syntax:["det(x)"],description:"Calculate the determinant of a matrix",examples:["det([1, 2; 3, 4])","det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],seealso:["concat","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"diag",category:"Matrix",syntax:["diag(x)","diag(x, k)"],description:"Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",examples:["diag(1:3)","diag(1:3, 1)","a = [1, 2, 3; 4, 5, 6; 7, 8, 9]","diag(a)"],seealso:["concat","det","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"dot",category:"Matrix",syntax:["dot(A, B)"],description:"Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",examples:["dot([2, 4, 1], [2, 2, 3])","[2, 4, 1] * [2, 2, 3]"],seealso:["multiply","cross"]}},function(e,t){e.exports={name:"eye",category:"Matrix",syntax:["eye(n)","eye(m, n)","eye([m, n])","eye"],description:"Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",examples:["eye(3)","eye(3, 5)","a = [1, 2, 3; 4, 5, 6]","eye(size(a))"],seealso:["concat","det","diag","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"flatten",category:"Matrix",syntax:["flatten(x)"],description:"Flatten a multi dimensional matrix into a single dimensional matrix.",examples:["a = [1, 2, 3; 4, 5, 6]","size(a)","b = flatten(a)","size(b)"],seealso:["concat","resize","size","squeeze"]}},function(e,t){e.exports={name:"inv",category:"Matrix",syntax:["inv(x)"],description:"Calculate the inverse of a matrix",examples:["inv([1, 2; 3, 4])","inv(4)","1 / 4"],seealso:["concat","det","diag","eye","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"ones",category:"Matrix",syntax:["ones(m)","ones(m, n)","ones(m, n, p, ...)","ones([m])","ones([m, n])","ones([m, n, p, ...])","ones"],description:"Create a matrix containing ones.",examples:["ones(3)","ones(3, 5)","ones([2,3]) * 4.5","a = [1, 2, 3; 4, 5, 6]","ones(size(a))"],seealso:["concat","det","diag","eye","inv","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"range",category:"Type",syntax:["start:end","start:step:end","range(start, end)","range(start, end, step)","range(string)"],description:"Create a range. Lower bound of the range is included, upper bound is excluded.",examples:["1:5","3:-1:-3","range(3, 7)","range(0, 12, 2)",'range("4:10")',"a = [1, 2, 3, 4; 5, 6, 7, 8]","a[1:2, 1:2]"],seealso:["concat","det","diag","eye","inv","ones","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"resize",category:"Matrix",syntax:["resize(x, size)","resize(x, size, defaultValue)"],description:"Resize a matrix.",examples:["resize([1,2,3,4,5], [3])","resize([1,2,3], [5])","resize([1,2,3], [5], -1)","resize(2, [2, 3])",'resize("hello", [8], "!")'],seealso:["size","subset","squeeze"]}},function(e,t){e.exports={name:"size",category:"Matrix",syntax:["size(x)"],description:"Calculate the size of a matrix.",examples:["size(2.3)",'size("hello world")',"a = [1, 2; 3, 4; 5, 6]","size(a)","size(1:6)"],seealso:["concat","det","diag","eye","inv","ones","range","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"squeeze",category:"Matrix",syntax:["squeeze(x)"],description:"Remove inner and outer singleton dimensions from a matrix.",examples:["a = zeros(3,2,1)","size(squeeze(a))","b = zeros(1,1,3)","size(squeeze(b))"],seealso:["concat","det","diag","eye","inv","ones","range","size","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"subset",category:"Matrix",syntax:["value(index)","value(index) = replacement","subset(value, [index])","subset(value, [index], replacement)"],description:"Get or set a subset of a matrix or string. Indexes are one-based. Both the ranges lower-bound and upper-bound are included.",examples:["d = [1, 2; 3, 4]","e = []","e[1, 1:2] = [5, 6]","e[2, :] = [7, 8]","f = d * e","f[2, 1]","f[:, 1]"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","trace","transpose","zeros"]}},function(e,t){e.exports={name:"trace",category:"Matrix",syntax:["trace(A)"],description:"Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",examples:["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]","trace(A)"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","transpose","zeros"]}},function(e,t){e.exports={name:"transpose",category:"Matrix",syntax:["x'","transpose(x)"],description:"Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","transpose(a)"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","trace","zeros"]}},function(e,t){e.exports={name:"zeros",category:"Matrix",syntax:["zeros(m)","zeros(m, n)","zeros(m, n, p, ...)","zeros([m])","zeros([m, n])","zeros([m, n, p, ...])","zeros"],description:"Create a matrix containing zeros.",examples:["zeros(3)","zeros(3, 5)","a = [1, 2, 3; 4, 5, 6]","zeros(size(a))"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose"]}},function(e,t){e.exports={name:"combinations",category:"Probability",syntax:["combinations(n, k)"],description:"Compute the number of combinations of n items taken k at a time",examples:["combinations(7, 5)"],seealso:["permutations","factorial"]}},function(e,t){e.exports={name:"factorial",category:"Probability",syntax:["kldivergence(x, y)"],description:"Compute the factorial of a value",examples:["5!","5 * 4 * 3 * 2 * 1","3!"],seealso:["combinations","permutations","gamma"]}},function(e,t){e.exports={name:"gamma",category:"Probability",syntax:["gamma(n)"],description:"Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",examples:["gamma(4)","3!","gamma(1/2)","sqrt(pi)"],seealso:["factorial"]}},function(e,t){e.exports={name:"kldivergence",category:"Probability",syntax:["n!","factorial(n)"],description:"Calculate the Kullback-Leibler (KL) divergence  between two distributions.",examples:["math.kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],seealso:[]}},function(e,t){e.exports={name:"multinomial",category:"Probability",syntax:["multinomial(A)"],description:"Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai <= 0.",examples:["multinomial([1, 2, 1])"],seealso:["combinations","factorial"]}},function(e,t){e.exports={name:"permutations",category:"Probability",syntax:["permutations(n)","permutations(n, k)"],description:"Compute the number of permutations of n items taken k at a time",examples:["permutations(5)","permutations(5, 3)"],seealso:["combinations","factorial"]}},function(e,t){e.exports={name:"pickRandom",category:"Probability",syntax:["pickRandom(array)"],description:"Pick a random entry from a given array.",examples:["pickRandom(0:10)","pickRandom([1, 3, 1, 6])"],seealso:["random","randomInt"]}},function(e,t){e.exports={name:"random",category:"Probability",syntax:["random()","random(max)","random(min, max)","random(size)","random(size, max)","random(size, min, max)"],description:"Return a random number.",examples:["random()","random(10, 20)","random([2, 3])"],seealso:["pickRandom","randomInt"]}},function(e,t){e.exports={name:"randInt",category:"Probability",syntax:["randInt(max)","randInt(min, max)","randInt(size)","randInt(size, max)","randInt(size, min, max)"],description:"Return a random integer number",examples:["randInt(10, 20)","randInt([2, 3], 10)"],seealso:["pickRandom","random"]}},function(e,t){e.exports={name:"compare",category:"Relational",syntax:["compare(x, y)"],description:"Compare two values. Returns 1 if x is larger than y, -1 if x is smaller than y, and 0 if x and y are equal.",examples:["compare(2, 3)","compare(3, 2)","compare(2, 2)","compare(5cm, 40mm)","compare(2, [1, 2, 3])"],seealso:["equal","unequal","smaller","smallerEq","largerEq"]}},function(e,t){e.exports={name:"deepEqual",category:"Relational",syntax:["deepEqual(x, y)"],description:"Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",examples:["[1,3,4] == [1,3,4]","[1,3,4] == [1,3]"],seealso:["equal","unequal","smaller","larger","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"equal",category:"Relational",syntax:["x == y","equal(x, y)"],description:"Check equality of two values. Returns true if the values are equal, and false if not.",examples:["2+2 == 3","2+2 == 4","a = 3.2","b = 6-2.8","a == b","50cm == 0.5m"],seealso:["unequal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]}},function(e,t){e.exports={name:"larger",category:"Relational",syntax:["x > y","larger(x, y)"],description:"Check if value x is larger than y. Returns true if x is larger than y, and false if not.",examples:["2 > 3","5 > 2*2","a = 3.3","b = 6-2.8","(a > b)","(b < a)","5 cm > 2 inch"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"largerEq",category:"Relational",syntax:["x >= y","largerEq(x, y)"],description:"Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",examples:["2 > 1+1","2 >= 1+1","a = 3.2","b = 6-2.8","(a > b)"],seealso:["equal","unequal","smallerEq","smaller","largerEq","compare"]}},function(e,t){e.exports={name:"smaller",category:"Relational",syntax:["x < y","smaller(x, y)"],description:"Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 3","5 < 2*2","a = 3.3","b = 6-2.8","(a < b)","5 cm < 2 inch"],seealso:["equal","unequal","larger","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"smallerEq",category:"Relational",syntax:["x <= y","smallerEq(x, y)"],description:"Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 1+1","2 <= 1+1","a = 3.2","b = 6-2.8","(a < b)"],seealso:["equal","unequal","larger","smaller","largerEq","compare"]}},function(e,t){e.exports={name:"unequal",category:"Relational",syntax:["x != y","unequal(x, y)"],description:"Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",examples:["2+2 != 3","2+2 != 4","a = 3.2","b = 6-2.8","a != b","50cm != 0.5m","5 cm != 2 inch"],seealso:["equal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]}},function(e,t){e.exports={name:"max",category:"Statistics",syntax:["max(a, b, c, ...)","max(A)","max(A, dim)"],description:"Compute the maximum value of a list of values.",examples:["max(2, 3, 4, 1)","max([2, 3, 4, 1])","max([2, 5; 4, 3])","max([2, 5; 4, 3], 1)","max([2, 5; 4, 3], 2)","max(2.7, 7.1, -4.5, 2.0, 4.1)","min(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["mean","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"mean",category:"Statistics",syntax:["mean(a, b, c, ...)","mean(A)","mean(A, dim)"],description:"Compute the arithmetic mean of a list of values.",examples:["mean(2, 3, 4, 1)","mean([2, 3, 4, 1])","mean([2, 5; 4, 3])","mean([2, 5; 4, 3], 1)","mean([2, 5; 4, 3], 2)","mean([1.0, 2.7, 3.2, 4.0])"],seealso:["max","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"median",category:"Statistics",syntax:["median(a, b, c, ...)","median(A)"],description:"Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",examples:["median(5, 2, 7)","median([3, -1, 5, 7])"],seealso:["max","mean","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"min",category:"Statistics",syntax:["min(a, b, c, ...)","min(A)","min(A, dim)"],description:"Compute the minimum value of a list of values.",examples:["min(2, 3, 4, 1)","min([2, 3, 4, 1])","min([2, 5; 4, 3])","min([2, 5; 4, 3], 1)","min([2, 5; 4, 3], 2)","min(2.7, 7.1, -4.5, 2.0, 4.1)","max(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["max","mean","median","prod","std","sum","var"]}},function(e,t){e.exports={name:"mode",category:"Statistics",syntax:["mode(a, b, c, ...)","mode(A)","mode(A, a, b, B, c, ...)"],description:"Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",examples:["mode(5, 2, 7)","mode([3, -1, 5, 7])"],seealso:["max","mean","min","median","prod","std","sum","var"]}},function(e,t){e.exports={name:"prod",category:"Statistics",syntax:["prod(a, b, c, ...)","prod(A)"],description:"Compute the product of all values.",examples:["prod(2, 3, 4)","prod([2, 3, 4])","prod([2, 5; 4, 3])"],seealso:["max","mean","min","median","min","std","sum","var"]}},function(e,t){e.exports={name:"quantileSeq",category:"Statistics",syntax:["quantileSeq(A, prob[, sorted])","quantileSeq(A, [prob1, prob2, ...][, sorted])","quantileSeq(A, N[, sorted])"],description:"Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.",examples:["quantileSeq([3, -1, 5, 7], 0.5)","quantileSeq([3, -1, 5, 7], [1/3, 2/3])","quantileSeq([3, -1, 5, 7], 2)","quantileSeq([-1, 3, 5, 7], 0.5, true)"],seealso:["mean","median","min","max","prod","std","sum","var"]}},function(e,t){e.exports={name:"std",category:"Statistics",syntax:["std(a, b, c, ...)","std(A)","std(A, normalization)"],description:'Compute the standard deviation of all values, defined as std(A) = sqrt(var(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["std(2, 4, 6)","std([2, 4, 6, 8])",'std([2, 4, 6, 8], "uncorrected")','std([2, 4, 6, 8], "biased")',"std([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","sum","var"]}},function(e,t){e.exports={name:"sum",category:"Statistics",syntax:["sum(a, b, c, ...)","sum(A)"],description:"Compute the sum of all values.",examples:["sum(2, 3, 4, 1)","sum([2, 3, 4, 1])","sum([2, 5; 4, 3])"],seealso:["max","mean","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"var",category:"Statistics",syntax:["var(a, b, c, ...)","var(A)","var(A, normalization)"],description:'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["var(2, 4, 6)","var([2, 4, 6, 8])",'var([2, 4, 6, 8], "uncorrected")','var([2, 4, 6, 8], "biased")',"var([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","std","sum"]}},function(e,t){e.exports={name:"acos",category:"Trigonometry",syntax:["acos(x)"],description:"Compute the inverse cosine of a value in radians.",examples:["acos(0.5)","acos(cos(2.3))"],seealso:["cos","atan","asin"]}},function(e,t){e.exports={name:"acosh",category:"Trigonometry",syntax:["acosh(x)"],description:"Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",examples:["acosh(1.5)"],seealso:["cosh","asinh","atanh"]}},function(e,t){e.exports={name:"acot",category:"Trigonometry",syntax:["acot(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acot(0.5)","acot(cot(0.5))","acot(2)"],seealso:["cot","atan"]}},function(e,t){e.exports={name:"acoth",category:"Trigonometry",syntax:["acoth(x)"],description:"Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",examples:["acoth(0.5)"],seealso:["acsch","asech"]}},function(e,t){e.exports={name:"acsc",category:"Trigonometry",syntax:["acsc(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acsc(0.5)","acsc(csc(0.5))","acsc(2)"],seealso:["csc","asin","asec"]}},function(e,t){e.exports={name:"acsch",category:"Trigonometry",syntax:["acsch(x)"],description:"Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",examples:["acsch(0.5)"],seealso:["asech","acoth"]}},function(e,t){e.exports={name:"asec",category:"Trigonometry",syntax:["asec(x)"],description:"Calculate the inverse secant of a value.",examples:["asec(0.5)","asec(sec(0.5))","asec(2)"],seealso:["acos","acot","acsc"]}},function(e,t){e.exports={name:"asech",category:"Trigonometry",syntax:["asech(x)"],description:"Calculate the inverse secant of a value.",examples:["asech(0.5)"],seealso:["acsch","acoth"]}},function(e,t){e.exports={name:"asin",category:"Trigonometry",syntax:["asin(x)"],description:"Compute the inverse sine of a value in radians.",examples:["asin(0.5)","asin(sin(2.3))"],seealso:["sin","acos","atan"]}},function(e,t){e.exports={name:"asinh",category:"Trigonometry",syntax:["asinh(x)"],description:"Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",examples:["asinh(0.5)"],seealso:["acosh","atanh"]}},function(e,t){e.exports={name:"atan",category:"Trigonometry",syntax:["atan(x)"],description:"Compute the inverse tangent of a value in radians.",examples:["atan(0.5)","atan(tan(2.3))"],seealso:["tan","acos","asin"]}},function(e,t){e.exports={name:"atanh",category:"Trigonometry",syntax:["atanh(x)"],description:"Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",examples:["atanh(0.5)"],seealso:["acosh","asinh"]}},function(e,t){e.exports={name:"atan2",category:"Trigonometry",syntax:["atan2(y, x)"],description:"Computes the principal value of the arc tangent of y/x in radians.",examples:["atan2(2, 2) / pi","angle = 60 deg in rad","x = cos(angle)","y = sin(angle)","atan2(y, x)"],seealso:["sin","cos","tan"]}},function(e,t){e.exports={name:"cos",category:"Trigonometry",syntax:["cos(x)"],description:"Compute the cosine of x in radians.",examples:["cos(2)","cos(pi / 4) ^ 2","cos(180 deg)","cos(60 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["acos","sin","tan"]}},function(e,t){e.exports={name:"cosh",category:"Trigonometry",syntax:["cosh(x)"],description:"Compute the hyperbolic cosine of x in radians.",examples:["cosh(0.5)"],seealso:["sinh","tanh","coth"]}},function(e,t){e.exports={name:"cot",category:"Trigonometry",syntax:["cot(x)"],description:"Compute the cotangent of x in radians. Defined as 1/tan(x)",examples:["cot(2)","1 / tan(2)"],seealso:["sec","csc","tan"]}},function(e,t){e.exports={name:"coth",category:"Trigonometry",syntax:["coth(x)"],description:"Compute the hyperbolic cotangent of x in radians.",examples:["coth(2)","1 / tanh(2)"],seealso:["sech","csch","tanh"]}},function(e,t){e.exports={name:"csc",category:"Trigonometry",syntax:["csc(x)"],description:"Compute the cosecant of x in radians. Defined as 1/sin(x)",examples:["csc(2)","1 / sin(2)"],seealso:["sec","cot","sin"]}},function(e,t){e.exports={name:"csch",category:"Trigonometry",syntax:["csch(x)"],description:"Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",examples:["csch(2)","1 / sinh(2)"],seealso:["sech","coth","sinh"]}},function(e,t){e.exports={name:"sec",category:"Trigonometry",syntax:["sec(x)"],description:"Compute the secant of x in radians. Defined as 1/cos(x)",examples:["sec(2)","1 / cos(2)"],seealso:["cot","csc","cos"]}},function(e,t){e.exports={name:"sech",category:"Trigonometry",syntax:["sech(x)"],description:"Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",examples:["sech(2)","1 / cosh(2)"],seealso:["coth","csch","cosh"]}},function(e,t){e.exports={name:"sin",category:"Trigonometry",syntax:["sin(x)"],description:"Compute the sine of x in radians.",examples:["sin(2)","sin(pi / 4) ^ 2","sin(90 deg)","sin(30 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["asin","cos","tan"]}},function(e,t){e.exports={name:"sinh",category:"Trigonometry",syntax:["sinh(x)"],description:"Compute the hyperbolic sine of x in radians.",examples:["sinh(0.5)"],seealso:["cosh","tanh"]}},function(e,t){e.exports={name:"tan",category:"Trigonometry",syntax:["tan(x)"],description:"Compute the tangent of x in radians.",examples:["tan(0.5)","sin(0.5) / cos(0.5)","tan(pi / 4)","tan(45 deg)"],seealso:["atan","sin","cos"]}},function(e,t){e.exports={name:"tanh",category:"Trigonometry",syntax:["tanh(x)"],description:"Compute the hyperbolic tangent of x in radians.",examples:["tanh(0.5)","sinh(0.5) / cosh(0.5)"],seealso:["sinh","cosh"]}},function(e,t){e.exports={name:"to",category:"Units",syntax:["x to unit","to(x, unit)"],description:"Change the unit of a value.",examples:["5 inch to cm","3.2kg to g","16 bytes in bits"],seealso:[]}},function(e,t){e.exports={name:"clone",category:"Utils",syntax:["clone(x)"],description:"Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",examples:["clone(3.5)","clone(2 - 4i)","clone(45 deg)","clone([1, 2; 3, 4])",'clone("hello world")'],seealso:[]}},function(e,t){e.exports={name:"map",category:"Utils",syntax:["map(x, callback)"],description:"Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",examples:["map([1, 2, 3], function(val) { return value * value })"],seealso:["filter","forEach"]}},function(e,t){e.exports={name:"partitionSelect",category:"Utils",syntax:["partitionSelect(x, k)","partitionSelect(x, k, compare)"],description:"Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",examples:["partitionSelect([5, 10, 1], 2)",'partitionSelect(["C", "B", "A", "D"], 1)'],seealso:["sort"]}},function(e,t){e.exports={name:"filter",category:"Utils",syntax:["filter(x, test)"],description:"Filter items in a matrix.",examples:["isPositive(x) = x > 0","filter([6, -2, -1, 4, 3], isPositive)","filter([6, -2, 0, 1, 0], x != 0)"],seealso:["sort","map","forEach"]}},function(e,t){e.exports={name:"forEach",category:"Utils",syntax:["forEach(x, callback)"],description:"Iterates over all elements of a matrix/array, and executes the given callback function.",examples:["forEach([1, 2, 3], function(val) { console.log(val) })"],seealso:["map","sort","filter"]}},function(e,t){e.exports={name:"format",category:"Utils",syntax:["format(value)","format(value, precision)"],description:"Format a value of any type as string.",examples:["format(2.3)","format(3 - 4i)","format([])","format(pi, 3)"],seealso:["print"]}},function(e,t){e.exports={name:"isInteger",category:"Utils",syntax:["isInteger(x)"],description:"Test whether a value is an integer number.",examples:["isInteger(2)","isInteger(3.5)","isInteger([3, 0.5, -2])"],seealso:["isNegative","isNumeric","isPositive","isZero"]}},function(e,t){e.exports={name:"isNegative",category:"Utils",syntax:["isNegative(x)"],description:"Test whether a value is negative: smaller than zero.",examples:["isNegative(2)","isNegative(0)","isNegative(-4)","isNegative([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isPositive","isZero"]}},function(e,t){e.exports={name:"isNumeric",category:"Utils",syntax:["isNumeric(x)"],description:"Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",examples:["isNumeric(2)","isNumeric(0)","isNumeric(bignumber(500))","isNumeric(fraction(0.125))",'isNumeric("3")',"isNumeric(2 + 3i)",'isNumeric([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive"]}},function(e,t){e.exports={name:"isPositive",category:"Utils",syntax:["isPositive(x)"],description:"Test whether a value is positive: larger than zero.",examples:["isPositive(2)","isPositive(0)","isPositive(-4)","isPositive([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isNegative","isZero"]}},function(e,t){e.exports={name:"isZero",category:"Utils",syntax:["isZero(x)"],description:"Test whether a value is zero.",examples:["isZero(2)","isZero(0)","isZero(-4)","isZero([3, 0, -2, 0])"],seealso:["isInteger","isNumeric","isNegative","isPositive"]}},function(e,t){e.exports={name:"import",category:"Utils",syntax:["import(string)"],description:"Import functions from a file.",examples:['import("numbers")','import("./mylib.js")'],seealso:[]}},function(e,t){e.exports={name:"sort",category:"Utils",syntax:["sort(x)","sort(x, compare)"],description:'Sort the items in a matrix. Compare can be a string "asc" or "desc", or a custom sort function.',examples:["sort([5, 10, 1])",'sort(["C", "B", "A", "D"])',"sortByLength(a, b) = size(a)[1] - size(b)[1]",'sort(["Langdon", "Tom", "Sara"], sortByLength)'],seealso:["map","filter","forEach"]}},function(e,t){e.exports={name:"typeof",category:"Utils",syntax:["typeof(x)"],description:"Get the type of a variable.",examples:["typeof(3.5)","typeof(2 - 4i)","typeof(45 deg)",'typeof("hello world")'],seealso:[]}},function(e,t,r){e.exports=[r(268),r(286),r(287),r(288),r(289)]},function(e,t,r){"use strict";var i=r(19);t.name="compile",t.factory=function(e,t,n,a){var o=n(r(269));return a("compile",{string:function(e){return o(e).compile()},"Array | Matrix":function(e){return i(e,function(e){return o(e).compile()})}})}},function(e,t,r){"use strict";var i=r(11),a=r(19);t.name="parse",t.path="expression",t.factory=function(e,t,n,o){function c(){ve++,de=ge.charAt(ve)}function f(){return ge.charAt(ve+1)}function p(){for(xe=le.NULL,ye="";" "==de||"\t"==de||"\n"==de&&be;)c();if("#"==de)for(;"\n"!=de&&""!=de;)c();if(""==de)return xe=le.DELIMITER;if("\n"==de&&!be)return xe=le.DELIMITER,ye=de,c();var e=de+f(),t=e+ge.charAt(ve+2);if(3==t.length&&pe[t])return xe=le.DELIMITER,ye=t,c(),c(),c();if(2==e.length&&pe[e])return xe=le.DELIMITER,ye=e,c(),c();if(pe[de])return xe=le.DELIMITER,ye=de,c();if(!function(e){return"0"<=e&&e<="9"||"."==e}(de)){if(v()){for(;v()||y(de);)ye+=de,c();return xe=me[ye]?le.DELIMITER:le.SYMBOL}for(xe=le.UNKNOWN;""!=de;)ye+=de,c();throw X('Syntax error in part "'+ye+'"')}if(xe=le.NUMBER,"."==de)ye+=de,c(),y(de)||(xe=le.UNKNOWN);else{for(;y(de);)ye+=de,c();"."==de&&(ye+=de,c())}for(;y(de);)ye+=de,c();if(e=f(),("E"==de||"e"==de)&&(y(e)||"-"==e||"+"==e))for(ye+=de,c(),"+"!=de&&"-"!=de||(ye+=de,c()),y(de)||(xe=le.UNKNOWN);y(de);)ye+=de,c()}function m(){for(;p(),"\n"==ye;);}function h(){be++}function g(){be--}function v(){function n(e,t){return/^[\uD835]$/.test(e)&&/^[\uDC00-\uDFFF]$/.test(t)&&/^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(t)}var e=ge.charAt(ve-1),t=ge.charAt(ve+1);return/^[a-zA-Z_\u00C0-\u02AF\u0370-\u03FF]$/.test(de)||n(de,t)||n(e,de)}function y(e){return"0"<=e&&e<="9"}function x(){ve=0,de=ge.charAt(0),be=0,we=null,p();var e=function(){var e,t,r=[];if(""==ye)return new re("undefined","undefined");for("\n"!=ye&&";"!=ye&&(e=w());"\n"==ye||";"==ye;)0==r.length&&e&&(t=";"!=ye,r.push({node:e,visible:t})),p(),"\n"!=ye&&";"!=ye&&""!=ye&&(e=w(),t=";"!=ye,r.push({node:e,visible:t}));return 0<r.length?new ee(r):e}();if(""!=ye)throw xe==le.DELIMITER?J("Unexpected operator "+ye):X('Unexpected part "'+ye+'"');return e}function w(){if(xe==le.SYMBOL&&"function"==ye)throw X('Deprecated keyword "function". Functions can now be assigned without it, like "f(x) = x^2".');return N()}function N(){var e,t,r,n,i=E();if("="!=ye)return i;if(i&&i.isSymbolNode)return e=i.name,m(),r=N(),new K(e,r);if(i&&i.isIndexNode)return m(),r=N(),new fe(i,r);if(i&&i.isFunctionNode&&(n=!0,t=[],e=i.name,i.args.forEach(function(e,r){e&&e.isSymbolNode?t[r]=e.name:n=!1}),n))return m(),r=N(),new ne(e,t,r);throw X("Invalid left hand side of assignment operator =")}function E(){for(var e=M();"?"==ye;){var t=we,r=(we=be,m(),e),n=M();if(":"!=ye)throw X("False part of conditional expression expected");we=null,m();var i=E(),e=new te(r,n,i);we=t}return e}function M(){for(var e=A();"or"==ye;)m(),e=new ae("or","or",[e,A()]);return e}function A(){for(var e=_();"xor"==ye;)m(),e=new ae("xor","xor",[e,_()]);return e}function _(){for(var e=O();"and"==ye;)m(),e=new ae("and","and",[e,O()]);return e}function O(){for(var e=T();"|"==ye;)m(),e=new ae("|","bitOr",[e,T()]);return e}function T(){for(var e=C();"^|"==ye;)m(),e=new ae("^|","bitXor",[e,C()]);return e}function C(){for(var e=S();"&"==ye;)m(),e=new ae("&","bitAnd",[e,S()]);return e}function S(){for(var r,n,i,e=z(),t={"==":"equal","!=":"unequal","<":"smaller",">":"larger","<=":"smallerEq",">=":"largerEq"};ye in t;)n=t[r=ye],m(),i=[e,z()],e=new ae(r,n,i);return e}function z(){for(var r,n,i,e=B(),t={"<<":"leftShift",">>":"rightArithShift",">>>":"rightLogShift"};ye in t;)n=t[r=ye],m(),i=[e,B()],e=new ae(r,n,i);return e}function B(){for(var r,n,i,e=k(),t={to:"to",in:"to"};ye in t;)n=t[r=ye],m(),i=[e,k()],e=new ae(r,n,i);return e}function k(){var t=[],e=":"==ye?new re("1","number"):I();if(":"==ye&&we!==be){for(t.push(e);":"==ye&&t.length<3;)m(),t.push(")"==ye||"]"==ye||","==ye||""==ye?new ce("end"):I());e=3==t.length?new ue(t[0],t[2],t[1]):new ue(t[0],t[1])}return e}function I(){for(var r,n,i,e=R(),t={"+":"add","-":"subtract"};ye in t;)n=t[r=ye],m(),i=[e,R()],e=new ae(r,n,i);return e}function R(){for(var n,i,e=P(),t=e,r={"*":"multiply",".*":"dotMultiply","/":"divide","./":"dotDivide","%":"mod",mod:"mod"};;)if(ye in r)i=r[n=ye],m(),t=P(),e=new ae(n,i,[e,t]);else{if(!(xe==le.SYMBOL||"in"==ye&&e&&e.isConstantNode||xe==le.NUMBER&&!t.isConstantNode||"("==ye||"["==ye))break;t=P(),e=new ae("*","multiply",[e,t])}return e}function P(){var e,t,r={"-":"unaryMinus","+":"unaryPlus","~":"bitNot",not:"not"}[ye];return r?(e=ye,m(),t=[P()],new ae(e,r,t)):function(){var e,t,r,n;return e=function(){var e,t,r,n;for(e=function(){var e,t=[];if(xe==le.SYMBOL&&he[ye]){if(e=he[ye],p(),"("==ye){if(t=[],h(),p(),")"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if(")"!=ye)throw X("Parenthesis ) expected");g(),p()}return new e(t)}return function(){var t;return xe==le.SYMBOL||xe==le.DELIMITER&&ye in me?(t=ye,p(),$(function(e){var t;if("("!=ye)return new ce(e);if(t=[],h(),p(),")"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if(")"!=ye)throw X("Parenthesis ) expected");return g(),p(),new se(e,t)}(t))):function(){var t,r;if('"'!=ye)return function(){var e,t,r,n;if("["!=ye)return function(){var e;return xe==le.NUMBER?(e=ye,p(),new re(e,"number")):function(){var e;if("("!=ye)throw X(""==ye?"Unexpected end of expression":"Value expected");if(h(),p(),e=N(),")"!=ye)throw X("Parenthesis ) expected");return g(),p(),new oe(e)}()}();if(h(),p(),"]"!=ye){var i=H();if(";"==ye){for(r=1,t=[i];";"==ye;)p(),t[r]=H(),r++;if("]"!=ye)throw X("End of matrix ] expected");g(),p(),n=t[0].nodes.length;for(var a=1;a<r;a++)if(t[a].nodes.length!=n)throw J("Column dimensions mismatch ("+t[a].nodes.length+" != "+n+")");e=new Q(t)}else{if("]"!=ye)throw X("End of matrix ] expected");g(),p(),e=i}}else g(),p(),e=new Q([]);return e}();for(r=t="";""!=de&&('"'!=de||"\\"==r);)t+=de,r=de,c();if(p(),'"'!=ye)throw X('End of string " expected');return p(),$(new re(t,"string"))}()}()}(),t={"!":"factorial","'":"transpose"};ye in t;)n=t[r=ye],p(),e=new ae(r,n,[e]);return e}(),"^"!=ye&&".^"!=ye||(r="^"==(t=ye)?"pow":"dotPow",m(),n=[e,P()],e=new ae(t,r,n)),e}()}function $(e){for(var t;"["==ye;){if(t=[],h(),p(),"]"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if("]"!=ye)throw X("Parenthesis ] expected");g(),p(),e=new ie(e,t)}return e}function H(){for(var e=[N()],t=1;","==ye;)p(),e[t]=N(),t++;return new Q(e)}function W(){return ve-ye.length+1}function X(e){var t=W(),e=new SyntaxError(e+" (char "+t+")");return e.char=t,e}function J(e){var t=W(),e=new Error(e+" (char "+t+")");return e.char=t,e}var Q=n(r(270)),K=n(r(273)),ee=n(r(275)),te=n(r(276)),re=n(r(277)),ne=n(r(278)),ie=n(r(279)),ae=n(r(282)),oe=n(r(284)),se=n(r(283)),ue=n(r(280)),ce=n(r(281)),fe=n(r(285)),le={NULL:0,DELIMITER:1,NUMBER:2,SYMBOL:3,UNKNOWN:4},pe={",":!0,"(":!0,")":!0,"[":!0,"]":!0,'"':!0,";":!0,"+":!0,"-":!0,"*":!0,".*":!0,"/":!0,"./":!0,"%":!0,"^":!0,".^":!0,"~":!0,"!":!0,"&":!0,"|":!0,"^|":!0,"'":!0,"=":!0,":":!0,"?":!0,"==":!0,"!=":!0,"<":!0,">":!0,"<=":!0,">=":!0,"<<":!0,">>":!0,">>>":!0},me={mod:!0,to:!0,in:!0,and:!0,xor:!0,or:!0,not:!0},he={},ge="",ve=0,de="",ye="",xe=le.NULL,be=0,we=null;return function(t,r){if(1!=arguments.length&&2!=arguments.length)throw new i("parse",arguments.length,1,2);if(he=r&&r.nodes?r.nodes:{},"string"==typeof t)return ge=t,x();if(Array.isArray(t)||t instanceof e.Matrix)return a(t,function(e){if("string"!=typeof e)throw new TypeError("String expected");return ge=e,x()});throw new TypeError("String or matrix expected")}}},function(e,t,r){"use strict";var i=r(23);t.name="ArrayNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(this.nodes=e||[],!Array.isArray(this.nodes)||!this.nodes.every(function(e){return e&&e.isNode}))throw new TypeError("Array containing Nodes expected")}return n=n(r(271)),(o.prototype=new n).type="ArrayNode",o.prototype.isArrayNode=!0,o.prototype._compile=function(e,t){var r="array"!==e.math.config().matrix,n=this.nodes.map(function(r){return r._compile(e,t)});return(r?"math.matrix([":"[")+n.join(",")+(r?"])":"]")},o.prototype.forEach=function(e){for(var t=0;t<this.nodes.length;t++)e(this.nodes[t],"nodes["+t+"]",this)},o.prototype.map=function(e){for(var t=[],r=0;r<this.nodes.length;r++)t[r]=this._ifNode(e(this.nodes[r],"nodes["+r+"]",this));return new o(t)},o.prototype.clone=function(){return new o(this.nodes.slice(0))},o.prototype._toString=function(e){return i.format(this.nodes)},o.prototype._toTex=function(e){var t="\\begin{bmatrix}";return this.nodes.forEach(function(r){t=t+(r.nodes?r.nodes.map(function(t){return t.toTex(e)}).join("&"):r.toTex(e))+"\\\\"}),t+="\\end{bmatrix}"},o}},function(e,t,r){"use strict";var i=r(272);r(3).extend,t.name="Node",t.path="expression.node",t.math=!0,t.factory=function(e,t,r,n,a){function o(){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator")}function s(e){for(var t in e)if(e.hasOwnProperty(t)&&t in i)throw new Error('Scope contains an illegal symbol, "'+t+'" is a reserved keyword')}return o.prototype.eval=function(e){return this.compile().eval(e)},o.prototype.type="Node",o.prototype.isNode=!0,o.prototype.compile=function(){if(0<arguments.length)throw new Error("Calling compile(math) is deprecated. Call the function as compile() instead.");var e={math:a.expression.transform,args:{},_validateScope:s},r=this._compile(e,{}),r=Object.keys(e).map(function(e){return"    var "+e+' = defs["'+e+'"];'}).join(" ")+'return {  "eval": function (scope) {    if (scope) _validateScope(scope);    scope = scope || {};    return '+r+";  }};";return new Function("defs",r)(e)},o.prototype._compile=function(e,t){throw new Error("Cannot compile a Node interface")},o.prototype.forEach=function(e){throw new Error("Cannot run forEach on a Node interface")},o.prototype.map=function(e){throw new Error("Cannot run map on a Node interface")},o.prototype._ifNode=function(e){if(e&&e.isNode)return e;throw new TypeError("Callback function must return a Node")},o.prototype.traverse=function(e){e(this,null,null),function t(e,r){e.forEach(function(e,n,i){r(e,n,i),t(e,r)})}(this,e)},o.prototype.transform=function(e){return function t(e,r){return e.map(function(e,n,i){return t(r(e,n,i),r)})}(e(this,null,null),e)},o.prototype.filter=function(e){var t=[];return this.traverse(function(r,n,i){e(r,n,i)&&t.push(r)}),t},o.prototype.find=function(){throw new Error("Function Node.find is deprecated. Use Node.filter instead.")},o.prototype.match=function(){throw new Error("Function Node.match is deprecated. See functions Node.filter, Node.transform, Node.traverse.")},o.prototype.clone=function(){throw new Error("Cannot clone a Node interface")},o.prototype.toString=function(e){var t;if(e&&"object"==typeof e)switch(typeof e.handler){case"object":case"undefined":break;case"function":t=e.handler(this,e);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==t?t:this._toString(e)},o.prototype._toString=function(){throw new Error("_toString not implemented for "+this.type)},o.prototype.toTex=function(e){var t;if(e&&"object"==typeof e)switch(typeof e.handler){case"object":case"undefined":break;case"function":t=e.handler(this,e);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==t?t:this._toTex(e)},o.prototype._toTex=function(e){throw new Error("_toTex not implemented for "+this.type)},o.prototype.getIdentifier=function(){return this.type},o.prototype.getContent=function(){return this},o}},function(e,t){"use strict";e.exports={end:!0}},function(e,t,r){"use strict";var i=r(29);t.name="AssignmentNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');if(!t||!t.isNode)throw new TypeError('Node expected for parameter "expr"');if(e in c)throw new Error('Illegal symbol name, "'+e+'" is a reserved keyword');this.name=e,this.expr=t}function s(e,t){var r=f.getPrecedence(e,t),e=f.getPrecedence(e.expr,t);return"all"===t||null!==e&&e<=r}var u=n(r(271)),c=(n(r(270)),r(272)),f=r(274);return(o.prototype=new u).type="AssignmentNode",o.prototype.isAssignmentNode=!0,o.prototype._compile=function(e,t){return'scope["'+this.name+'"] = '+this.expr._compile(e,t)},o.prototype.forEach=function(e){e(this.expr,"expr",this)},o.prototype.map=function(e){return new o(this.name,this._ifNode(e(this.expr,"expr",this)))},o.prototype.clone=function(){return new o(this.name,this.expr)},o.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toString(e);return s(this,t)&&(e="("+e+")"),this.name+" = "+e},o.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toTex(e);return s(this,t)&&(e="\\left("+e+"\\right)"),i.toSymbol(this.name)+":="+e},o}},function(e,t){"use strict";function r(e,t){for(var r=e,n=(r="keep"!==t?e.getContent():r).getIdentifier(),i=0;i<a.length;i++)if(n in a[i])return i;return null}var a=[{AssignmentNode:{},FunctionAssignmentNode:{}},{ConditionalNode:{latexLeftParens:!1,latexRightParens:!1,latexParens:!1}},{"OperatorNode:or":{associativity:"left",associativeWith:[]}},{"OperatorNode:xor":{associativity:"left",associativeWith:[]}},{"OperatorNode:and":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitOr":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitXor":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitAnd":{associativity:"left",associativeWith:[]}},{"OperatorNode:equal":{associativity:"left",associativeWith:[]},"OperatorNode:unequal":{associativity:"left",associativeWith:[]},"OperatorNode:smaller":{associativity:"left",associativeWith:[]},"OperatorNode:larger":{associativity:"left",associativeWith:[]},"OperatorNode:smallerEq":{associativity:"left",associativeWith:[]},"OperatorNode:largerEq":{associativity:"left",associativeWith:[]}},{"OperatorNode:leftShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightArithShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightLogShift":{associativity:"left",associativeWith:[]}},{"OperatorNode:to":{associativity:"left",associativeWith:[]}},{RangeNode:{}},{"OperatorNode:add":{associativity:"left",associativeWith:["OperatorNode:add","OperatorNode:subtract"]},"OperatorNode:subtract":{associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]},"OperatorNode:divide":{associativity:"left",associativeWith:[],latexLeftParens:!1,latexRightParens:!1,latexParens:!1},"OperatorNode:dotMultiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:doDivide"]},"OperatorNode:dotDivide":{associativity:"left",associativeWith:[]},"OperatorNode:mod":{associativity:"left",associativeWith:[]}},{"OperatorNode:unaryPlus":{associativity:"right"},"OperatorNode:unaryMinus":{associativity:"right"},"OperatorNode:bitNot":{associativity:"right"},"OperatorNode:not":{associativity:"right"}},{"OperatorNode:pow":{associativity:"right",associativeWith:[],latexRightParens:!1},"OperatorNode:dotPow":{associativity:"right",associativeWith:[]}},{"OperatorNode:factorial":{associativity:"left"}},{"OperatorNode:transpose":{associativity:"left"}}];e.exports.properties=a,e.exports.getPrecedence=r,e.exports.getAssociativity=function(e,t){var n=e,e=(n="keep"!==t?e.getContent():n).getIdentifier(),n=r(n,t);if(null!==n){t=a[n][e];if(t.hasOwnProperty("associativity")){if("left"===t.associativity)return"left";if("right"===t.associativity)return"right";throw Error("'"+e+"' has the invalid associativity '"+t.associativity+"'.")}}return null},e.exports.isAssociativeWith=function(e,t,n){var i=e,o=t,e=("keep"!==n&&(i=e.getContent(),o=t.getContent()),i.getIdentifier()),u=o.getIdentifier(),t=r(i,n);if(null!==t){var f=a[t][e];if(f.hasOwnProperty("associativeWith")&&f.associativeWith instanceof Array){for(var l=0;l<f.associativeWith.length;l++)if(f.associativeWith[l]===u)return!0;return!1}}return null}},function(e,t,r){"use strict";t.name="BlockNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!Array.isArray(e))throw new Error("Array expected");this.blocks=e.map(function(e){var t=e&&e.node,e=!e||void 0===e.visible||e.visible;if(!t||!t.isNode)throw new TypeError('Property "node" must be a Node');if("boolean"!=typeof e)throw new TypeError('Property "visible" must be a boolean');return{node:t,visible:e}})}var o=n(r(271)),s=n(r(70));return(a.prototype=new o).type="BlockNode",a.prototype.isBlockNode=!0,a.prototype._compile=function(e,t){return e.ResultSet=s,"(function () {var results = [];"+this.blocks.map(function(r){var n=r.node._compile(e,t);return r.visible?"results.push("+n+");":n+";"}).join("")+"return new ResultSet(results);})()"},a.prototype.forEach=function(e){for(var t=0;t<this.blocks.length;t++)e(this.blocks[t].node,"blocks["+t+"].node",this)},a.prototype.map=function(e){for(var t=[],r=0;r<this.blocks.length;r++){var n=this.blocks[r],i=this._ifNode(e(n.node,"blocks["+r+"].node",this));t[r]={node:i,visible:n.visible}}return new a(t)},a.prototype.clone=function(){return new a(this.blocks.map(function(e){return{node:e.node,visible:e.visible}}))},a.prototype._toString=function(e){return this.blocks.map(function(t){return t.node.toString(e)+(t.visible?"":";")}).join("\n")},a.prototype._toTex=function(e){return this.blocks.map(function(t){return t.node.toTex(e)+(t.visible?"":";")}).join("\\;\\;\n")},a}},function(e,t,r){"use strict";r(29);var i=r(274);t.name="ConditionalNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t,r){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError("Parameter condition must be a Node");if(!t||!t.isNode)throw new TypeError("Parameter trueExpr must be a Node");if(!r||!r.isNode)throw new TypeError("Parameter falseExpr must be a Node");this.condition=e,this.trueExpr=t,this.falseExpr=r}return n=n(r(271)),(o.prototype=new n).type="ConditionalNode",o.prototype.isConditionalNode=!0,o.prototype._compile=function(e,t){return e.testCondition=function(t){if("number"==typeof t||"boolean"==typeof t||"string"==typeof t)return!!t;if(t){if(!0===t.isBigNumber)return!t.isZero();if(!0===t.isComplex)return!(!t.re&&!t.im);if(!0===t.isUnit)return!!t.value}if(null==t)return!1;throw new TypeError('Unsupported type of condition "'+e.math.typeof(t)+'"')},"testCondition("+this.condition._compile(e,t)+") ? ( "+this.trueExpr._compile(e,t)+") : ( "+this.falseExpr._compile(e,t)+")"},o.prototype.forEach=function(e){e(this.condition,"condition",this),e(this.trueExpr,"trueExpr",this),e(this.falseExpr,"falseExpr",this)},o.prototype.map=function(e){return new o(this._ifNode(e(this.condition,"condition",this)),this._ifNode(e(this.trueExpr,"trueExpr",this)),this._ifNode(e(this.falseExpr,"falseExpr",this)))},o.prototype.clone=function(){return new o(this.condition,this.trueExpr,this.falseExpr)},o.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=i.getPrecedence(this,t),n=this.condition.toString(e),a=i.getPrecedence(this.condition,t),a=(("all"===t||"OperatorNode"===this.condition.type||null!==a&&a<=r)&&(n="("+n+")"),this.trueExpr.toString(e)),s=i.getPrecedence(this.trueExpr,t),s=(("all"===t||"OperatorNode"===this.trueExpr.type||null!==s&&s<=r)&&(a="("+a+")"),this.falseExpr.toString(e)),e=i.getPrecedence(this.falseExpr,t);return n+" ? "+a+" : "+(s="all"===t||"OperatorNode"===this.falseExpr.type||null!==e&&e<=r?"("+s+")":s)},o.prototype._toTex=function(e){return"\\begin{cases} {"+this.trueExpr.toTex(e)+"}, &\\quad{\\text{if }\\;"+this.condition.toTex(e)+"}\\\\{"+this.falseExpr.toTex(e)+"}, &\\quad{\\text{otherwise}}\\end{cases}"},o}},function(e,t,r){"use strict";var i=r(40).type;t.name="ConstantNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(t){if("string"!=typeof t)throw new TypeError('String expected for parameter "valueType"');if("string"!=typeof e)throw new TypeError('String expected for parameter "value"');this.value=e,this.valueType=t}else this.value=e+"",this.valueType=i(e);if(!u[this.valueType])throw new TypeError('Unsupported type of value "'+this.valueType+'"')}var n=n(r(271)),u={number:!0,string:!0,boolean:!0,undefined:!0,null:!0};return(o.prototype=new n).type="ConstantNode",o.prototype.isConstantNode=!0,o.prototype._compile=function(e,t){switch(this.valueType){case"number":var r=e.math.config().number;return"bignumber"===r?'math.bignumber("'+this.value+'")':"fraction"===r?'math.fraction("'+this.value+'")':this.value.replace(/^(0*)[0-9]/,function(e,t){return e.substring(t.length)});case"string":return'"'+this.value+'"';case"boolean":case"undefined":case"null":return this.value;default:throw new TypeError('Unsupported type of constant "'+this.valueType+'"')}},o.prototype.forEach=function(e){},o.prototype.map=function(e){return this.clone()},o.prototype.clone=function(){return new o(this.value,this.valueType)},o.prototype._toString=function(e){return"string"!==this.valueType?this.value:'"'+this.value+'"'},o.prototype._toTex=function(e){var t,r=this.value;switch(this.valueType){case"string":return'\\mathtt{"'+r+'"}';case"number":return-1!==(t=r.toLowerCase().indexOf("e"))?r.substring(0,t)+"\\cdot10^{"+r.substring(t+1)+"}":r;default:return r}},o}},function(e,t,r){"use strict";function n(e){return"string"==typeof e}var a=r(272),o=r(29),s=r(274);t.name="FunctionAssignmentNode",t.path="expression.node",t.factory=function(e,t,i,u){function c(e,t,r){if(!(this instanceof c))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');if(!Array.isArray(t)||!t.every(n))throw new TypeError('Array containing strings expected for parameter "params"');if(!r||!r.isNode)throw new TypeError('Node expected for parameter "expr"');if(e in a)throw new Error('Illegal function name, "'+e+'" is a reserved keyword');this.name=e,this.params=t,this.expr=r}function f(e,t){var r=s.getPrecedence(e,t),e=s.getPrecedence(e.expr,t);return"all"===t||null!==e&&e<=r}return i=i(r(271)),(c.prototype=new i).type="FunctionAssignmentNode",c.prototype.isFunctionAssignmentNode=!0,c.prototype._compile=function(e,t){var r=Object.create(t),t=(this.params.forEach(function(e){r[e]=!0}),this.expr._compile(e,r));return'scope["'+this.name+'"] =   (function () {    var fn = function '+this.name+"("+this.params.join(",")+") {      if (arguments.length != "+this.params.length+') {        throw new SyntaxError("Wrong number of arguments in function '+this.name+' (" + arguments.length + " provided, '+this.params.length+' expected)");      }      return '+t+'    };    fn.syntax = "'+this.name+"("+this.params.join(", ")+')";    return fn;  })()'},c.prototype.forEach=function(e){e(this.expr,"expr",this)},c.prototype.map=function(e){e=this._ifNode(e(this.expr,"expr",this));return new c(this.name,this.params.slice(0),e)},c.prototype.clone=function(){return new c(this.name,this.params.slice(0),this.expr)},c.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toString(e);return f(this,t)&&(e="("+e+")"),"function "+this.name+"("+this.params.join(", ")+") = "+e},c.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toTex(e);return f(this,t)&&(e="\\left("+e+"\\right)"),"\\mathrm{"+this.name+"}\\left("+this.params.map(o.toSymbol).join(",")+"\\right):="+e},c}},function(e,t,r){"use strict";t.name="IndexNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError('Node expected for parameter "object"');if(!c(t)||!t.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "ranges"');this.object=e,this.ranges=t}function o(e){switch(e.object.type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":return;default:return 1}}var s=n(r(271)),u=(n(r(280)),n(r(281)),n(r(65))),c=Array.isArray;return(a.prototype=new s).type="IndexNode",a.prototype.isIndexNode=!0,a.prototype._compile=function(e,t){return this.compileSubset(e,t)},a.prototype.compileSubset=function(e,t,r){function n(e){return e&&e.isSymbolNode&&"end"==e.name}var i=!1,a=this.ranges.map(function(e){e=0<e.filter(n).length;return i=e||i,e}),o=(e.range=function(e,t,r){return new u(e&&!0===e.isBigNumber?e.toNumber():e,t&&!0===t.isBigNumber?t.toNumber():t,r&&!0===r.isBigNumber?r.toNumber():r)},Object.create(t)),t=this.ranges.map(function(t,r){var n=a[r];return t&&t.isRangeNode?n?(o.end=!0,"(function () {  var end = size["+r+"];  return range(    "+t.start._compile(e,o)+",     "+t.end._compile(e,o)+",     "+(t.step?t.step._compile(e,o):"1")+"  );})()"):"range("+t.start._compile(e,o)+", "+t.end._compile(e,o)+", "+(t.step?t.step._compile(e,o):"1")+")":n?(o.end=!0,"(function () {  var end = size["+r+"];  return "+t._compile(e,o)+";})()"):t._compile(e,o)});return i?"(function () {  var obj = "+this.object._compile(e,o)+";  var size = math.size(obj).valueOf();  return math.subset(    obj,     math.index("+t.join(", ")+")    "+(r?", "+r:"")+"  );})()":"math.subset("+this.object._compile(e,o)+",math.index("+t.join(", ")+")"+(r?", "+r:"")+")"},a.prototype.forEach=function(e){e(this.object,"object",this);for(var t=0;t<this.ranges.length;t++)e(this.ranges[t],"ranges["+t+"]",this)},a.prototype.map=function(e){for(var t=this._ifNode(e(this.object,"object",this)),r=[],n=0;n<this.ranges.length;n++)r[n]=this._ifNode(e(this.ranges[n],"ranges["+n+"]",this));return new a(t,r)},a.prototype.objectName=function(){return this.object.name},a.prototype.clone=function(){return new a(this.object,this.ranges.slice(0))},a.prototype._toString=function(e){e=this.object.toString(e);return(e=o(this)?"("+e+"(":e)+"["+this.ranges.join(", ")+"]"},a.prototype._toTex=function(e){var t=this.object.toTex(e),r=(o(this)&&(t="\\left("+t+"\\right)"),this.ranges.map(function(t){return t.toTex(e)}));return t+"_{"+r.join(",")+"}"},a}},function(e,t,r){"use strict";var i=r(274);t.name="RangeNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t,r){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError("Node expected");if(!t||!t.isNode)throw new TypeError("Node expected");if(r&&(!r||!r.isNode))throw new TypeError("Node expected");if(3<arguments.length)throw new Error("Too many arguments");this.start=e,this.end=t,this.step=r||null}function s(e,t){var r=i.getPrecedence(e,t),n={},a=i.getPrecedence(e.start,t),a=(n.start=null!==a&&a<=r||"all"===t,e.step&&(a=i.getPrecedence(e.step,t),n.step=null!==a&&a<=r||"all"===t),i.getPrecedence(e.end,t));return n.end=null!==a&&a<=r||"all"===t,n}return n=n(r(271)),(o.prototype=new n).type="RangeNode",o.prototype.isRangeNode=!0,o.prototype._compile=function(e,t){return"math.range("+this.start._compile(e,t)+", "+this.end._compile(e,t)+(this.step?", "+this.step._compile(e,t):"")+")"},o.prototype.forEach=function(e){e(this.start,"start",this),e(this.end,"end",this),this.step&&e(this.step,"step",this)},o.prototype.map=function(e){return new o(this._ifNode(e(this.start,"start",this)),this._ifNode(e(this.end,"end",this)),this.step&&this._ifNode(e(this.step,"step",this)))},o.prototype.clone=function(){return new o(this.start,this.end,this.step&&this.step)},o.prototype._toString=function(e){var n=s(this,e&&e.parenthesis?e.parenthesis:"keep"),i=this.start.toString(e),i=i=n.start?"("+i+")":i,a=(this.step&&(a=this.step.toString(e),i+=":"+(a=n.step?"("+a+")":a)),this.end.toString(e));return i+":"+(a=n.end?"("+a+")":a)},o.prototype._toTex=function(e){var r=s(this,e&&e.parenthesis?e.parenthesis:"keep"),n=this.start.toTex(e),i=(r.start&&(n="\\left("+n+"\\right)"),this.step&&(i=this.step.toTex(e),n+=":"+(i=r.step?"\\left("+i+"\\right)":i)),this.end.toTex(e));return n+":"+(i=r.end?"\\left("+i+"\\right)":i)},o}},function(e,t,r){"use strict";var i=r(29);t.name="SymbolNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,a,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');this.name=e}function u(e){throw new Error("Undefined symbol "+e)}var c=n(r(271)),f=n(r(73));return(s.prototype=new c).type="SymbolNode",s.prototype.isSymbolNode=!0,s.prototype._compile=function(e,t){return e.undef=u,e.Unit=f,t[this.name]?this.name:this.name in e.math?'("'+this.name+'" in scope ? scope["'+this.name+'"] : math["'+this.name+'"])':'("'+this.name+'" in scope ? scope["'+this.name+'"] : '+(f.isValuelessUnit(this.name)?'new Unit(null, "'+this.name+'")':'undef("'+this.name+'")')+")"},s.prototype.forEach=function(e){},s.prototype.map=function(e){return this.clone()},s.prototype.clone=function(){return new s(this.name)},s.prototype._toString=function(e){return this.name},s.prototype._toTex=function(e){var t=!1,t=(void 0===o[this.name]&&f.isValuelessUnit(this.name)&&(t=!0),i.toSymbol(this.name,t));return"\\"===t[0]?t:" "+t},s}},function(e,t,r){"use strict";var i=r(29),a=r(274);t.name="OperatorNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,o,s){function u(e,t,r){if(!(this instanceof u))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('string expected for parameter "op"');if("string"!=typeof t)throw new TypeError('string expected for parameter "fn"');if(!Array.isArray(r)||!r.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "args"');this.op=e,this.fn=t,this.args=r||[]}function c(e,t,r,n){var s,i=a.getPrecedence(e,t),o=a.getAssociativity(e,t);if("all"===t||2<r.length)return s=[],r.forEach(function(e){switch(e.getContent().type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":s.push(!1);break;default:s.push(!0)}}),s;switch(r.length){case 0:return[];case 1:var u=a.getPrecedence(r[0],t);if(n&&null!==u){if(f=("keep"===t?(c=r[0].getIdentifier(),e):(c=r[0].getContent().getIdentifier(),e.getContent())).getIdentifier(),!1===a.properties[i][f].latexLeftParens)return[!1];if(!1===a.properties[u][c].latexParens)return[!1]}return null!==u&&u<=i?[!0]:[!1];case 2:var f,d,y,c=a.getPrecedence(r[0],t),u=a.isAssociativeWith(e,r[0],t),u=null!==c&&(c===i&&"right"===o&&!u||c<i),g=a.getPrecedence(r[1],t),v=a.isAssociativeWith(e,r[1],t),v=null!==g&&(g===i&&"left"===o&&!v||g<i);return n&&(y=("keep"===t?(f=e.getIdentifier(),d=e.args[0].getIdentifier(),e.args[1]):(f=e.getContent().getIdentifier(),d=e.args[0].getContent().getIdentifier(),e.args[1].getContent())).getIdentifier(),null!==c&&(!1===a.properties[i][f].latexLeftParens&&(u=!1),!1===a.properties[c][d].latexParens)&&(u=!1),null!==g)&&(!1===a.properties[i][f].latexRightParens&&(v=!1),!1===a.properties[g][y].latexParens)&&(v=!1),[u,v]}}var f=n(r(271));return n(r(277)),n(r(281)),n(r(283)),(u.prototype=new f).type="OperatorNode",u.prototype.isOperatorNode=!0,u.prototype._compile=function(e,t){var r;if(e.math[this.fn])return r=this.args.map(function(r){return r._compile(e,t)}),"math."+this.fn+"("+r.join(", ")+")";throw new Error("Function "+this.fn+' missing in provided namespace "math"')},u.prototype.forEach=function(e){for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},u.prototype.map=function(e){for(var t=[],r=0;r<this.args.length;r++)t[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new u(this.op,this.fn,t)},u.prototype.clone=function(){return new u(this.op,this.fn,this.args.slice(0))},u.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=this.args,n=c(this,t,r,!1);switch(r.length){case 1:var i=a.getAssociativity(this,t),o=r[0].toString(e);return n[0]&&(o="("+o+")"),"right"===i?this.op+o:o+this.op;case 2:i=r[0].toString(e),o=r[1].toString(e);return n[0]&&(i="("+i+")"),n[1]&&(o="("+o+")"),i+" "+this.op+" "+o;default:return this.fn+"("+this.args.join(", ")+")"}},u.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=this.args,n=c(this,t,r,!0),o=void 0===(o=i.operators[this.fn])?this.op:o;switch(r.length){case 1:var s=a.getAssociativity(this,t),u=r[0].toTex(e);return n[0]&&(u="\\left("+u+"\\right)"),"right"===s?o+u:u+o;case 2:var s=r[0],l=s.toTex(e);n[0]&&(l="\\left("+l+"\\right)");var h,m=r[1].toTex(e);switch(n[1]&&(m="\\left("+m+"\\right)"),h=("keep"===t?s:s.getContent()).getIdentifier(),this.getIdentifier()){case"OperatorNode:divide":return o+"{"+l+"}{"+m+"}";case"OperatorNode:pow":switch(l="{"+l+"}",m="{"+m+"}",h){case"ConditionalNode":case"OperatorNode:divide":l="\\left("+l+"\\right)"}}return l+o+m;default:return"\\mathrm{"+this.fn+"}\\left("+r.map(function(t){return t.toTex(e)}).join(",")+"\\right)"}},u.prototype.getIdentifier=function(){return this.type+":"+this.fn},u}},function(e,t,r){"use strict";var i=r(29);t.name="FunctionNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,a,o){function s(e,t){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('string expected for parameter "name"');if(!Array.isArray(t)||!t.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "args"');this.name=e,this.args=t||[]}function u(e,t,r){for(var n,i="",a=new RegExp("\\$(?:\\{([a-z_][a-z_0-9]*)(?:\\[([0-9]+)\\])?\\}|\\$)","ig"),o=0;null!==(n=a.exec(e));)if(i+=e.substring(o,n.index),o=n.index,"$$"===n[0])i+="$",o++;else{o+=n[0].length;var s=t[n[1]];if(!s)throw new ReferenceError("Template: Property "+n[1]+" does not exist.");if(void 0===n[2])switch(typeof s){case"string":i+=s;break;case"object":if(s.isNode)i+=s.toTex(r);else{if(!Array.isArray(s))throw new TypeError("Template: "+n[1]+" has to be a Node, String or array of Nodes");i+=s.map(function(e,t){if(e&&e.isNode)return e.toTex(r);throw new TypeError("Template: "+n[1]+"["+t+"] is not a Node.")}).join(",")}break;default:throw new TypeError("Template: "+n[1]+" has to be a Node, String or array of Nodes")}else{if(!s[n[2]]||!s[n[2]].isNode)throw new TypeError("Template: "+n[1]+"["+n[2]+"] is not a Node.");i+=s[n[2]].toTex(r)}}return i+e.slice(o)}var c=n(r(271)),f=n(r(281)),l=((s.prototype=new c).type="FunctionNode",s.prototype.isFunctionNode=!0,s.prototype._compile=function(e,t){var r=e.math[this.name],r="function"==typeof r&&1==r.rawArgs,i=this.args.map(function(r){return r._compile(e,t)});if(r){for(var a,o=0;a="p"+o,o++,a in e;);return e[a]=this.args,'("'+this.name+'" in scope ? scope["'+this.name+'"]('+i.join(", ")+') : math["'+this.name+'"]('+a+", math, scope))"}return new f(this.name)._compile(e,t)+"("+i.join(", ")+")"},s.prototype.forEach=function(e){for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},s.prototype.map=function(e){for(var t=[],r=0;r<this.args.length;r++)t[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new s(this.name,t)},s.prototype.clone=function(){return new s(this.name,this.args.slice(0))},s.prototype.toString),p=(s.prototype.toString=function(e){var t;return void 0!==(t=e&&"object"==typeof e.handler&&e.handler.hasOwnProperty(this.name)?e.handler[this.name](this,e):t)?t:l.call(this,e)},s.prototype._toString=function(e){return this.name+"("+this.args.join(", ")+")"},s.prototype.toTex);return s.prototype.toTex=function(e){var t;return void 0!==(t=e&&"object"==typeof e.handler&&e.handler.hasOwnProperty(this.name)?e.handler[this.name](this,e):t)?t:p.call(this,e)},s.prototype._toTex=function(e){e&&e.parenthesis&&e.parenthesis;var t,n,r=this.args.map(function(t){return t.toTex(e)});switch(typeof(t=!o[this.name]||"function"!=typeof o[this.name].toTex&&"object"!=typeof o[this.name].toTex&&"string"!=typeof o[this.name].toTex?t:o[this.name].toTex)){case"function":n=t(this,e);break;case"string":n=u(t,this,e);break;case"object":switch(typeof t[r.length]){case"function":n=t[r.length](this,e);break;case"string":n=u(t[r.length],this,e)}}return void 0!==n?n:u(i.defaultTemplate,this,e)},s.prototype.getIdentifier=function(){return this.type+":"+this.name},s}},function(e,t,r){"use strict";t.name="ParenthesisNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError('Node expected for parameter "content"');this.content=e}return n=n(r(271)),(a.prototype=new n).type="ParenthesisNode",a.prototype.isParenthesisNode=!0,a.prototype._compile=function(e,t){return this.content._compile(e,t)},a.prototype.getContent=function(){return this.content.getContent()},a.prototype.forEach=function(e){e(this.content,"content",this)},a.prototype.map=function(e){return new a(e(this.content,"content",this))},a.prototype.clone=function(){return new a(this.content)},a.prototype._toString=function(e){return e&&"keep"!==e.parenthesis?this.content.toString(e):"("+this.content.toString(e)+")"},a.prototype._toTex=function(e){return e&&"keep"!==e.parenthesis?this.content.toTex(e):"\\left("+this.content.toTex(e)+"\\right)"},a}},function(e,t,r){"use strict";t.name="UpdateNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isIndexNode)throw new TypeError('Expected IndexNode for parameter "index"');if(!t||!t.isNode)throw new TypeError('Expected Node for parameter "expr"');this.index=e,this.expr=t}var o=n(r(271));return n(r(279)),(a.prototype=new o).type="UpdateNode",a.prototype.isUpdateNode=!0,a.prototype._compile=function(e,t){return(t[this.index.objectName()]?this.name+" = ":'scope["'+this.index.objectName()+'"]')+" = "+this.index.compileSubset(e,t,this.expr._compile(e,t))},a.prototype.forEach=function(e){e(this.index,"index",this),e(this.expr,"expr",this)},a.prototype.map=function(e){return new a(this._ifNode(e(this.index,"index",this)),this._ifNode(e(this.expr,"expr",this)))},a.prototype.clone=function(){return new a(this.index,this.expr)},a.prototype._toString=function(e){var t=this.expr.toString(e);return e&&"all"===e.parenthesis&&(t="("+t+")"),this.index.toString(e)+" = "+t},a.prototype._toTex=function(e){var t=this.expr.toTex(e);return e&&"all"===e.parenthesis&&(t="\\left("+t+"\\right)"),this.index.toTex(e)+":="+t},a}},function(e,t,r){"use strict";var i=r(19);t.name="eval",t.factory=function(e,t,n,a){var o=n(r(269));return a("compile",{string:function(e){return o(e).compile().eval({})},"string, Object":function(e,t){return o(e).compile().eval(t)},"Array | Matrix":function(e){var t={};return i(e,function(e){return o(e).compile().eval(t)})},"Array | Matrix, Object":function(e,t){return i(e,function(e){return o(e).compile().eval(t)})}})}},function(e,t,r){"use strict";t.math=!0,t.name="help",t.factory=function(e,t,n,i,a){var o=n(r(97));return i("help",{any:function(t){var r,n=t;if("string"!=typeof t)for(r in a)if(a.hasOwnProperty(r)&&t===a[r]){n=r;break}var i=o[n];if(i)return new e.Help(i);throw new Error('No documentation found on "'+n+'"')}})}},function(e,t,r){"use strict";t.name="parse",t.factory=function(e,t,n,i){return n=n(r(269)),i("parse",{"string | Array | Matrix":n,"string | Array | Matrix, Object":n})}},function(e,t,r){"use strict";t.name="parser",t.factory=function(e,t,n,i,a){var o=n(r(290));return i("parser",{"":function(){return new o(a)}})},t.math=!0},function(e,t,r){"use strict";t.name="Parser",t.path="expression",t.factory=function(e,t,n,i,a){function o(){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");this.scope={}}var s=n(r(269));return o.prototype.type="Parser",o.prototype.isParser=!0,o.prototype.parse=function(e){throw new Error("Parser.parse is deprecated. Use math.parse instead.")},o.prototype.compile=function(e){throw new Error("Parser.compile is deprecated. Use math.compile instead.")},o.prototype.eval=function(e){return s(e).compile().eval(this.scope)},o.prototype.get=function(e){return this.scope[e]},o.prototype.set=function(e,t){return this.scope[e]=t},o.prototype.remove=function(e){delete this.scope[e]},o.prototype.clear=function(){for(var e in this.scope)this.scope.hasOwnProperty(e)&&delete this.scope[e]},o},t.math=!0},function(e,t,r){e.exports=[r(270),r(273),r(275),r(276),r(277),r(279),r(278),r(283),r(271),r(282),r(284),r(280),r(281),r(285)]},function(e,t,r){e.exports=[r(293),r(296),r(298),r(300),r(301),r(303),r(308),r(313),r(315),r(317)]},function(e,t,r){"use strict";var i=r(294).transform;t.name="concat",t.path="expression.transform",t.factory=function(e,t,n,a){var o=n(r(295));return a("concat",{"...any":function(e){var t=e.length-1,r=e[t];"number"==typeof r?e[t]=r-1:r&&!0===r.isBigNumber&&(e[t]=r.minus(1));try{return o.apply(null,e)}catch(n){throw i(n)}}})}},function(e,t,r){var n=r(42);t.transform=function(e){return e&&e.isIndexError?new n(e.index+1,e.min+1,e.max+1):e}},function(e,t,r){"use strict";var a=r(3).clone,o=r(6).isInteger,s=r(39),u=r(42),c=r(41);t.name="concat",t.factory=function(e,t,n,f){var l=n(r(50));return(n=f("concat",{"...Array | Matrix | number | BigNumber":function(e){for(var r,n=e.length,f=-1,p=!1,m=[],t=0;t<n;t++){var h=e[t];if(h&&!0===h.isMatrix&&(p=!0),"number"==typeof h||h&&!0===h.isBigNumber){if(t!==n-1)throw new Error("Dimension must be specified as last argument");if(r=f,f=h.valueOf(),!o(f))throw new TypeError("Integer number expected for dimension");if(f<0)throw new u(f);if(0<t&&r<f)throw new u(f,r+1)}else{var h=a(h).valueOf(),v=s.size(h);if(m[t]=h,r=f,f=v.length-1,0<t&&f!=r)throw new c(r+1,f+1)}}if(0==m.length)throw new SyntaxError("At least one matrix expected");for(var d=m.shift();m.length;)d=function i(e,t,r,n){if(n<r){if(e.length!=t.length)throw new c(e.length,t.length);for(var a=[],o=0;o<e.length;o++)a[o]=i(e[o],t[o],r,n+1);return a}return e.concat(t)}(d,m.shift(),f,0);return p?l(d):d},"...string":function(e){return e.join("")}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="filter",t.path="expression.transform",t.factory=function(e,t,n,i){function a(e,t,r){var n;if(e[0]&&(n=e[0].compile().eval(r)),e[1])if(e[1]&&e[1].isSymbolNode)i=e[1].compile().eval(r);else{var a=r||{},r=e[1].filter(function(e){return e&&e.isSymbolNode&&!(e.name in t)&&!(e.name in a)})[0],u=Object.create(a),c=e[1].compile();if(!r)throw new Error("No undefined variable found in filter equation");var f=r.name,i=function(e){return u[f]=e,c.eval(u)}}return o(n,i)}var o=n(r(297));return n(r(281)),a.rawArgs=!0,a}},function(e,t,r){"use strict";function i(e,t){if(1!==o(e).length)throw new Error("Only one dimensional matrices supported");return e.filter(function(e){return t(e)})}function a(e,t){if(1!==o(e).length)throw new Error("Only one dimensional matrices supported");return e.filter(function(e){return t.test(e)})}var o=r(39).size;t.name="filter",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("filter",{"Array, function":i,"Array, RegExp":a,"Matrix, function":function(e,t){return s(i(e.toArray(),t))},"Matrix, RegExp":function(e,t){return s(a(e.toArray(),t))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="forEach",t.path="expression.transform",t.factory=function(e,t,n,i){return n(r(299)),i("forEach",{"Array | Matrix, function":function(e,t){var r=function(n,i){Array.isArray(n)?n.forEach(function(e,t){r(e,i.concat(t+1))}):t(n,i,e)};r(e.valueOf(),[])}})}},function(e,t){"use strict";function n(e,t){function r(n,i){Array.isArray(n)?n.forEach(function(e,t){r(e,i.concat(t))}):t(n,i,e)}r(e,[])}t.name="forEach",t.factory=function(e,t,r,i){return(i=i("forEach",{"Array, function":n,"Matrix, function":function(e,t){return e.forEach(t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",i}},function(e,t,r){"use strict";Array.isArray,t.name="index",t.path="expression.transform",t.factory=function(e,t,n){return n(r(66)),function(){for(var t=[],r=0,n=arguments.length;r<n;r++){var i=arguments[r];if(i&&!0===i.isRange)i.start--,i.end-=0<i.step?0:2;else if(i&&!0===i.isSet)i=i.map(function(e){return e-1});else if(i&&(!0===i.isArray||i.isMatrix))i=i.map(function(e){return e-1});else if("number"==typeof i)i--;else{if(!i||!0!==i.isBigNumber)throw new TypeError("Ranges must be a Number, Range, Array or Matrix");i=i.toNumber()-1}t[r]=i}var a=new e.Index;return e.Index.apply(a,t),a}}},function(e,t,r){"use strict";function i(e,t,r){return function n(e,i){return Array.isArray(e)?e.map(function(e,t){return n(e,i.concat(t+1))}):t(e,i,r)}(e,[])}t.name="map",t.path="expression.transform",t.factory=function(e,t,n,a){n(r(302));var o=n(r(50));return a("max",{"Array, function":function(e,t){return i(e,t,e)},"Matrix, function":function(e,t){return o(i(e.valueOf(),t,e))}})}},function(e,t){"use strict";function n(e,t){function r(n,i){return Array.isArray(n)?n.map(function(e,t){return r(e,i.concat(t))}):t(n,i,e)}return r(e,[])}t.name="map",t.factory=function(e,t,r,i){return(i=i("map",{"Array, function":n,"Matrix, function":function(e,t){return e.map(t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",i}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="max",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(305));return o("max",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t){"use strict";e.exports=function(e){return Array.isArray(e)||e&&!0===e.isMatrix}},function(e,t,r){"use strict";var i=r(306),a=r(307);t.name="max",t.factory=function(e,t,n,o){function s(e,t){return c(e,t)?e:t}function u(e){var t=void 0;if(i(e,function(e){void 0!==t&&!c(e,t)||(t=e)}),void 0===t)throw new Error("Cannot calculate max of an empty array");return t}var c=n(r(62));return(n=o("max",{"Array | Matrix":u,"Array | Matrix, number | BigNumber":function(e,t){return a(e,t.valueOf(),s)},"...":function(){return u(arguments)}})).toTex="\\max\\left(${args}\\right)",n}},function(e,t){"use strict";e.exports=function r(e,t){for(var n=0,i=(e=e&&!0===e.isMatrix?e.valueOf():e).length;n<i;n++){var a=e[n];Array.isArray(a)?r(a,t):t(a)}}},function(e,t,r){"use strict";function n(e,t,r){var a,o,s,u;if(t<=0){if(Array.isArray(e[0])){for(u=function(e){var t,r,n=e.length,i=e[0].length,a=[];for(r=0;r<i;r++){var o=[];for(t=0;t<n;t++)o.push(e[t][r]);a.push(o)}return a}(e),o=[],a=0;a<u.length;a++)o[a]=n(u[a],t-1,r);return o}for(s=e[0],a=1;a<e.length;a++)s=r(s,e[a]);return s}for(o=[],a=0;a<e.length;a++)o[a]=n(e[a],t-1,r);return o}var a=r(39).size,o=r(42);e.exports=function(e,t,r){var i=Array.isArray(e)?a(e):e.size();if(t<0)throw new o(t);if(t>=i.length)throw new o(t,i.length);return e&&!0===e.isMatrix?e.create(n(e.valueOf(),t,r)):n(e,t,r)}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="mean",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(309));return o("mean",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t,r){"use strict";var i=r(39).size,a=r(306),o=r(307);t.name="mean",t.factory=function(e,t,n,s){function c(e){var t=0,r=0;if(a(e,function(e){t=f(t,e),r++}),0===r)throw new Error("Cannot calculate mean of an empty array");return l(t,r)}var f=n(r(49)),l=n(r(310));return(n=s("mean",{"Array | Matrix":c,"Array | Matrix, number | BigNumber":function(e,t){var r=o(e,t,f),e=Array.isArray(e)?i(e):e.size();return l(r,e[t])},"...":function(){return c(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3).extend;t.name="divide",t.factory=function(e,t,n,a){var o=n(r(78)),s=n(r(83)),u=n(r(311)),c=n(r(50)),f=n(r(84)),l=n(r(56));return(n=a("divide",i({"Array | Matrix, Array | Matrix":function(e,t){return s(e,u(t))},"Matrix, any":function(e,t){var r;switch(e.storage()){case"sparse":r=f(e,t,o,!1);break;case"dense":r=l(e,t,o,!1)}return r},"Array, any":function(e,t){return l(c(e),t,o,!1).valueOf()},"any, Array | Matrix":function(e,t){return s(e,u(t))}},o.signatures))).toTex="\\frac{${args[0]}}{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(38);t.name="inv",t.factory=function(e,t,n,a){function o(e,t,r){var i,a,s;if(1==t){if(0==(o=e[0][0]))throw Error("Cannot calculate inverse, determinant is zero");return[[u(1,o)]]}if(2==t){var o=p(e);if(0==o)throw Error("Cannot calculate inverse, determinant is zero");return[[u(e[1][1],o),u(l(e[0][1]),o)],[u(l(e[1][0]),o),u(e[0][0],o)]]}var g=e.concat();for(n=0;n<t;n++)g[n]=g[n].concat();for(var v=m(t).valueOf(),d=0;d<r;d++){for(n=d;n<t&&0==g[n][d];)n++;if(n==t||0==g[n][d])throw Error("Cannot calculate inverse, determinant is zero");n!=d&&(s=g[d],g[d]=g[n],g[n]=s,s=v[d],v[d]=v[n],v[n]=s);for(var y=g[d],x=v[d],n=0;n<t;n++){var b=g[n],w=v[n];if(n!=d){if(0!=b[d]){for(a=u(l(b[d]),y[d]),i=d;i<r;i++)b[i]=c(b[i],f(a,y[i]));for(i=0;i<r;i++)w[i]=c(w[i],f(a,x[i]))}}else{for(a=y[d],i=d;i<r;i++)b[i]=u(b[i],a);for(i=0;i<r;i++)w[i]=u(w[i],a)}}}return v}var s=n(r(50)),u=n(r(78)),c=n(r(51)),f=n(r(83)),l=n(r(75)),p=n(r(312)),m=n(r(81));return(n=a("inv",{"Array | Matrix":function(e){var t=!0===e.isMatrix?e.size():i.array.size(e);switch(t.length){case 1:if(1==t[0])return!0===e.isMatrix?s([u(1,e.valueOf()[0])]):[u(1,e[0])];throw new RangeError("Matrix must be square (size: "+i.string.format(t)+")");case 2:var r=t[0],n=t[1];if(r==n)return!0===e.isMatrix?s(o(e.valueOf(),r,n),e.storage()):o(e,r,n);throw new RangeError("Matrix must be square (size: "+i.string.format(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+i.string.format(t)+")")}},any:function(e){return u(1,e)}})).toTex="\\left(${args[0]}\\right)^{-1}",n}},function(e,t,r){"use strict";var i=r(38),a=i.object,o=i.string;t.name="det",t.factory=function(e,t,n,i){var u=n(r(50)),c=n(r(49)),f=n(r(74)),l=n(r(83)),p=n(r(75));return(n=i("det",{any:function(e){return a.clone(e)},"Array | Matrix":function(e){var t=e&&!0===e.isMatrix?e.size():Array.isArray(e)?(e=u(e)).size():[];switch(t.length){case 0:return a.clone(e);case 1:if(1==t[0])return a.clone(e.valueOf()[0]);throw new RangeError("Matrix must be square (size: "+o.format(t)+")");case 2:var r=t[0],n=t[1];if(r==n)return function(e,t){if(1==t)return a.clone(e[0][0]);if(2==t)return f(l(e[0][0],e[1][1]),l(e[1][0],e[0][1]));for(var i=e,o=0;o<t-1;o++)i=l(function(e){for(var r,n=new Array(e.length),i=0,t=1;t<e.length;t++)i=c(i,e[t][t]);for(t=0;t<e.length;t++){for(n[t]=new Array(e.length),n[t][t]=p(i),r=0;r<t;r++)n[t][r]=0;for(r=t+1;r<e.length;r++)n[t][r]=e[t][r];t+1<e.length&&(i=f(i,e[t+1][t+1]))}return n}(i),e);return t%2==0?p(i[0][0]):i[0][0]}(e.clone().valueOf(),r);throw new RangeError("Matrix must be square (size: "+o.format(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+o.format(t)+")")}}})).toTex="\\det\\left(${args[0]}\\right)",n}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="min",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(314));return o("min",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t,r){"use strict";var i=r(306),a=r(307);t.name="min",t.factory=function(e,t,n,o){function s(e,t){return c(e,t)?e:t}function u(e){var t=void 0;if(i(e,function(e){void 0!==t&&!c(e,t)||(t=e)}),void 0===t)throw new Error("Cannot calculate min of an empty array");return t}var c=n(r(58));return(n=o("min",{"Array | Matrix":u,"Array | Matrix, number | BigNumber":function(e,t){return a(e,t.valueOf(),s)},"...":function(){return u(arguments)}})).toTex="\\min\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="range",t.path="expression.transform",t.factory=function(e,t,n,i){var a=n(r(316));return i("range",{"...any":function(e){return"boolean"!=typeof e[e.length-1]&&e.push(!0),a.apply(null,e)}})}},function(e,t,r){"use strict";t.name="range",t.factory=function(e,t,n,i){function a(e){return"array"===t.matrix?e:p(e)}function o(r,n){var i=function(e){var r=e.split(":").map(function(e){return Number(e)});if(r.some(function(e){return isNaN(e)}))return null;switch(r.length){case 2:return{start:r[0],end:r[1],step:1};case 3:return{start:r[0],end:r[2],step:r[1]};default:return null}}(r);if(i)return"bignumber"===t.number?a((n?f:c)(new e.BigNumber(i.start),new e.BigNumber(i.end),new e.BigNumber(i.step))):a((n?u:s)(i.start,i.end,i.step));throw new SyntaxError('String "'+r+'" is no valid range')}function s(e,t,r){var n=[],i=e;if(0<r)for(;i<t;)n.push(i),i+=r;else if(r<0)for(;t<i;)n.push(i),i+=r;return n}function u(e,t,r){var n=[],i=e;if(0<r)for(;i<=t;)n.push(i),i+=r;else if(r<0)for(;t<=i;)n.push(i),i+=r;return n}function c(e,t,r){var n=[],i=e;if(r.gt(m))for(;i.lt(t);)n.push(i),i=i.plus(r);else if(r.lt(m))for(;i.gt(t);)n.push(i),i=i.plus(r);return n}function f(e,t,r){var n=[],i=e;if(r.gt(m))for(;i.lte(t);)n.push(i),i=i.plus(r);else if(r.lt(m))for(;i.gte(t);)n.push(i),i=i.plus(r);return n}var p=n(r(50)),m=new e.BigNumber(0),h=new e.BigNumber(1);return(n=i("range",{string:o,"string, boolean":o,"number, number":function(e,t){return a(s(e,t,1))},"number, number, number":function(e,t,r){return a(s(e,t,r))},"number, number, boolean":function(e,t,r){return a((r?u:s)(e,t,1))},"number, number, number, boolean":function(e,t,r,n){return a((n?u:s)(e,t,r))},"BigNumber, BigNumber":function(e,t){return a(c(e,t,h))},"BigNumber, BigNumber, BigNumber":function(e,t,r){return a(c(e,t,r))},"BigNumber, BigNumber, boolean":function(e,t,r){return a((r?f:c)(e,t,h))},"BigNumber, BigNumber, BigNumber, boolean":function(e,t,r,n){return a((n?f:c)(e,t,r))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(294).transform;t.name="subset",t.path="expression.transform",t.factory=function(e,t,n,a){var o=n(r(318));return a("subset",{"...any":function(e){try{return o.apply(null,e)}catch(t){throw i(t)}}})}},function(e,t,r){"use strict";var i=r(3).clone,a=r(39).validateIndex,o=r(41);t.name="subset",t.factory=function(e,t,n,s){function c(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Index expected");if(1!=t.size().length)throw new o(t.size().length,1);if(void 0!==n){if("string"!=typeof n||1!==n.length)throw new TypeError("Single character expected as defaultValue")}else n=" ";var s,i=t.dimension(0);if(i.size()[0]!=r.length)throw new o(i.size()[0],r.length);var u=e.length;a(t.min()[0]),a(t.max()[0]);for(var c=[],f=0;f<u;f++)c[f]=e.charAt(f);if(i.forEach(function(e,t){c[e]=r.charAt(t[0])}),u<c.length)for(f=u-1,s=c.length;f<s;f++)c[f]||(c[f]=n);return c.join("")}var f=n(r(50));return(n=s("subset",{"Array, Index":function(e,t){e=f(e).subset(t);return e&&e.valueOf()},"Matrix, Index":function(e,t){return e.subset(t)},"string, Index":function(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Index expected");if(1!=t.size().length)throw new o(t.size().length,1);var r=e.length,r=(a(t.min()[0],r),a(t.max()[0],r),t.dimension(0)),i="";return r.forEach(function(t){i+=e.charAt(t)}),i},"Array, Index, any":function(e,t,r){return f(i(e)).subset(t,r,void 0).valueOf()},"Array, Index, any, any":function(e,t,r,n){return f(i(e)).subset(t,r,n).valueOf()},"Matrix, Index, any":function(e,t,r){return e.clone().subset(t,r)},"Matrix, Index, any, any":function(e,t,r,n){return e.clone().subset(t,r,n)},"string, Index, string":c,"string, Index, string, string":c})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3),a=r(23);t.name="Help",t.path="type",t.factory=function(e,t,n,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if(!e)throw new Error('Argument "doc" missing');this.doc=e}var u=n(r(289))();return s.prototype.type="Help",s.prototype.isHelp=!0,s.prototype.toString=function(){var e=this.doc||{},t="\n";if(e.name&&(t+="Name: "+e.name+"\n\n"),e.category&&(t+="Category: "+e.category+"\n\n"),e.description&&(t+="Description:\n    "+e.description+"\n\n"),e.syntax&&(t+="Syntax:\n    "+e.syntax.join("\n    ")+"\n\n"),e.examples){t+="Examples:\n";for(var r=0;r<e.examples.length;r++){var i,n=e.examples[r];t+="    "+n+"\n";try{i=u.eval(n)}catch(o){i=o}i&&!i.isHelp&&(t+="        "+a.format(i,{precision:14})+"\n")}t+="\n"}return e.seealso&&(t+="See also: "+e.seealso.join(", ")+"\n"),t},s.prototype.toJSON=function(){var e=i.clone(this.doc);return e.mathjs="Help",e},s.fromJSON=function(e){var r,t={};for(r in e)"mathjs"!==r&&(t[r]=e[r]);return new s(t)},s.prototype.valueOf=s.prototype.toString,s}},function(e,t,r){e.exports=[r(321),r(348),r(378),r(394),r(403),r(408),r(411),r(417),r(426),r(435),r(440),r(448),r(489),r(491)]},function(e,t,r){e.exports=[r(322),r(323),r(343),r(345),r(347)]},function(e,t,r){"use strict";var a=r(38).object;t.name="lup",t.factory=function(e,t,n,i){var o=n(r(50)),s=n(r(85)),u=n(r(51)),c=n(r(78)),f=n(r(77)),l=n(r(74)),p=n(r(62)),m=n(r(47)),h=n(r(75)),g=e.SparseMatrix,v=e.DenseMatrix,d=e.Spa,n=i("lup",{DenseMatrix:function(e){return x(e)},SparseMatrix:function(e){return b(e)},Array:function(e){e=o(e),e=x(e);return{L:e.L.valueOf(),U:e.U.valueOf(),p:e.p}}}),x=function(e){var r,i=e._size[0],o=e._size[1],h=Math.min(i,o),g=a.clone(e._data),d=[],e=[i,h],x=[],b=[h,o],w=[];for(t=0;t<i;t++)w[t]=t;for(r=0;r<o;r++){if(0<r)for(t=0;t<i;t++){for(var N=Math.min(t,r),E=0,n=0;n<N;n++)E=u(E,f(g[t][n],g[n][r]));g[t][r]=l(g[t][r],E)}for(var M=r,A=0,_=0,t=r;t<i;t++){var O=g[t][r],T=s(O);p(T,A)&&(M=t,A=T,_=O)}if(r!==M&&(w[r]=[w[M],w[M]=w[r]][0],v._swapRows(r,M,g)),r<i)for(t=r+1;t<i;t++){var C=g[t][r];m(C,0)||(g[t][r]=c(g[t][r],_))}}for(r=0;r<o;r++)for(t=0;t<i;t++)0===r&&(t<o&&(x[t]=[]),d[t]=[]),t<r?(t<o&&(x[t][r]=g[t][r]),r<i&&(d[t][r]=0)):t!==r?(t<o&&(x[t][r]=0),r<i&&(d[t][r]=g[t][r])):(t<o&&(x[t][r]=g[t][r]),r<i&&(d[t][r]=1));var e=new v({data:d,size:e}),b=new v({data:x,size:b}),B=[];for(t=0,h=w.length;t<h;t++)B[w[t]]=t;return{L:e,U:b,p:B,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}},b=function(e){for(var i=e._size[0],a=e._size[1],o=Math.min(i,a),u=e._values,l=e._index,v=e._ptr,y=[],x=[],b=[],w=[i,o],N=[],E=[],M=[],A=[o,a],_=[],O=[],t=0;t<i;t++)O[_[t]=t]=t;for(var r=0;r<a;r++){for(var C=new d,S=(r<i&&(b.push(y.length),y.push(1),x.push(r)),M.push(N.length),v[r]),z=v[r+1],n=S;n<z;n++)t=l[n],C.set(_[t],u[n]);0<r&&C.forEach(0,r-1,function(e,t){g._forEachRow(e,y,x,b,function(r,n){e<r&&C.accumulate(r,h(f(n,t)))})});var B=r,k=C.get(r),I=s(k);C.forEach(r+1,i-1,function(e,t){var r=s(t);p(r,I)&&(B=e,I=r,k=t)}),r!==B&&(g._swapRows(r,B,w[1],y,x,b),g._swapRows(r,B,A[1],N,E,M),C.swap(r,B),function(e,t){var r=O[e],n=O[t];_[r]=t,O[_[n]=e]=n,O[t]=r}(r,B)),C.forEach(0,i-1,function(e,t){e<=r?(N.push(t),E.push(e)):(t=c(t,k),m(t,0)||(y.push(t),x.push(e)))})}return M.push(N.length),b.push(y.length),{L:new g({values:y,index:x,ptr:b,size:w}),U:new g({values:N,index:E,ptr:M,size:A}),p:_,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}};return n}},function(e,t,r){"use strict";var o=r(38).number.isInteger;t.name="slu",t.factory=function(e,t,n,i){var a=n(r(324)),s=n(r(335));return i("slu",{"SparseMatrix, number, number":function(e,t,r){if(!o(t)||t<0||3<t)throw new Error("Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]");if(r<0||1<r)throw new Error("Partial pivoting threshold must be a number from 0 to 1");t=a(t,e,!1),e=s(e,t,r);return{L:e.L,U:e.U,p:e.pinv,q:t.q,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\np: "+this.p.toString()+(this.q?"\nq: "+this.q.toString():"")+"\n"}}}})}},function(e,t,r){"use strict";t.name="cs_sqr",t.path="sparse",t.factory=function(e,t,n){var i=n(r(325)),a=n(r(330)),o=n(r(331)),s=n(r(332)),u=n(r(333));return function(e,t,r){var n,c=t._ptr,p=t._size[1],m={};if(m.q=i(e,t),e&&!m.q)return null;if(r){r=e?a(t,null,m.q,0):t,e=(m.parent=o(r,1),s(m.parent,p));if(m.cp=u(r,m.parent,e,1),r&&m.parent&&m.cp&&function(e,t){var r=e._ptr,n=e._index,i=e._size,a=i[0],o=i[1];t.pinv=[],t.leftmost=[];for(var s,u,c,f,l,p=t.parent,m=t.pinv,h=t.leftmost,g=[],v=0,d=a,y=a+o,x=a+2*o,u=0;o>u;u++)g[d+u]=-1,g[y+u]=-1,g[x+u]=0;for(s=0;a>s;s++)h[s]=-1;for(u=o-1;u>=0;u--)for(f=r[u],l=r[u+1],c=f;l>c;c++)h[n[c]]=u;for(s=a-1;s>=0;s--)(m[s]=-1)!=(u=h[s])&&(0===g[x+u]++&&(g[y+u]=s),g[v+s]=g[d+u],g[d+u]=s);for(t.lnz=0,t.m2=a,u=0;o>u;u++)if(s=g[d+u],t.lnz++,!(--x[m[s=0>s?t.m2++:s]=u]<=0)){t.lnz+=g[x+u];var b=p[u];-1!=b&&(0===g[x+b]&&(g[y+b]=g[y+u]),g[v+g[y+u]]=g[d+b],g[d+b]=g[v+s],g[x+b]+=g[x+u])}for(s=0;a>s;s++)m[s]<0&&(m[s]=u++);return!0}(r,m))for(n=m.unz=0;n<p;n++)m.unz+=m.cp[n]}else m.unz=4*c[p]+p,m.lnz=m.unz;return m}}},function(e,t,r){"use strict";t.name="cs_amd",t.path="sparse",t.factory=function(e,t,n){function l(e,t,r,n,i){var a=c(t);if(1===e&&n===r)return s(t,a);if(2==e){for(var o=a._index,f=a._ptr,l=0,p=0;p<r;p++){var m=f[p];if(f[p]=l,!(f[p+1]-m>i))for(var h=f[p+1];m<h;m++)o[l++]=o[m]}f[r]=l,t=c(a)}return u(a,t)}function g(e,t){return e!=t}var i=n(r(326)),a=n(r(327)),o=n(r(328)),s=n(r(49)),u=n(r(83)),c=n(r(329)),h=function(e,t,r,n,i){if(e<2||e+t<0){for(var a=0;a<i;a++)0!==r[n+a]&&(r[n+a]=1);e=2}return e};return function(e,t){if(!t||e<=0||3<e)return null;var r=t._size,n=r[0],s=r[1],u=0,r=Math.max(16,10*Math.sqrt(s)),r=Math.min(s-2,r),e=l(e,t,n,s,r);a(e,g,null);for(var v,y,b,N,E,A,_,T,C,S,z,B=e._index,k=e._ptr,I=k[s],R=[],P=[],q=s+1,L=2*(s+1),F=3*(s+1),D=4*(s+1),$=5*(s+1),j=6*(s+1),G=7*(s+1),H=R,V=function(e,t,r,n,i,a,o,s,u,c,f,l){for(var p=0;e>p;p++)r[n+p]=t[p+1]-t[p];for(var m=r[n+e]=0;e>=m;m++)r[i+m]=-1,a[m]=-1,r[o+m]=-1,r[s+m]=-1,r[u+m]=1,r[c+m]=1,r[f+m]=0,r[l+m]=r[n+m];var g=h(0,0,r,c,e);return r[f+e]=-2,t[e]=-1,r[c+e]=0,g}(s,k,P,0,F,H,L,G,q,j,D,$),Z=function(e,t,r,n,a,o,s,u,c,f,l){for(var p=0,m=0;e>m;m++){var h=r[n+m];if(0===h)r[a+m]=-2,p++,t[m]=-1,r[o+m]=0;else if(h>s)r[u+m]=0,r[a+m]=-1,p++,t[m]=i(e),r[u+e]++;else{var g=r[c+h];-1!=g&&(f[g]=m),r[l+m]=r[c+h],r[c+h]=m}}return p}(s,k,P,$,D,j,r,q,F,H,L),Y=0;Z<s;){for(y=-1;Y<s&&-1==(y=P[F+Y]);Y++);-1!=P[L+y]&&(H[P[L+y]]=-1),P[F+Y]=P[L+y];for(var re,w,W=P[D+y],X=P[q+y],J=(Z+=X,0),Q=(P[q+y]=-X,k[y]),K=0===W?Q:I,ee=K,x=1;x<=W+1;x++){for(E=W<x?(N=Q,P[0+(w=y)]-W):(N=k[w=B[Q++]],P[0+w]),b=1;b<=E;b++)(M=P[q+(v=B[N++])])<=0||(J+=M,P[q+v]=-M,-1!=P[L+(B[ee++]=v)]&&(H[P[L+v]]=H[v]),-1!=H[v]?P[L+H[v]]=P[L+v]:P[F+P[$+v]]=P[L+v]);w!=y&&(k[w]=i(y),P[j+w]=0)}for(0!==W&&(I=ee),P[$+y]=J,k[y]=K,P[0+y]=ee-K,P[D+y]=-2,V=h(V,u,P,j,s),A=K;A<ee;A++)if(!((_=P[D+(v=B[A])])<=0))for(var M,te=V-(M=-P[q+v]),Q=k[v],O=k[v]+_-1;Q<=O;Q++)P[j+(w=B[Q])]>=V?P[j+w]-=M:0!==P[j+w]&&(P[j+w]=P[$+w]+te);for(A=K;A<ee;A++){for(T=(O=k[v=B[A]])+P[D+v]-1,z=S=0,Q=C=O;Q<=T;Q++)0!==P[j+(w=B[Q])]&&(0<(re=P[j+w]-V)?(z+=re,S+=B[C++]=w):(k[w]=i(y),P[j+w]=0));P[D+v]=C-O+1;var ne=C,ie=O+P[0+v];for(Q=1+T;Q<ie;Q++){var d,ae=P[q+(d=B[Q])];ae<=0||(z+=ae,S+=B[C++]=d)}0===z?(k[v]=i(y),J-=M=-P[q+v],X+=M,Z+=M,P[q+v]=0,P[D+v]=-1):(P[$+v]=Math.min(P[$+v],z),B[C]=B[ne],B[ne]=B[O],B[O]=y,P[0+v]=C-O+1,P[L+v]=P[G+(S=(S<0?-S:S)%s)],H[P[G+S]=v]=S)}for(P[$+y]=J,u=Math.max(u,J),V=h(V+u,u,P,j,s),A=K;A<ee;A++)if(!(0<=P[q+(v=B[A])]))for(v=P[G+(S=H[v])],P[G+S]=-1;-1!=v&&-1!=P[L+v];v=P[L+v],V++){for(E=P[0+v],_=P[D+v],Q=k[v]+1;Q<=k[v]+E-1;Q++)P[j+B[Q]]=V;var oe=v;for(d=P[L+v];-1!=d;){var se=P[0+d]===E&&P[D+d]===_;for(Q=k[d]+1;se&&Q<=k[d]+E-1;Q++)P[j+B[Q]]!=V&&(se=0);se?(k[d]=i(v),P[q+v]+=P[q+d],P[q+d]=0,P[D+d]=-1,d=P[L+d],P[L+oe]=d):d=P[L+(oe=d)]}}for(A=Q=K;A<ee;A++)(M=-P[q+(v=B[A])])<=0||(P[q+v]=M,z=P[$+v]+J-M,-1!=P[F+(z=Math.min(z,s-Z-M))]&&(H[P[F+z]]=v),P[L+v]=P[F+z],H[v]=-1,P[F+z]=v,Y=Math.min(Y,z),P[$+v]=z,B[Q++]=v);P[q+y]=X,0==(P[0+y]=Q-K)&&(k[y]=-1,P[j+y]=0),0!==W&&(I=Q)}for(v=0;v<s;v++)k[v]=i(k[v]);for(d=0;d<=s;d++)P[F+d]=-1;for(d=s;0<=d;d--)0<P[q+d]||(P[L+d]=P[F+k[d]],P[F+k[d]]=d);for(w=s;0<=w;w--)P[q+w]<=0||-1!=k[w]&&(P[L+w]=P[F+k[w]],P[F+k[w]]=w);for(v=y=0;v<=s;v++)-1==k[v]&&(y=o(v,y,P,F,L,R,j));return R.splice(R.length-1,1),R}}},function(e,t){"use strict";t.name="cs_flip",t.path="sparse",t.factory=function(){return function(e){return-e-2}}},function(e,t){"use strict";t.name="cs_fkeep",t.path="sparse",t.factory=function(){return function(e,t,r){for(var n=e._values,i=e._index,a=e._ptr,s=e._size[1],u=0,c=0;c<s;c++){var f=a[c];for(a[c]=u;f<a[c+1];f++)t(i[f],c,n?n[f]:1,r)&&(i[u]=i[f],n&&(n[u]=n[f]),u++)}return a[s]=u,i.splice(u,i.length-u),n&&n.splice(u,n.length-u),u}}},function(e,t){"use strict";t.name="cs_tdfs",t.path="sparse",t.factory=function(){return function(e,t,r,n,i,a,o){var s=0;for(r[o]=e;0<=s;){var u=r[o+s],c=r[n+u];-1==c?(s--,a[t++]=u):(r[n+u]=r[i+c],r[o+ ++s]=c)}return t}}},function(e,t,r){"use strict";var i=r(3).clone,a=r(23).format;t.name="transpose",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=e.DenseMatrix,f=e.SparseMatrix,l=o("transpose",{Array:function(e){return l(u(e)).valueOf()},Matrix:function(e){var t,r=e.size();switch(r.length){case 1:t=e.clone();break;case 2:var n=r[0],i=r[1];if(0===i)throw new RangeError("Cannot transpose a 2D matrix with no columns (size: "+a(r)+")");switch(e.storage()){case"dense":t=p(e,n,i);break;case"sparse":t=m(e,n,i)}break;default:throw new RangeError("Matrix must be a vector or two dimensional (size: "+a(this._size)+")")}return t},any:function(e){return i(e)}}),p=function(e,t,r){for(var a=e._data,o=[],s=0;s<r;s++)for(var n=o[s]=[],u=0;u<t;u++)n[u]=i(a[u][s]);return new c({data:o,size:[r,t],datatype:e._datatype})},m=function(e,t,r){for(var m,h,g,n=e._values,a=e._index,o=e._ptr,s=n?[]:void 0,u=[],c=[],l=[],p=0;p<t;p++)l[p]=0;for(m=0,h=a.length;m<h;m++)l[a[m]]++;for(var v=0,d=0;d<t;d++)c.push(v),v+=l[d],l[d]=c[d];for(c.push(v),g=0;g<r;g++)for(var y=o[g],x=o[g+1],b=y;b<x;b++){var w=l[a[b]]++;u[w]=g,n&&(s[w]=i(n[b]))}return new f({values:s,index:u,ptr:c,size:[r,t],datatype:e._datatype})};return l.toTex="\\left(${args[0]}\\right)"+s.operators.transpose,l}},function(e,t){"use strict";t.name="cs_permute",t.path="sparse",t.factory=function(e){var t=e.SparseMatrix;return function(e,r,n,i){for(var a=e._values,o=e._index,s=e._ptr,u=e._size,c=e._datatype,f=u[0],l=u[1],p=i&&e._values?[]:null,m=[],h=[],g=0,v=0;v<l;v++){h[v]=g;for(var d=n?n[v]:v,y=s[d],x=s[d+1],b=y;b<x;b++){var w=r?r[o[b]]:o[b];m[g]=w,p&&(p[g]=a[b]),g++}}return h[l]=g,new t({values:p,index:m,ptr:h,size:[f,l],datatype:c})}}},function(e,t){"use strict";t.name="cs_etree",t.path="sparse",t.factory=function(){return function(e,t){if(!e)return null;var n,i=e._index,a=e._ptr,e=e._size,s=e[0],u=e[1],c=[],f=[],p=u;if(t)for(r=0;r<s;r++)f[p+r]=-1;for(var m=0;m<u;m++){f[0+m]=c[m]=-1;for(var h=a[m],g=a[m+1],v=h;v<g;v++){for(var d=i[v],r=t?f[p+d]:d;-1!=r&&r<m;r=n)n=f[0+r],f[0+r]=m,-1==n&&(c[r]=m);t&&(f[p+d]=m)}}return c}}},function(e,t,r){"use strict";t.name="cs_post",t.path="sparse",t.factory=function(e,t,n){var i=n(r(328));return function(e,t){if(!e)return null;for(var n=0,a=[],o=[],u=t,c=2*t,r=0;r<t;r++)o[0+r]=-1;for(r=t-1;0<=r;r--)-1!=e[r]&&(o[u+r]=o[0+e[r]],o[0+e[r]]=r);for(r=0;r<t;r++)-1==e[r]&&(n=i(r,n,o,0,u,a,c));return a}}},function(e,t,r){"use strict";t.name="cs_counts",t.path="sparse",t.factory=function(e,t,n){var i=n(r(329)),a=n(r(334));return function(e,t,r,n){if(!e||!t||!r)return null;for(var s,c,f,l,p,m=e._size,h=m[0],g=m[1],v=4*g+(n?g+h+1:0),d=[],x=g,b=2*g,w=3*g,N=4*g,E=5*g+1,u=0;u<v;u++)d[u]=-1;var M=[],m=i(e),_=m._index,O=m._ptr;for(u=0;u<g;u++)for(M[s=r[u]]=-1==d[w+s]?1:0;-1!=s&&-1==d[w+s];s=t[s])d[w+s]=u;if(n){for(u=0;u<g;u++)d[r[u]]=u;for(o=0;o<h;o++){for(u=g,l=O[o],p=O[o+1],f=l;f<p;f++)u=Math.min(u,d[_[f]]);d[E+o]=d[N+u],d[N+u]=o}}for(o=0;o<g;o++)d[0+o]=o;for(u=0;u<g;u++){for(-1!=t[s=r[u]]&&M[t[s]]--,c=n?d[N+u]:s;-1!=c;c=n?d[E+c]:-1)for(f=O[c];f<O[c+1];f++){var o=_[f],T=a(o,s,d,w,x,b,0);1<=T.jleaf&&M[s]++,2==T.jleaf&&M[T.q]--}-1!=t[s]&&(d[0+s]=t[s])}for(s=0;s<g;s++)-1!=t[s]&&(M[t[s]]+=M[s]);return M}}},function(e,t){"use strict";t.name="cs_leaf",t.path="sparse",t.factory=function(){return function(e,t,r,n,i,a,o){var s,u,f,l=0;if(e<=t||r[n+t]<=r[i+e])return-1;if(r[i+e]=r[n+t],i=r[a+e],r[a+e]=t,-1===i)l=1,f=e;else{for(l=2,f=i;f!=r[o+f];f=r[o+f]);for(s=i;s!=f;s=u)u=r[o+s],r[o+s]=f}return{jleaf:l,q:f}}}},function(e,t,r){"use strict";t.name="cs_lu",t.path="sparse",t.factory=function(e,t,n){var i=n(r(85)),a=n(r(78)),o=n(r(83)),s=n(r(62)),u=n(r(336)),c=n(r(337)),f=e.SparseMatrix;return function(e,t,r){if(!e)return null;var n,p=e._size[1],m=100,h=100;t&&(n=t.q,m=t.lnz||m,h=t.unz||h);for(var d=[],y=[],x=[],b=new f({values:d,index:y,ptr:x,size:[p,p]}),w=[],N=[],E=[],t=new f({values:w,index:N,ptr:E,size:[p,p]}),A=[],_=[],O=[],g=0;g<p;g++)_[g]=0,A[g]=-1,x[g+1]=0;for(var m=0,h=0,T=0;T<p;T++){x[T]=m,E[T]=h;for(var k,C=n?n[T]:T,S=c(b,e,C,O,_,A,1),z=-1,B=-1,v=S;v<p;v++)A[g=O[v]]<0?(k=i(_[g]),s(k,B)&&(B=k,z=g)):(N[h]=A[g],w[h++]=_[g]);if(-1==z||B<=0)return null;var I=_[z=A[C]<0&&u(i(_[C]),o(B,r))?C:z];for(N[h]=T,w[h++]=I,A[z]=T,y[m]=z,d[m++]=1,v=S;v<p;v++)A[g=O[v]]<0&&(y[m]=g,d[m++]=a(_[g],I)),_[g]=0}for(x[p]=m,E[p]=h,v=0;v<m;v++)y[v]=A[y[v]];return d.splice(m,d.length-m),y.splice(m,y.length-m),w.splice(h,w.length-h),N.splice(h,N.length-h),{L:b,U:t,pinv:A}}}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="largerEq",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("largerEq",{"boolean, boolean":function(e,t){return t<=e},"number, number":function(e,r){return r<=e||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gte(t)},"Fraction, Fraction":function(e,t){return-1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return t<=e},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.largerEq+"${args[1]}\\right)",m}},function(e,t,r){"use strict";t.name="cs_spsolve",t.path="sparse",t.factory=function(e,t,n){var i=n(r(78)),a=n(r(83)),o=n(r(74)),s=n(r(338));return function(e,t,r,n,u,c,f){for(var p,m,h,g=e._values,v=e._index,d=e._ptr,x=e._size[1],b=t._values,w=t._index,N=t._ptr,e=s(e,t,r,n,c),l=e;l<x;l++)u[n[l]]=0;for(p=N[r],m=N[r+1],l=p;l<m;l++)u[w[l]]=b[l];for(var M=e;M<x;M++){var A=n[M],_=c?c[A]:A;if(!(_<0))for(p=d[_],m=d[_+1],u[A]=i(u[A],g[f?p:m-1]),l=f?p+1:p,h=f?m:m-1;l<h;l++){var O=v[l];u[O]=o(u[O],a(g[l],u[A]))}}return e}}},function(e,t,r){"use strict";t.name="cs_reach",t.path="sparse",t.factory=function(e,t,n){var i=n(r(339)),a=n(r(340)),o=n(r(341));return function(e,t,r,n,s){for(var l=e._ptr,p=e._size,m=t._index,t=t._ptr,g=p[1],v=g,p=t[r],f=t[r+1],u=p;u<f;u++){var d=m[u];a(l,d)||(v=i(d,e,v,n,s))}for(u=v;u<g;u++)o(l,n[u]);return v}}},function(e,t,r){"use strict";t.name="cs_dfs",t.path="sparse",t.factory=function(e,t,n){var i=n(r(340)),a=n(r(341)),o=n(r(342));return function(e,t,r,n,s){var u,l=t._index,p=t._ptr,h=t._size[1],g=0;for(n[0]=e;0<=g;){e=n[g];for(var v=s?s[e]:e,d=(i(p,e)||(a(p,e),n[h+g]=v<0?0:o(p[v])),1),c=n[h+g],f=v<0?0:o(p[v+1]);c<f;c++)if(u=l[c],!i(p,u)){n[h+g]=c,n[++g]=u,d=0;break}d&&(g--,n[--r]=e)}return r}}},function(e,t){"use strict";t.name="cs_marked",t.path="sparse",t.factory=function(){return function(e,t){return e[t]<0}}},function(e,t,r){"use strict";t.name="cs_mark",t.path="sparse",t.factory=function(e,t,n){var i=n(r(326));return function(e,t){e[t]=i(e[t])}}},function(e,t,r){"use strict";t.name="cs_unflip",t.path="sparse",t.factory=function(e,t,n){var i=n(r(326));return function(e){return e<0?i(e):e}}},function(e,t,r){"use strict";t.name="lsolve",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=n(r(77)),u=n(r(74)),c=n(r(47)),f=n(r(344)),l=e.DenseMatrix,n=i("lsolve",{"SparseMatrix, Array | Matrix":function(e,t){return h(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return m(e,t)},"Array, Array | Matrix":function(e,t){e=a(e);return m(e,t).valueOf()}}),m=function(e,t){for(var r=(t=f(e,t,!0))._data,n=e._size[0],i=e._size[1],a=[],p=e._data,m=0;m<i;m++){var g=r[m][0]||0;if(c(g,0))h=0;else{var v=p[m][m];if(c(v,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var h=o(g,v),d=m+1;d<n;d++)r[d]=[u(r[d][0]||0,s(h,p[d][m]))]}a[m]=[h]}return new l({data:a,size:[n,1]})},h=function(e,t){for(var r,i=(t=f(e,t,!0))._data,t=e._size[0],p=e._size[1],m=e._values,h=e._index,g=e._ptr,v=[],d=0;d<p;d++){var y=i[d][0]||0;if(c(y,0))v[d]=[0];else{for(var x=0,b=[],w=[],N=g[d+1],n=g[d];n<N;n++)(r=h[n])===d?x=m[n]:d<r&&(b.push(m[n]),w.push(r));if(c(x,0))throw new Error("Linear system cannot be solved since matrix is singular");var E=o(y,x);for(n=0,N=w.length;n<N;n++)i[r=w[n]]=[u(i[r][0]||0,s(E,b[n]))];v[d]=[E]}}return new l({data:v,size:[t,1]})};return n}},function(e,t,r){"use strict";var r=r(38),a=r.string,o=r.array,s=Array.isArray;t.factory=function(e){var t=e.DenseMatrix;return function(e,r,n){e=e.size();if(2!==e.length)throw new RangeError("Matrix must be two dimensional (size: "+a.format(e)+")");var f,l,p,u=e[0];if(u!==e[1])throw new RangeError("Matrix must be square (size: "+a.format(e)+")");if(r&&!0===r.isMatrix){e=r.size();if(1===e.length){if(e[0]!==u)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],p=r._data,l=0;l<u;l++)f[l]=[p[l]]}else{if(2!==e.length)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(e[0]!==u||1!==e[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(!0===r.isDenseMatrix){if(n){for(f=[],p=r._data,l=0;l<u;l++)f[l]=[p[l][0]];return new t({data:f,size:[u,1],datatype:r._datatype})}return r}for(f=[],l=0;l<u;l++)f[l]=[0];for(var h=r._values,g=r._index,e=r._ptr,d=e[1],y=e[0];y<d;y++)f[l=g[y]][0]=h[y]}return new t({data:f,size:[u,1],datatype:r._datatype})}if(s(r)){n=o.size(r);if(1===n.length){if(n[0]!==u)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],l=0;l<u;l++)f[l]=[r[l]]}else{if(2!==n.length)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(n[0]!==u||1!==n[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],l=0;l<u;l++)f[l]=[r[l][0]]}return new t({data:f,size:[u,1]})}}}},function(e,t,r){"use strict";var i=Array.isArray;t.name="lusolve",t.factory=function(e,t,n,a){function h(e){if(e&&!0===e.isMatrix)return e;if(i(e))return o(e);throw new TypeError("Invalid Matrix LU decomposition")}var o=n(r(50)),s=n(r(322)),u=n(r(323)),c=n(r(346)),f=n(r(344)),l=n(r(347)),p=n(r(343)),n=a("lusolve",{"Array, Array | Matrix":function(e,t){e=o(e);e=s(e);return g(e.L,e.U,e.p,null,t).valueOf()},"DenseMatrix, Array | Matrix":function(e,t){e=s(e);return g(e.L,e.U,e.p,null,t)},"SparseMatrix, Array | Matrix":function(e,t){e=s(e);return g(e.L,e.U,e.p,null,t)},"SparseMatrix, Array | Matrix, number, number":function(e,t,r,n){e=u(e,r,n);return g(e.L,e.U,e.p,e.q,t)},"Object, Array | Matrix":function(e,t){return g(e.L,e.U,e.p,e.q,t)}}),g=function(e,t,r,n,i){e=h(e),t=h(t),i=f(e,i,!1),r&&(i._data=c(r,i._data));r=p(e,i),e=l(t,r);return n&&(e._data=c(n,e._data)),e};return n}},function(e,t){"use strict";t.name="cs_ipvec",t.path="sparse",t.factory=function(){return function(e,t,r){var n,r=t.length,i=[];if(e)for(n=0;n<r;n++)i[e[n]]=t[n];else for(n=0;n<r;n++)i[n]=t[n];return i}}},function(e,t,r){"use strict";t.name="usolve",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=n(r(77)),u=n(r(74)),c=n(r(47)),f=n(r(344)),l=e.DenseMatrix,n=i("usolve",{"SparseMatrix, Array | Matrix":function(e,t){return h(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return m(e,t)},"Array, Array | Matrix":function(e,t){e=a(e);return m(e,t).valueOf()}}),m=function(e,t){for(var r=(t=f(e,t,!0))._data,t=e._size[0],i=e._size[1],a=[],p=e._data,m=i-1;0<=m;m--){var g=r[m][0]||0;if(c(g,0))h=0;else{var v=p[m][m];if(c(v,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var h=o(g,v),d=m-1;0<=d;d--)r[d]=[u(r[d][0]||0,s(h,p[d][m]))]}a[m]=[h]}return new l({data:a,size:[t,1]})},h=function(e,t){for(var r,i=(t=f(e,t,!0))._data,t=e._size[0],p=e._size[1],m=e._values,h=e._index,g=e._ptr,v=[],d=p-1;0<=d;d--){var y=i[d][0]||0;if(c(y,0))v[d]=[0];else{for(var E,x=0,b=[],w=[],N=g[d],n=g[d+1]-1;N<=n;n--)(r=h[n])===d?x=m[n]:r<d&&(b.push(m[n]),w.push(r));if(c(x,0))throw new Error("Linear system cannot be solved since matrix is singular");var M=o(y,x);for(n=0,E=w.length;n<E;n++)i[r=w[n]]=[u(i[r][0],s(M,b[n]))];v[d]=[M]}}return new l({data:v,size:[t,1]})};return n}},function(e,t,r){e.exports=[r(85),r(49),r(51),r(349),r(351),r(352),r(310),r(353),r(355),r(357),r(80),r(358),r(359),r(360),r(361),r(364),r(82),r(367),r(368),r(83),r(369),r(371),r(79),r(372),r(374),r(362),r(375),r(74),r(75),r(376),r(377)]},function(e,t,r){"use strict";var i=r(19);t.name="cbrt",t.factory=function(e,t,n,a){function o(e){var t,r;return 0===e?e:((r=e<0)&&(e=-e),t=isFinite(e)?(e/((t=Math.exp(Math.log(e)/3))*t)+2*t)/3:e,r?-t:t)}function s(r,n){var r=r.toPolar(),a=m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3)));return n?(n=[a,m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3+2*Math.PI/3))),m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3-2*Math.PI/3)))],"array"===t.matrix?n:p(n)):a}var f=n(r(75)),l=n(r(350)),p=n(r(50)),m=a.find(n(r(77)),["Complex,Complex"]),h=a.find(n(r(80)),["Complex"]),g=a("cbrt",{number:o,Complex:s,"Complex, boolean":s,BigNumber:function(e){var r,t;return e.isZero()?e:(t=(e=(r=e.isNegative())?e.neg():e).isFinite()?(t=e.ln().div(3).exp(),e.div(t.times(t)).plus(t.times(2)).div(3)):1/0,r?t.neg():t)},Unit:function(t){var n,i,r;return t.value&&t.value.isComplex?((r=t.clone()).value=1,(r=r.pow(1/3)).value=s(t.value)):(r=((n=l(t.value))&&(t.value=f(t.value)),i=t.value&&t.value.isBigNumber?new e.BigNumber(1).div(3):t.value&&t.value.isFraction?new e.Fraction(1,3):1/3,t.pow(i)),n&&(r.value=f(r.value))),r},"Array | Matrix":function(e){return i(e,g,!0)}});return g.toTex="\\sqrt[3]{${args[0]}}",g}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isNegative",t.factory=function(e,t,r,n){var a=n("isNegative",{number:function(e){return e<0},BigNumber:function(e){return e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return e.s<0&&0<e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";var i=r(19);t.name="ceil",t.factory=function(e,t,r,n){var a=n("ceil",{number:Math.ceil,Complex:function(t){return new e.Complex(Math.ceil(t.re),Math.ceil(t.im))},BigNumber:function(e){return e.ceil()},Fraction:function(e){return e.ceil()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\left\\lceil${args[0]}\\right\\rceil",a}},function(e,t,r){"use strict";var i=r(19);t.name="cube",t.factory=function(e,t,n,a){var o=a.find(n(r(77)),["Complex,Complex"]),s=a("cube",{number:function(e){return e*e*e},Complex:function(e){return o(o(e,e),e)},BigNumber:function(e){return e.times(e).times(e)},Fraction:function(e){return e.mul(e).mul(e)},"Array | Matrix":function(e){return i(e,s,!0)},Unit:function(e){return e.pow(3)}});return s.toTex="\\left(${args[0]}\\right)^3",s}},function(e,t,r){"use strict";t.name="dotDivide",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=r(29),u=n(r(354)),c=n(r(59)),f=n(r(60)),l=n(r(84)),p=n(r(61)),m=n(r(55)),h=n(r(56)),g=i("dotDivide",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?c(e,t,o,!1):m(e,t,o);return e},"Array, Array":function(e,t){return g(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return g(a(e),t)},"Matrix, Array":function(e,t){return g(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:h)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?p:h)(t,e,o,!0);return t},"Array, any":function(e,t){return h(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return h(a(t),e,o,!0).valueOf()}});return g.toTex="\\left(${args[0]}"+s.operators.dotDivide+"${args[1]}\\right)",g}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm02",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r,n){var u=e._data,c=e._size,e=e._datatype,l=t._values,p=t._index,m=t._ptr,h=t._size,t=t._datatype;if(c.length!==h.length)throw new i(c.length,h.length);if(c[0]!==h[0]||c[1]!==h[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+h+")");if(!l)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var v,h=c[0],y=c[1],x=o,b=0,w=r;"string"==typeof e&&e===t&&(x=a.find(o,[v=e,v]),b=a.convert(0,v),w=a.find(r,[v,v]));for(var N=[],E=[],M=[],A=0;A<y;A++){M[A]=E.length;for(var _=m[A],O=m[A+1],T=_;T<O;T++){var C=p[T],S=n?w(l[T],u[C][A]):w(u[C][A],l[T]);x(S,b)||(E.push(C),N.push(S))}}return M[y]=E.length,new s({values:N,index:E,ptr:M,size:[h,y],datatype:v})}}},function(e,t,r){"use strict";t.name="dotMultiply",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(77)),s=r(29),u=n(r(354)),c=n(r(356)),f=n(r(84)),l=n(r(55)),p=n(r(56)),m=i("dotMultiply",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?u(e,t,o,!1):l(e,t,o);return e},"Array, Array":function(e,t){return m(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return m(a(e),t)},"Matrix, Array":function(e,t){return m(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,o,!0);return t},"Array, any":function(e,t){return p(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return p(a(t),e,o,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+s.operators.dotMultiply+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm09",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var E,A,_,O,T=n&&p?[]:void 0,C=[],S=[],f=new s({values:T,index:C,ptr:S,size:[g,x],datatype:d}),B=T?[]:void 0,k=[],M=0;M<x;M++){S[M]=C.length;var R,I=M+1;if(B)for(_=h[M],O=h[M+1],A=_;A<O;A++)k[E=m[A]]=I,B[E]=p[A];for(_=c[M],O=c[M+1],A=_;A<O;A++)E=u[A],B?(R=k[E]===I?B[E]:w,b(R=N(n[A],R),w)||(C.push(E),T.push(R))):C.push(E)}return S[x]=C.length,f}}},function(e,t,r){"use strict";t.name="dotPow",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(79)),s=r(29),u=n(r(59)),c=n(r(60)),f=n(r(84)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=i("dotPow",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?u(e,t,o,!1):p(e,t,o);return e},"Array, Array":function(e,t){return h(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return h(a(e),t)},"Matrix, Array":function(e,t){return h(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?f:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(a(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(a(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.dotPow+"${args[1]}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="fix",t.factory=function(e,t,r,n){var a=n("fix",{number:function(e){return 0<e?Math.floor(e):Math.ceil(e)},Complex:function(t){return new e.Complex(0<t.re?Math.floor(t.re):Math.ceil(t.re),0<t.im?Math.floor(t.im):Math.ceil(t.im))},BigNumber:function(e){return e.isNegative()?e.ceil():e.floor()},Fraction:function(e){return e.s<0?e.ceil():e.floor()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\mathrm{${name}}\\left(${args}\\right)",a}},function(e,t,r){"use strict";var i=r(19);t.name="floor",t.factory=function(e,t,r,n){var a=n("floor",{number:Math.floor,Complex:function(t){return new e.Complex(Math.floor(t.re),Math.floor(t.im))},BigNumber:function(e){return e.floor()},Fraction:function(e){return e.floor()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\left\\lfloor${args[0]}\\right\\rfloor",a}},function(e,t,r){"use strict";function i(e,t){if(!a(e)||!a(t))throw new Error("Parameters in function gcd must be integer numbers");for(var r;0!=t;)r=e%t,e=t,t=r;return e<0?-e:e}var a=r(6).isInteger;t.name="gcd",t.factory=function(e,t,n,a){var s=n(r(50)),u=n(r(52)),c=n(r(53)),f=n(r(54)),l=n(r(55)),p=n(r(56)),m=a("gcd",{"number, number":i,"BigNumber, BigNumber":function(t,r){if(!t.isInt()||!r.isInt())throw new Error("Parameters in function gcd must be integer numbers");for(var n=new e.BigNumber(0);!r.isZero();){var i=t.mod(r);t=r,r=i}return t.lt(n)?t.neg():t},"Fraction, Fraction":function(e,t){return e.gcd(t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,m):u(t,e,m,!0):"sparse"===t.storage()?u(e,t,m,!1):l(e,t,m);return e},"Array, Array":function(e,t){return m(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return m(s(e),t)},"Matrix, Array":function(e,t){return m(e,s(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,m,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,m,!0);return t},"Array, number | BigNumber":function(e,t){return p(s(e),t,m,!1).valueOf()},"number | BigNumber, Array":function(e,t){return p(s(t),e,m,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,r){for(var n=m(e,t),i=0;i<r.length;i++)n=m(n,r[i]);return n}});return m.toTex="\\gcd\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(39).flatten;t.name="hypot",t.factory=function(e,t,n,a){var s=n(r(85)),u=n(r(51)),c=n(r(78)),f=n(r(77)),l=n(r(362)),p=n(r(58)),m=n(r(363)),h=a("hypot",{"... number | BigNumber":function(e){for(var t=0,r=0,n=0;n<e.length;n++){var i=s(e[n]);p(r,i)?(t=f(t,f(c(r,i),c(r,i))),t=u(t,1),r=i):t=u(t,m(i)?f(c(i,r),c(i,r)):i)}return f(r,l(t))},Array:function(e){return h.apply(h,i(e))},Matrix:function(e){return h.apply(h,i(e.toArray()))}});return h.toTex="\\hypot\\left(${args}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="sqrt",t.factory=function(e,t,r,n){function a(r){return 0<=r||t.predictable?Math.sqrt(r):o(new e.Complex(r,0))}function o(t){var i=Math.sqrt(t.re*t.re+t.im*t.im),r=0<=t.re?.5*Math.sqrt(2*(i+t.re)):Math.abs(t.im)/Math.sqrt(2*(i-t.re)),i=t.re<=0?.5*Math.sqrt(2*(i-t.re)):Math.abs(t.im)/Math.sqrt(2*(i+t.re));return 0<=t.im?new e.Complex(r,i):new e.Complex(r,-i)}var s=n("sqrt",{number:a,Complex:o,BigNumber:function(e){return!e.isNegative()||t.predictable?e.sqrt():a(e.toNumber())},"Array | Matrix":function(e){return i(e,s,!0)},Unit:function(e){return e.pow(.5)}});return s.toTex="\\sqrt{${args[0]}}",s}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isPositive",t.factory=function(e,t,r,n){var a=n("isPositive",{number:function(e){return 0<e},BigNumber:function(e){return!e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return 0<e.s&&0<e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";function i(e,t){if(!a(e)||!a(t))throw new Error("Parameters in function lcm must be integer numbers");if(0==e||0==t)return 0;for(var r,n=e*t;0!=t;)t=e%(r=t),e=r;return Math.abs(n/e)}var a=r(6).isInteger;t.name="lcm",t.factory=function(e,t,n,a){var s=n(r(50)),u=n(r(354)),c=n(r(365)),f=n(r(84)),l=n(r(55)),p=n(r(56)),m=a("lcm",{"number, number":i,"BigNumber, BigNumber":function(t,r){if(!t.isInt()||!r.isInt())throw new Error("Parameters in function lcm must be integer numbers");if(t.isZero()||r.isZero())return new e.BigNumber(0);for(var n=t.times(r);!r.isZero();){var i=r;r=t.mod(i),t=i}return n.div(t).abs()},"Fraction, Fraction":function(t,r){return 0===t.n&&0===r.n?new e.Fraction(0):t.mul(r).abs().div(t.gcd(r))},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,m):u(t,e,m,!0):"sparse"===t.storage()?u(e,t,m,!1):l(e,t,m);return e},"Array, Array":function(e,t){return m(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return m(s(e),t)},"Matrix, Array":function(e,t){return m(e,s(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,m,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,m,!0);return t},"Array, number | BigNumber":function(e,t){return p(s(e),t,m,!1).valueOf()},"number | BigNumber, Array":function(e,t){return p(s(t),e,m,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,r){for(var n=m(e,t),i=0;i<r.length;i++)n=m(n,r[i]);return n}});return m.toTex="\\mathrm{${name}}\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(366),a=r(41);t.name="algorithm06",t.factory=function(e,t,n,o){var s=n(r(47)),u=e.SparseMatrix;return function(e,t,r){var n=e._values,c=e._size,f=e._datatype,l=t._values,p=t._size,m=t._datatype;if(c.length!==p.length)throw new a(c.length,p.length);if(c[0]!==p[0]||c[1]!==p[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+p+")");var h,p=c[0],v=c[1],d=s,y=0,x=r;"string"==typeof f&&f===m&&(d=o.find(s,[h=f,h]),y=o.convert(0,h),x=o.find(r,[h,h]));for(var b=n&&l?[]:void 0,w=[],N=[],E=new u({values:b,index:w,ptr:N,size:[p,v],datatype:h}),M=b?[]:void 0,A=[],_=[],O=0;O<v;O++){N[O]=w.length;var T=O+1;if(i(e,O,A,M,_,T,E,x),i(t,O,A,M,_,T,E,x),M)for(var C=N[O];C<w.length;){var S=w[C];_[S]!==T||d(S=M[S],y)?w.splice(C,1):(b.push(S),C++)}else for(var B=N[O];B<w.length;)_[w[B]]!==T?w.splice(B,1):B++}return N[v]=w.length,E}}},function(e,t){"use strict";e.exports=function(e,t,r,n,i,a,o,s,u,c,f){var l,p,m,h,g=e._values,v=e._index,e=e._ptr,y=o._index;if(n)for(p=e[t],m=e[t+1],l=p;l<m;l++)r[h=v[l]]!==a?(r[h]=a,y.push(h),c?(n[h]=u?s(g[l],f):s(f,g[l]),i[h]=a):n[h]=g[l]):(n[h]=u?s(g[l],n[h]):s(n[h],g[l]),i[h]=a);else for(p=e[t],m=e[t+1],l=p;l<m;l++)r[h=v[l]]!==a?(r[h]=a,y.push(h)):i[h]=a}},function(e,t,r){"use strict";var i=r(19);t.name="log10",t.factory=function(e,t,r,n){function a(t){return new e.Complex(Math.log(Math.sqrt(t.re*t.re+t.im*t.im))/Math.LN10,Math.atan2(t.im,t.re)/Math.LN10)}var o=n("log10",{number:function(r){return 0<=r||t.predictable?Math.log(r)/Math.LN10:o(new e.Complex(r,0))},Complex:a,BigNumber:function(r){return!r.isNegative()||t.predictable?r.log():a(new e.Complex(r.toNumber(),0))},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\log_{10}\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";t.name="mod",t.factory=function(e,t,n,i){var o=n(r(50)),s=r(29),u=n(r(354)),c=n(r(59)),f=n(r(76)),l=n(r(84)),p=n(r(61)),m=n(r(55)),h=n(r(56)),g=i("mod",{"number, number":function(e,t){if(0<t)return e-t*Math.floor(e/t);if(0===t)return e;throw new Error("Cannot calculate mod for a negative divisor")},"BigNumber, BigNumber":function(e,t){return t.isZero()?e:e.mod(t)},"Fraction, Fraction":function(e,t){return e.mod(t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,g,!1):u(t,e,g,!0):"sparse"===t.storage()?c(e,t,g,!1):m(e,t,g);return e},"Array, Array":function(e,t){return g(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return g(o(e),t)},"Matrix, Array":function(e,t){return g(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:h)(e,t,g,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?p:h)(t,e,g,!0);return t},"Array, any":function(e,t){return h(o(e),t,g,!1).valueOf()},"any, Array":function(e,t){return h(o(t),e,g,!0).valueOf()}});return g.toTex="\\left(${args[0]}"+s.operators.mod+"${args[1]}\\right)",g}},function(e,t,r){"use strict";t.name="norm",t.factory=function(e,t,n,i){function a(e,t){var n,i,h,d,y,x,b,r=e.size();if(1==r.length){if(t===Number.POSITIVE_INFINITY||"inf"===t)return n=0,e.forEach(function(e){e=o(e);p(e,n)&&(n=e)},!0),n;if(t===Number.NEGATIVE_INFINITY||"-inf"===t)return e.forEach(function(e){e=o(e);i&&!m(e,i)||(i=e)},!0),i||0;if("fro"===t)return a(e,2);if("number"!=typeof t||isNaN(t))throw new Error("Unsupported parameter value");return l(t,0)?Number.POSITIVE_INFINITY:(h=0,e.forEach(function(e){h=s(u(o(e),t),h)},!0),u(h,1/t))}if(2==r.length){if(1===t)return d=[],y=0,e.forEach(function(e,t){t=t[1],e=s(d[t]||0,o(e));p(e,y)&&(y=e),d[t]=e},!0),y;if(t===Number.POSITIVE_INFINITY||"inf"===t)return x=[],b=0,e.forEach(function(e,t){t=t[0],e=s(x[t]||0,o(e));p(e,b)&&(b=e),x[t]=e},!0),b;if("fro"===t)return c(g(f(v(e),e)));if(2===t)throw new Error("Unsupported parameter value, missing implementation of matrix singular value decomposition");throw new Error("Unsupported parameter value")}}var o=n(r(85)),s=n(r(49)),u=n(r(79)),c=n(r(362)),f=n(r(83)),l=n(r(47)),p=n(r(62)),m=n(r(58)),h=n(r(50)),g=n(r(370)),v=n(r(329)),n=i.find(o,["Complex"]),y=i("norm",{number:Math.abs,Complex:n,BigNumber:function(e){return e.abs()},"boolean | null":function(e){return Math.abs(e)},Array:function(e){return a(h(e),2)},Matrix:function(e){return a(e,2)},"number | Complex | BigNumber | boolean | null, number | BigNumber | string":function(e){return y(e)},"Array, number | BigNumber | string":function(e,t){return a(h(e),t)},"Matrix, number | BigNumber | string":a});return y.toTex={1:"\\left\\|${args[0]}\\right\\|",2:"\\mathrm{${name}}\\left(${args}\\right)"},y}},function(e,t,r){"use strict";var i=r(3).clone,a=r(23).format;t.name="trace",t.factory=function(e,t,n,o){var s=n(r(50)),u=n(r(49)),c=o("trace",{Array:function(e){return c(s(e))},Matrix:function(e){var t;switch(e.storage()){case"dense":t=f(e);break;case"sparse":t=l(e)}return t},any:i}),f=function(e){var t=e._size,r=e._data;switch(t.length){case 1:if(1==t[0])return i(r[0]);throw new RangeError("Matrix must be square (size: "+a(t)+")");case 2:var n=t[0];if(n!==t[1])throw new RangeError("Matrix must be square (size: "+a(t)+")");for(var s=0,c=0;c<n;c++)s=u(s,r[c][c]);return s;default:throw new RangeError("Matrix must be two dimensional (size: "+a(t)+")")}},l=function(e){var t=e._values,r=e._index,n=e._ptr,e=e._size,o=e[0],s=e[1];if(o!==s)throw new RangeError("Matrix must be square (size: "+a(e)+")");var c=0;if(0<t.length)for(var f=0;f<s;f++)for(var l=n[f],p=n[f+1],m=l;m<p;m++){var h=r[m];if(h===f){c=u(c,t[m]);break}if(f<h)break}return c};return c.toTex="\\mathrm{tr}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";function i(e,t){var r=t<0;if(0===(t=r?-t:t))throw new Error("Root must be non-zero");if(e<0&&Math.abs(t)%2!=1)throw new Error("Root must be odd when a is negative.");return 0==e?0:isFinite(e)?(t=Math.pow(Math.abs(e),1/t),t=e<0?-t:t,r?1/t:t):r?0:e}function a(e,t){if(t<0)throw new Error("Root must be greater than zero");if(0===t)throw new Error("Root must be non-zero");if(t%1!=0)throw new Error("Root must be an integer");for(var r=e.toPolar(),n=[],i=Math.pow(r.r,1/t),a=0;a<t;a++)n.push({r:i,phi:(r.phi+2*Math.PI*a)/t});return n}t.name="nthRoot",t.factory=function(e,t,n,o){function s(t,r){var n=e.BigNumber.precision,i=e.BigNumber.constructor({precision:n+2}),a=new e.BigNumber(0),i=new i(1),s=r.isNegative();if((r=s?r.neg():r).isZero())throw new Error("Root must be non-zero");if(t.isNegative()&&!r.abs().mod(2).equals(1))throw new Error("Root must be odd when a is negative.");return t.isZero()?a:t.isFinite()?(r=t.abs().pow(i.div(r)),r=t.isNeg()?r.neg():r,new e.BigNumber((s?i.div(r):r).toPrecision(n))):s?a:t}var u=n(r(50)),c=n(r(52)),f=n(r(354)),l=n(r(365)),p=n(r(84)),m=n(r(55)),h=n(r(56)),g=o("nthRoot",{number:function(e){return i(e,2)},"number, number":i,BigNumber:function(t){return s(t,new e.BigNumber(2))},Complex:function(e){return a(e,2)},"Complex, number":a,"BigNumber, BigNumber":s,"Array | Matrix":function(e){return g(e,2)},"Matrix, Matrix":function(e,t){var r;if("sparse"===e.storage())if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=l(e,t,g)}else r=f(t,e,g,!0);else if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=c(e,t,g,!1)}else r=m(e,t,g);return r},"Array, Array":function(e,t){return g(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return g(u(e),t)},"Matrix, Array":function(e,t){return g(e,u(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?p:h)(e,t,g,!1);return e},"number | BigNumber, Matrix":function(e,t){var r;if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=p(t,e,g,!0)}else r=h(t,e,g,!0);return r},"Array, number | BigNumber":function(e,t){return g(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return g(e,u(t)).valueOf()}});return g.toTex="\\sqrt[${args[1]}]{${args[0]}}",g}},function(e,t,r){"use strict";function i(e,t){return parseFloat(o(e,t))}var a=r(6).isInteger,o=r(6).toFixed,s=r(19),u="Number of decimals in function round must be an integer";t.name="round",t.factory=function(e,t,n,o){var c=n(r(50)),f=n(r(47)),l=n(r(373)),p=n(r(84)),m=n(r(61)),h=n(r(56)),g=o("round",{number:Math.round,"number, number":function(e,t){if(!a(t))throw new TypeError(u);if(t<0||15<t)throw new Error("Number of decimals in function round must be in te range of 0-15");return i(e,t)},Complex:function(t){return new e.Complex(Math.round(t.re),Math.round(t.im))},"Complex, number":function(t,r){return new e.Complex(i(t.re,r),i(t.im,r))},"Complex, BigNumber":function(t,r){if(r.isInteger())return r=r.toNumber(),new e.Complex(i(t.re,r),i(t.im,r));throw new TypeError(u)},"number, BigNumber":function(t,r){if(r.isInteger())return new e.BigNumber(t).toDecimalPlaces(r.toNumber());throw new TypeError(u)},BigNumber:function(e){return e.toDecimalPlaces(0)},"BigNumber, BigNumber":function(e,t){if(t.isInteger())return e.toDecimalPlaces(t.toNumber());throw new TypeError(u)},Fraction:function(e){return e.round()},"Array | Matrix":function(e){return s(e,g,!0)},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?p:h)(e,t,g,!1);return e},"number | Complex | BigNumber, Matrix":function(e,t){return f(e,0)?l(t.size(),t.storage()):("sparse"===t.storage()?m:h)(t,e,g,!0)},"Array, number | BigNumber":function(e,t){return h(c(e),t,g,!1).valueOf()},"number | Complex | BigNumber, Array":function(e,t){return h(c(t),e,g,!0).valueOf()}});return g.toTex={1:"\\left\\lfloor${args[0]}\\right\\rceil",2:"\\mathrm{${name}}\\left(${args}\\right)"},g}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).resize;t.name="zeros",t.factory=function(e,t,n,o){function s(t,r){var i=function(e){var t=!1;return e.forEach(function(e,r,n){e&&!0===e.isBigNumber&&(t=!0,n[r]=e.toNumber())}),t}(t)?new e.BigNumber(0):0;return c(t),r?(r=f(r),0<t.length?r.resize(t,i):r):(r=[],0<t.length?a(r,t,i):r)}function c(e){e.forEach(function(e){if("number"!=typeof e||!i(e)||e<0)throw new Error("Parameters in function zeros must be positive integers")})}var f=n(r(50));return(n=o("zeros",{"":function(){return"array"===t.matrix?s([]):s([],"default")},"...number | BigNumber | string":function(e){var n;return"string"==typeof e[e.length-1]?(n=e.pop(),s(e,n)):"array"===t.matrix?s(e):s(e,"default")},Array:s,Matrix:function(e){var t=e.storage();return s(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6),a=r(19);t.name="sign",t.factory=function(e,t,r,n){var o=n("sign",{number:i.sign,Complex:function(t){var r=Math.sqrt(t.re*t.re+t.im*t.im);return new e.Complex(t.re/r,t.im/r)},BigNumber:function(t){return new e.BigNumber(t.cmp(0))},Fraction:function(t){return new e.Fraction(t.s)},"Array | Matrix":function(e){return a(e,o,!0)},Unit:function(e){return o(e.value)}});return o.toTex="\\mathrm{${name}}\\left(${args}\\right)",o}},function(e,t,r){"use strict";var i=r(19);t.name="square",t.factory=function(e,t,r,n){var a=n("square",{number:function(e){return e*e},Complex:function(t){return new e.Complex(t.re*t.re-t.im*t.im,t.re*t.im+t.im*t.re)},BigNumber:function(e){return e.times(e)},Fraction:function(e){return e.mul(e)},"Array | Matrix":function(e){return i(e,a,!0)},Unit:function(e){return e.pow(2)}});return a.toTex="\\left(${args[0]}\\right)^2",a}},function(e,t,r){"use strict";var i=r(19);t.name="unaryPlus",t.factory=function(e,t,n,a){var o=r(29),s=a("unaryPlus",{number:function(e){return e},Complex:function(e){return e.clone()},BigNumber:function(e){return e},Fraction:function(e){return e},Unit:function(e){return e.clone()},"Array | Matrix":function(e){return i(e,s,!0)},"boolean | string | null":function(r){return"bignumber"==t.number?new e.BigNumber(+r):+r}});return s.toTex=o.operators.unaryPlus+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="xgcd",t.factory=function(e,t,n,a){var u=n(r(50));return(n=a("xgcd",{"number, number":function(e,r){var n,a,o,p,s=0,c=1,f=1,l=0;if(!i(e)||!i(r))throw new Error("Parameters in function xgcd must be integer numbers");for(;r;)o=e%r,s=c-(a=Math.floor(e/r))*(n=s),c=n,f=l-a*(n=f),l=n,e=r,r=o;return p=e<0?[-e,-c,-l]:[e,e?c:0,l],"array"===t.matrix?p:u(p)},"BigNumber, BigNumber":function(r,n){var i,a,o,s=new e.BigNumber(0),c=new e.BigNumber(0),f=new e.BigNumber(1),l=new e.BigNumber(1),p=new e.BigNumber(0);if(!r.isInt()||!n.isInt())throw new Error("Parameters in function xgcd must be integer numbers");for(;!n.isZero();)a=r.div(n).floor(),o=r.mod(n),i=c,c=f.minus(a.times(c)),f=i,i=l,l=p.minus(a.times(l)),p=i,r=n,n=o;return s=r.lt(s)?[r.neg(),f.neg(),p.neg()]:[r,r.isZero()?0:f,p],"array"===t.matrix?s:u(s)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(379),r(383),r(384),r(386),r(388),r(391),r(393)]},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(380);t.name="bitAnd",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(354)),f=n(r(365)),l=n(r(84)),p=n(r(55)),m=n(r(56)),h=o("bitAnd",{"number, number":function(e,t){if(i(e)&&i(t))return e&t;throw new Error("Integers expected in function bitAnd")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h,!1):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitAnd+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitAnd");var r=e.constructor;if(e.isNaN()||t.isNaN())return new r(NaN);if(e.isZero()||t.eq(-1)||e.eq(t))return e;if(t.isZero()||e.eq(-1))return t;if(!e.isFinite()||!t.isFinite()){if(!e.isFinite()&&!t.isFinite())return e.isNegative()==t.isNegative()?e:new r(0);if(!e.isFinite())return t.isNegative()?e:e.isNegative()?new r(0):t;if(!t.isFinite())return e.isNegative()?t:t.isNegative()?new r(0):e}return n(e,t,function(e,t){return e&t})}},function(e,t,r){function n(e){for(var t=e.c,r=t[0]+"",n=1;n<t.length;++n){for(var i=t[n]+"",a=7-i.length;a--;)i="0"+i;r+=i}for(o=r.length-1;"0"==r.charAt(o);--o);var s=e.e,u=r.slice(0,o+1||1),e=u.length;if(0<s)if(++s>e)for(s-=e;s--;u+="0");else s<e&&(u=u.slice(0,s)+"."+u.slice(s));for(var f=[0],n=0;n<u.length;){for(var l=f.length;l--;f[l]*=10);f[0]+=u.charAt(n++)<<0;for(var o=0;o<f.length;++o)1<f[o]&&(null==f[o+1]&&(f[o+1]=0),f[o+1]+=f[o]>>1,f[o]&=1)}return f.reverse()}var i=r(382);e.exports=function(e,t,r){var l,p,s=e.constructor,u=+(e.s<0),c=+(t.s<0);if(u)for(var a=n(i(e)),f=0;f<a.length;++f)a[f]^=1;else a=n(e);if(c)for(var o=n(i(t)),f=0;f<o.length;++f)o[f]^=1;else o=n(t);var m=a.length<=o.length?(l=a,p=o,u):(l=o,p=a,c),h=l.length,g=p.length,v=1^r(u,c),d=new s(1^v),y=s.ONE,x=new s(2),e=s.precision;for(s.config({precision:1e9});0<h;)r(l[--h],p[--g])==v&&(d=d.plus(y)),y=y.times(x);for(;0<g;)r(m,p[--g])==v&&(d=d.plus(y)),y=y.times(x);return s.config({precision:e}),0==v&&(d.s=-d.s),d}},function(e,t){e.exports=function(e){if(e.isFinite()&&!e.isInteger())throw new Error("Integer expected in function bitNot");var t=e.constructor,r=t.precision;return t.config({precision:1e9}),(e=e.plus(t.ONE)).s=-e.s||null,t.config({precision:r}),e}},function(e,t,r){"use strict";var i=r(19),a=r(382),o=r(6).isInteger;t.name="bitNot",t.factory=function(e,t,n,s){var u=r(29),c=s("bitNot",{number:function(e){if(o(e))return~e;throw new Error("Integer expected in function bitNot")},BigNumber:a,"Array | Matrix":function(e){return i(e,c)}});return c.toTex=u.operators.bitNot+"\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(385);t.name="bitOr",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(52)),f=n(r(53)),l=n(r(54)),p=n(r(55)),m=n(r(56)),h=o("bitOr",{"number, number":function(e,t){if(i(e)&&i(t))return e|t;throw new Error("Integers expected in function bitOr")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitOr+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitOr");var r=e.constructor;return e.isNaN()||t.isNaN()?new r(NaN):(r=new r(-1),e.isZero()||t.eq(r)||e.eq(t)?t:t.isZero()||e.eq(r)?e:e.isFinite()&&t.isFinite()?n(e,t,function(e,t){return e|t}):!e.isFinite()&&!e.isNegative()&&t.isNegative()||e.isNegative()&&!t.isNegative()&&!t.isFinite()?r:e.isNegative()&&t.isNegative()?e.isFinite()?e:t:e.isFinite()?t:e)}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(387);t.name="bitXor",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(59)),f=n(r(60)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=o("bitXor",{"number, number":function(e,t){if(i(e)&&i(t))return e^t;throw new Error("Integers expected in function bitXor")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitXor+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381),i=r(382);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitXor");var a,r=e.constructor;return e.isNaN()||t.isNaN()?new r(NaN):e.isZero()?t:t.isZero()?e:e.eq(t)?new r(0):(a=new r(-1),e.eq(a)?i(t):t.eq(a)?i(e):e.isFinite()&&t.isFinite()?n(e,t,function(e,t){return e^t}):e.isFinite()||t.isFinite()?new r(e.isNegative()==t.isNegative()?1/0:-1/0):a)}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(389);t.name="leftShift",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(47)),f=n(r(373)),l=n(r(52)),p=n(r(354)),m=n(r(390)),h=n(r(54)),g=n(r(84)),v=n(r(55)),d=n(r(56)),y=o("leftShift",{"number, number":function(e,t){if(i(e)&&i(t))return e<<t;throw new Error("Integers expected in function leftShift")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?m(e,t,y,!1):p(t,e,y,!0):"sparse"===t.storage()?l(e,t,y,!1):v(e,t,y);return e},"Array, Array":function(e,t){return y(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return y(u(e),t)},"Matrix, Array":function(e,t){return y(e,u(t))},"Matrix, number | BigNumber":function(e,t){return c(t,0)?e.clone():("sparse"===e.storage()?g:d)(e,t,y,!1)},"number | BigNumber, Matrix":function(e,t){return c(e,0)?f(t.size(),t.storage()):("sparse"===t.storage()?h:d)(t,e,y,!0)},"Array, number | BigNumber":function(e,t){return y(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return y(e,u(t)).valueOf()}});return y.toTex="\\left(${args[0]}"+s.operators.leftShift+"${args[1]}\\right)",y}},function(e,t){e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function leftShift");var r=e.constructor;return e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero()?new r(NaN):e.isZero()||t.isZero()?e:e.isFinite()||t.isFinite()?t.lt(55)?e.times(Math.pow(2,t.toNumber())+""):e.times(new r(2).pow(t)):new r(NaN)}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm08",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");if(!n||!p)throw new Error("Cannot perform operation on Pattern Sparse Matrices");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var O=[],T=[],C=[],f=new s({values:O,index:T,ptr:C,size:[g,x],datatype:d}),z=[],B=[],k=0;k<x;k++){C[k]=T.length;for(var I=k+1,M=c[k],A=c[k+1],E=M;E<A;E++)B[_=u[E]]=I,z[_]=n[E],T.push(_);for(M=h[k],A=h[k+1],E=M;E<A;E++)B[_=m[E]]===I&&(z[_]=N(z[_],p[E]));for(E=C[k];E<T.length;){var _,R=z[_=T[E]];b(R,w)?T.splice(E,1):(O.push(R),E++)}}return C[x]=T.length,f}}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(392);t.name="rightArithShift",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(47)),f=n(r(373)),l=n(r(52)),p=n(r(354)),m=n(r(390)),h=n(r(54)),g=n(r(84)),v=n(r(55)),d=n(r(56)),y=o("rightArithShift",{"number, number":function(e,t){if(i(e)&&i(t))return e>>t;throw new Error("Integers expected in function rightArithShift")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?m(e,t,y,!1):p(t,e,y,!0):"sparse"===t.storage()?l(e,t,y,!1):v(e,t,y);return e},"Array, Array":function(e,t){return y(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return y(u(e),t)},"Matrix, Array":function(e,t){return y(e,u(t))},"Matrix, number | BigNumber":function(e,t){return c(t,0)?e.clone():("sparse"===e.storage()?g:d)(e,t,y,!1)},"number | BigNumber, Matrix":function(e,t){return c(e,0)?f(t.size(),t.storage()):("sparse"===t.storage()?h:d)(t,e,y,!0)},"Array, number | BigNumber":function(e,t){return y(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return y(e,u(t)).valueOf()}});return y.toTex="\\left(${args[0]}"+s.operators.rightArithShift+"${args[1]}\\right)",y}},function(e,t){e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function rightArithShift");var r=e.constructor;return e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero()?new r(NaN):e.isZero()||t.isZero()?e:t.isFinite()?(t.lt(55)?e.div(Math.pow(2,t.toNumber())+""):e.div(new r(2).pow(t))).floor():new r(e.isNegative()?-1:e.isFinite()?0:NaN)}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="rightLogShift",t.factory=function(e,t,n,a){var o=r(29),s=n(r(50)),u=n(r(47)),c=n(r(373)),f=n(r(52)),l=n(r(354)),p=n(r(390)),m=n(r(54)),h=n(r(84)),g=n(r(55)),v=n(r(56)),d=a("rightLogShift",{"number, number":function(e,t){if(i(e)&&i(t))return e>>>t;throw new Error("Integers expected in function rightLogShift")},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?p(e,t,d,!1):l(t,e,d,!0):"sparse"===t.storage()?f(e,t,d,!1):g(e,t,d);return e},"Array, Array":function(e,t){return d(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return d(s(e),t)},"Matrix, Array":function(e,t){return d(e,s(t))},"Matrix, number | BigNumber":function(e,t){return u(t,0)?e.clone():("sparse"===e.storage()?h:v)(e,t,d,!1)},"number | BigNumber, Matrix":function(e,t){return u(e,0)?c(t.size(),t.storage()):("sparse"===t.storage()?m:v)(t,e,d,!0)},"Array, number | BigNumber":function(e,t){return d(s(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return d(e,s(t)).valueOf()}});return d.toTex="\\left(${args[0]}"+o.operators.rightLogShift+"${args[1]}\\right)",d}},function(e,t,r){e.exports=[r(395),r(401),r(396),r(402)]},function(e,t,r){"use strict";t.name="bellNumbers",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(396)),s=n(r(350)),u=n(r(400));return(n=i("bellNumbers",{"number | BigNumber":function(e){if(!u(e)||s(e))throw new TypeError("Non-negative integer value expected in function bellNumbers");for(var t=0,r=0;r<=e;r++)t=a(t,o(e,r));return t}})).toTex="\\mathrm{B}_{${args[0]}}",n}},function(e,t,r){"use strict";t.name="stirlingS2",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(74)),s=n(r(83)),u=n(r(310)),c=n(r(79)),f=n(r(397)),l=n(r(399)),p=n(r(350)),m=n(r(400)),h=n(r(62));return(n=i("stirlingS2",{"number | BigNumber, number | BigNumber":function(e,t){if(!m(e)||p(e)||!m(t)||p(t))throw new TypeError("Non-negative integer value expected in function stirlingS2");if(h(t,e))throw new TypeError("k must be less than or equal to n in function stirlingS2");for(var r=f(t),n=0,i=0;i<=t;i++)var g=c(-1,o(t,i)),v=l(t,i),d=c(i,e),n=a(n,s(s(v,d),g));return u(n,r)}})).toTex="\\mathrm{S}\\left(${args[0]},${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(19);r(93),t.name="factorial",t.factory=function(e,t,n,a){var o=n(r(398)),n=r(29),u=a("factorial",{number:function(e){if(e<0)throw new Error("Value must be non-negative");return o(e+1)},BigNumber:function(e){if(e.isNegative())throw new Error("Value must be non-negative");return o(e.plus(1))},"Array | Matrix":function(e){return i(e,u)}});return u.toTex="\\left(${args[0]}\\right)"+n.operators.factorial,u}},function(e,t,r){"use strict";var i=r(19),a=r(6).isInteger,o=4.7421875,s=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3399464998481189e-20,4652362892704858e-20,-9837447530487956e-20,.0001580887032249125,-.00021026444172410488,.00021743961811521265,-.0001643181065367639,8441822398385275e-20,-26190838401581408e-21,36899182659531625e-22];t.name="gamma",t.factory=function(e,t,n,u){function c(r){if(r.isZero())return new e.BigNumber(1);for(var n=t.precision+(0|Math.log(r.toNumber())),a=new(e.BigNumber.constructor({precision:n}))(r),o=r.toNumber()-1;1<o;)a=a.times(o),o--;return new e.BigNumber(a.toPrecision(e.BigNumber.precision))}var f=n(r(83)),l=n(r(79)),p=u("gamma",{number:function(e){var u,c,f,l;if(a(e)){if(e<=0)return isFinite(e)?1/0:NaN;if(171<e)return 1/0;for(var n=e-2,i=e-1;1<n;)i*=n,n--;return i=0==i?1:i}if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*p(1-e));if(171.35<=e)return 1/0;if(85<e)return l=(f=(c=(u=e*e)*e)*e)*e,Math.sqrt(2*Math.PI/e)*Math.pow(e/Math.E,e)*(1+1/(12*e)+1/(288*u)-139/(51840*c)-571/(2488320*f)+163879/(209018880*l)+5246819/(75246796800*l*e));--e;for(var r=s[0],m=1;m<s.length;++m)r+=s[m]/(e+m);return u=e+o+.5,Math.sqrt(2*Math.PI)*Math.pow(u,e+.5)*Math.exp(-u)*r},Complex:function(t){if(0==t.im)return p(t.re);t=new e.Complex(t.re-1,t.im);for(var n=new e.Complex(s[0],0),i=1;i<s.length;++i){var a=t.re+i,u=a*a+t.im*t.im;0!=u?(n.re+=s[i]*a/u,n.im+=-(s[i]*t.im)/u):n.re=s[i]<0?-1/0:1/0}var r=new e.Complex(t.re+o+.5,t.im),c=Math.sqrt(2*Math.PI),m=(t.re+=.5,l(r,t)),c=(0==m.im?m.re*=c:(0!=m.re&&(m.re*=c),m.im*=c),Math.exp(-r.re));return r.re=c*Math.cos(-r.im),r.im=c*Math.sin(-r.im),f(f(m,r),n)},BigNumber:function(t){if(t.isInteger())return t.isNegative()||t.isZero()?new e.BigNumber(1/0):c(t.minus(1));if(t.isFinite())throw new Error("Integer BigNumber expected");return new e.BigNumber(t.isNegative()?NaN:1/0)},"Array | Matrix":function(e){return i(e,p)}});return p.toTex="\\Gamma\\left(${args[0]}\\right)",p}},function(e,t,r){"use strict";function i(e){return e.isInteger()&&e.gte(0)}var a=r(6).isInteger;t.name="combinations",t.factory=function(e,t,r,n){return(n=n("combinations",{"number, number":function(e,t){var r,n,i;if(!a(e)||e<0)throw new TypeError("Positive integer value expected in function combinations");if(!a(t)||t<0)throw new TypeError("Positive integer value expected in function combinations");if(e<t)throw new TypeError("k must be less than or equal to n");for(r=Math.max(t,e-t),i=n=1;i<=e-r;i++)n=n*(r+i)/i;return n},"BigNumber, BigNumber":function(t,r){var n,a,o,s,u=new e.BigNumber(1);if(!i(t)||!i(r))throw new TypeError("Positive integer value expected in function combinations");if(r.gt(t))throw new TypeError("k must be less than n in function combinations");for(n=t.minus(r),r.lt(n)&&(n=r),o=a=u,s=t.minus(n);o.lte(s);o=o.plus(1))a=a.times(n.plus(o)).dividedBy(o);return a}})).toTex="\\binom{${args[0]}}{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(19),a=r(6);t.name="isInteger",t.factory=function(e,t,r,n){var o=n("isInteger",{number:a.isInteger,BigNumber:function(e){return e.isInt()},Fraction:function(e){return 1===e.d&&isFinite(e.n)},"Array | Matrix":function(e){return i(e,o)}});return o}},function(e,t,r){"use strict";t.name="composition",t.factory=function(e,t,n,i){var a=n(r(399)),o=n(r(51)),s=n(r(363)),u=n(r(400)),c=n(r(62));return(n=i("composition",{"number | BigNumber, number | BigNumber":function(e,t){if(!(u(e)&&s(e)&&u(t)&&s(t)))throw new TypeError("Positive integer value expected in function composition");if(c(t,e))throw new TypeError("k must be less than or equal to n in function composition");return a(o(e,-1),o(t,-1))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="catalan",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(310)),s=n(r(83)),u=n(r(399)),c=n(r(350)),f=n(r(400));return(n=i("catalan",{"number | BigNumber":function(e){if(!f(e)||c(e))throw new TypeError("Non-negative integer value expected in function catalan");return o(u(s(e,2),e),a(e,1))}})).toTex="\\mathrm{C}_{${args[0]}}",n}},function(e,t,r){e.exports=[r(404),r(405),r(406),r(407)]},function(e,t,r){"use strict";var i=r(19);t.name="arg",t.factory=function(e,t,r,n){var a=n("arg",{number:function(e){return Math.atan2(0,e)},Complex:function(e){return Math.atan2(e.im,e.re)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\arg\\left(${args[0]}\\right)",a}},function(e,t,r){"use strict";var i=r(19);t.name="conj",t.factory=function(e,t,r,n){var a=n("conj",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(t){return new e.Complex(t.re,-t.im)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\left(${args[0]}\\right)^*",a}},function(e,t,r){"use strict";var i=r(19);t.name="im",t.factory=function(e,t,r,n){var a=n("im",{number:function(e){return 0},BigNumber:function(t){return new e.BigNumber(0)},Complex:function(e){return e.im},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\Im\\left\\lbrace${args[0]}\\right\\rbrace",a}},function(e,t,r){"use strict";var i=r(19);t.name="re",t.factory=function(e,t,r,n){var a=n("re",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(e){return e.re},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\Re\\left\\lbrace${args[0]}\\right\\rbrace",a}},function(e,t,r){e.exports=[r(409),r(410)]},function(e,t,r){"use strict";function i(e){return 2===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]}function a(e){return 3===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]&&"number"==typeof e[2]}t.name="intersect",t.factory=function(e,t,n,f){var l=n(r(50)),p=f("intersect",{"Array, Array, Array":function(e,t,r){if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(!a(t))throw new TypeError("Array with 3 numbers expected for second argument");if(function(e){return 4===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]&&"number"==typeof e[2]&&"number"==typeof e[3]}(r))return function(e,t,r,n,i,a,o,s,u,c){c=(c-e*o-t*s-r*u)/(n*o+i*s+a*u-e-t-r);return[e+c*(n-e),t+c*(i-t),r+c*(a-r)]}(e[0],e[1],e[2],t[0],t[1],t[2],r[0],r[1],r[2],r[3]);throw new TypeError("Array with 4 numbers expected as third argument")},"Array, Array, Array, Array":function(e,t,r,n){if(2===e.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(!i(t))throw new TypeError("Array with 2 numbers expected for second argument");if(!i(r))throw new TypeError("Array with 2 numbers expected for third argument");if(i(n))return function(e,t,r,n,i,a,o,s){var u=(e-i)*(o-i)+(t-a)*(s-a),c=(o-i)*(r-e)+(s-a)*(n-t),l=(o-i)*(o-i)+(s-a)*(s-a),m=(u*c-((e-i)*(r-e)+(t-a)*(n-t))*l)/(((r-e)*(r-e)+(n-t)*(n-t))*l-c*c),u=(u+m*c)/l,c=e+m*(r-e),l=t+m*(n-t),r=a+u*(s-a);return c===i+u*(o-i)&&l===r?[c,l]:null}(e[0],e[1],t[0],t[1],r[0],r[1],n[0],n[1]);throw new TypeError("Array with 2 numbers expected for fourth argument")}if(3!==e.length)throw new TypeError("Arrays with two or thee dimensional points expected");if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(!a(t))throw new TypeError("Array with 3 numbers expected for second argument");if(!a(r))throw new TypeError("Array with 3 numbers expected for third argument");if(a(n))return function(e,t,r,n,i,a,o,s,u,c,f,l){var p=(e-o)*(c-o)+(t-s)*(f-s)+(r-u)*(l-u),m=(c-o)*(n-e)+(f-s)*(i-t)+(l-u)*(a-r),g=(c-o)*(c-o)+(f-s)*(f-s)+(l-u)*(l-u),d=(p*m-((e-o)*(n-e)+(t-s)*(i-t)+(r-u)*(a-r))*g)/(((n-e)*(n-e)+(i-t)*(i-t)+(a-r)*(a-r))*g-m*m),p=(p+d*m)/g,m=e+d*(n-e),g=t+d*(i-t),n=r+d*(a-r),e=s+p*(f-s),i=u+p*(l-u);return m===o+p*(c-o)&&g===e&&n===i?[m,g,n]:null}(e[0],e[1],e[2],t[0],t[1],t[2],r[0],r[1],r[2],n[0],n[1],n[2]);throw new TypeError("Array with 3 numbers expected for fourth argument")},"Matrix, Matrix, Matrix":function(e,t,r){return l(p(e.valueOf(),t.valueOf(),r.valueOf()))},"Matrix, Matrix, Matrix, Matrix":function(e,t,r,n){return l(p(e.valueOf(),t.valueOf(),r.valueOf(),n.valueOf()))}});return p}},function(e,t,r){"use strict";function i(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]}function a(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]&&"number"==typeof e[2]}function o(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]&&"number"==typeof e[2]&&"number"==typeof e[3]&&"number"==typeof e[4]&&"number"==typeof e[5]}function s(e){for(var t=Object.keys(e),r=[],n=0;n<t.length;n++)r.push(e[t[n]]);return r}function c(e,t,r,n,i){return Math.abs(r*e+n*t+i)/Math.pow(r*r+n*n,.5)}function f(e,t,r,n,i,a,o,s,u){a=[(i-t)*u-(a-r)*s,(a-r)*o-(n-e)*u,(n-e)*s-(i-t)*o];return Math.pow(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],.5)/Math.pow(o*o+s*s+u*u,.5)}function l(e,t,r,n){n-=t,t=r-e;return Math.pow(n*n+t*t,.5)}function p(e,t,r,n,i,a){a-=r,r=i-t,i=n-e;return Math.pow(a*a+r*r+i*i,.5)}t.name="distance",t.factory=function(e,t,n,s){return n(r(50)),s("distance",{"Array, Array, Array":function(e,t,r){if(2!=e.length||2!=t.length||2!=r.length)throw new TypeError("Invalid Arguments: Try again");if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(!i(t))throw new TypeError("Array with 2 numbers expected for second argument");var a;if(i(r))return a=(r=(r[1]-r[0])/(t[1]-t[0]))*r*t[0],r=r*t[0]*-1,t=e[1],c(e[0],e[1],a,r,t);throw new TypeError("Array with 2 numbers expected for third argument")},"Object, Object, Object":function(e,t,r){if(2!=Object.keys(e).length||2!=Object.keys(t).length||2!=Object.keys(r).length)throw new TypeError("Invalid Arguments: Try again");if(!i(e))throw new TypeError("Values of pointX and pointY should be numbers");if(!i(t))throw new TypeError("Values of lineOnePtX and lineOnePtY should be numbers");if(!i(r))throw new TypeError("Values of lineTwoPtX and lineTwoPtY should be numbers");var a;if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("lineOnePtX")&&t.hasOwnProperty("lineOnePtY")&&r.hasOwnProperty("lineTwoPtX")&&r.hasOwnProperty("lineTwoPtY"))return a=(r=(r.lineTwoPtY-r.lineTwoPtX)/(t.lineOnePtY-t.lineOnePtX))*r*t.lineOnePtX,r=r*t.lineOnePtX*-1,t=e.pointX,c(e.pointX,e.pointY,a,r,t);throw new TypeError("Key names do not match")},"Array, Array":function(e,t){if(2==e.length&&3==t.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(a(t))return c(e[0],e[1],t[0],t[1],t[2])}else{if(3==e.length&&6==t.length){if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(o(t))return f(e[0],e[1],e[2],t[0],t[1],t[2],t[3],t[4],t[5]);throw new TypeError("Array with 6 numbers expected for second argument")}if(2==e.length&&2==t.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(i(t))return l(e[0],e[1],t[0],t[1]);throw new TypeError("Array with 2 numbers expected for second argument")}if(3!=e.length||3!=t.length)throw new TypeError("Invalid Arguments: Try again");if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(a(t))return p(e[0],e[1],e[2],t[0],t[1],t[2])}throw new TypeError("Array with 3 numbers expected for second argument")},"Object, Object":function(e,t){if(2==Object.keys(e).length&&3==Object.keys(t).length){if(!i(e))throw new TypeError("Values of pointX and pointY should be numbers");if(!a(t))throw new TypeError("Values of xCoeffLine, yCoeffLine and constant should be numbers");if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("xCoeffLine")&&t.hasOwnProperty("yCoeffLine")&&t.hasOwnProperty("yCoeffLine"))return c(e.pointX,e.pointY,t.xCoeffLine,t.yCoeffLine,t.constant)}else if(3==Object.keys(e).length&&6==Object.keys(t).length){if(!a(e))throw new TypeError("Values of pointX, pointY and pointZ should be numbers");if(!o(t))throw new TypeError("Values of x0, y0, z0, a, b and c should be numbers");if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("x0")&&t.hasOwnProperty("y0")&&t.hasOwnProperty("z0")&&t.hasOwnProperty("a")&&t.hasOwnProperty("b")&&t.hasOwnProperty("c"))return f(e.pointX,e.pointY,e.pointZ,t.x0,t.y0,t.z0,t.a,t.b,t.c)}else if(2==Object.keys(e).length&&2==Object.keys(t).length){if(!i(e))throw new TypeError("Values of pointOneX and pointOneY should be numbers");if(!i(t))throw new TypeError("Values of pointTwoX and pointTwoY should be numbers");if(e.hasOwnProperty("pointOneX")&&e.hasOwnProperty("pointOneY")&&t.hasOwnProperty("pointTwoX")&&t.hasOwnProperty("pointTwoY"))return l(e.pointOneX,e.pointOneY,t.pointTwoX,t.pointTwoY)}else{if(3!=Object.keys(e).length||3!=Object.keys(t).length)throw new TypeError("Invalid Arguments: Try again");if(!a(e))throw new TypeError("Values of pointOneX, pointOneY and pointOneZ should be numbers");if(!a(t))throw new TypeError("Values of pointTwoX, pointTwoY and pointTwoZ should be numbers");if(e.hasOwnProperty("pointOneX")&&e.hasOwnProperty("pointOneY")&&e.hasOwnProperty("pointOneZ")&&t.hasOwnProperty("pointTwoX")&&t.hasOwnProperty("pointTwoY")&&t.hasOwnProperty("pointTwoZ"))return p(e.pointOneX,e.pointOneY,e.pointOneZ,t.pointTwoX,t.pointTwoY,t.pointTwoZ)}throw new TypeError("Key names do not match")},Array:function(e){if(function(e){if(2==e[0].length&&"number"==typeof e[0][0]&&"number"==typeof e[0][1]){for(var t in e)if(2!=e[t].length||"number"!=typeof e[t][0]||"number"!=typeof e[t][1])return}else{if(3!=e[0].length||"number"!=typeof e[0][0]||"number"!=typeof e[0][1]||"number"!=typeof e[0][2])return;for(var t in e)if(3!=e[t].length||"number"!=typeof e[t][0]||"number"!=typeof e[t][1]||"number"!=typeof e[t][2])return}return 1}(e))return function(e){for(var t=[],r=0;r<e.length-1;r++)for(var n=r+1;n<e.length;n++)2==e[0].length?t.push(l(e[r][0],e[r][1],e[n][0],e[n][1])):3==e[0].length&&t.push(p(e[r][0],e[r][1],e[r][2],e[n][0],e[n][1],e[n][2]));return t}(e);throw new TypeError("Incorrect array format entered for pairwise distance calculation")}})}},function(e,t,r){e.exports=[r(412),r(413),r(415),r(416)]},function(e,t,r){"use strict";t.name="and",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(373)),u=n(r(413)),c=(n(r(414)),n(r(354))),f=n(r(365)),l=n(r(84)),p=n(r(55)),m=n(r(56)),h=i("and",{"number, number":function(e,t){return!(!e||!t)},"Complex, Complex":function(e,t){return!(0===e.re&&0===e.im||0===t.re&&0===t.im)},"BigNumber, BigNumber":function(e,t){return!(e.isZero()||t.isZero()||e.isNaN()||t.isNaN())},"Unit, Unit":function(e,t){return h(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h,!1):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, any":function(e,t){return u(t)?s(e.size(),e.storage()):("sparse"===e.storage()?l:m)(e,t,h,!1)},"any, Matrix":function(e,t){return u(e)?s(e.size(),e.storage()):("sparse"===t.storage()?l:m)(t,e,h,!0)},"Array, any":function(e,t){return h(o(e),t).valueOf()},"any, Array":function(e,t){return h(e,o(t)).valueOf()}});return h.toTex="\\left(${args[0]}"+a.operators.and+"${args[1]}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="not",t.factory=function(e,t,n,a){var o=r(29),s=a("not",{number:function(e){return!e},Complex:function(e){return 0===e.re&&0===e.im},BigNumber:function(e){return e.isZero()||e.isNaN()},Unit:function(e){return s(e.value)},"Array | Matrix":function(e){return i(e,s)}});return s.toTex=o.operators.not+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isZero",t.factory=function(e,t,r,n){var a=n("isZero",{number:function(e){return 0===e},BigNumber:function(e){return e.isZero()},Complex:function(e){return 0===e.re&&0===e.im},Fraction:function(e){return 1===e.d&&0===e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";t.name="or",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(59)),u=n(r(76)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=i("or",{"number, number":function(e,t){return!(!e&&!t)},"Complex, Complex":function(e,t){return 0!==e.re||0!==e.im||0!==t.re||0!==t.im},"BigNumber, BigNumber":function(e,t){return!e.isZero()&&!e.isNaN()||!t.isZero()&&!t.isNaN()},"Unit, Unit":function(e,t){return p(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\left(${args[0]}"+a.operators.or+"${args[1]}\\right)",p}},function(e,t,r){"use strict";t.name="xor",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=i("xor",{"number, number":function(e,t){return!!(!!e^!!t)},"Complex, Complex":function(e,t){return!!((0!==e.re||0!==e.im)^(0!==t.re||0!==t.im))},"BigNumber, BigNumber":function(e,t){return!!((!e.isZero()&&!e.isNaN())^(!t.isZero()&&!t.isNaN()))},"Unit, Unit":function(e,t){return p(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\left(${args[0]}"+a.operators.xor+"${args[1]}\\right)",p}},function(e,t,r){e.exports=[r(295),r(418),r(312),r(419),r(420),r(81),r(421),r(311),r(422),r(316),r(423),r(424),r(425),r(318),r(370),r(329),r(373)]},function(e,t,r){"use strict";var i=r(39).size;t.name="cross",t.factory=function(e,t,n,a){function o(e,t){var r=i(e),n=i(t);if(1!=r.length||1!=n.length||3!=r[0]||3!=n[0])throw new RangeError("Vectors with length 3 expected (Size A = ["+r.join(", ")+"], B = ["+n.join(", ")+"])");return[u(c(e[1],t[2]),c(e[2],t[1])),u(c(e[2],t[0]),c(e[0],t[2])),u(c(e[0],t[1]),c(e[1],t[0]))]}var s=n(r(50)),u=n(r(74)),c=n(r(83));return(n=a("cross",{"Matrix, Matrix":function(e,t){return s(o(e.toArray(),t.toArray()))},"Matrix, Array":function(e,t){return s(o(e.toArray(),t))},"Array, Matrix":function(e,t){return s(o(e,t.toArray()))},"Array, Array":o})).toTex="\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(39),a=r(3).clone,o=r(6).isInteger;t.name="diag",t.factory=function(e,t,n,s){function u(e,t,r,n){if(!o(t))throw new TypeError("Second parameter in function diag must be an integer");var i=0<t?t:0,a=t<0?-t:0;switch(r.length){case 1:return c(e,t,n,r[0],a,i);case 2:return f(e,t,n,r,a,i)}throw new RangeError("Matrix for function diag must be 2 dimensional")}function c(t,r,n,i,a,o){a=[i+a,i+o],i=e.Matrix.storage(n||"dense").diagonal(a,t,r);return null!==n?i:i.valueOf()}function f(e,t,r,n,i,o){if(e&&!0===e.isMatrix)return t=e.diagonal(t),null!==r?r!==t.storage()?l(t,r):t:t.valueOf();for(var u=Math.min(n[0]-i,n[1]-o),c=[],f=0;f<u;f++)c[f]=a(e[f+i][f+o]);return null!==r?l(c):c}var l=n(r(50));return(n=s("diag",{Array:function(e){return u(e,0,i.size(e),null)},"Array, number":function(e,t){return u(e,t,i.size(e),null)},"Array, BigNumber":function(e,t){return u(e,t.toNumber(),i.size(e),null)},"Array, string":function(e,t){return u(e,0,i.size(e),t)},"Array, number, string":function(e,t,r){return u(e,t,i.size(e),r)},"Array, BigNumber, string":function(e,t,r){return u(e,t.toNumber(),i.size(e),r)},Matrix:function(e){return u(e,0,e.size(),e.storage())},"Matrix, number":function(e,t){return u(e,t,e.size(),e.storage())},"Matrix, BigNumber":function(e,t){return u(e,t.toNumber(),e.size(),e.storage())},"Matrix, string":function(e,t){return u(e,0,e.size(),t)},"Matrix, number, string":function(e,t,r){return u(e,t,e.size(),r)},"Matrix, BigNumber, string":function(e,t,r){return u(e,t.toNumber(),e.size(),r)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(39).size;t.name="dot",t.factory=function(e,t,n,a){function o(e,t){var r=i(e),n=i(t),a=r[0];if(1!==r.length||1!==n.length)throw new RangeError("Vector expected");if(r[0]!=n[0])throw new RangeError("Vectors must have equal length ("+r[0]+" != "+n[0]+")");if(0==a)throw new RangeError("Cannot calculate the dot product of empty vectors");for(var o=0,c=0;c<a;c++)o=s(o,u(e[c],t[c]));return o}var s=n(r(49)),u=n(r(83));return(n=a("dot",{"Matrix, Matrix":function(e,t){return o(e.toArray(),t.toArray())},"Matrix, Array":function(e,t){return o(e.toArray(),t)},"Array, Matrix":function(e,t){return o(e,t.toArray())},"Array, Array":o})).toTex="\\left(${args[0]}\\cdot${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(3).clone,a=r(39).flatten;t.name="flatten",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("flatten",{Array:function(e){return a(i(e))},Matrix:function(e){e=a(i(e.toArray()));return s(e)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).resize;t.name="ones",t.factory=function(e,t,n,o){function s(t,r){var i=function(e){var t=!1;return e.forEach(function(e,r,n){e&&!0===e.isBigNumber&&(t=!0,n[r]=e.toNumber())}),t}(t)?new e.BigNumber(1):1;return c(t),r?(r=f(r),0<t.length?r.resize(t,i):r):(r=[],0<t.length?a(r,t,i):r)}function c(e){e.forEach(function(e){if("number"!=typeof e||!i(e)||e<0)throw new Error("Parameters in function ones must be positive integers")})}var f=n(r(50));return(n=o("ones",{"":function(){return"array"===t.matrix?s([]):s([],"default")},"...number | BigNumber | string":function(e){var n;return"string"==typeof e[e.length-1]?(n=e.pop(),s(e,n)):"array"===t.matrix?s(e):s(e,"default")},Array:s,Matrix:function(e){var t=e.storage();return s(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(41),a=r(11),o=r(6).isInteger,s=r(23).format,u=r(3).clone,c=r(39);t.name="resize",t.factory=function(e,t,n,f){function l(e,t,r){if(void 0!==r){if("string"!=typeof r||1!==r.length)throw new TypeError("Single character expected as defaultValue")}else r=" ";if(1!==t.length)throw new i(t.length,1);var n=t[0];if("number"!=typeof n||!o(n))throw new TypeError("Invalid size, must contain positive integers (size: "+s(t)+")");if(e.length>n)return e.substring(0,n);if(e.length<n){for(var a=e,u=0,c=n-e.length;u<c;u++)a+=r;return a}return e}function m(e,r,n){if(2!=arguments.length&&3!=arguments.length)throw new a("resize",arguments.length,2,3);if((r=r&&!0===r.isMatrix?r.valueOf():r).length&&r[0]&&!0===r[0].isBigNumber&&(r=r.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e})),e&&!0===e.isMatrix)return e.resize(r,n,!0);if("string"==typeof e)return l(e,r,n);var i=!Array.isArray(e)&&"array"!==t.matrix;if(0!=r.length)return Array.isArray(e)||(e=[e]),e=u(e),r=c.resize(e,r,n),i?p(r):r;for(;Array.isArray(e);)e=e[0];return u(e)}var p=n(r(50));return m.toTex="\\mathrm{${name}}\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(39);t.name="size",t.factory=function(e,t,n,a){var o=n(r(50));return(n=a("size",{Matrix:function(e){return o(e.size())},Array:i.size,string:function(e){return"array"===t.matrix?[e.length]:o([e.length])},"number | Complex | BigNumber | Unit | boolean | null":function(e){return"array"===t.matrix?[]:o([])}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3),a=r(39);t.name="squeeze",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("squeeze",{Array:function(e){return a.squeeze(i.clone(e))},Matrix:function(e){e=a.squeeze(e.toArray());return Array.isArray(e)?s(e):e},any:function(e){return i.clone(e)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(399),r(397),r(398),r(427),r(429),r(430),r(431),r(433),r(434)]},function(e,t,r){"use strict";t.name="kldivergence",t.factory=function(e,t,n,i){function a(e,t){var r=t.size().length,n=e.size().length;if(1<r)throw new Error("first object must be one dimensional");if(1<n)throw new Error("second object must be one dimensional");if(r!==n)throw new Error("Length of two vectors must be equal");if(0===u(e))throw new Error("Sum of elements in first object must be non zero");if(0===u(t))throw new Error("Sum of elements in second object must be non zero");r=s(e,u(e)),n=s(t,u(t)),e=u(c(r,l(f(r,n))));return p(e)?e:Number.NaN}var o=n(r(50)),s=n(r(310)),u=n(r(428)),c=n(r(83)),f=n(r(353)),l=n(r(82)),p=n(r(87));return i("kldivergence",{"Array, Array":function(e,t){return a(o(e),o(t))},"Matrix, Array":function(e,t){return a(e,o(t))},"Array, Matrix":function(e,t){return a(o(e),t)},"Matrix, Matrix":a})}},function(e,t,r){"use strict";var i=r(306);t.name="sum",t.factory=function(e,t,n,a){function o(r){var n=void 0;if(i(r,function(e){n=void 0===n?e:s(n,e)}),void 0===n)switch(t.number){case"number":return 0;case"bignumber":return new e.BigNumber(0);case"fraction":return new e.Fraction(0);default:return 0}return n}var s=n(r(51));return(n=a("sum",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(){throw new Error("sum(A, dim) is not yet supported")},"...":function(){return o(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(306);t.name="multinomial",t.factory=function(e,t,n,a){var o=n(r(49)),s=n(r(83)),u=n(r(310)),c=n(r(397)),f=n(r(400)),l=n(r(363));return a("multinomial",{"Array | Matrix":function(e){var t=0,r=1;return i(e,function(e){if(!f(e)||!l(e))throw new TypeError("Positive integer value expected in function multinomial");t=o(t,e),r=s(r,c(e))}),u(c(t),r)}})}},function(e,t,r){"use strict";function i(e){return e.isInteger()&&e.gte(0)}var a=r(6).isInteger;t.name="permutations",t.factory=function(e,t,n,o){return(o=o("permutations",{"number | BigNumber":n(r(397)),"number, number":function(e,t){var r,n;if(!a(e)||e<0)throw new TypeError("Positive integer value expected in function permutations");if(!a(t)||t<0)throw new TypeError("Positive integer value expected in function permutations");if(e<t)throw new TypeError("second argument k must be less than or equal to first argument n");for(n=e-t+(r=1);n<=e;n++)r*=n;return r},"BigNumber, BigNumber":function(t,r){var n,a;if(!i(t)||!i(r))throw new TypeError("Positive integer value expected in function permutations");if(r.gt(t))throw new TypeError("second argument k must be less than or equal to first argument n");for(n=new e.BigNumber(1),a=t.minus(r).plus(1);a.lte(t);a=a.plus(1))n=n.times(a);return n}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",o}},function(e,t,r){"use strict";t.name="pickRandom",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").pickRandom).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(11),a=r(304);t.name="distribution",t.factory=function(e,t,n,o){function s(e){var t;if(f.hasOwnProperty(e))return t=Array.prototype.slice.call(arguments,1),function(e){var r=function(t,r){return t+e()*(r-t)},n=function(t,r){return Math.floor(t+e()*(r-t))},o=function(e,t,r,n){var i,a,s=[];if(1<(e=e.slice(0)).length)for(a=0,i=e.shift();a<i;a++)s.push(o(e,t,r,n));else for(a=0,i=e.shift();a<i;a++)s.push(n(t,r));return s};return{random:function(e,t,n){var s,c,f;if(3<arguments.length)throw new i("random",arguments.length,0,3);return 1===arguments.length?a(e)?s=e:f=e:f=2===arguments.length?(a(e)?s=e:c=e,t):(s=e,c=t,n),void 0===f&&(f=1),void 0===c&&(c=0),void 0!==s?(e=o(s.valueOf(),c,f,r),s&&!0===s.isMatrix?u(e):e):r(c,f)},randomInt:function(e,t,r){var s,c,f;if(3<arguments.length||arguments.length<1)throw new i("randomInt",arguments.length,1,3);return 1===arguments.length?a(e)?s=e:f=e:f=2===arguments.length?(a(e)?s=e:c=e,t):(s=e,c=t,r),void 0===c&&(c=0),void 0!==s?(e=o(s.valueOf(),c,f,n),s&&!0===s.isMatrix?u(e):e):n(c,f)},pickRandom:function(e){if(1!==arguments.length)throw new i("pickRandom",arguments.length,1);if(e&&!0===e.isMatrix)e=e.valueOf();else if(!Array.isArray(e))throw new TypeError("Unsupported type of value in function pickRandom");if(1<c.size(e).length)throw new Error("Only one dimensional vectors supported");return e[Math.floor(Math.random()*e.length)]}}}(f[e].apply(this,t));throw new Error("Unknown distribution "+e)}var u=n(r(50)),c=r(39),f={uniform:function(){return Math.random},normal:function(){return function(){for(var e,t,r=-1;r<0||1<r;)e=Math.random(),t=Math.random(),r=1/6*Math.pow(-2*Math.log(e),.5)*Math.cos(2*Math.PI*t)+.5;return r}}};return s.toTex="\\mathrm{${name}}\\left(${args}\\right)",s}},function(e,t,r){"use strict";t.name="random",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").random).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="randomInt",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").randomInt).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(436),r(437),r(86),r(62),r(336),r(58),r(438),r(439)]},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="compare",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(76)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=a("compare",{"boolean, boolean":function(e,t){return e===t?0:t<e?1:-1},"number, number":function(e,r){return e===r||i(e,r,t.epsilon)?0:r<e?1:-1},"BigNumber, BigNumber":function(t,r){return new e.BigNumber(t.cmp(r))},"Fraction, Fraction":function(t,r){return new e.Fraction(t.compare(r))},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return p(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e===t?0:t<e?1:-1},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\mathrm{${name}}\\left(${args}\\right)",p}},function(e,t,r){"use strict";t.name="deepEqual",t.factory=function(e,t,n,i){var o=n(r(86));return(n=i("deepEqual",{"any, any":function(e,t){return function a(e,t){if(Array.isArray(e)){if(Array.isArray(t)){var r=e.length;if(r!==t.length)return!1;for(var n=0;n<r;n++)if(!a(e[n],t[n]))return!1;return!0}return!1}return!Array.isArray(t)&&o(e,t)}(e.valueOf(),t.valueOf())}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="smallerEq",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("smallerEq",{"boolean, boolean":function(e,t){return e<=t},"number, number":function(e,r){return e<=r||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lte(t)},"Fraction, Fraction":function(e,t){return 1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e<=t},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.smallerEq+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="unequal",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("unequal",{"any, any":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:h(e,t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,h):s(t,e,h,!0):"sparse"===t.storage()?s(e,t,h,!1):f(e,t,h);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,h,!0);return t},"Array, any":function(e,t){return l(o(e),t,h,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,h,!0).valueOf()}}),h=a("_unequal",{"boolean, boolean":function(e,t){return e!==t},"number, number":function(e,r){return!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return!e.eq(t)},"Fraction, Fraction":function(e,t){return 0!==e.compare(t)},"Complex, Complex":function(e,r){return!i(e.re,r.re,t.epsilon)||!i(e.im,r.im,t.epsilon)},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e!==t}});return m.toTex="\\left(${args[0]}"+n.operators.unequal+"${args[1]}\\right)",m}},function(e,t,r){e.exports=[r(305),r(309),r(441),r(314),r(443),r(444),r(445),r(446),r(428),r(447)]},function(e,t,r){"use strict";var i=r(39).flatten;t.name="median",t.factory=function(e,t,n,a){function o(e){var t=(e=i(e.valueOf())).length;if(0==t)throw new Error("Cannot calculate median of an empty array");if(t%2==0){for(var r=t/2-1,n=f(e,1+r),a=e[r],o=0;o<r;++o)0<c(e[o],a)&&(a=e[o]);return m(a,n)}n=f(e,(t-1)/2);return p(n)}var s=n(r(51)),u=n(r(78)),c=n(r(436)),f=n(r(442)),n=a("median",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("median(A, dim) is not yet supported")},"...":function(){return o(Array.prototype.slice.call(arguments))}}),p=a({"number | BigNumber | Unit":function(e){return e}}),m=a({"number | BigNumber | Unit, number | BigNumber | Unit":function(e,t){return u(s(e,t),2)}});return n.toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="partitionSelect",t.factory=function(e,t,n,a){function o(e,t){return-c(e,t)}function s(e,t,r){if(!i(t)||t<0)throw new Error("k must be a non-negative integer");if(e&&e.isMatrix){if(1<e.size().length)throw new Error("Only one dimensional matrices supported");return u(e.valueOf(),t,r)}return Array.isArray(e)?u(e,t,r):void 0}function u(e,t,r){if(t>=e.length)throw new Error("k out of bounds");for(var n=0,i=e.length-1;n<i;){for(var u,a=n,o=i,s=e[Math.floor(Math.random()*(i-n+1))+n];a<o;)0<=r(e[a],s)?(u=e[o],e[o]=e[a],e[a]=u,--o):++a;0<r(e[a],s)&&--a,t<=a?i=a:n=a+1}return e[t]}var c=n(r(436));return a("partitionSelect",{"Array | Matrix, number":function(e,t){return s(e,t,c)},"Array | Matrix, number, string":function(e,t,r){if("asc"===r)return s(e,t,c);if("desc"===r)return s(e,t,o);throw new Error('Compare string must be "asc" or "desc"')},"Array | Matrix, number, function":s})}},function(e,t,r){"use strict";var i=r(39).flatten;t.name="mode",t.factory=function(e,t,r,n){function a(e){if(0==(e=i(e.valueOf())).length)throw new Error("Cannot calculate mode of an empty array");var o,r={},n=[],a=0;for(o in e)e[o]in r||(r[e[o]]=0),r[e[o]]++,r[e[o]]==a?n.push(e[o]):r[e[o]]>a&&(a=r[e[o]],n=[e[o]]);return n}return n("mode",{"Array | Matrix":a,"...":function(){return a(Array.prototype.slice.call(arguments))}})}},function(e,t,r){"use strict";var i=r(306);t.name="prod",t.factory=function(e,t,n,a){function o(e){var t=void 0;if(i(e,function(e){t=void 0===t?e:s(t,e)}),void 0===t)throw new Error("Cannot calculate prod of an empty array");return t}var s=n(r(77));return(n=a("prod",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("prod(A, dim) is not yet supported")},"...":function(){return o(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(6).isNumber,o=r(39).flatten,s=r(304);t.name="quantileSeq",t.factory=function(e,t,n,u){function f(e,t,r){var s,c,n=o(e),e=n.length;if(0===e)throw new Error("Cannot calculate quantile of an empty sequence");if(a(t)){if(0===(u=(s=t*(e-1))%1))return c=r?n[s]:m(n,s),g(c),c;var d=Math.floor(s);if(r)f=n[d],v=n[d+1];else{v=m(n,d+1),f=n[d];for(var y=0;y<d;++y)0<h(n[y],f)&&(f=n[y])}return g(f),g(v),l(p(f,1-u),p(v,u))}if((s=t.times(e-1)).isInteger())return s=s.toNumber(),c=r?n[s]:m(n,s),g(c),c;var f,v,d=s.floor(),u=s.minus(d),x=d.toNumber();if(r)f=n[x],v=n[x+1];else{v=m(n,x+1),f=n[x];for(y=0;y<x;++y)0<h(n[y],f)&&(f=n[y])}g(f),g(v);t=u.constructor.ONE;return l(p(f,t.minus(u)),p(v,u))}var l=n(r(49)),p=n(r(83)),m=n(r(442)),h=n(r(436)),g=u({"number | BigNumber | Unit":function(e){return e}});return function(t,r,n){var u,c;if(arguments.length<2||3<arguments.length)throw new SyntaxError("Function quantileSeq requires two or three parameters");if(s(t)&&"boolean"==typeof(n=n||!1)){if(u=t.valueOf(),a(r)){if(r<0)throw new Error("N/prob must be non-negative");if(r<=1)return f(u,r,n);if(1<r){if(!i(r))throw new Error("N must be a positive integer");for(var l=r+1,o=new Array(r),p=0;p<r;)o[p]=f(u,++p/l,n);return o}}if(r&&r.isBigNumber){if(r.isNegative())throw new Error("N/prob must be non-negative");if(c=r.constructor.ONE,r.lte(c))return f(u,r,n);if(r.gt(c)){if(!r.isInteger())throw new Error("N must be a positive integer");var m=r.toNumber();if(4294967295<m)throw new Error("N must be less than or equal to 2^32-1, as that is the maximum length of an Array");l=new e.BigNumber(m+1);o=new Array(m);for(p=0;p<m;)o[p]=f(u,new e.BigNumber(++p).div(l),n);return o}}if(Array.isArray(r)){o=new Array(r.length);for(p=0;p<o.length;++p){var h=r[p];if(a(h)){if(h<0||1<h)throw new Error("Probability must be between 0 and 1, inclusive")}else{if(!h||!h.isBigNumber)throw new TypeError("Unexpected type of argument in function quantileSeq");if(c=h.constructor.ONE,h.isNegative()||h.gt(c))throw new Error("Probability must be between 0 and 1, inclusive")}o[p]=f(u,h,n)}return o}}throw new TypeError("Unexpected type of argument in function quantileSeq")}}},function(e,t,r){"use strict";t.name="std",t.factory=function(e,t,n,i){function a(e,t){if(0==e.length)throw new SyntaxError("Function std requires one or more parameters (0 provided)");return o(s.apply(null,arguments))}var o=n(r(362)),s=n(r(447));return(n=i("std",{"Array | Matrix":a,"Array | Matrix, string":a,"...":function(){return a(Array.prototype.slice.call(arguments))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i="unbiased",a=r(306);t.name="var",t.factory=function(e,t,n,o){function s(t,r){var n=0,i=0;if(0==t.length)throw new SyntaxError("Function var requires one or more parameters (0 provided)");if(a(t,function(e){n=u(n,e),i++}),0===i)throw new Error("Cannot calculate var of an empty array");var o=l(n,i),n=0;switch(a(t,function(e){e=c(e,o);n=u(n,f(e,e))}),r){case"uncorrected":return l(n,i);case"biased":return l(n,i+1);case"unbiased":var s=n&&!0===n.isBigNumber?new e.BigNumber(0):0;return 1==i?s:l(n,i-1);default:throw new Error('Unknown normalization "'+r+'". Choose "unbiased" (default), "uncorrected", or "biased".')}}var u=n(r(51)),c=n(r(74)),f=n(r(77)),l=n(r(78));return(n=o("variance",{"Array | Matrix":function(e){return s(e,i)},"Array | Matrix, string":s,"...":function(){return s(arguments,i)}})).toTex="\\mathrm{Var}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(449),r(459),r(461),r(463),r(466),r(468),r(470),r(471),r(467),r(469),r(462),r(472),r(465),r(474),r(475),r(478),r(480),r(482),r(483),r(484),r(485),r(486),r(477),r(487),r(488)]},function(e,t,r){"use strict";var i=r(19),a=r(450);t.name="acos",t.factory=function(e,t,n,o){function s(t){var r=new e.Complex(t.im*t.im-t.re*t.re+1,-2*t.re*t.im),r=u(r),r=new e.Complex(r.re-t.im,r.im+t.re),t=c(r);return new e.Complex(1.5707963267948966-t.im,t.re)}var u=o.find(n(r(362)),["Complex"]),c=o.find(n(r(82)),["Complex"]),f=o("acos",{number:function(r){return-1<=r&&r<=1||t.predictable?Math.acos(r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\cos^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){var n=r(93).pi,i=r(451);e.exports=function(e,t,r){if(r){if(e.abs().lt(t.ONE))throw new Error("asec() only has non-complex values for |x| >= 1.")}else if(e.abs().gt(t.ONE))throw new Error("acos() only has non-complex values for |x| <= 1.");var a;return e.eq(-1)?n(t):(a=t.precision,t.config({precision:a+4}),r&&(e=t.ONE.div(e)),r=i(t.ONE.minus(e.times(e)).sqrt().div(e.plus(t.ONE)),t).times(2),t.config({precision:a}),r.toDP(a-1))}},function(e,t,r){var n=r(93),i=r(452),a=r(94);e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);if(!r&&e.isZero()||r&&!e.isFinite())return new t(0);var o=t.precision;if(!r&&!e.isFinite()||r&&e.isZero())return(s=n.pi(t.constructor({precision:o+2})).div(2).toDP(o-1)).constructor=t,s.s=e.s,s;t.config({precision:o+4});var s,c,r=(e=r?t.ONE.div(e):e).abs();return r.lte(.875)?(((c=a(e)).constructor=t).config({precision:o}),c.toDP(t.precision-1)):r.gte(1.143)?((c=(s=n.pi(t.constructor({precision:o+4})).div(2)).minus(a(t.ONE.div(r)))).s=e.s,(c.constructor=t).config({precision:o}),c.toDP(t.precision-1)):(e=e.div(e.times(e).plus(1).sqrt()),t.config({precision:o}),i(e,t))}},function(e,t,r){var n=r(93).pi,i=r(453),a=r(454);e.exports=function o(e,t,r){if(e.isNaN())return new t(NaN);var s=t.precision,u=e.abs();if(r){if(u.lt(t.ONE))throw new Error("acsc() only has non-complex values for |x| >= 1.");t.config({precision:s+2}),e=t.ONE.div(e),t.config({precision:s}),u=e.abs()}else if(u.gt(t.ONE))throw new Error("asin() only has non-complex values for |x| <= 1.");return u.gt(.8)?(t.config({precision:s+4}),r=e.s,(e=n(t.constructor({precision:s+4})).div(2).minus(o(t.ONE.minus(e.times(e)).sqrt(),t))).s=r,(e.constructor=t).config({precision:s}),e.toDP(s-1)):((r=u.gt(.58))&&(t.config({precision:s+8}),e=e.div(new t(2).sqrt().times(t.ONE.minus(e.times(e)).sqrt().plus(t.ONE).sqrt())),t.config({precision:s})),u=s<=60||e.dp()<=Math.log(s)&&e.lt(.05)?i(e,s):a(e,t),r?u.times(2):u)}},function(e,t){e.exports=function(e,t){var r=e.constructor;r.config({precision:t+Math.log(t)|4});for(var n=new r(1),i=e,a=NaN,o=e.times(e),s=e,u=new r(n),c=new r(n),f=new r(n),l=3;!i.equals(a);l+=2)s=s.times(o),u=u.times(f),c=c.times(f.plus(n)),a=i,f=new r(l),i=i.plus(s.times(u).div(f.times(c)));return r.config({precision:t}),i.toDP(t-1)}},function(e,t,r){var n=r(455),i=r(458);e.exports=function(e,t){var r=t.precision,a=-(r+4),o=r+8-e.e,s=25-e.e,u=Math.max(1.442695*Math.log(r+2)|5,5),c=(t.config({precision:s}),0),f=new t(Math.asin(e.toNumber())+"");do{var l=n(f,t,1,!1),p=i(l),l=(l.isZero()||(l.s=f.s),l.minus(e).div(p)),f=f.minus(l),s=Math.min(2*s,o)}while(t.config({precision:s}),2*l.e>=a&&!l.isZero()&&++c<=u);if(c==u)throw new Error("asin() failed to converge to the requested accuracy.Try with a higher precision.");return t.config({precision:r}),f.toDP(r-1)}},function(e,t,r){var n=r(456),i=r(457);e.exports=function(e,t,r,a){if(e.isNaN()||!e.isFinite())return new t(NaN);var o=t.precision,e=new t(e),u=e.isNegative(),c=(u&&(e.s=-e.s),o+(0|Math.log(o))+3);if(t.config({precision:c}),(e=n(e,t.constructor({precision:c}),r))[0].constructor=t,e[1])return e=e[0],a&&e.isZero()&&(e=new t(1/0)),t.config({precision:o}),e;if(e=e[0],r){f=i(e.div(3125),r),t.config({precision:Math.min(c,o+15)});for(var l=new t(5),p=new t(16),m=new t(20),h=0;h<5;++h)var v=(g=f.times(f)).times(f),d=v.times(g),f=p.times(d).minus(m.times(v)).plus(l.times(f));u&&(f.s=-f.s)}else{var y,x=e.abs().lt(t.ONE)?(y=64,3):(y=256,4);f=i(e.div(y),r),t.config({precision:Math.min(c,o+8)});for(var b=new t(8);0<x;--x){var g,w=(g=f.times(f)).times(g);f=b.times(w.minus(g)).plus(t.ONE)}}return a&&(f=f.e<=-o?new t(1/0):t.ONE.div(f)),t.config({precision:o}),f.toDP(o-1)}},function(e,t,r){var n=r(93);e.exports=function(e,t,r){var o,i=n.pi(t.constructor({precision:t.precision+2})),a=n.tau(t);return e.abs().lte(i.toDP(e.dp()))?[e,!1]:0<e.dp()&&e.div(i.toDP(e.dp())).toNumber()%2==0||(o=e.mod(a),0<e.dp()&&o.toDP(e.dp(),1).isZero())?[new t(1^r),!0]:(o.gt(i)&&(r?(o=o.minus(i)).s=-o.s:o=a.minus(o)),o.constructor=e.constructor,[o,!1])}},function(e,t){e.exports=function(e,t){for(var r=e.constructor.ONE,n=e,i=NaN,a=e.times(e),o=t?n:n=r,s=r,u=!0,c=t;!n.equals(i);c+=2)o=o.times(a),s=s.times(c+1).times(c+2),i=n,n=(u=!u)?n.plus(o.div(s)):n.minus(o.div(s));return n}},function(e,t){e.exports=function(e){var t=e.constructor,r=t.precision,e=(t.config({precision:r+2}),t.ONE.minus(e.times(e)).sqrt());return t.config({precision:r}),e.toDP(r-1)}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="acosh",t.factory=function(e,t,n,o){function s(e){var t,e=u(e);return e.im<=0?(t=e.re,e.re=-e.im,e.im=t):(t=e.im,e.im=-e.re,e.re=t),e}var u=o.find(n(r(449)),["Complex"]),c=o("acosh",{number:function(r){return 1<=r||t.predictable?Math.log(Math.sqrt(r*r-1)+r):r<=-1?new e.Complex(Math.log(Math.sqrt(r*r-1)-r),Math.PI):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1,!1)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cosh^{-1}\\left(${args[0]}\\right)",c}},function(e,t){e.exports=function(e,t,r,n){if(e.isNaN())return new t(NaN);if(n&&e.isZero())return new t(1/0);if(!r)if(n){if(e.isNegative()||e.gt(t.ONE))throw new Error("asech() only has non-complex values for 0 <= x <= 1.")}else if(e.lt(t.ONE))throw new Error("acosh() only has non-complex values for x >= 1.");var i=t.precision,e=(t.config({precision:i+4}),new t(e)),n=(e.constructor=t,n&&(e=t.ONE.div(e)),r?e.times(e).plus(t.ONE):e.times(e).minus(t.ONE)),r=e.plus(n.sqrt()).ln();return t.config({precision:i}),new t(r.toPrecision(i))}},function(e,t,r){"use strict";var i=r(19),a=r(451),o=1.5707963267948966;t.name="acot",t.factory=function(e,t,n,s){var u=s.find(n(r(462)),["Complex"]),c=s("acot",{number:function(e){return e?Math.atan(1/e):o},Complex:function(t){var r;return 0==t.im?new e.Complex(t.re?Math.atan(1/t.re):o,0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))},BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cot^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(451);t.name="atan",t.factory=function(e,t,n,o){var s=o.find(n(r(82)),["Complex"]),u=o("atan",{number:function(e){return Math.atan(e)},Complex:function(t){if(0==t.re){if(1==t.im)return new e.Complex(0,1/0);if(-1==t.im)return new e.Complex(0,-1/0)}var r=t.re,t=t.im,i=r*r+(1-t)*(1-t),t=new e.Complex((1-t*t-r*r)/i,-2*r/i),r=s(t);return new e.Complex(-.5*r.im,.5*r.re)},BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,u,!0)}});return u.toTex="\\tan^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(464),o=1.5707963267948966;t.name="acoth",t.factory=function(e,t,n,s){function u(t){var r;return 0==t.re&&0==t.im?new e.Complex(0,o):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),c(t))}var c=s.find(n(r(465)),["Complex"]),f=s("acoth",{number:function(r){return 1<=r||r<=-1||t.predictable?isFinite(r)?(Math.log((r+1)/r)+Math.log(r/(r-1)))/2:0:0!==r?u(new e.Complex(r,0)):new e.Complex(0,o)},Complex:u,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\coth^{-1}\\left(${args[0]}\\right)",f}},function(e,t){e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);var n=e.abs();if(n.eq(t.ONE))return new t(e.isNegative()?-1/0:1/0);if(n.gt(t.ONE)){if(!r)throw new Error("atanh() only has non-complex values for |x| <= 1.")}else if(r)throw new Error("acoth() has complex values for |x| < 1.");return e.isZero()?new t(0):(n=t.precision,t.config({precision:n+4}),(e=new t(e)).constructor=t,r&&(e=t.ONE.div(e)),r=t.ONE.plus(e).div(t.ONE.minus(e)).ln().div(2),t.config({precision:n}),new t(r.toPrecision(n)))}},function(e,t,r){"use strict";var i=r(19),a=r(464);t.name="atanh",t.factory=function(e,t,r,n){function o(t){var r=1<t.re&&0==t.im,n=1-t.re,i=1+t.re,a=n*n+t.im*t.im,n=(t=0!=a?new e.Complex((i*n-t.im*t.im)/a,(t.im*n+i*t.im)/a):new e.Complex(-1!=t.re?t.re/0:0,0!=t.im?t.im/0:0)).re;return t.re=Math.log(Math.sqrt(t.re*t.re+t.im*t.im))/2,t.im=Math.atan2(t.im,n)/2,r&&(t.im=-t.im),t}var s=n("atanh",{number:function(r){return r<=1&&-1<=r||t.predictable?Math.log((1+r)/(1-r))/2:o(new e.Complex(r,0))},Complex:o,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,s,!0)}});return s.toTex="\\tanh^{-1}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(452);t.name="acsc",t.factory=function(e,t,n,s){function u(t){var r;return 0==t.re&&0==t.im?new e.Complex(1.5707963267948966,1/0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),c(t))}var c=s.find(n(r(467)),["Complex"]),f=s("acsc",{number:function(r){return r<=-1||1<=r||t.predictable?Math.asin(1/r):u(new e.Complex(r,0))},Complex:u,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\csc^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){"use strict";var i=r(19),a=r(452);t.name="asin",t.factory=function(e,t,n,o){function s(t){var r=t.re,t=t.im,i=new e.Complex(t*t-r*r+1,-2*r*t),i=u(i),t=new e.Complex(i.re-t,i.im+r),i=c(t);return new e.Complex(i.im,-i.re)}var u=o.find(n(r(362)),["Complex"]),c=o.find(n(r(82)),["Complex"]),f=o("asin",{number:function(r){return-1<=r&&r<=1||t.predictable?Math.asin(r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,f,!0)}});return f.toTex="\\sin^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="acsch",t.factory=function(e,t,n,o){var s=o.find(n(r(469)),["Complex"]),u=o("acsch",{number:function(e){return e=1/e,Math.log(e+Math.sqrt(e*e+1))},Complex:function(t){var r;return 0==t.im?(t=0!=t.re?Math.log(t.re+Math.sqrt(t.re*t.re+1)):1/0,new e.Complex(t,0)):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),s(t))},BigNumber:function(t){return a(t,e.BigNumber,!0,!0)},"Array | Matrix":function(e){return i(e,u)}});return u.toTex="\\mathrm{csch}^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="asinh",t.factory=function(e,t,n,o){var s=o.find(n(r(467)),["Complex"]),u=o("asinh",{number:function(e){return Math.log(Math.sqrt(e*e+1)+e)},Complex:function(e){var t=e.im,r=(e.im=-e.re,e.re=t,s(e));return e.re=-e.im,e.im=t,t=r.re,r.re=-r.im,r.im=t,r},BigNumber:function(t){return a(t,e.BigNumber,!0,!1)},"Array | Matrix":function(e){return i(e,u,!0)}});return u.toTex="\\sinh^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(450);t.name="asec",t.factory=function(e,t,n,o){function s(t){var r;return 0==t.re&&0==t.im?new e.Complex(0,1/0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))}var u=o.find(n(r(449)),["Complex"]),c=o("asec",{number:function(r){return r<=-1||1<=r||t.predictable?Math.acos(1/r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\sec^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="asech",t.factory=function(e,t,n,o){function s(t){var r;return 0==t.re&&0==t.im?new e.Complex(1/0,0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))}var u=o.find(n(r(459)),["Complex"]),c=o("asech",{number:function(r){var n;return r<=1&&-1<=r||t.predictable?(r=1/r,n=Math.sqrt(r*r-1),0<r||t.predictable?Math.log(n+r):new e.Complex(Math.log(n-r),Math.PI)):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\mathrm{sech}^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(473);t.name="atan2",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(354)),u=n(r(59)),c=n(r(356)),f=n(r(84)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=a("atan2",{"number, number":Math.atan2,"BigNumber, BigNumber":function(t,r){return i(t,r,e.BigNumber)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,h,!1):s(t,e,h,!0):"sparse"===t.storage()?u(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:m)(e,t,h,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, number | BigNumber":function(e,t){return m(o(e),t,h,!1).valueOf()},"number | BigNumber, Array":function(e,t){return m(o(t),e,h,!0).valueOf()}});return h.toTex="\\mathrm{atan2}\\left(${args}\\right)",h}},function(e,t,r){var n=r(93),i=r(451);e.exports=function(e,t,r){var a=r.precision;if(t.isZero())return e.isZero()?new r(NaN):((o=n.pi(r.constructor({precision:a+2})).div(2).toDP(a-1)).constructor=r,o.s=e.s,o);r.config({precision:a+2});var o=i(e.div(t),r,!1);return t.isNegative()&&(t=n.pi(r),o=e.isNegative()?o.minus(t):o.plus(t)),(o.constructor=r).config({precision:a}),o.toDP(a-1)}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="cos",t.factory=function(e,t,n,o){var s=o.find(n(r(475)),["number"]),u=o.find(n(r(477)),["number"]),c=o("cos",{number:Math.cos,Complex:function(t){return new e.Complex(Math.cos(t.re)*s(-t.im),Math.sin(t.re)*u(-t.im))},BigNumber:function(t){return a(t,e.BigNumber,0,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return c(t.value);throw new TypeError("Unit in function cos is no angle")},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cos\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";function i(e){return(Math.exp(e)+Math.exp(-e))/2}var a=r(19),o=r(476);t.name="cosh",t.factory=function(e,t,r,n){var s=n("cosh",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re);return new e.Complex(Math.cos(t.im)*(r+n)/2,Math.sin(t.im)*(r-n)/2)},BigNumber:function(t){return o(t,e.BigNumber,!1,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function cosh is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\cosh\\left(${args[0]}\\right)",s}},function(e,t){e.exports=function(e,t,r,n){var i,a;return e.isNaN()?new t(NaN):e.isFinite()?(i=t.precision,t.config({precision:i+4}),(a=new t(e)).constructor=t,a=a.exp(),a=r?a.minus(t.ONE.div(a)):a.plus(t.ONE.div(a)),a=n?new t(2).div(a):a.div(2),t.config({precision:i}),new t(a.toPrecision(i))):new t(n?0:r?e:1/0)}},function(e,t,r){"use strict";function i(e){return Math.abs(e)<1?e+e*e*e/6+e*e*e*e*e/120:(Math.exp(e)-Math.exp(-e))/2}var a=r(19),o=r(476);t.name="sinh",t.factory=function(e,t,r,n){var s=n("sinh",{number:i,Complex:function(t){var r=Math.cos(t.im),n=Math.sin(t.im),i=Math.exp(t.re),t=Math.exp(-t.re);return new e.Complex(r*(i-t)/2,n*(i+t)/2)},BigNumber:function(t){return o(t,e.BigNumber,!0,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function sinh is no angle")},"Array | Matrix":function(e){return a(e,s,!0)}});return s.toTex="\\sinh\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(479);t.name="cot",t.factory=function(e,t,r,n){var o=n("cot",{number:function(e){return 1/Math.tan(e)},Complex:function(t){var r=Math.exp(-4*t.im)-2*Math.exp(-2*t.im)*Math.cos(2*t.re)+1;return new e.Complex(2*Math.exp(-2*t.im)*Math.sin(2*t.re)/r,(Math.exp(-4*t.im)-1)/r)},BigNumber:function(t){return a(t,e.BigNumber,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function cot is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\cot\\left(${args[0]}\\right)",o}},function(e,t,r){var n=r(93),i=r(455),a=r(458),o=r(456);e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);var s=t.precision,c=(u=n.pi(t.constructor({precision:s+2}))).div(2).toDP(s-1),u=u.toDP(s-1),f=o(e,t,1)[0];if(f.abs().eq(u))return new t(1/0);t.config({precision:s+4});var l=i(f,t,1,!1),p=a(l),l=l.toDP(s),p=p.toDP(s),e=(f.eq(e)?f.gt(c)&&(p.s=-p.s):u.minus(f.abs()).gt(c)&&(p.s=-p.s),r?p.div(l):l.div(p));return t.config({precision:s}),new t(e.toPrecision(s))}},function(e,t,r){"use strict";function i(e){e=Math.exp(2*e);return(e+1)/(e-1)}var a=r(19),o=r(481);t.name="coth",t.factory=function(e,t,r,n){var s=n("coth",{number:i,Complex:function(t){var r=Math.exp(2*t.re),n=r*Math.cos(2*t.im),r=r*Math.sin(2*t.im),t=(n-1)*(n-1)+r*r;return new e.Complex(((1+n)*(n-1)+r*r)/t,-2*r/t)},BigNumber:function(t){return o(t,e.BigNumber,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function coth is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\coth\\left(${args[0]}\\right)",s}},function(e,t){e.exports=function(e,t,r){var n,i,o,s;return e.isNaN()?new t(NaN):e.isFinite()?(n=t.precision,t.config({precision:n+4}),(i=new t(e)).constructor=t,i=i.exp(),o=t.ONE.div(i),s=i.minus(o),s=r?i.plus(o).div(s):s.div(i.plus(o)),t.config({precision:n}),s.toDP(n-1)):new t(e.s)}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="csc",t.factory=function(e,t,r,n){var o=n("csc",{number:function(e){return 1/Math.sin(e)},Complex:function(t){var r=.25*(Math.exp(-2*t.im)+Math.exp(2*t.im))-.5*Math.cos(2*t.re);return new e.Complex(.5*Math.sin(t.re)*(Math.exp(-t.im)+Math.exp(t.im))/r,.5*Math.cos(t.re)*(Math.exp(-t.im)-Math.exp(t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,1,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function csc is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\csc\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){return 0==e?Number.POSITIVE_INFINITY:Math.abs(2/(Math.exp(e)-Math.exp(-e)))*s(e)}var a=r(19),o=r(476),s=r(6).sign;t.name="csch",t.factory=function(e,t,r,n){var s=n("csch",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re),i=Math.cos(t.im)*(r-n),t=Math.sin(t.im)*(r+n),r=i*i+t*t;return new e.Complex(2*i/r,-2*t/r)},BigNumber:function(t){return o(t,e.BigNumber,!0,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function csch is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\mathrm{csch}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="sec",t.factory=function(e,t,r,n){var o=n("sec",{number:function(e){return 1/Math.cos(e)},Complex:function(t){var r=.25*(Math.exp(-2*t.im)+Math.exp(2*t.im))+.5*Math.cos(2*t.re);return new e.Complex(.5*Math.cos(t.re)*(Math.exp(-t.im)+Math.exp(t.im))/r,.5*Math.sin(t.re)*(Math.exp(t.im)-Math.exp(-t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,0,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function sec is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\sec\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){return 2/(Math.exp(e)+Math.exp(-e))}var a=r(19),o=r(476);t.name="sech",t.factory=function(e,t,r,n){var s=n("sech",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re),i=Math.cos(t.im)*(r+n),t=Math.sin(t.im)*(r-n),r=i*i+t*t;return new e.Complex(2*i/r,-2*t/r)},BigNumber:function(t){return o(t,e.BigNumber,!1,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function sech is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\mathrm{sech}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="sin",t.factory=function(e,t,n,o){var s=o.find(n(r(475)),["number"]),u=o.find(n(r(477)),["number"]),c=o("sin",{number:Math.sin,Complex:function(t){return new e.Complex(Math.sin(t.re)*s(-t.im),Math.cos(t.re)*u(t.im))},BigNumber:function(t){return a(t,e.BigNumber,1,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return c(t.value);throw new TypeError("Unit in function sin is no angle")},"Array | Matrix":function(e){return i(e,c,!0)}});return c.toTex="\\sin\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(479);t.name="tan",t.factory=function(e,t,r,n){var o=n("tan",{number:Math.tan,Complex:function(t){var r=Math.exp(-4*t.im)+2*Math.exp(-2*t.im)*Math.cos(2*t.re)+1;return new e.Complex(2*Math.exp(-2*t.im)*Math.sin(2*t.re)/r,(1-Math.exp(-4*t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function tan is no angle")},"Array | Matrix":function(e){return i(e,o,!0)}});return o.toTex="\\tan\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){e=Math.exp(2*e);return(e-1)/(e+1)}var a=r(19),o=r(481);t.name="tanh",t.factory=function(e,t,r,n){var s=n("tanh",{number:i,Complex:function(t){var r=Math.exp(2*t.re),n=r*Math.cos(2*t.im),r=r*Math.sin(2*t.im),t=(1+n)*(1+n)+r*r;return new e.Complex(((n-1)*(1+n)+r*r)/t,2*r/t)},BigNumber:function(t){return o(t,e.BigNumber,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function tanh is no angle")},"Array | Matrix":function(e){return a(e,s,!0)}});return s.toTex="\\tanh\\left(${args[0]}\\right)",s}},function(e,t,r){e.exports=[r(490)]},function(e,t,r){"use strict";t.name="to",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(55)),u=n(r(56)),c=i("to",{"Unit, Unit | string":function(e,t){return e.to(t)},"Matrix, Matrix":function(e,t){return s(e,t,c)},"Array, Array":function(e,t){return c(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return c(o(e),t)},"Matrix, Array":function(e,t){return c(e,o(t))},"Matrix, any":function(e,t){return u(e,t,c,!1)},"any, Matrix":function(e,t){return u(t,e,c,!0)},"Array, any":function(e,t){return u(o(e),t,c,!1).valueOf()},"any, Array":function(e,t){return u(o(t),e,c,!0).valueOf()}});return c.toTex="\\left(${args[0]}"+a.operators.to+"${args[1]}\\right)",c}},function(e,t,r){e.exports=[r(492),r(297),r(88),r(400),r(350),r(87),r(363),r(414),r(302),r(442),r(493),r(494),r(89),r(299)]},function(e,t,r){"use strict";var i=r(3);t.name="clone",t.factory=function(e,t,r,n){return(n=n("clone",{any:i.clone})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";function i(e,t,r){return e.replace(/\$([\w\.]+)/g,function(e,n){for(var i=n.split("."),s=t[i.shift()];i.length&&void 0!==s;)var u=i.shift(),s=u?s[u]:s+".";return void 0!==s?a(s)?s:o(s,r):e})}var a=r(23).isString,o=r(23).format;t.name="print",t.factory=function(e,t,r,n){return(n=n("print",{"string, Object":i,"string, Object, number":i})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(39).size;t.name="sort",t.factory=function(e,t,n,a){function o(e){if("asc"===e)return f;if("desc"===e)return l;throw new Error('String "asc" or "desc" expected')}function s(e){if(1!==i(e).length)throw new Error("One dimensional array expected")}function u(e){if(1!==e.size().length)throw new Error("One dimensional matrix expected")}function l(e,t){return-f(e,t)}var c=n(r(50)),f=n(r(436));return(n=a("sort",{Array:function(e){return s(e),e.sort(f)},Matrix:function(e){return u(e),c(e.toArray().sort(f),e.storage())},"Array, function":function(e,t){return s(e),e.sort(t)},"Matrix, function":function(e,t){return u(e),c(e.toArray().sort(t),e.storage())},"Array, string":function(e,t){return s(e),e.sort(o(t))},"Matrix, string":function(e,t){return u(e),c(e.toArray().sort(o(t)),e.storage())}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(496)]},function(e,t){"use strict";t.name="reviver",t.path="json",t.factory=function(e,t,r,n){return function(t,r){var n=e[r&&r.mathjs];return n&&"function"==typeof n.fromJSON?n.fromJSON(r):r}}},function(e,t,r){"use strict";var n=r(11),i=r(41),a=r(42);e.exports=[{name:"ArgumentsError",path:"error",factory:function(){return n}},{name:"DimensionError",path:"error",factory:function(){return i}},{name:"IndexError",path:"error",factory:function(){return a}}]}],r={},t.m=e,t.c=r,t.p="",t(0);function t(n){var i;return(r[n]||(i=r[n]={exports:{},id:n,loaded:!1},e[n].call(i.exports,i,i.exports,t),i.loaded=!0,i)).exports}var e,r}),!function(){function n(n){return function(r,e,u,i){e=b(e,i,4);var o=!k(r)&&m.keys(r),a=(o||r).length,c=0<n?0:a-1;return arguments.length<3&&(u=r[o?o[c]:c],c+=n),function(t,r,e,u,i,o){for(;0<=i&&i<o;i+=n){var a=u?u[i]:i;e=r(e,t[a],a,t)}return e}(r,e,u,o,c,a)}}function t(n){return function(t,r,e){r=x(r,e);for(var u=O(t),i=0<n?0:u-1;0<=i&&i<u;i+=n)if(r(t[i],i,t))return i;return-1}}function r(n,t,r){return function(e,u,i){var o=0,a=O(e);if("number"==typeof i)0<n?o=0<=i?i:Math.max(i+a,o):a=0<=i?Math.min(i+1,a):i+a+1;else if(r&&i&&a)return e[i=r(e,u)]===u?i:-1;if(u!=u)return 0<=(i=t(l.call(e,o,a),m.isNaN))?i+o:-1;for(i=0<n?o:a-1;0<=i&&i<a;i+=n)if(e[i]===u)return i;return-1}}function e(n,t){var r=I.length,e=n.constructor,u=m.isFunction(e)&&e.prototype||a,i="constructor";for(m.has(n,i)&&!m.contains(t,i)&&t.push(i);r--;)(i=I[r])in n&&n[i]!==u[i]&&!m.contains(t,i)&&t.push(i)}function _(n,t){return function(r){var e=arguments.length;if(!(e<2||null==r))for(var u=1;u<e;u++)for(var i=arguments[u],o=n(i),a=o.length,c=0;c<a;c++){var f=o[c];t&&void 0!==r[f]||(r[f]=i[f])}return r}}function w(n){return function(t){return null==t?void 0:t[n]}}function F(n){return function(t,r,e){var u={};return r=x(r,e),m.each(t,function(e,i){i=r(e,i,t);n(u,e,i)}),u}}function E(n,t,r,e,u){return e instanceof t?(e=j(n.prototype),t=n.apply(e,u),m.isObject(t)?t:e):n.apply(r,u)}function R(n){function t(t){return n[t]}var r="(?:"+m.keys(n).join("|")+")",e=RegExp(r),u=RegExp(r,"g");return function(n){return e.test(n=null==n?"":""+n)?n.replace(u,t):n}}function L(n){return"\\"+z[n]}function P(n,t){return n._chain?m(t).chain():t}var u=this,i=u._,o=Array.prototype,a=Object.prototype,c=Function.prototype,f=o.push,l=o.slice,s=a.toString,p=a.hasOwnProperty,h=Array.isArray,v=Object.keys,g=c.bind,y=Object.create,d=function(){},m=function(n){return n instanceof m?n:this instanceof m?void(this._wrapped=n):new m(n)},b=("undefined"!=typeof exports?(exports="undefined"!=typeof module&&module.exports?module.exports=m:exports)._=m:u._=m,m.VERSION="1.8.3",function(n,t,r){if(void 0===t)return n;switch(null==r?3:r){case 1:return function(r){return n.call(t,r)};case 2:return function(r,e){return n.call(t,r,e)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)}}return function(){return n.apply(t,arguments)}}),x=function(n,t,r){return null==n?m.identity:m.isFunction(n)?b(n,t,r):m.isObject(n)?m.matcher(n):m.property(n)},j=(m.iteratee=function(n,t){return x(n,t,1/0)},function(n){if(!m.isObject(n))return{};if(y)return y(n);d.prototype=n;n=new d;return d.prototype=null,n}),A=Math.pow(2,53)-1,O=w("length"),k=function(n){n=O(n);return"number"==typeof n&&0<=n&&n<=A},S=(m.each=m.forEach=function(n,t,r){if(t=b(t,r),k(n))for(e=0,u=n.length;e<u;e++)t(n[e],e,n);else for(var i=m.keys(n),e=0,u=i.length;e<u;e++)t(n[i[e]],i[e],n);return n},m.map=m.collect=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=Array(u),o=0;o<u;o++){var a=e?e[o]:o;i[o]=t(n[a],a,n)}return i},m.reduce=m.foldl=m.inject=n(1),m.reduceRight=m.foldr=n(-1),m.find=m.detect=function(n,t,r){t=k(n)?m.findIndex(n,t,r):m.findKey(n,t,r);return void 0!==t&&-1!==t?n[t]:void 0},m.filter=m.select=function(n,t,r){var e=[];return t=x(t,r),m.each(n,function(n,r,u){t(n,r,u)&&e.push(n)}),e},m.reject=function(n,t,r){return m.filter(n,m.negate(x(t)),r)},m.every=m.all=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(!t(n[o],o,n))return!1}return!0},m.some=m.any=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(t(n[o],o,n))return!0}return!1},m.contains=m.includes=m.include=function(n,t,r,e){return k(n)||(n=m.values(n)),0<=m.indexOf(n,t,r="number"==typeof r&&!e?r:0)},m.invoke=function(n,t){var r=l.call(arguments,2),e=m.isFunction(t);return m.map(n,function(n){var u=e?t:n[t];return null==u?u:u.apply(n,r)})},m.pluck=function(n,t){return m.map(n,m.property(t))},m.where=function(n,t){return m.filter(n,m.matcher(t))},m.findWhere=function(n,t){return m.find(n,m.matcher(t))},m.max=function(n,t,r){var e,u,i=-1/0,o=-1/0;if(null==t&&null!=n)for(var a=0,c=(n=k(n)?n:m.values(n)).length;a<c;a++)e=n[a],i<e&&(i=e);else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(o<u||u===-1/0&&i===-1/0)&&(i=n,o=u)});return i},m.min=function(n,t,r){var e,u,i=1/0,o=1/0;if(null==t&&null!=n)for(var a=0,c=(n=k(n)?n:m.values(n)).length;a<c;a++)(e=n[a])<i&&(i=e);else t=x(t,r),m.each(n,function(n,r,e){((u=t(n,r,e))<o||1/0===u&&1/0===i)&&(i=n,o=u)});return i},m.shuffle=function(n){for(var t,r=k(n)?n:m.values(n),e=r.length,u=Array(e),i=0;i<e;i++)(t=m.random(0,i))!==i&&(u[i]=u[t]),u[t]=r[i];return u},m.sample=function(n,t,r){return null==t||r?(n=k(n)?n:m.values(n))[m.random(n.length-1)]:m.shuffle(n).slice(0,Math.max(0,t))},m.sortBy=function(n,t,r){return t=x(t,r),m.pluck(m.map(n,function(n,r,e){return{value:n,index:r,criteria:t(n,r,e)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(e<r||void 0===r)return 1;if(r<e||void 0===e)return-1}return n.index-t.index}),"value")},m.groupBy=F(function(n,t,r){m.has(n,r)?n[r].push(t):n[r]=[t]}),m.indexBy=F(function(n,t,r){n[r]=t}),m.countBy=F(function(n,t,r){m.has(n,r)?n[r]++:n[r]=1}),m.toArray=function(n){return n?m.isArray(n)?l.call(n):k(n)?m.map(n,m.identity):m.values(n):[]},m.size=function(n){return null==n?0:(k(n)?n:m.keys(n)).length},m.partition=function(n,t,r){t=x(t,r);var e=[],u=[];return m.each(n,function(n,r,i){(t(n,r,i)?e:u).push(n)}),[e,u]},m.first=m.head=m.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:m.initial(n,n.length-t)},m.initial=function(n,t,r){return l.call(n,0,Math.max(0,n.length-(null==t||r?1:t)))},m.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:m.rest(n,Math.max(0,n.length-t))},m.rest=m.tail=m.drop=function(n,t,r){return l.call(n,null==t||r?1:t)},m.compact=function(n){return m.filter(n,m.identity)},function(n,t,r,e){for(var u=[],i=0,o=e||0,a=O(n);o<a;o++){var c=n[o];if(k(c)&&(m.isArray(c)||m.isArguments(c))){var f=0,l=(c=t?c:S(c,t,r)).length;for(u.length+=l;f<l;)u[i++]=c[f++]}else r||(u[i++]=c)}return u}),M=(m.flatten=function(n,t){return S(n,t,!1)},m.without=function(n){return m.difference(n,l.call(arguments,1))},m.uniq=m.unique=function(n,t,r,e){m.isBoolean(t)||(e=r,r=t,t=!1),null!=r&&(r=x(r,e));for(var u=[],i=[],o=0,a=O(n);o<a;o++){var c=n[o],f=r?r(c,o,n):c;t?(o&&i===f||u.push(c),i=f):r?m.contains(i,f)||(i.push(f),u.push(c)):m.contains(u,c)||u.push(c)}return u},m.union=function(){return m.uniq(S(arguments,!0,!0))},m.intersection=function(n){for(var t=[],r=arguments.length,e=0,u=O(n);e<u;e++){var i=n[e];if(!m.contains(t,i)){for(var o=1;o<r&&m.contains(arguments[o],i);o++);o===r&&t.push(i)}}return t},m.difference=function(n){var t=S(arguments,!0,!0,1);return m.filter(n,function(n){return!m.contains(t,n)})},m.zip=function(){return m.unzip(arguments)},m.unzip=function(n){for(var t=n&&m.max(n,O).length||0,r=Array(t),e=0;e<t;e++)r[e]=m.pluck(n,e);return r},m.object=function(n,t){for(var r={},e=0,u=O(n);e<u;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},m.findIndex=t(1),m.findLastIndex=t(-1),m.sortedIndex=function(n,t,r,e){for(var u=(r=x(r,e,1))(t),i=0,o=O(n);i<o;){var a=Math.floor((i+o)/2);r(n[a])<u?i=a+1:o=a}return i},m.indexOf=r(1,m.findIndex,m.sortedIndex),m.lastIndexOf=r(-1,m.findLastIndex),m.range=function(n,t,r){null==t&&(t=n||0,n=0),r=r||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=Array(e),i=0;i<e;i++,n+=r)u[i]=n;return u},m.bind=function(n,t){if(g&&n.bind===g)return g.apply(n,l.call(arguments,1));var r,e;if(m.isFunction(n))return r=l.call(arguments,2),e=function(){return E(n,e,t,this,r.concat(l.call(arguments)))};throw new TypeError("Bind must be called on a function")},m.partial=function(n){function r(){for(var e=0,u=t.length,i=Array(u),o=0;o<u;o++)i[o]=t[o]===m?arguments[e++]:t[o];for(;e<arguments.length;)i.push(arguments[e++]);return E(n,r,this,this,i)}var t=l.call(arguments,1);return r},m.bindAll=function(n){var t,r,e=arguments.length;if(e<=1)throw new Error("bindAll must be passed function names");for(t=1;t<e;t++)n[r=arguments[t]]=m.bind(n[r],n);return n},m.memoize=function(n,t){function r(e){var u=r.cache,i=""+(t?t.apply(this,arguments):e);return m.has(u,i)||(u[i]=n.apply(this,arguments)),u[i]}return r.cache={},r},m.delay=function(n,t){var r=l.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},m.defer=m.partial(m.delay,m,1),m.throttle=function(n,t,r){function c(){a=!1===r.leading?0:m.now(),o=null,i=n.apply(e,u),o||(e=u=null)}var e,u,i,o=null,a=0;r=r||{};return function(){var f=m.now(),l=(a||!1!==r.leading||(a=f),t-(f-a));return e=this,u=arguments,l<=0||t<l?(o&&(clearTimeout(o),o=null),a=f,i=n.apply(e,u),o||(e=u=null)):o||!1===r.trailing||(o=setTimeout(c,l)),i}},m.debounce=function(n,t,r){function c(){var f=m.now()-o;f<t&&0<=f?e=setTimeout(c,t-f):(e=null,r||(a=n.apply(i,u),e)||(i=u=null))}var e,u,i,o,a;return function(){i=this,u=arguments,o=m.now();var f=r&&!e;return e=e||setTimeout(c,t),f&&(a=n.apply(i,u),i=u=null),a}},m.wrap=function(n,t){return m.partial(t,n)},m.negate=function(n){return function(){return!n.apply(this,arguments)}},m.compose=function(){var n=arguments,t=n.length-1;return function(){for(var r=t,e=n[t].apply(this,arguments);r--;)e=n[r].call(this,e);return e}},m.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},m.before=function(n,t){var r;return function(){return 0<--n&&(r=t.apply(this,arguments)),n<=1&&(t=null),r}},m.once=m.partial(m.before,2),!{toString:null}.propertyIsEnumerable("toString")),I=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],N=(m.keys=function(n){if(!m.isObject(n))return[];if(v)return v(n);var r,t=[];for(r in n)m.has(n,r)&&t.push(r);return M&&e(n,t),t},m.allKeys=function(n){if(!m.isObject(n))return[];var r,t=[];for(r in n)t.push(r);return M&&e(n,t),t},m.values=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;u<r;u++)e[u]=n[t[u]];return e},m.mapObject=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=u.length,o={},a=0;a<i;a++)o[e=u[a]]=t(n[e],e,n);return o},m.pairs=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;u<r;u++)e[u]=[t[u],n[t[u]]];return e},m.invert=function(n){for(var t={},r=m.keys(n),e=0,u=r.length;e<u;e++)t[n[r[e]]]=r[e];return t},m.functions=m.methods=function(n){var r,t=[];for(r in n)m.isFunction(n[r])&&t.push(r);return t.sort()},m.extend=_(m.allKeys),m.extendOwn=m.assign=_(m.keys),m.findKey=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=0,o=u.length;i<o;i++)if(t(n[e=u[i]],e,n))return e},m.pick=function(n,t,r){var e,u,i={},o=n;if(null!=o){m.isFunction(t)?(u=m.allKeys(o),e=b(t,r)):(u=S(arguments,!1,!1,1),e=function(n,t,r){return t in r},o=Object(o));for(var a=0,c=u.length;a<c;a++){var f=u[a],l=o[f];e(l,f,o)&&(i[f]=l)}}return i},m.omit=function(n,t,r){var e;return t=m.isFunction(t)?m.negate(t):(e=m.map(S(arguments,!1,!1,1),String),function(n,t){return!m.contains(e,t)}),m.pick(n,t,r)},m.defaults=_(m.allKeys,!0),m.create=function(n,t){n=j(n);return t&&m.extendOwn(n,t),n},m.clone=function(n){return m.isObject(n)?m.isArray(n)?n.slice():m.extend({},n):n},m.tap=function(n,t){return t(n),n},m.isMatch=function(n,t){var r=m.keys(t),e=r.length;if(null==n)return!e;for(var u=Object(n),i=0;i<e;i++){var o=r[i];if(t[o]!==u[o]||!(o in u))return!1}return!0},function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof m&&(n=n._wrapped),t instanceof m&&(t=t._wrapped);var u=s.call(n);if(u!==s.call(t))return!1;switch(u){case"[object RegExp]":case"[object String]":return""+n==""+t;case"[object Number]":return+n!=+n?+t!=+t:0==+n?1/+n==1/t:+n==+t;case"[object Date]":case"[object Boolean]":return+n==+t}u="[object Array]"===u;if(!u){if("object"!=typeof n||"object"!=typeof t)return!1;var o=n.constructor,a=t.constructor;if(o!==a&&!(m.isFunction(o)&&o instanceof o&&m.isFunction(a)&&a instanceof a)&&"constructor"in n&&"constructor"in t)return!1}e=e||[];for(var c=(r=r||[]).length;c--;)if(r[c]===n)return e[c]===t;if(r.push(n),e.push(t),u){if((c=n.length)!==t.length)return!1;for(;c--;)if(!N(n[c],t[c],r,e))return!1}else{var f,l=m.keys(n),c=l.length;if(m.keys(t).length!==c)return!1;for(;c--;)if(f=l[c],!m.has(t,f)||!N(n[f],t[f],r,e))return!1}return r.pop(),e.pop(),!0}),c=(m.isEqual=function(n,t){return N(n,t)},m.isEmpty=function(n){return null==n||(k(n)&&(m.isArray(n)||m.isString(n)||m.isArguments(n))?0===n.length:0===m.keys(n).length)},m.isElement=function(n){return!(!n||1!==n.nodeType)},m.isArray=h||function(n){return"[object Array]"===s.call(n)},m.isObject=function(n){var t=typeof n;return"function"==t||"object"==t&&!!n},m.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(n){m["is"+n]=function(t){return s.call(t)==="[object "+n+"]"}}),m.isArguments(arguments)||(m.isArguments=function(n){return m.has(n,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(m.isFunction=function(n){return"function"==typeof n||!1}),m.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},m.isNaN=function(n){return m.isNumber(n)&&n!==+n},m.isBoolean=function(n){return!0===n||!1===n||"[object Boolean]"===s.call(n)},m.isNull=function(n){return null===n},m.isUndefined=function(n){return void 0===n},m.has=function(n,t){return null!=n&&p.call(n,t)},m.noConflict=function(){return u._=i,this},m.identity=function(n){return n},m.constant=function(n){return function(){return n}},m.noop=function(){},m.property=w,m.propertyOf=function(n){return null==n?function(){}:function(t){return n[t]}},m.matcher=m.matches=function(n){return n=m.extendOwn({},n),function(t){return m.isMatch(t,n)}},m.times=function(n,t,r){var e=Array(Math.max(0,n));t=b(t,r,1);for(var u=0;u<n;u++)e[u]=t(u);return e},m.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},m.now=Date.now||function(){return(new Date).getTime()},{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"}),h=m.invert(c),q=(m.escape=R(c),m.unescape=R(h),m.result=function(n,t,r){t=null==n?void 0:n[t];return m.isFunction(t=void 0===t?r:t)?t.call(n):t},0),K=(m.uniqueId=function(n){var t=++q+"";return n?n+t:t},m.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g},/(.)^/),z={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\u2028|\u2029/g;m.template=function(n,t,r){t=m.defaults({},t=!t&&r?r:t,m.templateSettings);var r=RegExp([(t.escape||K).source,(t.interpolate||K).source,(t.evaluate||K).source].join("|")+"|$","g"),u=0,i="__p+='";n.replace(r,function(t,r,e,o,a){return i+=n.slice(u,a).replace(D,L),u=a+t.length,r?i+="'+\n((__t=("+r+"))==null?'':_underscore.escape(__t))+\n'":e?i+="'+\n((__t=("+e+"))==null?'':__t)+\n'":o&&(i+="';\n"+o+"\n__p+='"),t}),i+="';\n",i="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+(i=t.variable?i:"with(obj||{}){\n"+i+"}\n")+"return __p;\n";try{var o=new Function(t.variable||"obj","_",i)}catch(a){throw a.source=i,a}function c(n){return o.call(this,n,m)}r=t.variable||"obj";return c.source="function("+r+"){\n"+i+"}",c},m.chain=function(n){n=m(n);return n._chain=!0,n};m.mixin=function(n){m.each(m.functions(n),function(t){var r=m[t]=n[t];m.prototype[t]=function(){var n=[this._wrapped];return f.apply(n,arguments),P(this,r.apply(m,n))}})},m.mixin(m),m.each(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=o[n];m.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!==n&&"splice"!==n||0!==r.length||delete r[0],P(this,r)}}),m.each(["concat","join","slice"],function(n){var t=o[n];m.prototype[n]=function(){return P(this,t.apply(this._wrapped,arguments))}}),m.prototype.value=function(){return this._wrapped},m.prototype.valueOf=m.prototype.toJSON=m.prototype.value,m.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return m})}.call(this);var VBacktest=(()=>{var _scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(moduleArg={}){var Module=moduleArg,readyPromiseResolve,readyPromiseReject,Std=(Module.ready=new Promise((resolve,reject)=>{readyPromiseResolve=resolve,readyPromiseReject=reject}),{_skip:function(arr,period){for(var j=0,k=0;j<arr.length&&(isNaN(arr[j])||k++,k!=period);j++);return j},_sum:function(arr,num){for(var sum=0,i=0;i<num;i++)isNaN(arr[i])||(sum+=arr[i]);return sum},_avg:function(arr,num){for(var n=0,sum=0,i=0;i<num;i++)isNaN(arr[i])||(sum+=arr[i],n++);return sum/n},_zeros:function(len){for(var n=[],i=0;i<len;i++)n.push(0);return n},_set:function(arr,start,end,value){for(var e=Math.min(arr.length,end),i=start;i<e;i++)arr[i]=value},_diff:function(a,b){for(var d=[],i=0;i<b.length;i++)isNaN(a[i])||isNaN(b[i])?d.push(NaN):d.push(a[i]-b[i]);return d},_move_diff:function(a){for(var d=[],i=1;i<a.length;i++)d.push(a[i]-a[i-1]);return d},_sma:function(S,period){var R=Std._zeros(S.length),j=Std._skip(S,period);if(Std._set(R,0,j,NaN),j<S.length)for(var sum=0,i=j;i<S.length;i++)i==j?sum=Std._sum(S,i+1):sum+=S[i]-S[i-period],R[i]=sum/period;return R},_smma:function(S,period){var R=Std._zeros(S.length),j=Std._skip(S,period);if(Std._set(R,0,j,NaN),j<S.length){R[j]=Std._avg(S,j+1);for(var i=j+1;i<S.length;i++)R[i]=(R[i-1]*(period-1)+S[i])/period}return R},_ema:function(S,period){var R=Std._zeros(S.length),multiplier=2/(period+1),period=Std._skip(S,period);if(Std._set(R,0,period,NaN),period<S.length){R[period]=Std._avg(S,period+1);for(var i=period+1;i<S.length;i++)R[i]=(S[i]-R[i-1])*multiplier+R[i-1]}return R},_cmp:function(arr,start,end,cmpFunc){for(var v=arr[start],i=start;i<end;i++)v=cmpFunc(arr[i],v);return v},_filt:function(records,n,attr,iv,cmpFunc){if(records.length<2)return NaN;for(var v=iv,pos=0!==n?records.length-Math.min(records.length-1,n)-1:0,i=records.length-2;pos<=i;i--)v=cmpFunc(v,void 0!==attr?records[i][attr]:records[i]);return v},_ticks:function(records){if(0===records.length)return[];var ticks=[];if(void 0!==records[0].Close)for(var i=0;i<records.length;i++)ticks.push(records[i].Close);else ticks=records;return ticks}});function TAInstance(logPtr){var self={_log:logPtr="function"!=typeof logPtr?function(){}:logPtr,Highest:function(records,n,attr){return Std._filt(records,n,attr,Number.MIN_VALUE,Math.max)},Lowest:function(records,n,attr){return Std._filt(records,n,attr,Number.MAX_VALUE,Math.min)},MA:function(records,period){return self._log("MA",period=void 0===period?9:period),Std._sma(Std._ticks(records),period)},SMA:function(records,period){return self._log("SMA",period=void 0===period?9:period),Std._sma(Std._ticks(records),period)},EMA:function(records,period){return self._log("EMA",period=void 0===period?9:period),Std._ema(Std._ticks(records),period)},MACD:function(records,fastEMA,slowEMA,signalEMA){self._log("MACD",fastEMA=void 0===fastEMA?12:fastEMA,slowEMA=void 0===slowEMA?26:slowEMA,signalEMA=void 0===signalEMA?9:signalEMA);records=Std._ticks(records),slowEMA=Std._ema(records,slowEMA),records=Std._ema(records,fastEMA),fastEMA=Std._diff(records,slowEMA),records=Std._ema(fastEMA,signalEMA);return[fastEMA,records,Std._diff(fastEMA,records)]},BOLL:function(records,period,multiplier){self._log("BOLL",period=void 0===period?20:period,multiplier=void 0===multiplier?2:multiplier);for(var S=Std._ticks(records),j=period-1;j<S.length&&isNaN(S[j]);j++);for(var UP=Std._zeros(S.length),MB=Std._zeros(S.length),DN=Std._zeros(S.length),sum=(Std._set(UP,0,j,NaN),Std._set(MB,0,j,NaN),Std._set(DN,0,j,NaN),0),i=j;i<S.length;i++){if(i==j)for(var k=0;k<period;k++)sum+=S[k];else sum=sum+S[i]-S[i-period];for(var ma=sum/period,d=0,m=i+1-period;m<=i;m++)d+=(S[m]-ma)*(S[m]-ma);var stdev=Math.sqrt(d/period),dn=ma-multiplier*stdev;UP[i]=ma+multiplier*stdev,MB[i]=ma,DN[i]=dn}return[UP,MB,DN]},KDJ:function(records,n,k,d){self._log("KDJ",n=void 0===n?9:n,k=void 0===k?3:k,d=void 0===d?3:d);for(var RSV=Std._zeros(records.length),K=(Std._set(RSV,0,n-1,NaN),Std._zeros(records.length)),D=Std._zeros(records.length),J=Std._zeros(records.length),hs=Std._zeros(records.length),ls=Std._zeros(records.length),j=0;j<records.length;j++)hs[j]=records[j].High,ls[j]=records[j].Low;for(var c,h,l,i=0;i<records.length;i++)n-1<=i?(c=records[i].Close,h=Std._cmp(hs,i-(n-1),i+1,Math.max),l=Std._cmp(ls,i-(n-1),i+1,Math.min),RSV[i]=h!=l?(c-l)/(h-l)*100:100,K[i]=(+RSV[i]+(k-1)*K[i-1])/k,D[i]=(+K[i]+(d-1)*D[i-1])/d):(K[i]=D[i]=50,RSV[i]=0),J[i]=3*K[i]-2*D[i];for(var m=0;m<n-1;m++)K[m]=D[m]=J[m]=NaN;return[K,D,J]},RSI:function(records,period){self._log("RSI",period=void 0===period?14:period);var n=period,rsi=Std._zeros(records.length);if(Std._set(rsi,0,rsi.length,NaN),!(records.length<n)){for(var ticks=Std._ticks(records),deltas=Std._move_diff(ticks),seed=deltas.slice(0,n),up=0,down=0,i=0;i<seed.length;i++)0<=seed[i]?up+=seed[i]:down+=seed[i];up/=n;var delta,down=-down/n,upval=(rsi[n]=100-100/(1+(0!=down?up/down:0)),0),downval=0;for(i=n+1;i<ticks.length;i++)downval=0<(delta=deltas[i-1])?(upval=delta,0):(upval=0,-delta),rsi[i]=100-100/(1+(up=(up*(n-1)+upval)/n)/(down=(down*(n-1)+downval)/n))}return rsi},OBV:function(records){if(self._log("OBV"),0===records.length)return[];if(void 0===records[0].Close)throw"argument must KLine";for(var R=[],i=0;i<records.length;i++)0===i?R[i]=records[i].Volume:records[i].Close>=records[i-1].Close?R[i]=R[i-1]+records[i].Volume:R[i]=R[i-1]-records[i].Volume;return R},ATR:function(records,period){if(self._log("ATR",period=void 0===period?14:period),0===records.length)return[];if(void 0===records[0].Close)throw"argument must KLine";for(var R=Std._zeros(records.length),sum=0,n=0,i=0;i<records.length;i++){var TR=0;sum+=TR=0==i?records[i].High-records[i].Low:Math.max(records[i].High-records[i].Low,Math.abs(records[i].High-records[i-1].Close),Math.abs(records[i-1].Close-records[i].Low)),R[i]=n=i<period?sum/(i+1):((period-1)*n+TR)/period}return R},Alligator:function(records,jawLength,teethLength,lipsLength){self._log("Alligator",jawLength=void 0===jawLength?13:jawLength,teethLength=void 0===teethLength?8:teethLength,lipsLength=void 0===lipsLength?5:lipsLength);for(var ticks=[],i=0;i<records.length;i++)ticks.push((records[i].High+records[i].Low)/2);return[[NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN].concat(Std._smma(ticks,jawLength)),[NaN,NaN,NaN,NaN,NaN].concat(Std._smma(ticks,teethLength)),[NaN,NaN,NaN].concat(Std._smma(ticks,lipsLength))]},CMF:function(records,periods){self._log("CMF",periods=periods||20);for(var ret=[],sumD=0,sumV=0,arrD=[],arrV=[],i=0;i<records.length;i++){var d=records[i].High==records[i].Low?0:(2*records[i].Close-records[i].Low-records[i].High)/(records[i].High-records[i].Low)*records[i].Volume;arrD.push(d),arrV.push(records[i].Volume),sumD+=d,sumV+=records[i].Volume,periods<=i&&(sumD-=arrD.shift(),sumV-=arrV.shift()),ret.push(sumD/sumV)}return ret}};return self}var TA=TAInstance();function init_pako(){"use strict";function zswap32(q){return(q>>>24&255)+(q>>>8&65280)+((65280&q)<<8)+((255&q)<<24)}var exports={},adler32_1=function(adler,buf,len,pos){for(var s1=65535&adler|0,s2=adler>>>16&65535|0,n=0;0!==len;){for(len-=n=2e3<len?2e3:len;s2=s2+(s1=s1+buf[pos++]|0)|0,--n;);s1%=65521,s2%=65521}return s1|s2<<16|0},crcTable=new Uint32Array(function(){for(var table=[],n=0;n<256;n++){for(var c=n,k=0;k<8;k++)c=1&c?3988292384^c>>>1:c>>>1;table[n]=c}return table}()),crc32_1=function(crc,buf,len,pos){var t=crcTable,end=pos+len;crc^=-1;for(var i=pos;i<end;i++)crc=crc>>>8^t[255&(crc^buf[i])];return-1^crc},BAD$1=16209,TYPE$1=16191,lbase=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),lext=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dbase=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),dext=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),inftrees=function(type,lens,lens_index,codes,table,table_index,work,opts){for(var incr,fill,low,mask,next,match,here_bits,here_op,here_val,bits=opts.bits,len=0,sym=0,min=0,max=0,root=0,curr=0,drop=0,left=0,used=0,huff=0,base=null,count=new Uint16Array(16),offs=new Uint16Array(16),extra=null,len=0;len<=15;len++)count[len]=0;for(sym=0;sym<codes;sym++)count[lens[lens_index+sym]]++;for(root=bits,max=15;1<=max&&0===count[max];max--);if(max<root&&(root=max),0===max)table[table_index++]=20971520,table[table_index++]=20971520,opts.bits=1;else{for(min=1;min<max&&0===count[min];min++);for(root<min&&(root=min),len=left=1;len<=15;len++)if((left=(left<<=1)-count[len])<0)return-1;if(0<left&&(0===type||1!==max))return-1;for(offs[1]=0,len=1;len<15;len++)offs[len+1]=offs[len]+count[len];for(sym=0;sym<codes;sym++)0!==lens[lens_index+sym]&&(work[offs[lens[lens_index+sym]]++]=sym);if(match=0===type?(base=extra=work,20):1===type?(base=lbase,extra=lext,257):(base=dbase,extra=dext,0),len=min,next=table_index,drop=sym=huff=0,low=-1,mask=(used=1<<(curr=root))-1,1===type&&852<used||2===type&&592<used)return 1;for(;;){for(here_val=work[sym]+1<match?(here_op=0,work[sym]):work[sym]>=match?(here_op=extra[work[sym]-match],base[work[sym]-match]):(here_op=96,0),incr=1<<(here_bits=len-drop),min=fill=1<<curr;table[next+(huff>>drop)+(fill-=incr)]=here_bits<<24|here_op<<16|here_val|0,0!==fill;);for(incr=1<<len-1;huff&incr;)incr>>=1;if(huff=0!==incr?(huff&incr-1)+incr:0,sym++,0==--count[len]){if(len===max)break;len=lens[lens_index+work[sym]]}if(root<len&&(huff&mask)!==low){for(next+=min,left=1<<(curr=len-(drop=0===drop?root:drop));curr+drop<max&&!((left-=count[curr+drop])<=0);)curr++,left<<=1;if(used+=1<<curr,1===type&&852<used||2===type&&592<used)return 1;table[low=huff&mask]=root<<24|curr<<16|next-table_index|0}}0!==huff&&(table[next+huff]=len-drop<<24|64<<16|0),opts.bits=root}return 0},constants$1={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8},LENS=1,DISTS=2,Z_FINISH$1=constants$1.Z_FINISH,Z_BLOCK=constants$1.Z_BLOCK,Z_TREES=constants$1.Z_TREES,Z_OK$1=constants$1.Z_OK,Z_STREAM_END$1=constants$1.Z_STREAM_END,Z_NEED_DICT$1=constants$1.Z_NEED_DICT,Z_STREAM_ERROR$1=constants$1.Z_STREAM_ERROR,Z_DATA_ERROR$1=constants$1.Z_DATA_ERROR,Z_MEM_ERROR$1=constants$1.Z_MEM_ERROR,Z_BUF_ERROR=constants$1.Z_BUF_ERROR,Z_DEFLATED=constants$1.Z_DEFLATED,HEAD=16180,BAD=16209,SYNC=16211,ENOUGH_LENS=852,ENOUGH_DISTS=592;function InflateState(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function inflateResetKeep(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:(state=strm.state,strm.total_in=strm.total_out=state.total=0,strm.msg="",state.wrap&&(strm.adler=1&state.wrap),state.mode=HEAD,state.last=0,state.havedict=0,state.flags=-1,state.dmax=32768,state.head=null,state.hold=0,state.bits=0,state.lencode=state.lendyn=new Int32Array(ENOUGH_LENS),state.distcode=state.distdyn=new Int32Array(ENOUGH_DISTS),state.sane=1,state.back=-1,Z_OK$1)}function inflateReset(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:((state=strm.state).wsize=0,state.whave=0,state.wnext=0,inflateResetKeep(strm))}function inflateInit2(strm,windowBits){var state;return strm?(state=new InflateState,(strm.state=state).strm=strm,state.window=null,state.mode=HEAD,(state=inflateReset2(strm,windowBits))!==Z_OK$1&&(strm.state=null),state):Z_STREAM_ERROR$1}function updatewindow(strm,src,end,copy){var dist;return null===(strm=strm.state).window&&(strm.wsize=1<<strm.wbits,strm.wnext=0,strm.whave=0,strm.window=new Uint8Array(strm.wsize)),copy>=strm.wsize?(strm.window.set(src.subarray(end-strm.wsize,end),0),strm.wnext=0,strm.whave=strm.wsize):(copy<(dist=strm.wsize-strm.wnext)&&(dist=copy),strm.window.set(src.subarray(end-copy,end-copy+dist),strm.wnext),(copy-=dist)?(strm.window.set(src.subarray(end-copy,end),0),strm.wnext=copy,strm.whave=strm.wsize):(strm.wnext+=dist,strm.wnext===strm.wsize&&(strm.wnext=0),strm.whave<strm.wsize&&(strm.whave+=dist))),0}var lenfix,distfix,inflateStateCheck=function(strm){var state;return!strm||!(state=strm.state)||state.strm!==strm||state.mode<HEAD||state.mode>SYNC?1:0},inflateReset2=function(strm,windowBits){var wrap,state;return inflateStateCheck(strm)||(state=strm.state,windowBits<0?(wrap=0,windowBits=-windowBits):(wrap=5+(windowBits>>4),windowBits<48&&(windowBits&=15)),windowBits&&(windowBits<8||15<windowBits))?Z_STREAM_ERROR$1:(null!==state.window&&state.wbits!==windowBits&&(state.window=null),state.wrap=wrap,state.wbits=windowBits,inflateReset(strm))},virgin=!0,inflate_1$1={inflateReset:inflateReset,inflateReset2:inflateReset2,inflateResetKeep:inflateResetKeep,inflateInit:function(strm){return inflateInit2(strm,15)},inflateInit2:inflateInit2,inflate:function(strm,flush){var state,input,output,next,put,have,left,hold,bits,_in,_out,copy,from,from_source,here_bits,here_op,here_val,last_bits,last_op,last_val,len,ret,opts,n,here=0,hbuf=new Uint8Array(4),order=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(inflateStateCheck(strm)||!strm.output||!strm.input&&0!==strm.avail_in)return Z_STREAM_ERROR$1;16191===(state=strm.state).mode&&(state.mode=16192),put=strm.next_out,output=strm.output,left=strm.avail_out,next=strm.next_in,input=strm.input,have=strm.avail_in,hold=state.hold,bits=state.bits,_in=have,_out=left,ret=Z_OK$1;inf_leave:for(;;)switch(state.mode){case HEAD:if(0===state.wrap)state.mode=16192;else{for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}2&state.wrap&&35615===hold?(0===state.wbits&&(state.wbits=15),hbuf[state.check=0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0),bits=hold=0,state.mode=16181):(state.head&&(state.head.done=!1),!(1&state.wrap)||(((255&hold)<<8)+(hold>>8))%31?(strm.msg="incorrect header check",state.mode=BAD):(15&hold)!==Z_DEFLATED?(strm.msg="unknown compression method",state.mode=BAD):(bits-=4,len=8+(15&(hold>>>=4)),0===state.wbits&&(state.wbits=len),15<len||len>state.wbits?(strm.msg="invalid window size",state.mode=BAD):(state.dmax=1<<state.wbits,state.flags=0,strm.adler=state.check=1,state.mode=512&hold?16189:16191,bits=hold=0)))}break;case 16181:for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(state.flags=hold,(255&state.flags)!==Z_DEFLATED){strm.msg="unknown compression method",state.mode=BAD;break}if(57344&state.flags){strm.msg="unknown header flags set",state.mode=BAD;break}state.head&&(state.head.text=hold>>8&1),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0,state.mode=16182;case 16182:for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.head&&(state.head.time=hold),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,hbuf[2]=hold>>>16&255,hbuf[3]=hold>>>24&255,state.check=crc32_1(state.check,hbuf,4,0)),bits=hold=0,state.mode=16183;case 16183:for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.head&&(state.head.xflags=255&hold,state.head.os=hold>>8),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0,state.mode=16184;case 16184:if(1024&state.flags){for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.length=hold,state.head&&(state.head.extra_len=hold),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0}else state.head&&(state.head.extra=null);state.mode=16185;case 16185:if(1024&state.flags&&((copy=have<(copy=state.length)?have:copy)&&(state.head&&(len=state.head.extra_len-state.length,state.head.extra||(state.head.extra=new Uint8Array(state.head.extra_len)),state.head.extra.set(input.subarray(next,next+copy),len)),512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,state.length-=copy),state.length))break inf_leave;state.length=0,state.mode=16186;case 16186:if(2048&state.flags){if(0===have)break inf_leave;for(copy=0;len=input[next+copy++],state.head&&len&&state.length<65536&&(state.head.name+=String.fromCharCode(len)),len&&copy<have;);if(512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,len)break inf_leave}else state.head&&(state.head.name=null);state.length=0,state.mode=16187;case 16187:if(4096&state.flags){if(0===have)break inf_leave;for(copy=0;len=input[next+copy++],state.head&&len&&state.length<65536&&(state.head.comment+=String.fromCharCode(len)),len&&copy<have;);if(512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,len)break inf_leave}else state.head&&(state.head.comment=null);state.mode=16188;case 16188:if(512&state.flags){for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(4&state.wrap&&hold!==(65535&state.check)){strm.msg="header crc mismatch",state.mode=BAD;break}bits=hold=0}state.head&&(state.head.hcrc=state.flags>>9&1,state.head.done=!0),strm.adler=state.check=0,state.mode=16191;break;case 16189:for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}strm.adler=state.check=zswap32(hold),bits=hold=0,state.mode=16190;case 16190:if(0===state.havedict)return strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,Z_NEED_DICT$1;strm.adler=state.check=1,state.mode=16191;case 16191:if(flush===Z_BLOCK||flush===Z_TREES)break inf_leave;case 16192:if(state.last)hold>>>=7&bits,bits-=7&bits,state.mode=16206;else{for(;bits<3;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}switch(state.last=1&hold,--bits,3&(hold>>>=1)){case 0:state.mode=16193;break;case 1:if(!function(state){if(virgin){lenfix=new Int32Array(512),distfix=new Int32Array(32);for(var sym=0;sym<144;)state.lens[sym++]=8;for(;sym<256;)state.lens[sym++]=9;for(;sym<280;)state.lens[sym++]=7;for(;sym<288;)state.lens[sym++]=8;for(inftrees(LENS,state.lens,0,288,lenfix,0,state.work,{bits:9}),sym=0;sym<32;)state.lens[sym++]=5;inftrees(DISTS,state.lens,0,32,distfix,0,state.work,{bits:5}),virgin=!1}state.lencode=lenfix,state.lenbits=9,state.distcode=distfix,state.distbits=5}(state),state.mode=16199,flush!==Z_TREES)break;hold>>>=2,bits-=2;break inf_leave;case 2:state.mode=16196;break;case 3:strm.msg="invalid block type",state.mode=BAD}hold>>>=2,bits-=2}break;case 16193:for(hold>>>=7&bits,bits-=7&bits;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if((65535&hold)!=(hold>>>16^65535)){strm.msg="invalid stored block lengths",state.mode=BAD;break}if(state.length=65535&hold,bits=hold=0,state.mode=16194,flush===Z_TREES)break inf_leave;case 16194:state.mode=16195;case 16195:if(copy=state.length){if(0===(copy=left<(copy=have<copy?have:copy)?left:copy))break inf_leave;output.set(input.subarray(next,next+copy),put),have-=copy,next+=copy,left-=copy,put+=copy,state.length-=copy}else state.mode=16191;break;case 16196:for(;bits<14;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(state.nlen=257+(31&hold),hold>>>=5,bits-=5,state.ndist=1+(31&hold),hold>>>=5,bits-=5,state.ncode=4+(15&hold),hold>>>=4,bits-=4,286<state.nlen||30<state.ndist){strm.msg="too many length or distance symbols",state.mode=BAD;break}state.have=0,state.mode=16197;case 16197:for(;state.have<state.ncode;){for(;bits<3;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.lens[order[state.have++]]=7&hold,hold>>>=3,bits-=3}for(;state.have<19;)state.lens[order[state.have++]]=0;if(state.lencode=state.lendyn,state.lenbits=7,opts={bits:state.lenbits},ret=inftrees(0,state.lens,0,19,state.lencode,0,state.work,opts),state.lenbits=opts.bits,ret){strm.msg="invalid code lengths set",state.mode=BAD;break}state.have=0,state.mode=16198;case 16198:for(;state.have<state.nlen+state.ndist;){for(;here_op=(here=state.lencode[hold&(1<<state.lenbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(here_val<16)hold>>>=here_bits,bits-=here_bits,state.lens[state.have++]=here_val;else{if(16===here_val){for(n=here_bits+2;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(hold>>>=here_bits,bits-=here_bits,0===state.have){strm.msg="invalid bit length repeat",state.mode=BAD;break}len=state.lens[state.have-1],copy=3+(3&hold),hold>>>=2,bits-=2}else if(17===here_val){for(n=here_bits+3;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}len=0,copy=3+(7&(hold>>>=here_bits)),hold>>>=3,bits=bits-here_bits-3}else{for(n=here_bits+7;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}len=0,copy=11+(127&(hold>>>=here_bits)),hold>>>=7,bits=bits-here_bits-7}if(state.have+copy>state.nlen+state.ndist){strm.msg="invalid bit length repeat",state.mode=BAD;break}for(;copy--;)state.lens[state.have++]=len}}if(state.mode===BAD)break;if(0===state.lens[256]){strm.msg="invalid code -- missing end-of-block",state.mode=BAD;break}if(state.lenbits=9,opts={bits:state.lenbits},ret=inftrees(LENS,state.lens,0,state.nlen,state.lencode,0,state.work,opts),state.lenbits=opts.bits,ret){strm.msg="invalid literal/lengths set",state.mode=BAD;break}if(state.distbits=6,state.distcode=state.distdyn,opts={bits:state.distbits},ret=inftrees(DISTS,state.lens,state.nlen,state.ndist,state.distcode,0,state.work,opts),state.distbits=opts.bits,ret){strm.msg="invalid distances set",state.mode=BAD;break}if(state.mode=16199,flush===Z_TREES)break inf_leave;case 16199:state.mode=16200;case 16200:if(6<=have&&258<=left){strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,!function(strm,start){var here,op,len,dist,from,from_source,state=strm.state,_in=strm.next_in,input=strm.input,last=_in+(strm.avail_in-5),_out=strm.next_out,output=strm.output,beg=_out-(start-strm.avail_out),end=_out+(strm.avail_out-257),dmax=state.dmax,wsize=state.wsize,whave=state.whave,wnext=state.wnext,s_window=state.window,hold=state.hold,bits=state.bits,lcode=state.lencode,dcode=state.distcode,lmask=(1<<state.lenbits)-1,dmask=(1<<state.distbits)-1;top:do{for(bits<15&&(hold+=input[_in++]<<bits,bits+=8,hold+=input[_in++]<<bits,bits+=8),here=lcode[hold&lmask];;){if(hold>>>=op=here>>>24,bits-=op,0===(op=here>>>16&255))output[_out++]=65535&here;else{if(!(16&op)){if(0==(64&op)){here=lcode[(65535&here)+(hold&(1<<op)-1)];continue}if(32&op){state.mode=TYPE$1;break top}strm.msg="invalid literal/length code",state.mode=BAD$1;break top}for(len=65535&here,(op&=15)&&(bits<op&&(hold+=input[_in++]<<bits,bits+=8),len+=hold&(1<<op)-1,hold>>>=op,bits-=op),bits<15&&(hold+=input[_in++]<<bits,bits+=8,hold+=input[_in++]<<bits,bits+=8),here=dcode[hold&dmask];;){if(hold>>>=op=here>>>24,bits-=op,!(16&(op=here>>>16&255))){if(0==(64&op)){here=dcode[(65535&here)+(hold&(1<<op)-1)];continue}strm.msg="invalid distance code",state.mode=BAD$1;break top}if(dist=65535&here,bits<(op&=15)&&(hold+=input[_in++]<<bits,(bits+=8)<op)&&(hold+=input[_in++]<<bits,bits+=8),dmax<(dist+=hold&(1<<op)-1)){strm.msg="invalid distance too far back",state.mode=BAD$1;break top}if(hold>>>=op,bits-=op,(op=_out-beg)<dist){if(whave<(op=dist-op)&&state.sane){strm.msg="invalid distance too far back",state.mode=BAD$1;break top}if(from_source=s_window,(from=0)===wnext){if(from+=wsize-op,op<len){for(len-=op;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}}else if(wnext<op){if(from+=wsize+wnext-op,(op-=wnext)<len){for(len-=op;output[_out++]=s_window[from++],--op;);if(from=0,wnext<len){for(len-=op=wnext;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}}}else if(from+=wnext-op,op<len){for(len-=op;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}for(;2<len;)output[_out++]=from_source[from++],output[_out++]=from_source[from++],output[_out++]=from_source[from++],len-=3;len&&(output[_out++]=from_source[from++],1<len)&&(output[_out++]=from_source[from++])}else{for(from=_out-dist;output[_out++]=output[from++],output[_out++]=output[from++],output[_out++]=output[from++],2<(len-=3););len&&(output[_out++]=output[from++],1<len)&&(output[_out++]=output[from++])}break}}break}}while(_in<last&&_out<end);hold&=(1<<(bits-=(len=bits>>3)<<3))-1,strm.next_in=_in-=len,strm.next_out=_out,strm.avail_in=_in<last?last-_in+5:5-(_in-last),strm.avail_out=_out<end?end-_out+257:257-(_out-end),state.hold=hold,state.bits=bits}(strm,_out),put=strm.next_out,output=strm.output,left=strm.avail_out,next=strm.next_in,input=strm.input,have=strm.avail_in,hold=state.hold,bits=state.bits,16191===state.mode&&(state.back=-1);break}for(state.back=0;here_op=(here=state.lencode[hold&(1<<state.lenbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(here_op&&0==(240&here_op)){for(last_bits=here_bits,last_op=here_op,last_val=here_val;here_op=(here=state.lencode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)])>>>16&255,here_val=65535&here,!(last_bits+(here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}hold>>>=last_bits,bits-=last_bits,state.back+=last_bits}if(hold>>>=here_bits,bits-=here_bits,state.back+=here_bits,state.length=here_val,0===here_op){state.mode=16205;break}if(32&here_op){state.back=-1,state.mode=16191;break}if(64&here_op){strm.msg="invalid literal/length code",state.mode=BAD;break}state.extra=15&here_op,state.mode=16201;case 16201:if(state.extra){for(n=state.extra;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.length+=hold&(1<<state.extra)-1,hold>>>=state.extra,bits-=state.extra,state.back+=state.extra}state.was=state.length,state.mode=16202;case 16202:for(;here_op=(here=state.distcode[hold&(1<<state.distbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(0==(240&here_op)){for(last_bits=here_bits,last_op=here_op,last_val=here_val;here_op=(here=state.distcode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)])>>>16&255,here_val=65535&here,!(last_bits+(here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}hold>>>=last_bits,bits-=last_bits,state.back+=last_bits}if(hold>>>=here_bits,bits-=here_bits,state.back+=here_bits,64&here_op){strm.msg="invalid distance code",state.mode=BAD;break}state.offset=here_val,state.extra=15&here_op,state.mode=16203;case 16203:if(state.extra){for(n=state.extra;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.offset+=hold&(1<<state.extra)-1,hold>>>=state.extra,bits-=state.extra,state.back+=state.extra}if(state.offset>state.dmax){strm.msg="invalid distance too far back",state.mode=BAD;break}state.mode=16204;case 16204:if(0===left)break inf_leave;if(state.offset>(copy=_out-left)){if((copy=state.offset-copy)>state.whave&&state.sane){strm.msg="invalid distance too far back",state.mode=BAD;break}from=copy>state.wnext?(copy-=state.wnext,state.wsize-copy):state.wnext-copy,copy>state.length&&(copy=state.length),from_source=state.window}else from_source=output,from=put-state.offset,copy=state.length;for(left-=copy=left<copy?left:copy,state.length-=copy;output[put++]=from_source[from++],--copy;);0===state.length&&(state.mode=16200);break;case 16205:if(0===left)break inf_leave;output[put++]=state.length,left--,state.mode=16200;break;case 16206:if(state.wrap){for(;bits<32;){if(0===have)break inf_leave;have--,hold|=input[next++]<<bits,bits+=8}if(_out-=left,strm.total_out+=_out,state.total+=_out,4&state.wrap&&_out&&(strm.adler=state.check=(state.flags?crc32_1:adler32_1)(state.check,output,_out,put-_out)),_out=left,4&state.wrap&&(state.flags?hold:zswap32(hold))!==state.check){strm.msg="incorrect data check",state.mode=BAD;break}bits=hold=0}state.mode=16207;case 16207:if(state.wrap&&state.flags){for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(4&state.wrap&&hold!==(4294967295&state.total)){strm.msg="incorrect length check",state.mode=BAD;break}bits=hold=0}state.mode=16208;case 16208:ret=Z_STREAM_END$1;break inf_leave;case BAD:ret=Z_DATA_ERROR$1;break inf_leave;case 16210:return Z_MEM_ERROR$1;default:return Z_STREAM_ERROR$1}return strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,(state.wsize||_out!==strm.avail_out&&state.mode<BAD&&(state.mode<16206||flush!==Z_FINISH$1))&&updatewindow(strm,strm.output,strm.next_out,_out-strm.avail_out),_in-=strm.avail_in,_out-=strm.avail_out,strm.total_in+=_in,strm.total_out+=_out,state.total+=_out,4&state.wrap&&_out&&(strm.adler=state.check=(state.flags?crc32_1:adler32_1)(state.check,output,_out,strm.next_out-_out)),strm.data_type=state.bits+(state.last?64:0)+(16191===state.mode?128:0)+(16199===state.mode||16194===state.mode?256:0),ret=(0==_in&&0===_out||flush===Z_FINISH$1)&&ret===Z_OK$1?Z_BUF_ERROR:ret},inflateEnd:function(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:((state=strm.state).window&&(state.window=null),strm.state=null,Z_OK$1)},inflateGetHeader:function(strm,head){return inflateStateCheck(strm)||0==(2&(strm=strm.state).wrap)?Z_STREAM_ERROR$1:((strm.head=head).done=!1,Z_OK$1)},inflateSetDictionary:function(strm,dictionary){var state,dictLength=dictionary.length;return inflateStateCheck(strm)||0!==(state=strm.state).wrap&&16190!==state.mode?Z_STREAM_ERROR$1:16190===state.mode&&adler32_1(1,dictionary,dictLength,0)!==state.check?Z_DATA_ERROR$1:updatewindow(strm,dictionary,dictLength,dictLength)?(state.mode=16210,Z_MEM_ERROR$1):(state.havedict=1,Z_OK$1)},inflateInfo:"pako inflate (from Nodeca project)"};function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}var common_assign=function(obj){for(var sources=Array.prototype.slice.call(arguments,1);sources.length;){var source=sources.shift();if(source){if("object"!==_typeof(source))throw new TypeError(source+"must be non-object");for(var p in source)!function(obj,key){return Object.prototype.hasOwnProperty.call(obj,key)}(source,p)||(obj[p]=source[p])}}return obj},common_flattenChunks=function(chunks){for(var len=0,i=0,l=chunks.length;i<l;i++)len+=chunks[i].length;for(var result=new Uint8Array(len),_i=0,pos=0,_l=chunks.length;_i<_l;_i++){var chunk=chunks[_i];result.set(chunk,pos),pos+=chunk.length}return result},STR_APPLY_UIA_OK=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(__){STR_APPLY_UIA_OK=!1}for(var _utf8len=new Uint8Array(256),q=0;q<256;q++)_utf8len[q]=252<=q?6:248<=q?5:240<=q?4:224<=q?3:192<=q?2:1;_utf8len[254]=_utf8len[254]=1;var strings_string2buf=function(str){if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(str);for(var buf,c,c2,i,str_len=str.length,buf_len=0,m_pos=0;m_pos<str_len;m_pos++)55296==(64512&(c=str.charCodeAt(m_pos)))&&m_pos+1<str_len&&56320==(64512&(c2=str.charCodeAt(m_pos+1)))&&(c=65536+(c-55296<<10)+(c2-56320),m_pos++),buf_len+=c<128?1:c<2048?2:c<65536?3:4;for(buf=new Uint8Array(buf_len),m_pos=i=0;i<buf_len;m_pos++)55296==(64512&(c=str.charCodeAt(m_pos)))&&m_pos+1<str_len&&56320==(64512&(c2=str.charCodeAt(m_pos+1)))&&(c=65536+(c-55296<<10)+(c2-56320),m_pos++),c<128?buf[i++]=c:(c<2048?buf[i++]=192|c>>>6:(c<65536?buf[i++]=224|c>>>12:(buf[i++]=240|c>>>18,buf[i++]=128|c>>>12&63),buf[i++]=128|c>>>6&63),buf[i++]=128|63&c);return buf},strings_buf2string=function(buf,max){var len=max||buf.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(buf.subarray(0,max));for(var utf16buf=new Array(2*len),out=0,i=0;i<len;){var c=buf[i++];if(c<128)utf16buf[out++]=c;else{var c_len=_utf8len[c];if(4<c_len)utf16buf[out++]=65533,i+=c_len-1;else{for(c&=2===c_len?31:3===c_len?15:7;1<c_len&&i<len;)c=c<<6|63&buf[i++],c_len--;1<c_len?utf16buf[out++]=65533:c<65536?utf16buf[out++]=c:(c-=65536,utf16buf[out++]=55296|c>>10&1023,utf16buf[out++]=56320|1023&c)}}}return function(buf,len){if(len<65534&&buf.subarray&&STR_APPLY_UIA_OK)return String.fromCharCode.apply(null,buf.length===len?buf:buf.subarray(0,len));for(var result="",i=0;i<len;i++)result+=String.fromCharCode(buf[i]);return result}(utf16buf,out)},strings_utf8border=function(buf,max){for(var pos=(max=(max=max||buf.length)>buf.length?buf.length:max)-1;0<=pos&&128==(192&buf[pos]);)pos--;return!(pos<0)&&0!==pos&&pos+_utf8len[buf[pos]]>max?pos:max},messages={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"};var zstream=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};var gzheader=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1},toString=Object.prototype.toString,Z_NO_FLUSH=constants$1.Z_NO_FLUSH,Z_FINISH=constants$1.Z_FINISH,Z_OK=constants$1.Z_OK,Z_STREAM_END=constants$1.Z_STREAM_END,Z_NEED_DICT=constants$1.Z_NEED_DICT,Z_STREAM_ERROR=constants$1.Z_STREAM_ERROR,Z_DATA_ERROR=constants$1.Z_DATA_ERROR,Z_MEM_ERROR=constants$1.Z_MEM_ERROR;function Inflate(options){this.options=common_assign({chunkSize:65536,windowBits:15,to:""},options||{});var opt=this.options,options=(opt.raw&&0<=opt.windowBits&&opt.windowBits<16&&(opt.windowBits=-opt.windowBits,0===opt.windowBits)&&(opt.windowBits=-15),!(0<=opt.windowBits&&opt.windowBits<16)||options&&options.windowBits||(opt.windowBits+=32),15<opt.windowBits&&opt.windowBits<48&&0==(15&opt.windowBits)&&(opt.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0,inflate_1$1.inflateInit2(this.strm,opt.windowBits));if(options!==Z_OK)throw new Error(messages[options]);if(this.header=new gzheader,inflate_1$1.inflateGetHeader(this.strm,this.header),opt.dictionary&&("string"==typeof opt.dictionary?opt.dictionary=strings_string2buf(opt.dictionary):"[object ArrayBuffer]"===toString.call(opt.dictionary)&&(opt.dictionary=new Uint8Array(opt.dictionary)),opt.raw)&&(options=inflate_1$1.inflateSetDictionary(this.strm,opt.dictionary))!==Z_OK)throw new Error(messages[options])}function inflate(input,options){options=new Inflate(options);if(options.push(input),options.err)throw options.msg||messages[options.err];return options.result}Inflate.prototype.push=function(data,flush_mode){var status,_flush_mode,strm=this.strm,chunkSize=this.options.chunkSize,dictionary=this.options.dictionary;if(this.ended)return!1;for(_flush_mode=flush_mode===~~flush_mode?flush_mode:!0===flush_mode?Z_FINISH:Z_NO_FLUSH,"[object ArrayBuffer]"===toString.call(data)?strm.input=new Uint8Array(data):strm.input=data,strm.next_in=0,strm.avail_in=strm.input.length;;){for(0===strm.avail_out&&(strm.output=new Uint8Array(chunkSize),strm.next_out=0,strm.avail_out=chunkSize),(status=inflate_1$1.inflate(strm,_flush_mode))===Z_NEED_DICT&&dictionary&&((status=inflate_1$1.inflateSetDictionary(strm,dictionary))===Z_OK?status=inflate_1$1.inflate(strm,_flush_mode):status===Z_DATA_ERROR&&(status=Z_NEED_DICT));0<strm.avail_in&&status===Z_STREAM_END&&0<strm.state.wrap&&0!==data[strm.next_in];)inflate_1$1.inflateReset(strm),status=inflate_1$1.inflate(strm,_flush_mode);switch(status){case Z_STREAM_ERROR:case Z_DATA_ERROR:case Z_NEED_DICT:case Z_MEM_ERROR:return this.onEnd(status),!(this.ended=!0)}var next_out_utf8,tail,utf8str,last_avail_out=strm.avail_out;if(!strm.next_out||0!==strm.avail_out&&status!==Z_STREAM_END||("string"===this.options.to?(next_out_utf8=strings_utf8border(strm.output,strm.next_out),tail=strm.next_out-next_out_utf8,utf8str=strings_buf2string(strm.output,next_out_utf8),strm.next_out=tail,strm.avail_out=chunkSize-tail,tail&&strm.output.set(strm.output.subarray(next_out_utf8,next_out_utf8+tail),0),this.onData(utf8str)):this.onData(strm.output.length===strm.next_out?strm.output:strm.output.subarray(0,strm.next_out))),status!==Z_OK||0!==last_avail_out){if(status===Z_STREAM_END)return status=inflate_1$1.inflateEnd(this.strm),this.onEnd(status),this.ended=!0;if(0===strm.avail_in)break}}return!0},Inflate.prototype.onData=function(chunk){this.chunks.push(chunk)},Inflate.prototype.onEnd=function(status){status===Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=common_flattenChunks(this.chunks)),this.chunks=[],this.err=status,this.msg=this.strm.msg};function inflateRaw_1(input,options){return(options=options||{}).raw=!0,inflate(input,options)}var inflate_2=inflate,ungzip=inflate,inflate_1={Inflate:Inflate,inflate:inflate_2,inflateRaw:inflateRaw_1,ungzip:ungzip,constants:constants$1};return exports.Inflate=Inflate,exports.constants=constants$1,exports.default=inflate_1,exports.inflate=inflate_2,exports.inflateRaw=inflateRaw_1,exports.ungzip=ungzip,exports}void 0!==Module&&(Module.TA=TA);var browserFix=browserFix||{},wasmString;function inflateBase64(base64){var binaryString=function(string){var b64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",string=String(string).replace(/[\t\n\f\r ]+/g,"");string+="==".slice(2-(3&string.length));for(var bitmap,r1,r2,result="",i=0;i<string.length;)bitmap=b64.indexOf(string.charAt(i++))<<18|b64.indexOf(string.charAt(i++))<<12|(r1=b64.indexOf(string.charAt(i++)))<<6|(r2=b64.indexOf(string.charAt(i++))),result+=64===r1?String.fromCharCode(bitmap>>16&255):64===r2?String.fromCharCode(bitmap>>16&255,bitmap>>8&255):String.fromCharCode(bitmap>>16&255,bitmap>>8&255,255&bitmap);return result}(base64),length=binaryString.length,bytes=new Uint8Array(length);for(let i=0;i<length;i++)bytes[i]=binaryString.charCodeAt(i);return init_pako().inflate(bytes)}browserFix.sliceTypedArray=function(array,sliceBegin,sliceEnd){var bpe=array.BYTES_PER_ELEMENT,boff=array.byteOffset,len=array.length;return(sliceBegin=0|sliceBegin||0)<0&&(sliceBegin+=len),(sliceEnd=void 0===sliceEnd?len:0|sliceEnd)<0&&(sliceEnd+=len),new array.constructor(array.buffer.slice(boff+bpe*sliceBegin,boff+bpe*sliceEnd))},void 0===Uint8Array.prototype.slice&&(console.warn("The TypedArray.slice method is not supported in this browser. This may impair performance. "),Uint16Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Int16Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Uint8Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Int8Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)}),void 0!==Module&&(wasmString="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",100<wasmString.length)&&(Module.wasmBinary=inflateBase64(wasmString),Module.__haswasmBinary__=!0),"undefined"!=typeof __ctx&&void 0!==__ctx.INITIAL_MEMORY&&(Module.INITIAL_MEMORY=__ctx.INITIAL_MEMORY),"undefined"==typeof print&&(print=console.log);var JSHttpGet=null,crypto,fs,os,process,CLUSTER_IP,CLUSTER_DOMAIN,JSHttpGet;function md5(text){return crypto.createHash("md5").update(text).digest("hex")}JSHttpGet="undefined"!=typeof self&&void 0!==self.onmessage?function(path){var r=XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");return r.open("GET","https://www.fmz.com"+path,!1),r.send(null),r.responseText}:(crypto=require("crypto"),fs=require("fs"),os=require("os"),process=require("process"),CLUSTER_IP=process.env.CLUSTER_IP||"q.fmz.com",CLUSTER_DOMAIN=process.env.CLUSTER_DOMAIN||"q.fmz.com",function(url){var tmpCache=os.tmpdir()+"/cache",tmpCache=(fs.existsSync(tmpCache)||fs.mkdirSync(tmpCache),tmpCache+"/botvs_kline_"+md5(url="http://"+CLUSTER_IP+url));return fs.existsSync(tmpCache)?fs.readFileSync(tmpCache,"utf-8"):((url=require("sync-request")("GET",url,{headers:{Host:CLUSTER_DOMAIN}}).getBody("utf8"))&&-1!==url.indexOf(",")&&fs.writeFileSync(tmpCache,url,"utf-8"),url)});var moduleOverrides=Object.assign({},Module),arguments_=[],thisProgram="./this.program",quit_=(status,toThrow)=>{throw toThrow},ENVIRONMENT_IS_WEB="object"==typeof window,ENVIRONMENT_IS_WORKER="function"==typeof importScripts,ENVIRONMENT_IS_NODE="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,scriptDirectory="",read_,readAsync,readBinary,setWindowTitle,fs,nodePath,scriptDirectory,read_,readBinary,readAsync;function locateFile(path){return Module.locateFile?Module.locateFile(path,scriptDirectory):scriptDirectory+path}ENVIRONMENT_IS_NODE?(fs=require("fs"),nodePath=require("path"),scriptDirectory=ENVIRONMENT_IS_WORKER?nodePath.dirname(scriptDirectory)+"/":__dirname+"/",read_=(filename,binary)=>(filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename),fs.readFileSync(filename,binary?void 0:"utf8")),readBinary=filename=>{filename=read_(filename,!0);return filename=filename.buffer?filename:new Uint8Array(filename)},readAsync=(filename,onload,onerror,binary=!0)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename),fs.readFile(filename,binary?void 0:"utf8",(err,data)=>{err?onerror(err):onload(binary?data.buffer:data)})},!Module.thisProgram&&1<process.argv.length&&(thisProgram=process.argv[1].replace(/\\/g,"/")),arguments_=process.argv.slice(2),quit_=(status,toThrow)=>{throw process.exitCode=status,toThrow},Module.inspect=()=>"[Emscripten Module object]"):(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&(ENVIRONMENT_IS_WORKER?scriptDirectory=self.location.href:"undefined"!=typeof document&&document.currentScript&&(scriptDirectory=document.currentScript.src),_scriptDir&&(scriptDirectory=_scriptDir),scriptDirectory=0!==scriptDirectory.indexOf("blob:")?scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1):"",read_=url=>{var xhr=new XMLHttpRequest;return xhr.open("GET",url,!1),xhr.send(null),xhr.responseText},ENVIRONMENT_IS_WORKER&&(readBinary=url=>{var xhr=new XMLHttpRequest;return xhr.open("GET",url,!1),xhr.responseType="arraybuffer",xhr.send(null),new Uint8Array(xhr.response)}),readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,!0),xhr.responseType="arraybuffer",xhr.onload=()=>{200==xhr.status||0==xhr.status&&xhr.response?onload(xhr.response):onerror()},xhr.onerror=onerror,xhr.send(null)},setWindowTitle=title=>document.title=title);var out=Module.print||console.log.bind(console),err=Module.printErr||console.error.bind(console),wasmBinary,noExitRuntime=(Object.assign(Module,moduleOverrides),moduleOverrides=null,Module.arguments&&(arguments_=Module.arguments),Module.thisProgram&&(thisProgram=Module.thisProgram),Module.quit&&(quit_=Module.quit),Module.wasmBinary&&(wasmBinary=Module.wasmBinary),Module.noExitRuntime||!0),wasmMemory,wasmExports,ABORT=("object"!=typeof WebAssembly&&abort("no native wasm support detected"),!1),EXITSTATUS,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function assert(condition,text){condition||abort(text)}function updateMemoryViews(){var b=wasmMemory.buffer;Module.HEAP8=HEAP8=new Int8Array(b),Module.HEAP16=HEAP16=new Int16Array(b),Module.HEAP32=HEAP32=new Int32Array(b),Module.HEAPU8=HEAPU8=new Uint8Array(b),Module.HEAPU16=HEAPU16=new Uint16Array(b),Module.HEAPU32=HEAPU32=new Uint32Array(b),Module.HEAPF32=HEAPF32=new Float32Array(b),Module.HEAPF64=HEAPF64=new Float64Array(b)}var INITIAL_MEMORY=Module.INITIAL_MEMORY||314572800,wasmTable,__ATPRERUN__=(assert(5242880<=INITIAL_MEMORY,"INITIAL_MEMORY should be larger than STACK_SIZE, was "+INITIAL_MEMORY+"! (STACK_SIZE=5242880)"),wasmMemory=Module.wasmMemory||new WebAssembly.Memory({initial:INITIAL_MEMORY/65536,maximum:65536}),updateMemoryViews(),INITIAL_MEMORY=wasmMemory.buffer.byteLength,[]),__ATINIT__=[],__ATPOSTRUN__=[],runtimeInitialized=!1;function preRun(){if(Module.preRun)for("function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);Module.preRun.length;)addOnPreRun(Module.preRun.shift());callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=!0,Module.noFSInit||FS.init.initialized||FS.init(),FS.ignorePermissions=!1,TTY.init(),callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module.postRun)for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);Module.postRun.length;)addOnPostRun(Module.postRun.shift());callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0,runDependencyWatcher=null,dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies)}function removeRunDependency(id){var callback;runDependencies--,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies),0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),dependenciesFulfilled)&&(callback=dependenciesFulfilled,dependenciesFulfilled=null,callback())}function abort(what){Module.onAbort&&Module.onAbort(what),err(what="Aborted("+what+")"),ABORT=!0,EXITSTATUS=1,what+=". Build with -sASSERTIONS for more info.";what=new WebAssembly.RuntimeError(what);throw readyPromiseReject(what),what}var dataURIPrefix="data:application/octet-stream;base64,",wasmBinaryFile,tempDouble,tempI64;function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith("file://")}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary)return new Uint8Array(wasmBinary);if(readBinary)return readBinary(file);throw"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)"}function instantiateSync(file,info){file=getBinarySync(file),file=new WebAssembly.Module(file);return[new WebAssembly.Instance(file,info),file]}function createWasm(){var info={a:wasmImports};function receiveInstance(instance,module){instance=applySignatureConversions(instance.exports);return wasmTable=(wasmExports=instance).S,addOnInit(wasmExports.O),removeRunDependency("wasm-instantiate"),instance}if(addRunDependency("wasm-instantiate"),Module.instantiateWasm)try{return Module.instantiateWasm(info,receiveInstance)}catch(e){err("Module.instantiateWasm callback failed with error: "+e),readyPromiseReject(e)}return receiveInstance(instantiateSync(wasmBinaryFile,info)[0])}wasmBinaryFile="sandbox_cpp_wasm.wasm",isDataURI(wasmBinaryFile)||(wasmBinaryFile=locateFile(wasmBinaryFile));var callRuntimeCallbacks=callbacks=>{for(;0<callbacks.length;)callbacks.shift()(Module)};function getValue(ptr,type="i8"){switch(type=type.endsWith("*")?"*":type){case"i1":case"i8":return HEAP8[ptr>>>0];case"i16":return HEAP16[ptr>>>1];case"i32":return HEAP32[ptr>>>2];case"i64":abort("to do getValue(i64) use WASM_BIGINT");case"float":return HEAPF32[ptr>>>2];case"double":return HEAPF64[ptr>>>3];case"*":return HEAPU32[ptr>>>2];default:abort("invalid type for getValue: "+type)}}function setValue(ptr,value,type="i8"){switch(type=type.endsWith("*")?"*":type){case"i1":case"i8":HEAP8[ptr>>>0]=value;break;case"i16":HEAP16[ptr>>>1]=value;break;case"i32":HEAP32[ptr>>>2]=value;break;case"i64":abort("to do setValue(i64) use WASM_BIGINT");case"float":HEAPF32[ptr>>>2]=value;break;case"double":HEAPF64[ptr>>>3]=value;break;case"*":HEAPU32[ptr>>>2]=value;break;default:abort("invalid type for setValue: "+type)}}function convertI32PairToI53Checked(lo,hi){return hi+2097152>>>0<4194305-!!lo?(lo>>>0)+4294967296*hi:NaN}var UTF8Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{for(var endIdx=(idx>>>=0)+maxBytesToRead,endPtr=idx;heapOrArray[endPtr]&&!(endIdx<=endPtr);)++endPtr;if(16<endPtr-idx&&heapOrArray.buffer&&UTF8Decoder)return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr));for(var str="";idx<endPtr;){var u2,u1,u0=heapOrArray[idx++];128&u0?(u1=63&heapOrArray[idx++],192==(224&u0)?str+=String.fromCharCode((31&u0)<<6|u1):(u2=63&heapOrArray[idx++],(u0=224==(240&u0)?(15&u0)<<12|u1<<6|u2:(7&u0)<<18|u1<<12|u2<<6|63&heapOrArray[idx++])<65536?str+=String.fromCharCode(u0):(u1=u0-65536,str+=String.fromCharCode(55296|u1>>10,56320|1023&u1)))):str+=String.fromCharCode(u0)}return str},UTF8ToString=(ptr,maxBytesToRead)=>(ptr>>>=0)?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):"";function ___assert_fail(condition,filename,line,func){filename>>>=0,func>>>=0,abort(`Assertion failed: ${UTF8ToString(condition>>>=0)}, at: `+[filename?UTF8ToString(filename):"unknown filename",line,func?UTF8ToString(func):"unknown function"])}function ExceptionInfo(excPtr){this.excPtr=excPtr,this.ptr=excPtr-24,this.set_type=function(type){HEAPU32[this.ptr+4>>>2]=type},this.get_type=function(){return HEAPU32[this.ptr+4>>>2]},this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>>2]=destructor},this.get_destructor=function(){return HEAPU32[this.ptr+8>>>2]},this.set_caught=function(caught){HEAP8[this.ptr+12>>>0]=caught=caught?1:0},this.get_caught=function(){return 0!=HEAP8[this.ptr+12>>>0]},this.set_rethrown=function(rethrown){HEAP8[this.ptr+13>>>0]=rethrown=rethrown?1:0},this.get_rethrown=function(){return 0!=HEAP8[this.ptr+13>>>0]},this.init=function(type,destructor){this.set_adjusted_ptr(0),this.set_type(type),this.set_destructor(destructor)},this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>>2]=adjustedPtr},this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>>2]},this.get_exception_ptr=function(){var adjusted;return ___cxa_is_pointer_type(this.get_type())?HEAPU32[this.excPtr>>>2]:0!==(adjusted=this.get_adjusted_ptr())?adjusted:this.excPtr}}var exceptionLast=0,uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){throw type>>>=0,destructor>>>=0,new ExceptionInfo(ptr>>>=0).init(type,destructor),uncaughtExceptionCount++,ptr}var structRegistrations={};function runDestructors(destructors){for(;destructors.length;){var ptr=destructors.pop();destructors.pop()(ptr)}}function simpleReadValueFromPointer(pointer){return this.fromWireType(HEAP32[pointer>>>2])}var awaitingDependencies={},registeredTypes={},typeDependencies={},InternalError=void 0;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);myTypeConverters.length!==myTypes.length&&throwInternalError("Mismatched type converter count");for(var i=0;i<myTypes.length;++i)registerType(myTypes[i],myTypeConverters[i])}myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});var typeConverters=new Array(dependentTypes.length),unregisteredTypes=[],registered=0;dependentTypes.forEach((dt,i)=>{registeredTypes.hasOwnProperty(dt)?typeConverters[i]=registeredTypes[dt]:(unregisteredTypes.push(dt),awaitingDependencies.hasOwnProperty(dt)||(awaitingDependencies[dt]=[]),awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt],++registered===unregisteredTypes.length&&onComplete(typeConverters)}))}),0===unregisteredTypes.length&&onComplete(typeConverters)}var __embind_finalize_value_object=function(structType){var reg=structRegistrations[structType>>>=0],rawConstructor=(delete structRegistrations[structType],reg.rawConstructor),rawDestructor=reg.rawDestructor,fieldRecords=reg.fields;whenDependentTypesAreResolved([structType],fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType)),fieldTypes=>{var fields={};return fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName,getterReturnType=fieldTypes[i],getter=field.getter,getterContext=field.getterContext,setterArgumentType=fieldTypes[i+fieldRecords.length],setter=field.setter,setterContext=field.setterContext;fields[fieldName]={read:ptr=>getterReturnType.fromWireType(getter(getterContext,ptr)),write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType.toWireType(destructors,o)),runDestructors(destructors)}}}),[{name:reg.name,fromWireType:function(ptr){var i,rv={};for(i in fields)rv[i]=fields[i].read(ptr);return rawDestructor(ptr),rv},toWireType:function(destructors,o){for(var fieldName in fields)if(!(fieldName in o))throw new TypeError(`Missing field: "${fieldName}"`);var ptr=rawConstructor();for(fieldName in fields)fields[fieldName].write(ptr,o[fieldName]);return null!==destructors&&destructors.push(rawDestructor,ptr),ptr},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:rawDestructor}]})};function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+size)}}function embind_init_charCodes(){for(var codes=new Array(256),i=0;i<256;++i)codes[i]=String.fromCharCode(i);embind_charCodes=codes}var embind_charCodes=void 0;function readLatin1String(ptr){for(var ret="",c=ptr;HEAPU8[c>>>0];)ret+=embind_charCodes[HEAPU8[c++>>>0]];return ret}var BindingError=void 0;function throwBindingError(message){throw new BindingError(message)}function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(rawType||throwBindingError(`type "${name}" must have a positive integer typeid pointer`),registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations)return;throwBindingError(`Cannot register type '${name}' twice`)}registeredTypes[rawType]=registeredInstance,delete typeDependencies[rawType],awaitingDependencies.hasOwnProperty(rawType)&&(options=awaitingDependencies[rawType],delete awaitingDependencies[rawType],options.forEach(cb=>cb()))}function registerType(rawType,registeredInstance,options={}){if(!("argPackAdvance"in registeredInstance))throw new TypeError("registerType registeredInstance requires argPackAdvance");sharedRegisterType(rawType,registeredInstance,options)}function __embind_register_bool(rawType,name,size,trueValue,falseValue){rawType>>>=0,name>>>=0;var shift=getShiftFromSize(size>>>=0);registerType(rawType,{name:name=readLatin1String(name),fromWireType:function(wt){return!!wt},toWireType:function(destructors,o){return o?trueValue:falseValue},argPackAdvance:8,readValueFromPointer:function(pointer){var heap;if(1===size)heap=HEAP8;else if(2===size)heap=HEAP16;else{if(4!==size)throw new TypeError("Unknown boolean type size: "+name);heap=HEAP32}return this.fromWireType(heap[pointer>>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle))return!1;if(!(other instanceof ClassHandle))return!1;for(var leftClass=this.$$.ptrType.registeredClass,left=this.$$.ptr,rightClass=other.$$.ptrType.registeredClass,right=other.$$.ptr;leftClass.baseClass;)left=leftClass.upcast(left),leftClass=leftClass.baseClass;for(;rightClass.baseClass;)right=rightClass.upcast(right),rightClass=rightClass.baseClass;return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){throwBindingError(obj.$$.ptrType.registeredClass.name+" instance already deleted")}var finalizationRegistry=!1;function detachFinalizer(handle){}function runDestructor($$){$$.smartPtr?$$.smartPtrType.rawDestructor($$.smartPtr):$$.ptrType.registeredClass.rawDestructor($$.ptr)}function releaseClassHandle($$){--$$.count.value,0===$$.count.value&&runDestructor($$)}function downcastPointer(ptr,ptrClass,desiredClass){return ptrClass===desiredClass?ptr:void 0===desiredClass.baseClass||null===(ptr=downcastPointer(ptr,ptrClass,desiredClass.baseClass))?null:desiredClass.downcast(ptr)}var registeredPointers={};function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var k,rv=[];for(k in registeredInstances)registeredInstances.hasOwnProperty(k)&&rv.push(registeredInstances[k]);return rv}var deletionQueue=[];function flushPendingDeletes(){for(;deletionQueue.length;){var obj=deletionQueue.pop();obj.$$.deleteScheduled=!1,obj.delete()}}var delayFunction=void 0;function setDelayFunction(fn){delayFunction=fn,deletionQueue.length&&delayFunction&&delayFunction(flushPendingDeletes)}function init_embind(){Module.getInheritedInstanceCount=getInheritedInstanceCount,Module.getLiveInheritedInstances=getLiveInheritedInstances,Module.flushPendingDeletes=flushPendingDeletes,Module.setDelayFunction=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){for(void 0===ptr&&throwBindingError("ptr should not be undefined");class_.baseClass;)ptr=class_.upcast(ptr),class_=class_.baseClass;return ptr}function getInheritedInstance(class_,ptr){return ptr=getBasestPointer(class_,ptr),registeredInstances[ptr]}function makeClassHandle(prototype,record){return record.ptrType&&record.ptr||throwInternalError("makeClassHandle requires ptr and ptrType"),!!record.smartPtrType!=!!record.smartPtr&&throwInternalError("Both smartPtrType and smartPtr must be specified"),record.count={value:1},attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var registeredInstance,dp,rawPointer=this.getPointee(ptr);return rawPointer?void 0!==(registeredInstance=getInheritedInstance(this.registeredClass,rawPointer))?0===registeredInstance.$$.count.value?(registeredInstance.$$.ptr=rawPointer,registeredInstance.$$.smartPtr=ptr,registeredInstance.clone()):(registeredInstance=registeredInstance.clone(),this.destructor(ptr),registeredInstance):(registeredInstance=this.registeredClass.getActualType(rawPointer),!(registeredInstance=registeredPointers[registeredInstance])||(registeredInstance=this.isConst?registeredInstance.constPointerType:registeredInstance.pointerType,null===(dp=downcastPointer(rawPointer,this.registeredClass,registeredInstance.registeredClass)))?makeDefaultHandle.call(this):this.isSmartPointer?makeClassHandle(registeredInstance.registeredClass.instancePrototype,{ptrType:registeredInstance,ptr:dp,smartPtrType:this,smartPtr:ptr}):makeClassHandle(registeredInstance.registeredClass.instancePrototype,{ptrType:registeredInstance,ptr:dp})):(this.destructor(ptr),null);function makeDefaultHandle(){return this.isSmartPointer?makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr}):makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var attachFinalizer=function(handle){return"undefined"==typeof FinalizationRegistry?(attachFinalizer=handle=>handle,handle):(finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)}),detachFinalizer=handle=>finalizationRegistry.unregister(handle),(attachFinalizer=handle=>{var $$=handle.$$;return!!$$.smartPtr&&finalizationRegistry.register(handle,{$$:$$},handle),handle})(handle))};function ClassHandle_clone(){var clone;return this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.preservePointerOnDelete?(this.$$.count.value+=1,this):((clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}))).$$.count.value+=1,clone.$$.deleteScheduled=!1,clone)}function ClassHandle_delete(){this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&throwBindingError("Object already scheduled for deletion"),detachFinalizer(this),releaseClassHandle(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){return this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&throwBindingError("Object already scheduled for deletion"),deletionQueue.push(this),1===deletionQueue.length&&delayFunction&&delayFunction(flushPendingDeletes),this.$$.deleteScheduled=!0,this}function init_ClassHandle(){ClassHandle.prototype.isAliasOf=ClassHandle_isAliasOf,ClassHandle.prototype.clone=ClassHandle_clone,ClassHandle.prototype.delete=ClassHandle_delete,ClassHandle.prototype.isDeleted=ClassHandle_isDeleted,ClassHandle.prototype.deleteLater=ClassHandle_deleteLater}function ClassHandle(){}var char_0=48,char_9=57;function makeLegalFunctionName(name){var f;return void 0===name?"_unknown":(f=(name=name.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0),char_0<=f&&f<=char_9?"_"+name:name)}function createNamedFunction(name,body){return{[name=makeLegalFunctionName(name)]:function(){return body.apply(this,arguments)}}[name]}function ensureOverloadTable(proto,methodName,humanName){var prevFunc;void 0===proto[methodName].overloadTable&&(prevFunc=proto[methodName],proto[methodName]=function(){return proto[methodName].overloadTable.hasOwnProperty(arguments.length)||throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${arguments.length}) - expects one of (${proto[methodName].overloadTable})!`),proto[methodName].overloadTable[arguments.length].apply(this,arguments)},proto[methodName].overloadTable=[],proto[methodName].overloadTable[prevFunc.argCount]=prevFunc)}function exposePublicSymbol(name,value,numArguments){Module.hasOwnProperty(name)?((void 0===numArguments||void 0!==Module[name].overloadTable&&void 0!==Module[name].overloadTable[numArguments])&&throwBindingError(`Cannot register public name '${name}' twice`),ensureOverloadTable(Module,name,name),Module.hasOwnProperty(numArguments)&&throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`),Module[name].overloadTable[numArguments]=value):(Module[name]=value,void 0!==numArguments&&(Module[name].numArguments=numArguments))}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name,this.constructor=constructor,this.instancePrototype=instancePrototype,this.rawDestructor=rawDestructor,this.baseClass=baseClass,this.getActualType=getActualType,this.upcast=upcast,this.downcast=downcast,this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){for(;ptrClass!==desiredClass;)ptrClass.upcast||throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of `+ptrClass.name),ptr=ptrClass.upcast(ptr),ptrClass=ptrClass.baseClass;return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name);var handleClass=handle.$$.ptrType.registeredClass;return upcastPointer(handle.$$.ptr,handleClass,this.registeredClass)}function genericPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),this.isSmartPointer?(ptr=this.rawConstructor(),null!==destructors&&destructors.push(this.rawDestructor,ptr),ptr):0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&handle.$$.ptrType.isConst&&throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType||handle.$$.ptrType).name} to parameter type `+this.name);var clonedHandle,ptr,handleClass=handle.$$.ptrType.registeredClass;if(ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass),this.isSmartPointer)switch(void 0===handle.$$.smartPtr&&throwBindingError("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:handle.$$.smartPtrType===this?ptr=handle.$$.smartPtr:throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType||handle.$$.ptrType).name} to parameter type `+this.name);break;case 1:ptr=handle.$$.smartPtr;break;case 2:handle.$$.smartPtrType===this?ptr=handle.$$.smartPtr:(clonedHandle=handle.clone(),ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle.delete()})),null!==destructors&&destructors.push(this.rawDestructor,ptr));break;default:throwBindingError("Unsupporting sharing policy")}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name),handle.$$.ptrType.isConst&&throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type `+this.name);var handleClass=handle.$$.ptrType.registeredClass;return upcastPointer(handle.$$.ptr,handleClass,this.registeredClass)}function RegisteredPointer_getPointee(ptr){return ptr=this.rawGetPointee?this.rawGetPointee(ptr):ptr}function RegisteredPointer_destructor(ptr){this.rawDestructor&&this.rawDestructor(ptr)}function RegisteredPointer_deleteObject(handle){null!==handle&&handle.delete()}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee,RegisteredPointer.prototype.destructor=RegisteredPointer_destructor,RegisteredPointer.prototype.argPackAdvance=8,RegisteredPointer.prototype.readValueFromPointer=simpleReadValueFromPointer,RegisteredPointer.prototype.deleteObject=RegisteredPointer_deleteObject,RegisteredPointer.prototype.fromWireType=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name,this.registeredClass=registeredClass,this.isReference=isReference,this.isConst=isConst,this.isSmartPointer=isSmartPointer,this.pointeeType=pointeeType,this.sharingPolicy=sharingPolicy,this.rawGetPointee=rawGetPointee,this.rawConstructor=rawConstructor,this.rawShare=rawShare,this.rawDestructor=rawDestructor,isSmartPointer||void 0!==registeredClass.baseClass?this.toWireType=genericPointerToWireType:(this.toWireType=isConst?constNoSmartPtrRawPointerToWireType:nonConstNoSmartPtrRawPointerToWireType,this.destructorFunction=null)}function replacePublicSymbol(name,value,numArguments){Module.hasOwnProperty(name)||throwInternalError("Replacing nonexistant public symbol"),void 0!==Module[name].overloadTable&&void 0!==numArguments?Module[name].overloadTable[numArguments]=value:(Module[name]=value,Module[name].argCount=numArguments)}var dynCallLegacy=(sig,ptr,args)=>{sig=Module["dynCall_"+sig];return args&&args.length?sig.apply(null,[ptr].concat(args)):sig.call(null,ptr)},wasmTableMirror=[],getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];return func||(funcPtr>=wasmTableMirror.length&&(wasmTableMirror.length=funcPtr+1),wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)),func},dynCall=(sig,ptr,args)=>{return sig.includes("j")?dynCallLegacy(sig,ptr,args):getWasmTableEntry(ptr).apply(null,args)},getDynCaller=(sig,ptr)=>{var argCache=[];return function(){return argCache.length=0,Object.assign(argCache,arguments),dynCall(sig,ptr,argCache)}};function embind__requireFunction(signature,rawFunction){var fp=(signature=readLatin1String(signature)).includes("j")?getDynCaller(signature,rawFunction):getWasmTableEntry(rawFunction);return"function"!=typeof fp&&throwBindingError(`unknown function pointer with signature ${signature}: `+rawFunction),fp}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName,this.message=message;message=new Error(message).stack;void 0!==message&&(this.stack=this.toString()+"\n"+message.replace(/^Error(:[^\n]*)?\n/,""))});return errorClass.prototype=Object.create(baseErrorType.prototype),(errorClass.prototype.constructor=errorClass).prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},errorClass}var UnboundTypeError=void 0;function getTypeName(type){var type=___getTypeName(type),rv=readLatin1String(type);return _free(type),rv}function throwUnboundTypeError(message,types){var unboundTypes=[],seen={};throw types.forEach(function visit(type){seen[type]||registeredTypes[type]||(typeDependencies[type]?typeDependencies[type].forEach(visit):(unboundTypes.push(type),seen[type]=!0))}),new UnboundTypeError(message+": "+unboundTypes.map(getTypeName).join([", "]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){rawType>>>=0,rawPointerType>>>=0,rawConstPointerType>>>=0,baseClassRawType>>>=0,getActualTypeSignature>>>=0,getActualType>>>=0,upcastSignature>>>=0,upcast>>>=0,downcastSignature>>>=0,downcast>>>=0,destructorSignature>>>=0,rawDestructor>>>=0,name=readLatin1String(name>>>=0),getActualType=embind__requireFunction(getActualTypeSignature,getActualType),upcast=upcast&&embind__requireFunction(upcastSignature,upcast),downcast=downcast&&embind__requireFunction(downcastSignature,downcast),rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(`Cannot construct ${name} due to unbound types`,[baseClassRawType])}),whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0],base=baseClassRawType?(baseClass=base.registeredClass).instancePrototype:ClassHandle.prototype;var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype)throw new BindingError("Use 'new' to construct "+name);if(void 0===registeredClass.constructor_body)throw new BindingError(name+" has no accessible constructor");var body=registeredClass.constructor_body[arguments.length];if(void 0===body)throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`);return body.apply(this,arguments)}),instancePrototype=Object.create(base,{constructor:{value:constructor}}),registeredClass=(constructor.prototype=instancePrototype,new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast)),base=(registeredClass.baseClass&&(void 0===registeredClass.baseClass.__derivedClasses&&(registeredClass.baseClass.__derivedClasses=[]),registeredClass.baseClass.__derivedClasses.push(registeredClass)),new RegisteredPointer(name,registeredClass,!0,!1,!1)),baseClass=new RegisteredPointer(name+"*",registeredClass,!1,!1,!1),constPointerConverter=new RegisteredPointer(name+" const*",registeredClass,!1,!0,!1);return registeredPointers[rawType]={pointerType:baseClass,constPointerType:constPointerConverter},replacePublicSymbol(legalFunctionName,constructor),[base,baseClass,constPointerConverter]})}function heap32VectorToArray(count,firstElement){for(var array=[],i=0;i<count;i++)array.push(HEAPU32[firstElement+4*i>>>2]);return array}function newFunc(constructor,argumentList){var dummy;if(constructor instanceof Function)return(dummy=createNamedFunction(constructor.name||"unknownFunctionName",function(){})).prototype=constructor.prototype,dummy=new dummy,(argumentList=constructor.apply(dummy,argumentList))instanceof Object?argumentList:dummy;throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`)}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){for(var argCount=argTypes.length,isClassMethodFunc=(argCount<2&&throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!"),null!==argTypes[1]&&null!==classType),needsDestructorStack=!1,i=1;i<argTypes.length;++i)if(null!==argTypes[i]&&void 0===argTypes[i].destructorFunction){needsDestructorStack=!0;break}for(var returns="void"!==argTypes[0].name,argsList="",argsListWired="",i=0;i<argCount-2;++i)argsList+=(0!==i?", ":"")+"arg"+i,argsListWired+=(0!==i?", ":"")+"arg"+i+"Wired";var invokerFnBody=`
        return function ${makeLegalFunctionName(humanName)}(${argsList}) {
        if (arguments.length !== ${argCount-2}) {
          throwBindingError('function ${humanName} called with ${arguments.length} arguments, expected ${argCount-2} args!');
        }`,dtorStack=(needsDestructorStack&&(invokerFnBody+="var destructors = [];\n"),needsDestructorStack?"destructors":"null"),args1=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];isClassMethodFunc&&(invokerFnBody+="var thisWired = classParam.toWireType("+dtorStack+", this);\n");for(i=0;i<argCount-2;++i)invokerFnBody+="var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n",args1.push("argType"+i),args2.push(argTypes[i+2]);if(invokerFnBody+=(returns||isAsync?"var rv = ":"")+"invoker(fn"+(0<(argsListWired=isClassMethodFunc?"thisWired"+(0<argsListWired.length?", ":"")+argsListWired:argsListWired).length?", ":"")+argsListWired+");\n",needsDestructorStack)invokerFnBody+="runDestructors(destructors);\n";else for(i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=1===i?"thisWired":"arg"+(i-2)+"Wired";null!==argTypes[i].destructorFunction&&(invokerFnBody+=paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n",args1.push(paramName+"_dtor"),args2.push(argTypes[i].destructorFunction))}return returns&&(invokerFnBody+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),args1.push(invokerFnBody+="}\n"),newFunc(Function,args1).apply(null,args2)}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){rawClassType>>>=0,invokerSignature>>>=0,invoker>>>=0,rawConstructor>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);invoker=embind__requireFunction(invokerSignature,invoker),whenDependentTypesAreResolved([],[rawClassType],function(classType){var humanName="constructor "+(classType=classType[0]).name;if(void 0===classType.registeredClass.constructor_body&&(classType.registeredClass.constructor_body=[]),void 0!==classType.registeredClass.constructor_body[argCount-1])throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`,rawArgTypes)},whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){return argTypes.splice(1,0,null),classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor),[]}),[]})}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual,isAsync){rawClassType>>>=0,methodName>>>=0,invokerSignature>>>=0,rawInvoker>>>=0,context>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);methodName=readLatin1String(methodName),rawInvoker=embind__requireFunction(invokerSignature,rawInvoker),whenDependentTypesAreResolved([],[rawClassType],function(classType){var humanName=(classType=classType[0]).name+"."+methodName;function unboundTypesHandler(){throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`,rawArgTypes)}methodName.startsWith("@@")&&(methodName=Symbol[methodName.substring(2)]),isPureVirtual&&classType.registeredClass.pureVirtualFunctions.push(methodName);var proto=classType.registeredClass.instancePrototype,method=proto[methodName];return void 0===method||void 0===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2?(unboundTypesHandler.argCount=argCount-2,unboundTypesHandler.className=classType.name,proto[methodName]=unboundTypesHandler):(ensureOverloadTable(proto,methodName,humanName),proto[methodName].overloadTable[argCount-2]=unboundTypesHandler),whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context,isAsync);return void 0===proto[methodName].overloadTable?(argTypes.argCount=argCount-2,proto[methodName]=argTypes):proto[methodName].overloadTable[argCount-2]=argTypes,[]}),[]})}function handleAllocatorInit(){Object.assign(HandleAllocator.prototype,{get(id){return this.allocated[id]},has(id){return void 0!==this.allocated[id]},allocate(handle){var id=this.freelist.pop()||this.allocated.length;return this.allocated[id]=handle,id},free(id){this.allocated[id]=void 0,this.freelist.push(id)}})}function HandleAllocator(){this.allocated=[void 0],this.freelist=[]}var emval_handles=new HandleAllocator;function __emval_decref(handle){(handle>>>=0)>=emval_handles.reserved&&0==--emval_handles.get(handle).refcount&&emval_handles.free(handle)}function count_emval_handles(){for(var count=0,i=emval_handles.reserved;i<emval_handles.allocated.length;++i)void 0!==emval_handles.allocated[i]&&++count;return count}function init_emval(){emval_handles.allocated.push({value:void 0},{value:null},{value:!0},{value:!1}),emval_handles.reserved=emval_handles.allocated.length,Module.count_emval_handles=count_emval_handles}var Emval={toValue:handle=>(handle||throwBindingError("Cannot use deleted val. handle = "+handle),emval_handles.get(handle).value),toHandle:value=>{switch(value){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return emval_handles.allocate({refcount:1,value:value})}}};function __embind_register_emval(rawType,name){registerType(rawType>>>=0,{name:name=readLatin1String(name>>>=0),fromWireType:function(handle){var rv=Emval.toValue(handle);return __emval_decref(handle),rv},toWireType:function(destructors,value){return Emval.toHandle(value)},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:null})}function embindRepr(v){var t;return null===v?"null":"object"==(t=typeof v)||"array"==t||"function"==t?v.toString():""+v}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this.fromWireType(HEAPF32[pointer>>>2])};case 3:return function(pointer){return this.fromWireType(HEAPF64[pointer>>>3])};default:throw new TypeError("Unknown float type: "+name)}}function __embind_register_float(rawType,name,size){rawType>>>=0,name>>>=0;size=getShiftFromSize(size>>>=0);registerType(rawType,{name:name=readLatin1String(name),fromWireType:function(value){return value},toWireType:function(destructors,value){return value},argPackAdvance:8,readValueFromPointer:floatReadValueFromPointer(name,size),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync){name>>>=0,signature>>>=0,rawInvoker>>>=0,fn>>>=0;var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);name=readLatin1String(name),rawInvoker=embind__requireFunction(signature,rawInvoker),exposePublicSymbol(name,function(){throwUnboundTypeError(`Cannot call ${name} due to unbound types`,argTypes)},argCount-1),whenDependentTypesAreResolved([],argTypes,function(argTypes){argTypes=[argTypes[0],null].concat(argTypes.slice(1));return replacePublicSymbol(name,craftInvokerFunction(name,argTypes,null,rawInvoker,fn,isAsync),argCount-1),[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function(pointer){return HEAP8[pointer>>>0]}:function(pointer){return HEAPU8[pointer>>>0]};case 1:return signed?function(pointer){return HEAP16[pointer>>>1]}:function(pointer){return HEAPU16[pointer>>>1]};case 2:return signed?function(pointer){return HEAP32[pointer>>>2]}:function(pointer){return HEAPU32[pointer>>>2]};default:throw new TypeError("Unknown integer type: "+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){primitiveType>>>=0,size>>>=0,name=readLatin1String(name>>>=0),-1===maxRange&&(maxRange=4294967295);var bitshift,maxRange=getShiftFromSize(size),fromWireType=value=>value,size=(0===minRange&&(bitshift=32-8*size,fromWireType=value=>value<<bitshift>>>bitshift),name.includes("unsigned")),size=size?function(destructors,value){return this.name,value>>>0}:function(destructors,value){return this.name,value};registerType(primitiveType,{name:name,fromWireType:fromWireType,toWireType:size,argPackAdvance:8,readValueFromPointer:integerReadValueFromPointer(name,maxRange,0!==minRange),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){rawType>>>=0,name>>>=0;var TA=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][dataTypeIndex];function decodeMemoryView(handle){var heap=HEAPU32,size=heap[(handle>>=2)>>>0],handle=heap[handle+1>>>0];return new TA(heap.buffer,handle,size)}registerType(rawType,{name:name=readLatin1String(name),fromWireType:decodeMemoryView,argPackAdvance:8,readValueFromPointer:decodeMemoryView},{ignoreDuplicateRegistrations:!0})}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(0<maxBytesToWrite))return 0;for(var startIdx=outIdx>>>=0,endIdx=outIdx+maxBytesToWrite-1,i=0;i<str.length;++i){var u=str.charCodeAt(i);if((u=55296<=u&&u<=57343?65536+((1023&u)<<10)|1023&str.charCodeAt(++i):u)<=127){if(endIdx<=outIdx)break;heap[outIdx++>>>0]=u}else{if(u<=2047){if(endIdx<=outIdx+1)break;heap[outIdx++>>>0]=192|u>>6}else{if(u<=65535){if(endIdx<=outIdx+2)break;heap[outIdx++>>>0]=224|u>>12}else{if(endIdx<=outIdx+3)break;heap[outIdx++>>>0]=240|u>>18,heap[outIdx++>>>0]=128|u>>12&63}heap[outIdx++>>>0]=128|u>>6&63}heap[outIdx++>>>0]=128|63&u}}return heap[outIdx>>>0]=0,outIdx-startIdx},stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite),lengthBytesUTF8=str=>{for(var len=0,i=0;i<str.length;++i){var c=str.charCodeAt(i);c<=127?len++:c<=2047?len+=2:55296<=c&&c<=57343?(len+=4,++i):len+=3}return len};function __embind_register_std_string(rawType,name){rawType>>>=0;var stdStringIsUTF8="std::string"===(name=readLatin1String(name>>>=0));registerType(rawType,{name:name,fromWireType:function(value){var length=HEAPU32[value>>>2],payload=value+4;if(stdStringIsUTF8)for(var decodeStartPtr=payload,i=0;i<=length;++i){var stringSegment,str,currentBytePtr=payload+i;i!=length&&0!=HEAPU8[currentBytePtr>>>0]||(stringSegment=UTF8ToString(decodeStartPtr,currentBytePtr-decodeStartPtr),str=void 0===str?stringSegment:str+String.fromCharCode(0)+stringSegment,decodeStartPtr=currentBytePtr+1)}else{for(var a=new Array(length),i=0;i<length;++i)a[i]=String.fromCharCode(HEAPU8[payload+i>>>0]);str=a.join("")}return _free(value),str},toWireType:function(destructors,value){var length,valueIsOfTypeString="string"==typeof(value=value instanceof ArrayBuffer?new Uint8Array(value):value),base=(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array||throwBindingError("Cannot pass non-string to std::string"),length=stdStringIsUTF8&&valueIsOfTypeString?lengthBytesUTF8(value):value.length,_malloc(4+length+1)),ptr=base+4;if(HEAPU32[base>>>2]=length,stdStringIsUTF8&&valueIsOfTypeString)stringToUTF8(value,ptr,length+1);else if(valueIsOfTypeString)for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);255<charCode&&(_free(ptr),throwBindingError("String has UTF-16 code units that do not fit in 8 bits")),HEAPU8[ptr+i>>>0]=charCode}else for(i=0;i<length;++i)HEAPU8[ptr+i>>>0]=value[i];return null!==destructors&&destructors.push(_free,base),base},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0,UTF16ToString=(ptr,maxBytesToRead)=>{for(var endPtr,idx=ptr>>1,maxIdx=idx+maxBytesToRead/2;!(maxIdx<=idx)&&HEAPU16[idx>>>0];)++idx;if(32<(endPtr=idx<<1)-ptr&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr>>>0,endPtr>>>0));for(var str="",i=0;!(maxBytesToRead/2<=i);++i){var codeUnit=HEAP16[ptr+2*i>>>1];if(0==codeUnit)break;str+=String.fromCharCode(codeUnit)}return str},stringToUTF16=(str,outPtr,maxBytesToWrite)=>{if((maxBytesToWrite=void 0===maxBytesToWrite?2147483647:maxBytesToWrite)<2)return 0;for(var startPtr=outPtr,numCharsToWrite=(maxBytesToWrite-=2)<2*str.length?maxBytesToWrite/2:str.length,i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>>1]=codeUnit,outPtr+=2}return HEAP16[outPtr>>>1]=0,outPtr-startPtr},lengthBytesUTF16=str=>2*str.length,UTF32ToString=(ptr,maxBytesToRead)=>{for(var i=0,str="";!(maxBytesToRead/4<=i);){var ch,utf32=HEAP32[ptr+4*i>>>2];if(0==utf32)break;++i,65536<=utf32?(ch=utf32-65536,str+=String.fromCharCode(55296|ch>>10,56320|1023&ch)):str+=String.fromCharCode(utf32)}return str},stringToUTF32=(str,outPtr,maxBytesToWrite)=>{if((maxBytesToWrite=void 0===maxBytesToWrite?2147483647:maxBytesToWrite)<4)return 0;for(var startPtr=outPtr>>>=0,endPtr=startPtr+maxBytesToWrite-4,i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(55296<=codeUnit&&codeUnit<=57343&&(codeUnit=65536+((1023&codeUnit)<<10)|1023&str.charCodeAt(++i)),HEAP32[outPtr>>>2]=codeUnit,endPtr<(outPtr+=4)+4)break}return HEAP32[outPtr>>>2]=0,outPtr-startPtr},lengthBytesUTF32=str=>{for(var len=0,i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);55296<=codeUnit&&codeUnit<=57343&&++i,len+=4}return len},__embind_register_std_wstring=function(rawType,charSize,name){var decodeString,encodeString,getHeap,lengthBytesUTF,shift;rawType>>>=0,charSize>>>=0,name=readLatin1String(name>>>=0),2===charSize?(decodeString=UTF16ToString,encodeString=stringToUTF16,lengthBytesUTF=lengthBytesUTF16,getHeap=()=>HEAPU16,shift=1):4===charSize&&(decodeString=UTF32ToString,encodeString=stringToUTF32,lengthBytesUTF=lengthBytesUTF32,getHeap=()=>HEAPU32,shift=2),registerType(rawType,{name:name,fromWireType:function(value){for(var length=HEAPU32[value>>>2],HEAP=getHeap(),decodeStartPtr=value+4,i=0;i<=length;++i){var stringSegment,str,currentBytePtr=value+4+i*charSize;i!=length&&0!=HEAP[currentBytePtr>>>shift]||(stringSegment=decodeString(decodeStartPtr,currentBytePtr-decodeStartPtr),str=void 0===str?stringSegment:str+String.fromCharCode(0)+stringSegment,decodeStartPtr=currentBytePtr+charSize)}return _free(value),str},toWireType:function(destructors,value){"string"!=typeof value&&throwBindingError("Cannot pass non-string to C++ string type "+name);var length=lengthBytesUTF(value),ptr=_malloc(4+length+charSize);return HEAPU32[ptr>>>2]=length>>shift,encodeString(value,ptr+4,length+charSize),null!==destructors&&destructors.push(_free,ptr),ptr},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})};function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){constructorSignature>>>=0,rawConstructor>>>=0,destructorSignature>>>=0,rawDestructor>>>=0,structRegistrations[rawType>>>=0]={name:readLatin1String(name>>>=0),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){getterReturnType>>>=0,getterSignature>>>=0,getter>>>=0,getterContext>>>=0,setterArgumentType>>>=0,setterSignature>>>=0,setter>>>=0,setterContext>>>=0,structRegistrations[structType>>>=0].fields.push({fieldName:readLatin1String(fieldName>>>=0),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){registerType(rawType>>>=0,{isVoid:!0,name:name=readLatin1String(name>>>=0),argPackAdvance:0,fromWireType:function(){},toWireType:function(destructors,o){}})}function __emval_incref(handle){4<(handle>>>=0)&&(emval_handles.get(handle).refcount+=1)}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];return void 0===symbol?readLatin1String(address):symbol}function __emval_new_cstring(v){return Emval.toHandle(getStringOrSymbol(v>>>=0))}function __emval_new_object(){return Emval.toHandle({})}function __emval_set_property(handle,key,value){key>>>=0,value>>>=0,handle=Emval.toValue(handle>>>=0),key=Emval.toValue(key),value=Emval.toValue(value),handle[key]=value}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];return void 0===impl&&throwBindingError(humanName+" has unknown type "+getTypeName(rawType)),impl}function __emval_take_value(type,arg){arg>>>=0;type=(type=requireRegisteredType(type>>>=0,"_emval_take_value")).readValueFromPointer(arg);return Emval.toHandle(type)}var isLeapYear=year=>year%4==0&&(year%100!=0||year%400==0),MONTH_DAYS_LEAP_CUMULATIVE=[0,31,60,91,121,152,182,213,244,274,305,335],MONTH_DAYS_REGULAR_CUMULATIVE=[0,31,59,90,120,151,181,212,243,273,304,334],ydayFromDate=date=>{return(isLeapYear(date.getFullYear())?MONTH_DAYS_LEAP_CUMULATIVE:MONTH_DAYS_REGULAR_CUMULATIVE)[date.getMonth()]+date.getDate()-1};function __localtime_js(time_low,time_high,tmPtr){var time_low=convertI32PairToI53Checked(time_low,time_high),time_high=(tmPtr>>>=0,new Date(1e3*time_low)),time_low=(HEAP32[tmPtr>>>2]=time_high.getSeconds(),HEAP32[tmPtr+4>>>2]=time_high.getMinutes(),HEAP32[tmPtr+8>>>2]=time_high.getHours(),HEAP32[tmPtr+12>>>2]=time_high.getDate(),HEAP32[tmPtr+16>>>2]=time_high.getMonth(),HEAP32[tmPtr+20>>>2]=time_high.getFullYear()-1900,HEAP32[tmPtr+24>>>2]=time_high.getDay(),0|ydayFromDate(time_high)),time_low=(HEAP32[tmPtr+28>>>2]=time_low,HEAP32[tmPtr+36>>>2]=-60*time_high.getTimezoneOffset(),new Date(time_high.getFullYear(),0,1)),summerOffset=new Date(time_high.getFullYear(),6,1).getTimezoneOffset(),time_low=time_low.getTimezoneOffset(),time_high=0|(summerOffset!=time_low&&time_high.getTimezoneOffset()==Math.min(time_low,summerOffset));HEAP32[tmPtr+32>>>2]=time_high}var stringToNewUTF8=str=>{var size=lengthBytesUTF8(str)+1,ret=_malloc(size);return ret&&stringToUTF8(str,ret,size),ret};function __tzset_js(timezone,daylight,tzname){timezone>>>=0,daylight>>>=0,tzname>>>=0;var currentYear=(new Date).getFullYear(),winter=new Date(currentYear,0,1),currentYear=new Date(currentYear,6,1),winterOffset=winter.getTimezoneOffset(),summerOffset=currentYear.getTimezoneOffset(),stdTimezoneOffset=Math.max(winterOffset,summerOffset);function extractZone(date){date=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return date?date[1]:"GMT"}HEAPU32[timezone>>>2]=60*stdTimezoneOffset,HEAP32[daylight>>>2]=Number(winterOffset!=summerOffset);timezone=extractZone(winter),stdTimezoneOffset=extractZone(currentYear),daylight=stringToNewUTF8(timezone),winter=stringToNewUTF8(stdTimezoneOffset);summerOffset<winterOffset?(HEAPU32[tzname>>>2]=daylight,HEAPU32[tzname+4>>>2]=winter):(HEAPU32[tzname>>>2]=winter,HEAPU32[tzname+4>>>2]=daylight)}var _abort=()=>{abort("")};function _emscripten_date_now(){return Date.now()}function _emscripten_memcpy_big(dest,src,num){return HEAPU8.copyWithin((dest>>>=0)>>>0,(src>>>=0)>>>0,src+(num>>>=0)>>>0)}var getHeapMax=()=>4294901760,growMemory=size=>{size=size-wasmMemory.buffer.byteLength+65535>>>16;try{return wasmMemory.grow(size),updateMemoryViews(),1}catch(e){}};function _emscripten_resize_heap(requestedSize){requestedSize>>>=0;var oldSize=HEAPU8.length,maxHeapSize=getHeapMax();if(!(maxHeapSize<requestedSize))for(var multiple,cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown),overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296),overGrownHeapSize=Math.min(maxHeapSize,(overGrownHeapSize=Math.max(requestedSize,overGrownHeapSize))+((multiple=65536)-overGrownHeapSize%multiple)%multiple);if(growMemory(overGrownHeapSize))return!0}return!1}function _emscripten_run_script(ptr){ptr>>>=0,eval(UTF8ToString(ptr))}var ENV={},getExecutableName=()=>thisProgram||"./this.program",getEnvStrings=()=>{if(!getEnvStrings.strings){var env={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:getExecutableName()};for(x in ENV)void 0===ENV[x]?delete env[x]:env[x]=ENV[x];var x,strings=[];for(x in env)strings.push(x+"="+env[x]);getEnvStrings.strings=strings}return getEnvStrings.strings},stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i)HEAP8[buffer++>>>0]=str.charCodeAt(i);HEAP8[buffer>>>0]=0},PATH={isAbs:path=>"/"===path.charAt(0),splitPath:filename=>{return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{for(var up=0,i=parts.length-1;0<=i;i--){var last=parts[i];"."===last?parts.splice(i,1):".."===last?(parts.splice(i,1),up++):up&&(parts.splice(i,1),up--)}if(allowAboveRoot)for(;up;up--)parts.unshift("..");return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash="/"===path.substr(-1);return(path=(path=PATH.normalizeArray(path.split("/").filter(p=>!!p),!isAbsolute).join("/"))||isAbsolute?path:".")&&trailingSlash&&(path+="/"),(isAbsolute?"/":"")+path},dirname:path=>{var path=PATH.splitPath(path),root=path[0],path=path[1];return root||path?root+(path=path&&path.substr(0,path.length-1)):"."},basename:path=>{var lastSlash;return"/"===path?"/":-1===(lastSlash=(path=(path=PATH.normalize(path)).replace(/\/$/,"")).lastIndexOf("/"))?path:path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join("/"))},join2:(l,r)=>PATH.normalize(l+"/"+r)},initRandomFill=()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return view=>crypto.getRandomValues(view);if(ENVIRONMENT_IS_NODE)try{var randomBytes,crypto_module=require("crypto");return crypto_module.randomFillSync?view=>crypto_module.randomFillSync(view):(randomBytes=crypto_module.randomBytes,view=>(view.set(randomBytes(view.byteLength)),view))}catch(e){}abort("initRandomDevice")},randomFill=view=>(randomFill=initRandomFill())(view),PATH_FS={resolve:function(){for(var resolvedPath="",resolvedAbsolute=!1,i=arguments.length-1;-1<=i&&!resolvedAbsolute;i--){var path=0<=i?arguments[i]:FS.cwd();if("string"!=typeof path)throw new TypeError("Arguments to path.resolve must be strings");if(!path)return"";resolvedPath=path+"/"+resolvedPath,resolvedAbsolute=PATH.isAbs(path)}return(resolvedAbsolute?"/":"")+(resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(p=>!!p),!resolvedAbsolute).join("/"))||"."},relative:(from,to)=>{function trim(arr){for(var start=0;start<arr.length&&""===arr[start];start++);for(var end=arr.length-1;0<=end&&""===arr[end];end--);return end<start?[]:arr.slice(start,end-start+1)}from=PATH_FS.resolve(from).substr(1),to=PATH_FS.resolve(to).substr(1);for(var fromParts=trim(from.split("/")),toParts=trim(to.split("/")),length=Math.min(fromParts.length,toParts.length),samePartsLength=length,i=0;i<length;i++)if(fromParts[i]!==toParts[i]){samePartsLength=i;break}for(var outputParts=[],i=samePartsLength;i<fromParts.length;i++)outputParts.push("..");return(outputParts=outputParts.concat(toParts.slice(samePartsLength))).join("/")}},FS_stdin_getChar_buffer=[];function intArrayFromString(stringy,dontAddNull,length){length=0<length?length:lengthBytesUTF8(stringy)+1,length=new Array(length),stringy=stringToUTF8Array(stringy,length,0,length.length);return dontAddNull&&(length.length=stringy),length}var FS_stdin_getChar=()=>{if(!FS_stdin_getChar_buffer.length){var result=null;if(ENVIRONMENT_IS_NODE){var buf=Buffer.alloc(256),bytesRead=0,fd=process.stdin.fd;try{bytesRead=fs.readSync(fd,buf,0,256,-1)}catch(e){if(!e.toString().includes("EOF"))throw e;bytesRead=0}result=0<bytesRead?buf.slice(0,bytesRead).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(result=window.prompt("Input: "))&&(result+="\n"):"function"==typeof readline&&null!==(result=readline())&&(result+="\n");if(!result)return null;FS_stdin_getChar_buffer=intArrayFromString(result,!0)}return FS_stdin_getChar_buffer.shift()},TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops},FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty)throw new FS.ErrnoError(43);stream.tty=tty,stream.seekable=!1},close:function(stream){stream.tty.ops.fsync(stream.tty)},fsync:function(stream){stream.tty.ops.fsync(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char)throw new FS.ErrnoError(60);for(var result,bytesRead=0,i=0;i<length;i++){try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(void 0===result&&0===bytesRead)throw new FS.ErrnoError(6);if(null==result)break;bytesRead++,buffer[offset+i]=result}return bytesRead&&(stream.node.timestamp=Date.now()),bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char)throw new FS.ErrnoError(60);try{for(var i=0;i<length;i++)stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}return length&&(stream.node.timestamp=Date.now()),i}},default_tty_ops:{get_char:function(tty){return FS_stdin_getChar()},put_char:function(tty,val){null===val||10===val?(out(UTF8ArrayToString(tty.output,0)),tty.output=[]):0!=val&&tty.output.push(val)},fsync:function(tty){tty.output&&0<tty.output.length&&(out(UTF8ArrayToString(tty.output,0)),tty.output=[])},ioctl_tcgets:function(tty){return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ioctl_tcsets:function(tty,optional_actions,data){return 0},ioctl_tiocgwinsz:function(tty){return[24,80]}},default_tty1_ops:{put_char:function(tty,val){null===val||10===val?(err(UTF8ArrayToString(tty.output,0)),tty.output=[]):0!=val&&tty.output.push(val)},fsync:function(tty){tty.output&&0<tty.output.length&&(err(UTF8ArrayToString(tty.output,0)),tty.output=[])}}},mmapAlloc=size=>{abort()},MEMFS={ops_table:null,mount(mount){return MEMFS.createNode(null,"/",16895,0)},createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode))throw new FS.ErrnoError(63);MEMFS.ops_table||(MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}});mode=FS.createNode(parent,name,mode,dev);return FS.isDir(mode.mode)?(mode.node_ops=MEMFS.ops_table.dir.node,mode.stream_ops=MEMFS.ops_table.dir.stream,mode.contents={}):FS.isFile(mode.mode)?(mode.node_ops=MEMFS.ops_table.file.node,mode.stream_ops=MEMFS.ops_table.file.stream,mode.usedBytes=0,mode.contents=null):FS.isLink(mode.mode)?(mode.node_ops=MEMFS.ops_table.link.node,mode.stream_ops=MEMFS.ops_table.link.stream):FS.isChrdev(mode.mode)&&(mode.node_ops=MEMFS.ops_table.chrdev.node,mode.stream_ops=MEMFS.ops_table.chrdev.stream),mode.timestamp=Date.now(),parent&&(parent.contents[name]=mode,parent.timestamp=mode.timestamp),mode},getFileDataAsTypedArray(node){return node.contents?node.contents.subarray?node.contents.subarray(0,node.usedBytes):new Uint8Array(node.contents):new Uint8Array(0)},expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;newCapacity<=prevCapacity||(newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<1048576?2:1.125)>>>0),0!=prevCapacity&&(newCapacity=Math.max(newCapacity,256)),prevCapacity=node.contents,node.contents=new Uint8Array(newCapacity),0<node.usedBytes&&node.contents.set(prevCapacity.subarray(0,node.usedBytes),0))},resizeFileStorage(node,newSize){var oldContents;node.usedBytes!=newSize&&(0==newSize?(node.contents=null,node.usedBytes=0):(oldContents=node.contents,node.contents=new Uint8Array(newSize),oldContents&&node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes))),node.usedBytes=newSize))},node_ops:{getattr(node){var attr={};return attr.dev=FS.isChrdev(node.mode)?node.id:1,attr.ino=node.id,attr.mode=node.mode,attr.nlink=1,attr.uid=0,attr.gid=0,attr.rdev=node.rdev,FS.isDir(node.mode)?attr.size=4096:FS.isFile(node.mode)?attr.size=node.usedBytes:FS.isLink(node.mode)?attr.size=node.link.length:attr.size=0,attr.atime=new Date(node.timestamp),attr.mtime=new Date(node.timestamp),attr.ctime=new Date(node.timestamp),attr.blksize=4096,attr.blocks=Math.ceil(attr.size/attr.blksize),attr},setattr(node,attr){void 0!==attr.mode&&(node.mode=attr.mode),void 0!==attr.timestamp&&(node.timestamp=attr.timestamp),void 0!==attr.size&&MEMFS.resizeFileStorage(node,attr.size)},lookup(parent,name){throw FS.genericErrors[44]},mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node)for(var i in new_node.contents)throw new FS.ErrnoError(55)}delete old_node.parent.contents[old_node.name],old_node.parent.timestamp=Date.now(),old_node.name=new_name,new_dir.contents[new_name]=old_node,new_dir.timestamp=old_node.parent.timestamp,old_node.parent=new_dir},unlink(parent,name){delete parent.contents[name],parent.timestamp=Date.now()},rmdir(parent,name){for(var i in FS.lookupNode(parent,name).contents)throw new FS.ErrnoError(55);delete parent.contents[name],parent.timestamp=Date.now()},readdir(node){var key,entries=[".",".."];for(key in node.contents)node.contents.hasOwnProperty(key)&&entries.push(key);return entries},symlink(parent,newname,oldpath){parent=MEMFS.createNode(parent,newname,41471,0);return parent.link=oldpath,parent},readlink(node){if(FS.isLink(node.mode))return node.link;throw new FS.ErrnoError(28)}},stream_ops:{read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(8<size&&contents.subarray)buffer.set(contents.subarray(position,position+size),offset);else for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i];return size},write(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer&&(canOwn=!1),!length)return 0;var node=stream.node;if(node.timestamp=Date.now(),buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn)return node.contents=buffer.subarray(offset,offset+length),node.usedBytes=length;if(0===node.usedBytes&&0===position)return node.contents=buffer.slice(offset,offset+length),node.usedBytes=length;if(position+length<=node.usedBytes)return node.contents.set(buffer.subarray(offset,offset+length),position),length}if(MEMFS.expandFileStorage(node,position+length),node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else for(var i=0;i<length;i++)node.contents[position+i]=buffer[offset+i];return node.usedBytes=Math.max(node.usedBytes,position+length),length},llseek(stream,offset,whence){if(1===whence?offset+=stream.position:2===whence&&FS.isFile(stream.node.mode)&&(offset+=stream.node.usedBytes),offset<0)throw new FS.ErrnoError(28);return offset},allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length),stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode))throw new FS.ErrnoError(43);var ptr,allocated,stream=stream.node.contents;if(2&flags||stream.buffer!==HEAP8.buffer){if((0<position||position+length<stream.length)&&(stream=stream.subarray?stream.subarray(position,position+length):Array.prototype.slice.call(stream,position,position+length)),allocated=!0,!(ptr=mmapAlloc(length)))throw new FS.ErrnoError(48);HEAP8.set(stream,ptr>>>0)}else allocated=!1,ptr=stream.byteOffset;return{ptr:ptr,allocated:allocated}},msync(stream,buffer,offset,length,mmapFlags){return MEMFS.stream_ops.write(stream,buffer,0,length,offset,!1),0}}},asyncLoad=(url,onload,onerror,noRunDep)=>{var dep=noRunDep?"":getUniqueRunDependency("al "+url);readAsync(url,arrayBuffer=>{assert(arrayBuffer,`Loading data file "${url}" failed (no arrayBuffer).`),onload(new Uint8Array(arrayBuffer)),dep&&removeRunDependency(dep)},event=>{if(!onerror)throw`Loading data file "${url}" failed.`;onerror()}),dep&&addRunDependency(dep)},preloadPlugins=Module.preloadPlugins||[];function FS_handledByPreloadPlugin(byteArray,fullname,finish,onerror){"undefined"!=typeof Browser&&Browser.init();var handled=!1;return preloadPlugins.forEach(function(plugin){handled||plugin.canHandle(fullname)&&(plugin.handle(byteArray,fullname,finish,onerror),handled=!0)}),handled}function FS_createPreloadedFile(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent,dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){preFinish&&preFinish(),dontCreateFile||FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn),onload&&onload(),removeRunDependency(dep)}FS_handledByPreloadPlugin(byteArray,fullname,finish,()=>{onerror&&onerror(),removeRunDependency(dep)})||finish(byteArray)}addRunDependency(dep),"string"==typeof url?asyncLoad(url,byteArray=>processData(byteArray),onerror):processData(url)}function FS_modeStringToFlags(str){var flags={r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090}[str];if(void 0===flags)throw new Error("Unknown file open mode: "+str);return flags}function FS_getMode(canRead,canWrite){var mode=0;return canRead&&(mode|=365),canWrite&&(mode|=146),mode}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path,opts={})=>{if(!(path=PATH_FS.resolve(path)))return{path:"",node:null};if(8<(opts=Object.assign({follow_mount:!0,recurse_count:0},opts)).recurse_count)throw new FS.ErrnoError(32);for(var parts=path.split("/").filter(p=>!!p),current=FS.root,current_path="/",i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent)break;if(current=FS.lookupNode(current,parts[i]),current_path=PATH.join2(current_path,parts[i]),!FS.isMountpoint(current)||islast&&!opts.follow_mount||(current=current.mounted.root),!islast||opts.follow)for(var count=0;FS.isLink(current.mode);){var link=FS.readlink(current_path),current_path=PATH_FS.resolve(PATH.dirname(current_path),link),current=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1}).node;if(40<count++)throw new FS.ErrnoError(32)}}return{path:current_path,node:current}},getPath:node=>{for(var path,mount;;){if(FS.isRoot(node))return mount=node.mount.mountpoint,path?"/"!==mount[mount.length-1]?mount+"/"+path:mount+path:mount;path=path?node.name+"/"+path:node.name,node=node.parent}},hashName:(parentid,name)=>{for(var hash=0,i=0;i<name.length;i++)hash=(hash<<5)-hash+name.charCodeAt(i)|0;return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:node=>{var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash],FS.nameTable[hash]=node},hashRemoveNode:node=>{var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node)FS.nameTable[hash]=node.name_next;else for(var current=FS.nameTable[hash];current;){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}},lookupNode:(parent,name)=>{var errCode=FS.mayLookup(parent);if(errCode)throw new FS.ErrnoError(errCode,parent);for(var errCode=FS.hashName(parent.id,name),node=FS.nameTable[errCode];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name)return node}return FS.lookup(parent,name)},createNode:(parent,name,mode,rdev)=>{parent=new FS.FSNode(parent,name,mode,rdev);return FS.hashAddNode(parent),parent},destroyNode:node=>{FS.hashRemoveNode(node)},isRoot:node=>node===node.parent,isMountpoint:node=>!!node.mounted,isFile:mode=>32768==(61440&mode),isDir:mode=>16384==(61440&mode),isLink:mode=>40960==(61440&mode),isChrdev:mode=>8192==(61440&mode),isBlkdev:mode=>24576==(61440&mode),isFIFO:mode=>4096==(61440&mode),isSocket:mode=>49152==(49152&mode),flagsToPermissionString:flag=>{var perms=["r","w","rw"][3&flag];return 512&flag&&(perms+="w"),perms},nodePermissions:(node,perms)=>FS.ignorePermissions||(!perms.includes("r")||292&node.mode)&&(!perms.includes("w")||146&node.mode)&&(!perms.includes("x")||73&node.mode)?0:2,mayLookup:dir=>{var errCode=FS.nodePermissions(dir,"x");return errCode||(dir.node_ops.lookup?0:2)},mayCreate:(dir,name)=>{try{FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete:(dir,name,isdir)=>{var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}name=FS.nodePermissions(dir,"wx");if(name)return name;if(isdir){if(!FS.isDir(node.mode))return 54;if(FS.isRoot(node)||FS.getPath(node)===FS.cwd())return 10}else if(FS.isDir(node.mode))return 31;return 0},mayOpen:(node,flags)=>node?FS.isLink(node.mode)?32:FS.isDir(node.mode)&&("r"!==FS.flagsToPermissionString(flags)||512&flags)?31:FS.nodePermissions(node,FS.flagsToPermissionString(flags)):44,MAX_OPEN_FDS:4096,nextfd:()=>{for(var fd=0;fd<=FS.MAX_OPEN_FDS;fd++)if(!FS.streams[fd])return fd;throw new FS.ErrnoError(33)},getStreamChecked:fd=>{fd=FS.getStream(fd);if(fd)return fd;throw new FS.ErrnoError(8)},getStream:fd=>FS.streams[fd],createStream:(stream,fd=-1)=>(FS.FSStream||(FS.FSStream=function(){this.shared={}},FS.FSStream.prototype={},Object.defineProperties(FS.FSStream.prototype,{object:{get(){return this.node},set(val){this.node=val}},isRead:{get(){return 1!=(2097155&this.flags)}},isWrite:{get(){return 0!=(2097155&this.flags)}},isAppend:{get(){return 1024&this.flags}},flags:{get(){return this.shared.flags},set(val){this.shared.flags=val}},position:{get(){return this.shared.position},set(val){this.shared.position=val}}})),stream=Object.assign(new FS.FSStream,stream),-1==fd&&(fd=FS.nextfd()),stream.fd=fd,FS.streams[fd]=stream),closeStream:fd=>{FS.streams[fd]=null},chrdev_stream_ops:{open:stream=>{var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops,stream.stream_ops.open&&stream.stream_ops.open(stream)},llseek:()=>{throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>255&dev,makedev:(ma,mi)=>ma<<8|mi,registerDevice:(dev,ops)=>{FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts:mount=>{for(var mounts=[],check=[mount];check.length;){var m=check.pop();mounts.push(m),check.push.apply(check,m.mounts)}return mounts},syncfs:(populate,callback)=>{"function"==typeof populate&&(callback=populate,populate=!1),FS.syncFSRequests++,1<FS.syncFSRequests&&err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);var mounts=FS.getMounts(FS.root.mount),completed=0;function doCallback(errCode){return FS.syncFSRequests--,callback(errCode)}function done(errCode){if(errCode)return done.errored?void 0:(done.errored=!0,doCallback(errCode));++completed>=mounts.length&&doCallback(null)}mounts.forEach(mount=>{if(!mount.type.syncfs)return done(null);mount.type.syncfs(mount,populate,done)})},mount:(type,opts,mountpoint)=>{var node,root="/"===mountpoint,pseudo=!mountpoint;if(root&&FS.root)throw new FS.ErrnoError(10);if(!root&&!pseudo){pseudo=FS.lookupPath(mountpoint,{follow_mount:!1});if(mountpoint=pseudo.path,node=pseudo.node,FS.isMountpoint(node))throw new FS.ErrnoError(10);if(!FS.isDir(node.mode))throw new FS.ErrnoError(54)}pseudo={type:type,opts:opts,mountpoint:mountpoint,mounts:[]},opts=type.mount(pseudo);return(opts.mount=pseudo).root=opts,root?FS.root=opts:node&&(node.mounted=pseudo,node.mount)&&node.mount.mounts.push(pseudo),opts},unmount:mountpoint=>{mountpoint=FS.lookupPath(mountpoint,{follow_mount:!1});if(!FS.isMountpoint(mountpoint.node))throw new FS.ErrnoError(28);var mountpoint=mountpoint.node,mount=mountpoint.mounted,mounts=FS.getMounts(mount),mount=(Object.keys(FS.nameTable).forEach(hash=>{for(var current=FS.nameTable[hash];current;){var next=current.name_next;mounts.includes(current.mount)&&FS.destroyNode(current),current=next}}),mountpoint.mounted=null,mountpoint.mount.mounts.indexOf(mount));mountpoint.mount.mounts.splice(mount,1)},lookup:(parent,name)=>parent.node_ops.lookup(parent,name),mknod:(path,mode,dev)=>{var parent=FS.lookupPath(path,{parent:!0}).node,path=PATH.basename(path);if(!path||"."===path||".."===path)throw new FS.ErrnoError(28);var errCode=FS.mayCreate(parent,path);if(errCode)throw new FS.ErrnoError(errCode);if(parent.node_ops.mknod)return parent.node_ops.mknod(parent,path,mode,dev);throw new FS.ErrnoError(63)},create:(path,mode)=>FS.mknod(path,mode=(mode=void 0!==mode?mode:438)&4095|32768,0),mkdir:(path,mode)=>FS.mknod(path,mode=(mode=void 0!==mode?mode:511)&1023|16384,0),mkdirTree:(path,mode)=>{for(var dirs=path.split("/"),d="",i=0;i<dirs.length;++i)if(dirs[i]){d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(20!=e.errno)throw e}}},mkdev:(path,mode,dev)=>(void 0===dev&&(dev=mode,mode=438),FS.mknod(path,mode|=8192,dev)),symlink:(oldpath,newpath)=>{if(!PATH_FS.resolve(oldpath))throw new FS.ErrnoError(44);var parent=FS.lookupPath(newpath,{parent:!0}).node;if(!parent)throw new FS.ErrnoError(44);var newpath=PATH.basename(newpath),errCode=FS.mayCreate(parent,newpath);if(errCode)throw new FS.ErrnoError(errCode);if(parent.node_ops.symlink)return parent.node_ops.symlink(parent,newpath,oldpath);throw new FS.ErrnoError(63)},rename:(old_path,new_path)=>{var old_dirname=PATH.dirname(old_path),new_dirname=PATH.dirname(new_path),old_name=PATH.basename(old_path),new_name=PATH.basename(new_path),lookup=FS.lookupPath(old_path,{parent:!0}),lookup=lookup.node,new_dir=FS.lookupPath(new_path,{parent:!0}).node;if(!lookup||!new_dir)throw new FS.ErrnoError(44);if(lookup.mount!==new_dir.mount)throw new FS.ErrnoError(75);var new_node,old_node=FS.lookupNode(lookup,old_name),old_path=PATH_FS.relative(old_path,new_dirname);if("."!==old_path.charAt(0))throw new FS.ErrnoError(28);if("."!==(old_path=PATH_FS.relative(new_path,old_dirname)).charAt(0))throw new FS.ErrnoError(55);try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node!==new_node){new_dirname=FS.isDir(old_node.mode),new_path=FS.mayDelete(lookup,old_name,new_dirname);if(new_path)throw new FS.ErrnoError(new_path);if(new_path=new_node?FS.mayDelete(new_dir,new_name,new_dirname):FS.mayCreate(new_dir,new_name))throw new FS.ErrnoError(new_path);if(!lookup.node_ops.rename)throw new FS.ErrnoError(63);if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node))throw new FS.ErrnoError(10);if(new_dir!==lookup&&(new_path=FS.nodePermissions(lookup,"w")))throw new FS.ErrnoError(new_path);FS.hashRemoveNode(old_node);try{lookup.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}}},rmdir:path=>{var parent=FS.lookupPath(path,{parent:!0}).node,path=PATH.basename(path),node=FS.lookupNode(parent,path),errCode=FS.mayDelete(parent,path,!0);if(errCode)throw new FS.ErrnoError(errCode);if(!parent.node_ops.rmdir)throw new FS.ErrnoError(63);if(FS.isMountpoint(node))throw new FS.ErrnoError(10);parent.node_ops.rmdir(parent,path),FS.destroyNode(node)},readdir:path=>{path=FS.lookupPath(path,{follow:!0}).node;if(path.node_ops.readdir)return path.node_ops.readdir(path);throw new FS.ErrnoError(54)},unlink:path=>{var parent=FS.lookupPath(path,{parent:!0}).node;if(!parent)throw new FS.ErrnoError(44);var path=PATH.basename(path),node=FS.lookupNode(parent,path),errCode=FS.mayDelete(parent,path,!1);if(errCode)throw new FS.ErrnoError(errCode);if(!parent.node_ops.unlink)throw new FS.ErrnoError(63);if(FS.isMountpoint(node))throw new FS.ErrnoError(10);parent.node_ops.unlink(parent,path),FS.destroyNode(node)},readlink:path=>{path=FS.lookupPath(path).node;if(!path)throw new FS.ErrnoError(44);if(path.node_ops.readlink)return PATH_FS.resolve(FS.getPath(path.parent),path.node_ops.readlink(path));throw new FS.ErrnoError(28)},stat:(path,dontFollow)=>{path=FS.lookupPath(path,{follow:!dontFollow}).node;if(!path)throw new FS.ErrnoError(44);if(path.node_ops.getattr)return path.node_ops.getattr(path);throw new FS.ErrnoError(63)},lstat:path=>FS.stat(path,!0),chmod:(path,mode,dontFollow)=>{if(!(dontFollow="string"==typeof path?FS.lookupPath(path,{follow:!dontFollow}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);dontFollow.node_ops.setattr(dontFollow,{mode:4095&mode|-4096&dontFollow.mode,timestamp:Date.now()})},lchmod:(path,mode)=>{FS.chmod(path,mode,!0)},fchmod:(fd,mode)=>{fd=FS.getStreamChecked(fd);FS.chmod(fd.node,mode)},chown:(path,uid,gid,dontFollow)=>{if(!(dontFollow="string"==typeof path?FS.lookupPath(path,{follow:!dontFollow}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);dontFollow.node_ops.setattr(dontFollow,{timestamp:Date.now()})},lchown:(path,uid,gid)=>{FS.chown(path,uid,gid,!0)},fchown:(fd,uid,gid)=>{fd=FS.getStreamChecked(fd);FS.chown(fd.node,uid,gid)},truncate:(path,len)=>{if(len<0)throw new FS.ErrnoError(28);if(!(path="string"==typeof path?FS.lookupPath(path,{follow:!0}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);if(FS.isDir(path.mode))throw new FS.ErrnoError(31);if(!FS.isFile(path.mode))throw new FS.ErrnoError(28);var errCode=FS.nodePermissions(path,"w");if(errCode)throw new FS.ErrnoError(errCode);path.node_ops.setattr(path,{size:len,timestamp:Date.now()})},ftruncate:(fd,len)=>{fd=FS.getStreamChecked(fd);if(0==(2097155&fd.flags))throw new FS.ErrnoError(28);FS.truncate(fd.node,len)},utime:(path,atime,mtime)=>{path=FS.lookupPath(path,{follow:!0}).node;path.node_ops.setattr(path,{timestamp:Math.max(atime,mtime)})},open:(path,flags,mode)=>{if(""===path)throw new FS.ErrnoError(44);if(mode=void 0===mode?438:mode,mode=64&(flags="string"==typeof flags?FS_modeStringToFlags(flags):flags)?4095&mode|32768:0,"object"==typeof path)node=path;else{path=PATH.normalize(path);try{var node=FS.lookupPath(path,{follow:!(131072&flags)}).node}catch(e){}}var created=!1;if(64&flags)if(node){if(128&flags)throw new FS.ErrnoError(20)}else node=FS.mknod(path,mode,0),created=!0;if(!node)throw new FS.ErrnoError(44);if(FS.isChrdev(node.mode)&&(flags&=-513),65536&flags&&!FS.isDir(node.mode))throw new FS.ErrnoError(54);if(!created){mode=FS.mayOpen(node,flags);if(mode)throw new FS.ErrnoError(mode)}512&flags&&!created&&FS.truncate(node,0),flags&=-131713;mode=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:!0,position:0,stream_ops:node.stream_ops,ungotten:[],error:!1});return mode.stream_ops.open&&mode.stream_ops.open(mode),!Module.logReadFiles||1&flags||(FS.readFiles||(FS.readFiles={}),path in FS.readFiles)||(FS.readFiles[path]=1),mode},close:stream=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);stream.getdents&&(stream.getdents=null);try{stream.stream_ops.close&&stream.stream_ops.close(stream)}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:stream=>null===stream.fd,llseek:(stream,offset,whence)=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(!stream.seekable||!stream.stream_ops.llseek)throw new FS.ErrnoError(70);if(0!=whence&&1!=whence&&2!=whence)throw new FS.ErrnoError(28);return stream.position=stream.stream_ops.llseek(stream,offset,whence),stream.ungotten=[],stream.position},read:(stream,buffer,offset,length,position)=>{if(length<0||position<0)throw new FS.ErrnoError(28);if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(1==(2097155&stream.flags))throw new FS.ErrnoError(8);if(FS.isDir(stream.node.mode))throw new FS.ErrnoError(31);if(!stream.stream_ops.read)throw new FS.ErrnoError(28);var seeking=void 0!==position;if(seeking){if(!stream.seekable)throw new FS.ErrnoError(70)}else position=stream.position;buffer=stream.stream_ops.read(stream,buffer,offset,length,position);return seeking||(stream.position+=buffer),buffer},write:(stream,buffer,offset,length,position,canOwn)=>{if(length<0||position<0)throw new FS.ErrnoError(28);if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(0==(2097155&stream.flags))throw new FS.ErrnoError(8);if(FS.isDir(stream.node.mode))throw new FS.ErrnoError(31);if(!stream.stream_ops.write)throw new FS.ErrnoError(28);stream.seekable&&1024&stream.flags&&FS.llseek(stream,0,2);var seeking=void 0!==position;if(seeking){if(!stream.seekable)throw new FS.ErrnoError(70)}else position=stream.position;buffer=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);return seeking||(stream.position+=buffer),buffer},allocate:(stream,offset,length)=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(offset<0||length<=0)throw new FS.ErrnoError(28);if(0==(2097155&stream.flags))throw new FS.ErrnoError(8);if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode))throw new FS.ErrnoError(43);if(!stream.stream_ops.allocate)throw new FS.ErrnoError(138);stream.stream_ops.allocate(stream,offset,length)},mmap:(stream,length,position,prot,flags)=>{if(0!=(2&prot)&&0==(2&flags)&&2!=(2097155&stream.flags))throw new FS.ErrnoError(2);if(1==(2097155&stream.flags))throw new FS.ErrnoError(2);if(stream.stream_ops.mmap)return stream.stream_ops.mmap(stream,length,position,prot,flags);throw new FS.ErrnoError(43)},msync:(stream,buffer,offset,length,mmapFlags)=>stream.stream_ops.msync?stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags):0,munmap:stream=>0,ioctl:(stream,cmd,arg)=>{if(stream.stream_ops.ioctl)return stream.stream_ops.ioctl(stream,cmd,arg);throw new FS.ErrnoError(59)},readFile:(path,opts={})=>{if(opts.flags=opts.flags||0,opts.encoding=opts.encoding||"binary","utf8"!==opts.encoding&&"binary"!==opts.encoding)throw new Error(`Invalid encoding type "${opts.encoding}"`);var ret,stream=FS.open(path,opts.flags),path=FS.stat(path).size,buf=new Uint8Array(path);return FS.read(stream,buf,0,path,0),"utf8"===opts.encoding?ret=UTF8ArrayToString(buf,0):"binary"===opts.encoding&&(ret=buf),FS.close(stream),ret},writeFile:(path,data,opts={})=>{opts.flags=opts.flags||577;path=FS.open(path,opts.flags,opts.mode);if("string"==typeof data){var buf=new Uint8Array(lengthBytesUTF8(data)+1),actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(path,buf,0,actualNumBytes,void 0,opts.canOwn)}else{if(!ArrayBuffer.isView(data))throw new Error("Unsupported data type");FS.write(path,data,0,data.byteLength,void 0,opts.canOwn)}FS.close(path)},cwd:()=>FS.currentPath,chdir:path=>{path=FS.lookupPath(path,{follow:!0});if(null===path.node)throw new FS.ErrnoError(44);if(!FS.isDir(path.node.mode))throw new FS.ErrnoError(54);var errCode=FS.nodePermissions(path.node,"x");if(errCode)throw new FS.ErrnoError(errCode);FS.currentPath=path.path},createDefaultDirectories:()=>{FS.mkdir("/tmp"),FS.mkdir("/home"),FS.mkdir("/home/web_user")},createDefaultDevices:()=>{FS.mkdir("/dev"),FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length}),FS.mkdev("/dev/null",FS.makedev(1,3)),TTY.register(FS.makedev(5,0),TTY.default_tty_ops),TTY.register(FS.makedev(6,0),TTY.default_tty1_ops),FS.mkdev("/dev/tty",FS.makedev(5,0)),FS.mkdev("/dev/tty1",FS.makedev(6,0));var randomBuffer=new Uint8Array(1024),randomLeft=0,randomByte=()=>(0===randomLeft&&(randomLeft=randomFill(randomBuffer).byteLength),randomBuffer[--randomLeft]);FS.createDevice("/dev","random",randomByte),FS.createDevice("/dev","urandom",randomByte),FS.mkdir("/dev/shm"),FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{FS.mkdir("/proc");var proc_self=FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd"),FS.mount({mount:()=>{var node=FS.createNode(proc_self,"fd",16895,73);return node.node_ops={lookup:(parent,name)=>{var stream=FS.getStreamChecked(+name),name={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>stream.path}};return name.parent=name}},node}},{},"/proc/self/fd")},createStandardStreams:()=>{Module.stdin?FS.createDevice("/dev","stdin",Module.stdin):FS.symlink("/dev/tty","/dev/stdin"),Module.stdout?FS.createDevice("/dev","stdout",null,Module.stdout):FS.symlink("/dev/tty","/dev/stdout"),Module.stderr?FS.createDevice("/dev","stderr",null,Module.stderr):FS.symlink("/dev/tty1","/dev/stderr");FS.open("/dev/stdin",0),FS.open("/dev/stdout",1),FS.open("/dev/stderr",1)},ensureErrnoError:()=>{FS.ErrnoError||(FS.ErrnoError=function(errno,node){this.name="ErrnoError",this.node=node,this.setErrno=function(errno){this.errno=errno},this.setErrno(errno),this.message="FS error"},FS.ErrnoError.prototype=new Error,FS.ErrnoError.prototype.constructor=FS.ErrnoError,[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code),FS.genericErrors[code].stack="<generic error, no stack>"}))},staticInit:()=>{FS.ensureErrnoError(),FS.nameTable=new Array(4096),FS.mount(MEMFS,{},"/"),FS.createDefaultDirectories(),FS.createDefaultDevices(),FS.createSpecialDirectories(),FS.filesystems={MEMFS:MEMFS}},init:(input,output,error)=>{FS.init.initialized=!0,FS.ensureErrnoError(),Module.stdin=input||Module.stdin,Module.stdout=output||Module.stdout,Module.stderr=error||Module.stderr,FS.createStandardStreams()},quit:()=>{FS.init.initialized=!1;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];stream&&FS.close(stream)}},findObject:(path,dontResolveLastLink)=>{path=FS.analyzePath(path,dontResolveLastLink);return path.exists?path.object:null},analyzePath:(path,dontResolveLastLink)=>{try{path=(lookup=FS.lookupPath(path,{follow:!dontResolveLastLink})).path}catch(e){}var ret={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:!0});ret.parentExists=!0,ret.parentPath=lookup.path,ret.parentObject=lookup.node,ret.name=PATH.basename(path),lookup=FS.lookupPath(path,{follow:!dontResolveLastLink}),ret.exists=!0,ret.path=lookup.path,ret.object=lookup.node,ret.name=lookup.node.name,ret.isRoot="/"===lookup.path}catch(e){ret.error=e.errno}return ret},createPath:(parent,path,canRead,canWrite)=>{parent="string"==typeof parent?parent:FS.getPath(parent);for(var parts=path.split("/").reverse();parts.length;){var part=parts.pop();if(part){var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}}return current},createFile:(parent,name,properties,canRead,canWrite)=>{parent=PATH.join2("string"==typeof parent?parent:FS.getPath(parent),name),name=FS_getMode(canRead,canWrite);return FS.create(parent,name)},createDataFile:(parent,name,data,canRead,canWrite,canOwn)=>{var path=name,name=(parent&&(parent="string"==typeof parent?parent:FS.getPath(parent),path=name?PATH.join2(parent,name):parent),FS_getMode(canRead,canWrite)),parent=FS.create(path,name);if(data){if("string"==typeof data){for(var arr=new Array(data.length),i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(parent,146|name);canRead=FS.open(parent,577);FS.write(canRead,data,0,data.length,0,canOwn),FS.close(canRead),FS.chmod(parent,name)}return parent},createDevice:(parent,name,input,output)=>{var parent=PATH.join2("string"==typeof parent?parent:FS.getPath(parent),name),name=FS_getMode(!!input,!!output),dev=(FS.createDevice.major||(FS.createDevice.major=64),FS.makedev(FS.createDevice.major++,0));return FS.registerDevice(dev,{open:stream=>{stream.seekable=!1},close:stream=>{output&&output.buffer&&output.buffer.length&&output(10)},read:(stream,buffer,offset,length,pos)=>{for(var result,bytesRead=0,i=0;i<length;i++){try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(void 0===result&&0===bytesRead)throw new FS.ErrnoError(6);if(null==result)break;bytesRead++,buffer[offset+i]=result}return bytesRead&&(stream.node.timestamp=Date.now()),bytesRead},write:(stream,buffer,offset,length,pos)=>{for(var i=0;i<length;i++)try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}return length&&(stream.node.timestamp=Date.now()),i}}),FS.mkdev(parent,name,dev)},forceLoadFile:obj=>{if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!read_)throw new Error("Cannot load without read() or XMLHttpRequest.");try{obj.contents=intArrayFromString(read_(obj.url),!0),obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}},createLazyFile:(parent,name,url,canRead,canWrite)=>{function LazyUint8Array(){this.lengthKnown=!1,this.chunks=[]}if(LazyUint8Array.prototype.get=function(idx){var chunkOffset;if(!(idx>this.length-1||idx<0))return chunkOffset=idx%this.chunkSize,idx=idx/this.chunkSize|0,this.getter(idx)[chunkOffset]},LazyUint8Array.prototype.setDataGetter=function(getter){this.getter=getter},LazyUint8Array.prototype.cacheLength=function(){var xhr=new XMLHttpRequest;if(xhr.open("HEAD",url,!1),xhr.send(null),!(200<=xhr.status&&xhr.status<300||304===xhr.status))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var header,datalength=Number(xhr.getResponseHeader("Content-length")),hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&"bytes"===header,xhr=(header=xhr.getResponseHeader("Content-Encoding"))&&"gzip"===header,chunkSize=1048576,lazyArray=(hasByteServing||(chunkSize=datalength),this);lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize,end=(chunkNum+1)*chunkSize-1,end=Math.min(end,datalength-1);if(void 0===lazyArray.chunks[chunkNum]&&(lazyArray.chunks[chunkNum]=((from,to)=>{if(to<from)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(datalength-1<to)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;if(xhr.open("GET",url,!1),datalength!==chunkSize&&xhr.setRequestHeader("Range","bytes="+from+"-"+to),xhr.responseType="arraybuffer",xhr.overrideMimeType&&xhr.overrideMimeType("text/plain; charset=x-user-defined"),xhr.send(null),200<=xhr.status&&xhr.status<300||304===xhr.status)return void 0!==xhr.response?new Uint8Array(xhr.response||[]):intArrayFromString(xhr.responseText||"",!0);throw new Error("Couldn't load "+url+". Status: "+xhr.status)})(start,end)),void 0===lazyArray.chunks[chunkNum])throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}),!xhr&&datalength||(chunkSize=datalength=1,datalength=this.getter(0).length,chunkSize=datalength,out("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=datalength,this._chunkSize=chunkSize,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array,lazyArray=(Object.defineProperties(lazyArray,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}}),{isDevice:!1,contents:lazyArray})}else lazyArray={isDevice:!1,url:url};var node=FS.createFile(parent,name,lazyArray,canRead,canWrite),stream_ops=(lazyArray.contents?node.contents=lazyArray.contents:lazyArray.url&&(node.contents=null,node.url=lazyArray.url),Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}}),{});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice)for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i];else for(i=0;i<size;i++)buffer[offset+i]=contents.get(position+i);return size}return Object.keys(node.stream_ops).forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function(){return FS.forceLoadFile(node),fn.apply(null,arguments)}}),stream_ops.read=(stream,buffer,offset,length,position)=>(FS.forceLoadFile(node),writeChunks(stream,buffer,offset,length,position)),stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(ptr)return writeChunks(stream,HEAP8,ptr,length,position),{ptr:ptr,allocated:!0};throw new FS.ErrnoError(48)},node.stream_ops=stream_ops,node}},SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(PATH.isAbs(path))return path;if(dirfd=-100===dirfd?FS.cwd():SYSCALLS.getStreamFromFD(dirfd).path,0!=path.length)return PATH.join2(dirfd,path);if(allowEmpty)return dirfd;throw new FS.ErrnoError(44)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node)))return-54;throw e}HEAP32[buf>>>2]=stat.dev,HEAP32[buf+4>>>2]=stat.mode,HEAPU32[buf+8>>>2]=stat.nlink,HEAP32[buf+12>>>2]=stat.uid,HEAP32[buf+16>>>2]=stat.gid,HEAP32[buf+20>>>2]=stat.rdev,tempI64=[stat.size>>>0,(tempDouble=stat.size,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+24>>>2]=tempI64[0],HEAP32[buf+28>>>2]=tempI64[1],HEAP32[buf+32>>>2]=4096,HEAP32[buf+36>>>2]=stat.blocks;var func=stat.atime.getTime(),path=stat.mtime.getTime(),ctime=stat.ctime.getTime();return tempI64=[Math.floor(func/1e3)>>>0,(tempDouble=Math.floor(func/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>>2]=tempI64[0],HEAP32[buf+44>>>2]=tempI64[1],HEAPU32[buf+48>>>2]=func%1e3*1e3,tempI64=[Math.floor(path/1e3)>>>0,(tempDouble=Math.floor(path/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+56>>>2]=tempI64[0],HEAP32[buf+60>>>2]=tempI64[1],HEAPU32[buf+64>>>2]=path%1e3*1e3,tempI64=[Math.floor(ctime/1e3)>>>0,(tempDouble=Math.floor(ctime/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+72>>>2]=tempI64[0],HEAP32[buf+76>>>2]=tempI64[1],HEAPU32[buf+80>>>2]=ctime%1e3*1e3,tempI64=[stat.ino>>>0,(tempDouble=stat.ino,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+88>>>2]=tempI64[0],HEAP32[buf+92>>>2]=tempI64[1],0},doMsync:function(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode))throw new FS.ErrnoError(43);if(2&flags)return 0;addr=HEAPU8.slice(addr,addr+len);FS.msync(stream,addr,offset,len,flags)},varargs:void 0,get(){return SYSCALLS.varargs+=4,HEAP32[SYSCALLS.varargs-4>>>2]},getStr(ptr){return UTF8ToString(ptr)},getStreamFromFD:function(fd){return FS.getStreamChecked(fd)}};function _environ_get(__environ,environ_buf){__environ>>>=0,environ_buf>>>=0;var bufSize=0;return getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+4*i>>>2]=ptr,stringToAscii(string,ptr),bufSize+=string.length+1}),0}function _environ_sizes_get(penviron_count,penviron_buf_size){penviron_count>>>=0,penviron_buf_size>>>=0;var strings=getEnvStrings(),bufSize=(HEAPU32[penviron_count>>>2]=strings.length,0);return strings.forEach(function(string){bufSize+=string.length+1}),HEAPU32[penviron_buf_size>>>2]=bufSize,0}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);return FS.close(stream),0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var doReadv=(stream,iov,iovcnt,offset)=>{for(var ret=0,i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2],len=HEAPU32[iov+4>>>2],ptr=(iov+=8,FS.read(stream,HEAP8,ptr,len,offset));if(ptr<0)return-1;if(ret+=ptr,ptr<len)break;void 0!==offset&&(offset+=ptr)}return ret};function _fd_read(fd,iov,iovcnt,pnum){iov>>>=0,iovcnt>>>=0,pnum>>>=0;try{var stream=SYSCALLS.getStreamFromFD(fd),num=doReadv(stream,iov,iovcnt);return HEAPU32[pnum>>>2]=num,0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var stream,offset_low=convertI32PairToI53Checked(offset_low,offset_high);newOffset>>>=0;try{return isNaN(offset_low)?61:(stream=SYSCALLS.getStreamFromFD(fd),FS.llseek(stream,offset_low,whence),tempI64=[stream.position>>>0,(tempDouble=stream.position,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>>2]=tempI64[0],HEAP32[newOffset+4>>>2]=tempI64[1],stream.getdents&&0===offset_low&&0===whence&&(stream.getdents=null),0)}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var doWritev=(stream,iov,iovcnt,offset)=>{for(var ret=0,i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2],len=HEAPU32[iov+4>>>2],ptr=(iov+=8,FS.write(stream,HEAP8,ptr,len,offset));if(ptr<0)return-1;ret+=ptr,void 0!==offset&&(offset+=ptr)}return ret};function _fd_write(fd,iov,iovcnt,pnum){iov>>>=0,iovcnt>>>=0,pnum>>>=0;try{var stream=SYSCALLS.getStreamFromFD(fd),num=doWritev(stream,iov,iovcnt);return HEAPU32[pnum>>>2]=num,0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var arraySum=(array,index)=>{for(var sum=0,i=0;i<=index;sum+=array[i++]);return sum},MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31],MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31],addDays=(date,days)=>{for(var newDate=new Date(date.getTime());0<days;){var leap=isLeapYear(newDate.getFullYear()),currentMonth=newDate.getMonth(),leap=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(!(days>leap-newDate.getDate()))return newDate.setDate(newDate.getDate()+days),newDate;days-=leap-newDate.getDate()+1,newDate.setDate(1),currentMonth<11?newDate.setMonth(currentMonth+1):(newDate.setMonth(0),newDate.setFullYear(newDate.getFullYear()+1))}return newDate},writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer>>>0)};function _strftime(s,maxsize,format,tm){s>>>=0,maxsize>>>=0,format>>>=0;var tm_zone=HEAP32[(tm>>>=0)+40>>>2],date={tm_sec:HEAP32[tm>>>2],tm_min:HEAP32[tm+4>>>2],tm_hour:HEAP32[tm+8>>>2],tm_mday:HEAP32[tm+12>>>2],tm_mon:HEAP32[tm+16>>>2],tm_year:HEAP32[tm+20>>>2],tm_wday:HEAP32[tm+24>>>2],tm_yday:HEAP32[tm+28>>>2],tm_isdst:HEAP32[tm+32>>>2],tm_gmtoff:HEAP32[tm+36>>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""},pattern=UTF8ToString(format),EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(rule in EXPANSION_RULES_1)pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule]);var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){for(var str="number"==typeof value?value.toString():value||"";str.length<digits;)str=character[0]+str;return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:0<value?1:0}var compare;return compare=0===(compare=sgn(date1.getFullYear()-date2.getFullYear()))&&0===(compare=sgn(date1.getMonth()-date2.getMonth()))?sgn(date1.getDate()-date2.getDate()):compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var date=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday),janFourthThisYear=new Date(date.getFullYear(),0,4),janFourthNextYear=new Date(date.getFullYear()+1,0,4),janFourthThisYear=getFirstWeekStartDate(janFourthThisYear),janFourthNextYear=getFirstWeekStartDate(janFourthNextYear);return compareByDay(janFourthThisYear,date)<=0?compareByDay(janFourthNextYear,date)<=0?date.getFullYear()+1:date.getFullYear():date.getFullYear()-1}var rule,EXPANSION_RULES_2={"%a":date=>WEEKDAYS[date.tm_wday].substring(0,3),"%A":date=>WEEKDAYS[date.tm_wday],"%b":date=>MONTHS[date.tm_mon].substring(0,3),"%B":date=>MONTHS[date.tm_mon],"%C":date=>{return leadingNulls((date.tm_year+1900)/100|0,2)},"%d":date=>leadingNulls(date.tm_mday,2),"%e":date=>leadingSomething(date.tm_mday,2," "),"%g":date=>getWeekBasedYear(date).toString().substring(2),"%G":date=>getWeekBasedYear(date),"%H":date=>leadingNulls(date.tm_hour,2),"%I":date=>{date=date.tm_hour;return 0==date?date=12:12<date&&(date-=12),leadingNulls(date,2)},"%j":date=>leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3),"%m":date=>leadingNulls(date.tm_mon+1,2),"%M":date=>leadingNulls(date.tm_min,2),"%n":()=>"\n","%p":date=>0<=date.tm_hour&&date.tm_hour<12?"AM":"PM","%S":date=>leadingNulls(date.tm_sec,2),"%t":()=>"\t","%u":date=>date.tm_wday||7,"%U":date=>{date=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(date/7),2)},"%V":date=>{var jan1,val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);return(date.tm_wday+371-date.tm_yday-2)%7<=2&&val++,val?53!=val||4==(jan1=(date.tm_wday+371-date.tm_yday)%7)||3==jan1&&isLeapYear(date.tm_year)||(val=1):(val=52,(4==(jan1=(date.tm_wday+7-date.tm_yday-1)%7)||5==jan1&&isLeapYear(date.tm_year%400-1))&&val++),leadingNulls(val,2)},"%w":date=>date.tm_wday,"%W":date=>{date=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(date/7),2)},"%y":date=>(date.tm_year+1900).toString().substring(2),"%Y":date=>date.tm_year+1900,"%z":date=>{var ahead=0<=(date=date.tm_gmtoff),date=Math.abs(date)/60;return(ahead?"+":"-")+String("0000"+(date/60*100+date%60)).slice(-4)},"%Z":date=>date.tm_zone,"%%":()=>"%"},pattern=pattern.replace(/%%/g,"\0\0");for(rule in EXPANSION_RULES_2)pattern.includes(rule)&&(pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date)));tm=intArrayFromString(pattern=pattern.replace(/\0\0/g,"%"),!1);return tm.length>maxsize?0:(writeArrayToMemory(tm,s),tm.length-1)}function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s>>>=0,maxsize>>>=0,format>>>=0,tm>>>=0)}function uleb128Encode(n,target){n<128?target.push(n):target.push(n%128|128,n>>7)}function sigToWasmTypes(sig){for(var typeNames={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},type={parameters:[],results:"v"==sig[0]?[]:[typeNames[sig[0]]]},i=1;i<sig.length;++i)type.parameters.push(typeNames[sig[i]]);return type}function generateFuncType(sig,target){var sigRet=sig.slice(0,1),sigParam=sig.slice(1),typeCodes={i:127,p:127,j:126,f:125,d:124};target.push(96),uleb128Encode(sigParam.length,target);for(var i=0;i<sigParam.length;++i)target.push(typeCodes[sigParam[i]]);"v"==sigRet?target.push(0):target.push(1,typeCodes[sigRet])}function convertJsFunctionToWasm(func,sig){var bytes;return"function"==typeof WebAssembly.Function?new WebAssembly.Function(sigToWasmTypes(sig),func):(generateFuncType(sig,sig=[1]),uleb128Encode(sig.length,bytes=[0,97,115,109,1,0,0,0,1]),bytes.push.apply(bytes,sig),bytes.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0),sig=new WebAssembly.Module(new Uint8Array(bytes)),new WebAssembly.Instance(sig,{e:{f:func}}).exports.f)}function updateTableMap(offset,count){if(functionsInTableMap)for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);item&&functionsInTableMap.set(item,i)}}var functionsInTableMap=void 0;function getFunctionAddress(func){return functionsInTableMap||(functionsInTableMap=new WeakMap,updateTableMap(0,wasmTable.length)),functionsInTableMap.get(func)||0}var freeTableIndexes=[];function getEmptyTableSlot(){if(freeTableIndexes.length)return freeTableIndexes.pop();try{wasmTable.grow(1)}catch(err){if(err instanceof RangeError)throw"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.";throw err}return wasmTable.length-1}var setWasmTableEntry=(idx,func)=>{wasmTable.set(idx,func),wasmTableMirror[idx]=wasmTable.get(idx)};function addFunction(func,sig){var rtn=getFunctionAddress(func);if(rtn)return rtn;rtn=getEmptyTableSlot();try{setWasmTableEntry(rtn,func)}catch(err){if(!(err instanceof TypeError))throw err;sig=convertJsFunctionToWasm(func,sig);setWasmTableEntry(rtn,sig)}return functionsInTableMap.set(func,rtn),rtn}function removeFunction(index){functionsInTableMap.delete(getWasmTableEntry(index)),freeTableIndexes.push(index)}function getCFunc(ident){return Module["_"+ident]}var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1,ret=stackAlloc(size);return stringToUTF8(str,ret,size),ret},ccall=function(ident,returnType,argTypes,args,opts){var toC={string:str=>{var ret=0;return ret=null!=str&&0!==str?stringToUTF8OnStack(str):ret},array:arr=>{var ret=stackAlloc(arr.length);return writeArrayToMemory(arr,ret),ret}};var ident=getCFunc(ident),cArgs=[],stack=0;if(args)for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];converter?(0===stack&&(stack=stackSave()),cArgs[i]=converter(args[i])):cArgs[i]=args[i]}return function(ret){return 0!==stack&&stackRestore(stack),function(ret){return"string"===returnType?UTF8ToString(ret):"boolean"===returnType?Boolean(ret):ret}(ret)}(ident.apply(null,cArgs))},cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>"number"===type||"boolean"===type);return"string"!==returnType&&numericArgs&&!opts?getCFunc(ident):function(){return ccall(ident,returnType,argTypes,arguments,opts)}},InternalError=Module.InternalError=class InternalError extends Error{constructor(message){super(message),this.name="InternalError"}},FSNode=(embind_init_charCodes(),BindingError=Module.BindingError=class BindingError extends Error{constructor(message){super(message),this.name="BindingError"}},init_ClassHandle(),init_embind(),init_RegisteredPointer(),UnboundTypeError=Module.UnboundTypeError=extendError(Error,"UnboundTypeError"),handleAllocatorInit(),init_emval(),function(parent,name,mode,rdev){this.parent=parent=parent||this,this.mount=parent.mount,this.mounted=null,this.id=FS.nextInode++,this.name=name,this.mode=mode,this.node_ops={},this.stream_ops={},this.rdev=rdev}),readMode=365,writeMode=146,wasmImports=(Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}}),FS.FSNode=FSNode,FS.createPreloadedFile=FS_createPreloadedFile,FS.staticInit(),{b:___assert_fail,d:___cxa_throw,n:__embind_finalize_value_object,B:__embind_register_bigint,M:__embind_register_bool,p:__embind_register_class,o:__embind_register_class_constructor,f:__embind_register_class_function,L:__embind_register_emval,y:__embind_register_float,c:__embind_register_function,l:__embind_register_integer,j:__embind_register_memory_view,x:__embind_register_std_string,t:__embind_register_std_wstring,m:__embind_register_value_object,e:__embind_register_value_object_field,N:__embind_register_void,i:__emval_decref,k:__emval_incref,r:__emval_new_cstring,u:__emval_new_object,q:__emval_set_property,h:__emval_take_value,A:__localtime_js,F:__tzset_js,s:_abort,w:_emscripten_date_now,K:_emscripten_memcpy_big,E:_emscripten_resize_heap,g:_emscripten_run_script,I:_environ_get,J:_environ_sizes_get,H:_fd_close,D:_fd_read,z:_fd_seek,v:_fd_write,a:wasmMemory,G:_strftime,C:_strftime_l}),asm=createWasm(),___wasm_call_ctors=asm.O,_backtest=Module._backtest=asm.P,_free=Module._free=asm.Q,_malloc=Module._malloc=asm.R,___errno_location=asm.__errno_location,_TA_ForEachFunc=Module._TA_ForEachFunc=asm.T,_TA_GetFuncHandle=Module._TA_GetFuncHandle=asm.U,_TA_GetFuncInfo=Module._TA_GetFuncInfo=asm.V,_TA_GetInputParameterInfo=Module._TA_GetInputParameterInfo=asm.W,_TA_GetOptInputParameterInfo=Module._TA_GetOptInputParameterInfo=asm.X,_TA_GetOutputParameterInfo=Module._TA_GetOutputParameterInfo=asm.Y,_TA_ParamHolderAlloc=Module._TA_ParamHolderAlloc=asm.Z,_TA_ParamHolderFree=Module._TA_ParamHolderFree=asm._,_TA_SetInputParamIntegerPtr=Module._TA_SetInputParamIntegerPtr=asm.$,_TA_SetInputParamRealPtr=Module._TA_SetInputParamRealPtr=asm.aa,_TA_SetInputParamPricePtr=Module._TA_SetInputParamPricePtr=asm.ba,_TA_SetOptInputParamInteger=Module._TA_SetOptInputParamInteger=asm.ca,_TA_SetOptInputParamReal=Module._TA_SetOptInputParamReal=asm.da,_TA_SetOutputParamIntegerPtr=Module._TA_SetOutputParamIntegerPtr=asm.ea,_TA_SetOutputParamRealPtr=Module._TA_SetOutputParamRealPtr=asm.fa,_TA_CallFunc=Module._TA_CallFunc=asm.ga,_TA_Initialize=Module._TA_Initialize=asm.ha,_TA_Shutdown=Module._TA_Shutdown=asm.ia,_TA_SetRetCodeInfo=Module._TA_SetRetCodeInfo=asm.ja,_TA_GetVersionString=Module._TA_GetVersionString=asm.ka,___getTypeName=asm.la,__embind_initialize_bindings=Module.__embind_initialize_bindings=asm.ma,stackSave=asm.na,stackRestore=asm.oa,stackAlloc=asm.pa,___cxa_is_pointer_type=asm.qa,dynCall_viijii=Module.dynCall_viijii=asm.ra,dynCall_jiji=Module.dynCall_jiji=asm.sa,dynCall_iiiiij=Module.dynCall_iiiiij=asm.ta,dynCall_iiiiijj=Module.dynCall_iiiiijj=asm.ua,dynCall_iiiiiijj=Module.dynCall_iiiiiijj=asm.va,calledRun;function applySignatureConversions(exports){var makeWrapper_pp=f=>a0=>f(a0)>>>0,makeWrapper_p=f=>()=>f()>>>0;return(exports=Object.assign({},exports)).malloc=makeWrapper_pp(exports.malloc),exports.__errno_location=makeWrapper_p(exports.__errno_location),exports.__getTypeName=makeWrapper_pp(exports.__getTypeName),exports.stackSave=makeWrapper_p(exports.stackSave),exports.stackAlloc=makeWrapper_pp(exports.stackAlloc),exports}function run(){function doRun(){calledRun||(calledRun=!0,Module.calledRun=!0,ABORT)||(initRuntime(),readyPromiseResolve(Module),Module.onRuntimeInitialized&&Module.onRuntimeInitialized(),postRun())}0<runDependencies||(preRun(),0<runDependencies)||(Module.setStatus?(Module.setStatus("Running..."),setTimeout(function(){setTimeout(function(){Module.setStatus("")},1),doRun()},1)):doRun())}if(Module.ccall=ccall,Module.cwrap=cwrap,Module.addFunction=addFunction,Module.removeFunction=removeFunction,dependenciesFulfilled=function runCaller(){calledRun||run(),calledRun||(dependenciesFulfilled=runCaller)},Module.preInit)for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);0<Module.preInit.length;)Module.preInit.pop()();function utf8_encode(string){if("undefined"!=typeof TextEncoder)return(new TextEncoder).encode(string);for(var pos=0,len=string.length,at=0,tlen=Math.max(32,len+(len>>1)+7),target=new Uint8Array(tlen>>3<<3);pos<len;){var extra,value=string.charCodeAt(pos++);if(55296<=value&&value<=56319)if(pos<len&&56320==(64512&(extra=string.charCodeAt(pos)))&&(++pos,value=((1023&value)<<10)+(1023&extra)+65536),55296<=value&&value<=56319)continue;if(at+4>target.length&&(tlen=(tlen=(tlen+=8)*(1+pos/string.length*2))>>3<<3,(extra=new Uint8Array(tlen)).set(target),target=extra),0==(4294967168&value))target[at++]=value;else{if(0==(4294965248&value))target[at++]=value>>6&31|192;else{if(0==(4294901760&value))target[at++]=value>>12&15|224;else{if(0!=(4292870144&value))continue;target[at++]=value>>18&7|240,target[at++]=value>>12&63|128}target[at++]=value>>6&63|128}target[at++]=63&value|128}}return target.slice(0,at)}function valuesToString(values,pos,ch){void 0===ch&&(ch=" ");for(var result="",i=pos=void 0===pos?0:pos;i<values.length;i++)pos<i&&(result+=ch),void 0===values[i]||null===values[i]?result+="null":"string"==typeof values[i]?result+=values[i]:"number"==typeof values[i]||"function"==typeof values[i].getFullYear?result+=values[i].toString():void 0!==values[i].cols&&"string"==typeof values[i].type&&"table"==values[i].type?result+="`"+JSON.stringify(values[i])+"`":result+=JSON.stringify(values[i]);return result=0<result.length?utf8_encode(result):result}function Vector2Array(obj){for(var arr=[],arrSize=obj.size(),i=0;i<arrSize;i++)arr.push(obj.get(i));return arr}function toNonExponential(value){var sign,e;return"number"!=typeof value&&(value=parseFloat(value),isNaN(value))?"":(value<0?(sign="-",value=Math.abs(value)):sign="",value<1?(e=parseInt(value.toString().split("e-")[1]))&&(value*=Math.pow(10,e-1),value="0."+new Array(e).join("0")+value.toString().substring(2)):(e=parseInt(value.toString().split("e+")[1]))&&(value=(value/=Math.pow(10,e))+new Array(e+1).join("0")),sign+value)}return run(),Module.talib=function(){function ReadDouble(p,idx){return getValue(p+4*idx,"double")}function ReadInt(p,idx){return getValue(p+4*idx,"i32")}function ReadStr(p,idx){return UTF8ToString(getValue(p+4*idx,"i32"))}function GetArr(arr,attr,isInteger){var ret=[],tmp=0;isInteger=void 0!==isInteger&&isInteger;for(var i=0;i<arr.length;i++)"number"!=typeof(tmp=arr[i])&&(tmp=arr[i][attr]),isInteger?ret.push(parseInt(tmp)):ret.push(tmp);var data=isInteger?new Uint8Array(new Int32Array(ret).buffer):new Uint8Array(new Float64Array(ret).buffer),ret=Module._malloc(data.length);return writeArrayToMemory(data,ret),ret}Module._TA_Initialize();function throwError(errCode){var retCodeInfo;if(0!==errCode)throw retCodeInfo=Module._malloc(8),TA_SetRetCodeInfo(errCode,retCodeInfo),errCode=ReadStr(retCodeInfo,0)+": "+ReadStr(retCodeInfo,1),Module._free(retCodeInfo),current_func+": "+errCode}var obj={help:function(n){return obj["h_"+n]()},list:[]},TA_GetInputParameterInfo=Module._TA_GetInputParameterInfo,TA_GetOptInputParameterInfo=Module._TA_GetOptInputParameterInfo,TA_GetOutputParameterInfo=Module._TA_GetOutputParameterInfo,TA_ParamHolderAlloc=Module._TA_ParamHolderAlloc,TA_ParamHolderFree=Module._TA_ParamHolderFree,TA_SetInputParamRealPtr=Module._TA_SetInputParamRealPtr,TA_SetInputParamIntegerPtr=Module._TA_SetInputParamIntegerPtr,TA_SetInputParamPricePtr=Module._TA_SetInputParamPricePtr,TA_SetOptInputParamReal=Module._TA_SetOptInputParamReal,TA_SetOptInputParamInteger=Module._TA_SetOptInputParamInteger,TA_SetOutputParamIntegerPtr=Module._TA_SetOutputParamIntegerPtr,TA_SetOutputParamRealPtr=Module._TA_SetOutputParamRealPtr,TA_CallFunc=Module._TA_CallFunc,TA_SetRetCodeInfo=Module._TA_SetRetCodeInfo,current_func="obj",funcCallback=addFunction(function(ptr){var name=ReadStr(ptr,0),group=ReadStr(ptr,1),hint=ReadStr(ptr,2),nbInput=(ReadInt(ptr,4),ReadInt(ptr,5));if(!(1<nbInput&&"OBV"!==name)){for(var nbOptInput=ReadInt(ptr,6),nbOutput=ReadInt(ptr,7),funcHandle=ReadInt(ptr,8),pInfo=Module._malloc(4),inputs=[],optInputs=[],outputs=[],i=0;i<nbInput;i++){throwError(TA_GetInputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);inputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2)})}for(i=0;i<nbOptInput;i++){throwError(TA_GetOptInputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);optInputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2),displayName:ReadStr(ptr,3),defaultValue:ReadDouble(ptr,6),hint:ReadStr(ptr,8)})}for(i=0;i<nbOutput;i++){throwError(TA_GetOutputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);outputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2)})}Module._free(pInfo),obj["h_"+name]=function(){for(var args=[],i=0;i<inputs.length;i++){var type=inputs[i].type,flags=inputs[i].flags,paramName=inputs[i].paramName;1===type?args.push(["Array[Real]",paramName]):2===type?args.push(["Array[Integer]",paramName]):0===type&&(type=[],1&flags&&type.push("Open"),2&flags&&type.push("High"),4&flags&&type.push("Low"),8&flags&&type.push("Close"),16&flags&&type.push("Volume"),32&flags&&type.push("OpenInterest"),64&flags&&type.push("Time"),args.push(["Records["+type.join(",")+"]",paramName]))}for(i=0;i<optInputs.length;i++){var optType="NA";0===optInputs[i].type?optType="RealRange":1===optInputs[i].type?optType="RealList":2===optInputs[i].type?optType="IntegerRange":3===optInputs[i].type&&(optType="IntegerList"),args.push([optType,optInputs[i].paramName,optInputs[i].defaultValue])}for(var rets=[],i=0;i<outputs.length;i++){var outType="Real";1===outputs[i].type&&(outType="Integer"),rets.push([outType,outputs[i].paramName])}return[name,args,rets,hint]},obj.list.push(name);for(var needArg=0,i=0;i<inputs.length;i++){var type=inputs[i].type,flags=inputs[i].flags;(1===type||2===type||0===type&&(1&flags&&needArg++,2&flags&&needArg++,4&flags&&needArg++,8&flags&&needArg++,16&flags))&&needArg++}obj[name]=function(records){var info={handle:funcHandle,name:current_func=name,needArg:needArg,hint:hint,group:group,inputs:inputs,optInputs:optInputs,outputs:outputs};if(void 0===records&&throwError(2),0===records.length){if(0===info.outputs.length)return[];for(var outputArr=[],i=0;i<info.outputs.length;i++)outputArr.push([]);return outputArr}var argPos=0,argv=arguments,moveStep="number"==typeof records[0]?1:0,allocatedParams=(1==moveStep&&arguments.length<info.needArg&&throwError(2),Module._malloc(4)),openPrice=(throwError(TA_ParamHolderAlloc(info.handle,allocatedParams)),null),highPrice=null,lowPrice=null,closePrice=null,volume=null,ints=[],paramsPtr=ReadInt(allocatedParams,0);Module._free(allocatedParams);for(var i=0;i<info.inputs.length;i++){var tmp,type=info.inputs[i].type,flags=info.inputs[i].flags;1===type?(closePrice||(closePrice=GetArr(argv[argPos],"Close"),argPos+=moveStep),throwError(TA_SetInputParamRealPtr(paramsPtr,i,closePrice))):2===type?(tmp=GetArr(argv[argPos],"Close",!0),argPos+=moveStep,ints.push(tmp),throwError(TA_SetInputParamIntegerPtr(paramsPtr,i,tmp))):0===type&&(1&flags&&(openPrice||(openPrice=GetArr(argv[argPos],"Open"),argPos+=moveStep)),2&flags&&(highPrice||(highPrice=GetArr(argv[argPos],"High"),argPos+=moveStep)),4&flags&&(lowPrice||(lowPrice=GetArr(argv[argPos],"Low"),argPos+=moveStep)),8&flags&&(closePrice||(closePrice=GetArr(argv[argPos],"Close"),argPos+=moveStep)),16&flags&&(volume||(volume=GetArr(argv[argPos],"Volume"),argPos+=moveStep)),throwError(TA_SetInputParamPricePtr(paramsPtr,i,openPrice,highPrice,lowPrice,closePrice,volume,null)))}for(0==moveStep&&argPos++,i=0;i<info.optInputs.length;i++)switch(v=argPos+i<arguments.length?arguments[i+argPos]:info.optInputs[i].defaultValue,info.optInputs[i].type){case 0:case 1:TA_SetOptInputParamReal(paramsPtr,i,v);break;case 2:case 3:TA_SetOptInputParamInteger(paramsPtr,i,v);break;default:throw"error"}outputArr=[];for(i=0;i<info.outputs.length;i++){var ptr=null;1===info.outputs[i].type?(ptr=Module._malloc(4*records.length),throwError(TA_SetOutputParamIntegerPtr(paramsPtr,i,ptr))):0===info.outputs[i].type&&(ptr=Module._malloc(8*records.length),throwError(TA_SetOutputParamRealPtr(paramsPtr,i,ptr))),outputArr.push(ptr)}var allocatedParams=Module._malloc(4),outNbElement=Module._malloc(4),beg=(TA_CallFunc(paramsPtr,0,records.length-1,allocatedParams,outNbElement),ReadInt(allocatedParams,0)),num=ReadInt(outNbElement,0),ret=(Module._free(allocatedParams),Module._free(outNbElement),[]);for(i=0;i<info.outputs.length;i++){ptr=outputArr[i];ret[i]=[];for(var v,j=0;j<records.length;j++)j<beg||num<=j-beg?ret[i].push(NaN):(1===info.outputs[i].type?v=ReadInt(ptr,j-beg):0===info.outputs[i].type&&(v=ReadDouble(ptr,2*(j-beg))),ret[i].push(v));Module._free(ptr)}for(throwError(TA_ParamHolderFree(paramsPtr)),openPrice&&Module._free(openPrice),highPrice&&Module._free(highPrice),lowPrice&&Module._free(lowPrice),closePrice&&Module._free(closePrice),volume&&Module._free(volume),i=0;i<ints.length;i++)Module._free(ints[i]);return 1===ret.length?ret[0]:ret}}},"vii");if(0!==ccall("TA_ForEachFunc","number",["pointer","number"],[funcCallback,0]))throw"error";return removeFunction(funcCallback),obj},Module.VMain=function(task){for(var exchanges=[],i=0;i<task.Exchanges.length;i++)exchanges[i]=function(eIdx){var self={},idx=eIdx;return self.cache=[],self.ct="",self.period=task.Options.Period,self.currency=Module.js_Exchange_GetCurrency(eIdx),self.maxBarLen=task.Exchanges[idx].MaxBarLen,self.lastRawJSON="",self.GetName=function(){return Module.js_Exchange_GetName(eIdx)},self.SetData=function(pair,detail){return"string"!=typeof detail&&(detail=JSON.stringify(detail)),Module.js_Exchange_SetData(eIdx,pair,detail)},self.GetPeriod=function(){return self.period/1e3},self.GetCurrency=function(){return self.currency},self.GetLabel=function(){return Module.js_Exchange_GetLabel(eIdx)},self.GetUSDCNY=function(){return Module.js_Exchange_GetUSDCNY(eIdx)},self.GetRate=function(){return Module.js_Exchange_GetRate(eIdx)},self.SetRate=function(n){return Module.js_Exchange_SetRate(eIdx,n=void 0===n?1:n)},self.SetCurrency=function(s){Module.js_Exchange_SetCurrency(eIdx,s),self.currency=Module.js_Exchange_GetCurrency(eIdx)},self.SetBase=function(s){return Module.js_Exchange_SetBase(eIdx,s)},self.GetBase=function(){return Module.js_Exchange_GetBase(eIdx)},self.SetTimeout=function(n){},self.IO=function(k,v){return void 0===v&&(v=1),"currency"==k?self.SetCurrency(v):Module.js_Exchange_IO(eIdx,k,v)},self.SetPrecision=function(a,b){Module.js_Exchange_SetPrecision(eIdx,a,b)},self.SetProxy=function(){},self.GetQuoteCurrency=function(){return Module.js_Exchange_GetQuoteCurrency(eIdx)},self.GetBaseCurrency=function(){return Module.js_Exchange_GetBaseCurrency(eIdx)},self.GetDepth=function(symbol){self.lastRawJSON="";var ret=Module.js_Exchange_GetDepth(eIdx,symbol||"");if(!ret)return null;for(var arr=Vector2Array(ret.Orders),d={Asks:[],Bids:[]},i=0;i<arr.length;i++)(i<ret.AsksLen?d.Asks:d.Bids).push(arr[i]);return d},self.GetTickers=function(){self.lastRawJSON="";var ret=Module.js_Exchange_GetTickers(eIdx);return ret?Vector2Array(ret):null},self.GetMarkets=function(){return JSON.parse(Module.js_Exchange_GetMarkets(eIdx))},self.GetTicker=function(symbol){return self.lastRawJSON="",Module.js_Exchange_GetTicker(eIdx,symbol||"")},self.GetData=function(pair,timeout,offset){"number"!=typeof timeout&&(timeout=6e4),"number"!=typeof offset&&(offset=0),self.lastRawJSON="";pair=Module.js_Exchange_GetData(eIdx,pair,timeout,offset);return 0<pair.Data.length?pair.Data=JSON.parse(pair.Data):pair.Data=null,pair},self.GetTrades=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetTrades(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.SetMaxBarLen=function(n){self.maxBarLen=n},self.GetRecords=function(symbol,period,limit){"number"==typeof symbol?(limit=period,period=symbol,symbol=""):void 0===symbol&&(symbol="",period=-1,limit=0),self.lastRawJSON="";symbol=Module.js_Exchange_GetRecords(eIdx,symbol||"",period=void 0!==period&&-1!=period?period:self.period/1e3,limit="number"!=typeof limit?0:limit);if(!symbol)return null;var records=Vector2Array(symbol),symbol=self.currency+"/"+self.ct+"/"+period.toString();if(void 0===self.cache[symbol])records.length>self.maxBarLen&&(records=records.slice(records.length-self.maxBarLen)),self.cache[symbol]=records;else for(var c=self.cache[symbol],preTime=0<c.length?c[c.length-1].Time:0,i=0;i<records.length;i++)records[i].Time==preTime&&0<c.length?c[c.length-1]=records[i]:records[i].Time>preTime&&(c.push(records[i]),preTime=c[c.length-1].Time,c.length>self.maxBarLen)&&c.shift();let bars=self.cache[symbol];return bars=0<limit&&bars.length>limit?bars.slice(bars.length-limit):bars},self.GetAccount=function(){return self.lastRawJSON="ctpAccount",Module.js_Exchange_GetAccount(eIdx)},self.GetRawJSON=function(){return"ctpAccount"!=self.lastRawJSON?self.lastRawJSON:Module.js_Exchange_GetCTPAccountJSON(eIdx)},self.Buy=function(price,amount){return self.lastRawJSON="",Module.js_Exchange_Buy(eIdx,price,amount,valuesToString(Array.prototype.slice.call(arguments),2))},self.Sell=function(price,amount){return self.lastRawJSON="",Module.js_Exchange_Sell(eIdx,price,amount,valuesToString(Array.prototype.slice.call(arguments),2))},self.CreateOrder=function(symbol,side,price,amount){return self.lastRawJSON="",Module.js_Exchange_CreateOrder(eIdx,symbol,side,price,amount,valuesToString(Array.prototype.slice.call(arguments),4))},self.Log=function(orderType,price,amount){Module.js_Exchange_Log(eIdx,orderType,price,2==orderType?0:amount,valuesToString(Array.prototype.slice.call(arguments),2==orderType?2:3))},self.GetOrders=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetOrders(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.GetHistoryOrders=function(symbol,since,limit){self.lastRawJSON="",void 0===limit&&(limit=0);symbol=Module.js_Exchange_GetHistoryOrders(eIdx,symbol||"",(since=void 0===since?0:since).toString(),limit);return symbol?Vector2Array(symbol):null},self.GetAssets=function(){self.lastRawJSON="";var ret=Module.js_Exchange_GetAssets(eIdx);return ret?Vector2Array(ret):null},self.GetOrder=function(orderId){return self.lastRawJSON="",Module.js_Exchange_GetOrder(eIdx,orderId)},self.CancelOrder=function(orderId){return self.lastRawJSON="",Module.js_Exchange_CancelOrder(eIdx,orderId,valuesToString(Array.prototype.slice.call(arguments),1))},self.SetDirection=function(s){return Module.js_Exchange_SetDirection(eIdx,s)},self.SetMarginLevel=function(symbol,marginLevel){var tmp;return"number"==typeof symbol&&(tmp=marginLevel||"",marginLevel=symbol,symbol=tmp),Module.js_Exchange_SetMarginLevel(eIdx,symbol,marginLevel)},self.SetContractType=function(symbol){var r=Module.js_Exchange_SetContractType(eIdx,symbol);return"string"==typeof r?(self.ct=symbol,JSON.parse(r)):null},self.GetContractType=function(){return self.ct},self.GetPosition=self.GetPositions=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetPositions(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.Go=function(){var args=Array.prototype.slice.call(arguments),ret=self[args[0]].apply(self,args.slice(1));return{wait:function(){return ret}}},self}(i);var gApis={kvdb:{}},__realDate=Date,__cRetryDelay=3e3,runtime=(gApis.RDate=__realDate,gApis.Benchmark=Module.js_Benchmark,gApis._T=function(a,b){return"[trans]"+("string"==typeof b?a+"|"+b:a)+"[/trans]"},gApis._D=function(date,fmt){void 0===fmt&&(fmt="yyyy-MM-dd hh:mm:ss"),"number"==typeof date?date=new __realDate(date):void 0===date&&(date=new __realDate(Module.js_UnixNano()/1e6));var y=date.getFullYear(),yy=(y%100).toString();1==yy.length&&(yy="0"+yy);var M=(M="0"+(date.getMonth()+1)).substring(M.length-2),d=(d="0"+date.getDate()).substring(d.length-2),h=(h="0"+date.getHours()).substring(h.length-2),m=(m="0"+date.getMinutes()).substring(m.length-2),date=(date="0"+date.getSeconds()).substring(date.length-2);return fmt.replace("yyyy",y).replace("MM",M).replace("dd",d).replace("hh",h).replace("mm",m).replace("ss",date).replace("yy",yy)},gApis.Unix=function(){return Module.js_Unix()},gApis.UnixNano=function(){return Module.js_UnixNano()},gApis.Sleep=function(n){Module.js_Sleep(n)},gApis.Log=function(){Module.js_Log(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogError=function(){Module.js_LogError(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogStatus=function(){Module.js_LogStatus(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogProfit=function(profit){Module.js_LogProfit(profit,valuesToString(Array.prototype.slice.call(arguments),1))},gApis.LogReset=function(keep){Module.js_LogReset(keep=void 0===keep?0:keep)},gApis.EnableLog=function(flag){Module.js_EnableLog(flag=void 0===flag?!0:flag)},gApis.LogProfitReset=function(keep){Module.js_LogProfitReset(keep=void 0===keep?0:keep)},gApis.Date=function(s){return void 0===s&&(s=Module.js_UnixNano()/1e6),new __realDate(s)},gApis.Date.UTC=__realDate.UTC,gApis.Date.parse=__realDate.parse,gApis.Date.now=function(){return Module.js_UnixNano()/1e6},gApis._Cross=function(arr1,arr2){if(arr1.length!==arr2.length)throw"cross array length not equal";for(var n=0,i=arr1.length-1;0<=i&&"number"==typeof arr1[i]&&"number"==typeof arr2[i];i--)if(arr1[i]<arr2[i]){if(0<n)break;n--}else{if(!(arr1[i]>arr2[i]))break;if(n<0)break;n++}return n},gApis._N=function(v,precision){"number"!=typeof precision&&(precision=4);var v=parseFloat(v.toFixed(Math.max(10,precision+5))),s=toNonExponential(v).split(".");return!(0<=precision&&(s.length<2||s[1].length<=precision))&&((s=v<0)&&(v=-v),precision=Math.pow(10,precision),v=Math.floor(v*precision)/precision,s)&&0!=v?-v:v},gApis._C=function(method){for(var r;!(r=method.apply(this,Array.prototype.slice.call(arguments).slice(1)));)gApis.Sleep(__cRetryDelay);return r},gApis._CDelay=function(n){0<n&&(__cRetryDelay=n)},gApis.GetPid=function(){return 1},gApis.GetOS=function(){return"linux/amd64"},gApis.GetLastError=function(){return Module.js_GetLastError()},gApis.SetErrorFilter=function(s){},gApis.MD5=function(s){return Module.js_MD5(s)},gApis.UUID=function(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)},gApis.GetCommand=function(){return""},gApis.GetMeta=function(){return""},gApis.Mail=function(){return!0},gApis.Mail_Go=function(){return!0},gApis.EventLoop=function(){gApis.LogError("sandbox not support EventLoop")},gApis.Dial=function(){gApis.LogError("sandbox not support Dial")},gApis.DBExec=function(){gApis.LogError("sandbox not support DBExec")},gApis.Encode=function(){gApis.LogError("sandbox not support Encode")},gApis.HttpQuery=function(url,data,cookies,headers,isReturnHeader,isAsync){null==cookies&&(cookies=""),null==headers&&(headers=""),void 0===isReturnHeader&&(isReturnHeader=!1);var ret=Module.js_HttpQuery(url);return isAsync?{wait:function(){return ret}}:ret},gApis.JSONParse=function(s){return JSON.parse(s)},gApis.StrDecode=function(s){gApis.LogError("sandbox not support StrDecode")},gApis.IsVirtual=function(){return!0},gApis.EnableLogLocal=function(){},gApis.LogVacuum=function(){},gApis.Version=function(){return"3.6"},gApis._G=function(k,v){if(void 0===k)return 1;if(null==k)gApis.kvdb={};else{if(k=k.toLowerCase(),void 0===v)return void 0===gApis.kvdb[k]?null:gApis.kvdb[k];null==v?delete gApis.kvdb[k]:gApis.kvdb[k]=v}},gApis.Chart=function(js){var self={update:function(cfg){Module.js_Chart_New(utf8_encode(JSON.stringify(cfg)))},add:function(seriesIdx,d,replaceId){var arr=[];"number"!=typeof seriesIdx?arr=seriesIdx:(arr=[seriesIdx,d],void 0!==replaceId&&arr.push(replaceId)),Module.js_Chart_Add(utf8_encode(JSON.stringify(arr)))},reset:function(reverse){Module.js_Chart_Reset("number"!=typeof reverse?0:reverse)}};return self.update(js),self},gApis.KLineChart=function(options){(options=void 0===options?{}:options).__isCandle=!0;function newPlot(shape){return void 0===shape.overlay&&(shape.overlay=scope.overlay),"shape"!=shape.type&&"bgcolor"!=shape.type&&"barcolor"!=shape.type&&(shape.title&&!scope.runtime.titles[shape.title]||(shape.title="<"+(shape.title||"plot")+"_"+scope.runtime.count.toString()+">"),scope.runtime.count+=1,shape.title)&&(scope.runtime.titles[shape.title]=!0),shape}var scope={chart:gApis.Chart(options),bar:{},overlay:options.overlay||!1,preTime:0,runtime:{plots:[],signals:[],titles:{},count:0}};return scope.register=function(name,args,pfn){var dic={},names=[];args.forEach(function(s,i){Array.isArray(s)?(names.push(s[0]),dic[s[0]]={pos:i,val:s[1]}):(names.push(s),dic[s]={pos:i})}),scope[name]=function(){if(!(scope.bar.Time<scope.preTime)){var argv={};for(k in dic)void 0!==dic[k].val&&(argv[k]=dic[k].val);for(var i=0;i<arguments.length;i++)if(i==arguments.length-1&&"object"==typeof arguments[i])for(var k in arguments[i])void 0!==dic[k]&&(argv[k]=arguments[i][k]);else void 0!==dic[names[i]]&&(argv[names[i]]=arguments[i]);return pfn(argv)}}},scope.begin=function(bar){scope.bar=bar},scope.reset=function(remain){scope.chart.reset(remain),scope.preTime=0},scope.close=function(){var data;scope.bar.Time<scope.preTime||(data={timestamp:scope.bar.Time,open:scope.bar.Open,high:scope.bar.High,low:scope.bar.Low,close:scope.bar.Close,volume:scope.bar.Volume},0<scope.runtime.plots.length&&(data.runtime||(data.runtime={}),data.runtime.plots=scope.runtime.plots),0<scope.runtime.signals.length&&(data.runtime||(data.runtime={}),data.runtime.signals=scope.runtime.signals),scope.preTime==scope.bar.Time?scope.chart.add(0,data,-1):scope.chart.add(0,data),scope.preTime=scope.bar.Time,scope.runtime.plots=[],scope.runtime.signals=[],scope.runtime.titles={},scope.runtime.count=0)},scope.register("plot",[["series",NaN],"title","color","linewidth",["style","line"],"trackprice",["histbase",0],["offset",0],["join",!1],"editable","show_last",["display","all"],"overlay"],function(argv,idx){if(!isNaN(argv.series))return scope.runtime.plots.push(newPlot({series:argv.series,overlay:argv.overlay,title:argv.title,join:argv.join,color:argv.color,histbase:argv.histbase,type:argv.style,lineWidth:argv.linewidth,display:argv.display,offset:argv.offset})),scope.runtime.plots.length-1}),scope.register("barcolor",["color","offset","editable","show_last","title",["display","all"]],function(argv,idx){"string"==typeof argv.color&&"all"==argv.display&&scope.runtime.plots.push({type:"barcolor",title:argv.title,color:argv.color,offset:argv.offset,showLast:argv.show_last,display:argv.display})}),scope.register("plotarrow",["series","title",["colorup","#00ff00"],["colordown","#ff0000"],["offset",0],["minheight",5],["maxheight",100],["editable",!0],"show_last",["display","all"],"overlay"],function(argv){"all"!=argv.display||isNaN(argv.series)||scope.runtime.plots.push(newPlot({series:argv.series,title:argv.title,colorup:argv.colorup,colordown:argv.colordown,offset:argv.offset,minheight:argv.minheight,maxheight:argv.maxheight,showLast:argv.show_last,type:"shape",style:"arrow",display:argv.display,overlay:argv.overlay}))}),scope.register("hline",["price","title","color",["linestyle","dashed"],"linewidth","editable",["display","all"],"overlay"],function(argv){return scope.runtime.plots.push(newPlot({title:argv.title,price:argv.price,overlay:argv.overlay,color:argv.color,type:"hline",lineStyle:argv.linestyle,lineWidth:argv.linewidth,display:argv.display})),scope.runtime.plots.length-1}),scope.register("bgcolor",["color","offset","editable","show_last","title",["display","all"],"overlay"],function(argv){"string"==typeof argv.color&&"all"==argv.display&&scope.runtime.plots.push(newPlot({title:argv.title,overlay:argv.overlay,color:argv.color,type:"bgcolor",showLast:argv.show_last,offset:argv.offset}))}),scope.register("plotchar",["series","title","char",["location","abovebar"],"color","offset","text","textcolor","editable",["size","auto"],"show_last","display","overlay"],function(argv){"absolute"!=argv.location&&!argv.series||"absolute"==argv.location&&isNaN(argv.series)||!argv.char||scope.runtime.plots.push(newPlot({overlay:argv.overlay,type:"shape",style:"char",char:argv.char,series:argv.series,location:argv.location,color:argv.color,offset:argv.offset,size:argv.size,text:argv.text,textColor:argv.textcolor}))}),scope.register("plotshape",["series","title","style",["location","abovebar"],"color","offset","text","textcolor","editable",["size","auto"],"show_last","display","overlay"],function(argv){"absolute"!=argv.location&&!argv.series||"absolute"==argv.location&&isNaN(argv.series)||scope.runtime.plots.push(newPlot({type:"shape",overlay:argv.overlay,title:argv.title,size:argv.size,style:argv.style,series:argv.series,location:argv.location,color:argv.color,offset:argv.offset,text:argv.text,textColor:argv.textcolor}))}),scope.register("plotcandle",["open","high","low","close","title","color","wickcolor","editable","show_last","bordercolor",["display","all"],"overlay"],function(argv){"all"==argv.display&&scope.runtime.plots.push(newPlot({price:argv.high,open:argv.open,high:argv.high,low:argv.low,close:argv.close,title:argv.title,color:argv.color,wickColor:argv.wickcolor,showLast:argv.show_last,borderColor:argv.bordercolor,type:"candle",display:argv.display,overlay:argv.overlay}))}),scope.register("fill",["plot1","plot2","color","title","editable","show_last","fillgaps",["display","all"]],function(argv){var dst;0<=argv.plot1&&0<=argv.plot2&&argv.plot1<scope.runtime.plots.length&&argv.plot2<scope.runtime.plots.length&&"all"==argv.display&&void 0!==(dst=scope.runtime.plots[argv.plot1])&&(void 0===dst.fill&&(dst.fill=[]),dst.fill.push({value:scope.runtime.plots[argv.plot2].series,color:argv.color,showLast:argv.show_last}))}),scope.register("signal",["direction","price","qty","id"],function(argv){var task={id:argv.id||argv.direction,qty:argv.qty,avgPrice:argv.price};"buy"==argv.direction||"long"==argv.direction?task.direction="long":"sell"==argv.direction||"short"==argv.direction?task.direction="short":"closesell"==argv.direction||"closeshort"==argv.direction?(task.direction="close",task.closeDirection="short"):"closebuy"!=argv.direction&&"closelong"!=argv.direction||(task.direction="close",task.closeDirection="long"),(task.direction||task.closeDirection)&&scope.runtime.signals.push(task)}),scope},gApis.$={},gApis.ORDER_STATE_PENDING=0,gApis.ORDER_STATE_CLOSED=1,gApis.ORDER_STATE_CANCELED=2,gApis.ORDER_STATE_UNKNOWN=3,gApis.ORDER_TYPE_BUY=0,gApis.ORDER_TYPE_SELL=1,gApis.ORDER_OFFSET_OPEN=0,gApis.ORDER_OFFSET_CLOSE=1,gApis.PD_LONG=0,gApis.PD_SHORT=1,gApis.PD_LONG_YD=2,gApis.PD_SHORT_YD=3,gApis.LOG_TYPE_BUY=0,gApis.LOG_TYPE_SELL=1,gApis.LOG_TYPE_CANCEL=2,gApis.LOG_TYPE_ERROR=3,gApis.LOG_TYPE_PROFIT=4,gApis.LOG_TYPE_LOG=5,gApis.LOG_TYPE_RESTART=6,gApis.PERIOD_M1=60,gApis.PERIOD_M3=180,gApis.PERIOD_M5=300,gApis.PERIOD_M15=900,gApis.PERIOD_M30=1800,gApis.PERIOD_H1=3600,gApis.PERIOD_H2=7200,gApis.PERIOD_H4=14400,gApis.PERIOD_H6=21600,gApis.PERIOD_H12=43200,gApis.PERIOD_D1=86400,gApis.PERIOD_D3=259200,gApis.PERIOD_W1=604800,gApis.exchanges=exchanges,gApis.exchange=exchanges[0],gApis.talib=Module.talib(),gApis.TA=TAInstance(function(name){Module.js_LogTA(name,valuesToString(Array.prototype.slice.call(arguments),1,","))}),null),getMapLines=(gApis.__runtime__=function(obj){runtime=obj},function(source){var endPos,rawTxt,mapLinesPos=source.indexOf("//# sourceMappingObj=");return-1!=mapLinesPos?(rawTxt="",rawTxt=-1==(endPos=source.indexOf("\n",mapLinesPos+1))?source.slice(mapLinesPos+"//# sourceMappingObj=".length):source.slice(mapLinesPos+"//# sourceMappingObj=".length,endPos),JSON.parse(rawTxt)):[]}),countLines=function(s){for(var count=1,i=0;i<s.length;i++)"\n"==s[i]&&count++;return count},tpls=task.Code,scope={},k;for(k in gApis)scope[k]=gApis[k];for(var fullSource="",sourceMapObj=[],i=0;i<tpls.length;i++){var tpl=tpls[i],argsLine="",argDic={},suffix=(tpl[1].forEach(function(pair){argsLine+="var "+pair[0]+" = "+JSON.stringify(pair[1])+";",argDic[pair[0]]=pair[1]}),argsLine+="var __arguments = "+JSON.stringify(argDic)+";","\n;if(typeof(init)==='function')init();"),fileName=tpl[2];if(i==tpls.length-1){if(fileName="__FILE__",void 0!==Module.__ret__){scope.__arguments=argDic,tpl[1].forEach(function(pair){scope[pair[0]]=pair[1]}),Module.__ret__.scope=scope,Module.__ret__.Join=Module.js_Join;continue}suffix+=";;main()\nif(typeof(onexit)==='function'){onexit()}"}sourceMapObj.push({baseLine:countLines(fullSource),codeLine:countLines(tpl[0]),fileName:fileName,mapLines:getMapLines(tpl[0])}),fullSource+="(function(){"+argsLine+tpl[0]+suffix+"})();\n"}var evalScope=function(locals,source){with(locals)eval(source)},errMsg,stacks;try{evalScope(scope,fullSource)}catch(err){"EOF"!=err&&(errMsg=err.toString(),stacks=[errMsg],-1==errMsg.indexOf("line:")&&err.stack&&(console.log("\nStacktrace:"),console.log("===================="),console.log(err.stack),err.stack.split("\n").forEach(function(stackLine){var posSearch=stackLine.indexOf("(eval at evalScope ");if(0<posSearch){var pos=stackLine.indexOf("<anonymous>:",posSearch),posSearch=(0<pos&&(e=stackLine.indexOf(")",pos)),stackLine.substring(0,posSearch).split("\n")),stackLine=stackLine.substring(pos+"<anonymous>:".length,e).split(":");if(0<stackLine.length){for(var vLine=parseInt(stackLine[0]),fileName=null,mapLines=[],pIndex=0;pIndex<sourceMapObj.length;pIndex++)if(vLine>=sourceMapObj[pIndex].baseLine&&vLine<sourceMapObj[pIndex].baseLine+sourceMapObj[pIndex].codeLine){fileName=sourceMapObj[pIndex].fileName,mapLines=sourceMapObj[pIndex].mapLines,vLine-=sourceMapObj[pIndex].baseLine-1;break}if(fileName){for(var pItem=0;pItem<mapLines.length;pItem++)if(vLine>=mapLines[pItem][0]&&vLine<=mapLines[pItem][1]){vLine-=mapLines[pItem][2];break}stacks.push(posSearch[posSearch.length-1]+"("+fileName+":"+vLine.toString()+")")}}}})),Module.js_LogError(valuesToString([stacks.join("\n")])))}try{void 0!==task.Step&&task.Step||Module.js_Close(JSON.stringify(runtime))}catch(e){}},Module.VTask=function(task,httpCache,httpGet,callBack,onEnd,retScope){void 0!==retScope&&(Module.__ret__=retScope),void 0!==httpCache&&httpCache||(httpCache={});var retScope=addFunction(function(a,b,c,d){var jsString,a=UTF8ToString(a),a=(void 0!==httpCache[a]?jsString=httpCache[a]:(jsString=httpGet(a),httpCache[a]=jsString),lengthBytesUTF8(jsString)+1),ptr=_malloc(a);return stringToUTF8(jsString,ptr,a+1),setValue(b,ptr,"i32"),setValue(c,a,"i32"),setValue(d,1,"i32"),0},"iiiii"),progressCallback=addFunction(function(st){callBack(JSON.parse(UTF8ToString(st)))},"vi");ccall("backtest","number",["string","string","pointer","pointer"],[JSON.stringify(task),null,retScope,progressCallback]),"function"==typeof onEnd&&onEnd()},moduleArg}})(),fs,os,process,_,math,Decimal,crypto,httpGet,_session,toUnix,fmtTime,toHTML,pdObj,htmlResult,__m;function md5(text){return crypto.createHash("md5").update(text).digest("hex")}function notify(msgType,msg){var msg=Buffer.from(msg),h=Buffer.allocUnsafe(8);h.writeUInt32BE(msgType,0),h.writeUInt32BE(msg.length,4),_session.write(Buffer.concat([h,msg]))}"object"==typeof exports&&"object"==typeof module?module.exports=VBacktest:"function"==typeof define&&define.amd&&define([],()=>VBacktest),"undefined"!=typeof self&&void 0!==self.onmessage?self.onmessage=function(event){var event=event.data,task=event[0],httpCache=event[1],lastProgress=0,lastSummary="";void 0===VBacktest&&importScripts("env.js","decimal.min.js","underscore-min.js","math.min.js",-1==task.Engine.indexOf("wasm")?"sandbox_cpp.js":"sandbox_cpp_wasm.js"),VBacktest().VTask(task,httpCache,function(path){var r=XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");return r.open("GET",path,!1),r.send(null),r.responseText},function(st){var nowProgress;void 0!==st.TaskStatus&&1==st.TaskStatus&&(st.httpCache=httpCache),1==st.TaskStatus?self.postMessage({ret:st}):(nowProgress=st.Progress.toFixed(1))==lastProgress&&lastSummary===st.statusStr||(lastProgress=nowProgress,lastSummary=st.statusStr,self.postMessage({ret:st}))})}:(fs=require("fs"),os=require("os"),process=require("process"),_=this._,math=this.math,Decimal=this.Decimal,crypto=require("crypto"),httpGet=function(url){var tmpCache=os.tmpdir()+"/cache",tmpCache=(fs.existsSync(tmpCache)||fs.mkdirSync(tmpCache),tmpCache+"/botvs_kline_"+md5(url));return fs.existsSync(tmpCache)?fs.readFileSync(tmpCache,"utf-8"):((url=require("sync-request")("GET",url).getBody("utf8"))&&-1!==url.indexOf(",")&&fs.writeFileSync(tmpCache,url,"utf-8"),url)},"undefined"!=typeof s?(_session=s,VBacktest().VTask(__cfg__,null,httpGet,function(st){notify(st.TaskStatus,JSON.stringify(st))},function(){try{_session.end()}catch(e){}})):(toUnix=function(s){var n=parseInt(new Date(s).getTime()/1e3);return-1==s.indexOf(" ")&&(n-=28800),n},fmtTime=function(date,fmt){void 0===fmt&&(fmt="yyyy-MM-dd hh:mm:ss");var y=date.getFullYear(),yy=(y%100).toString();1==yy.length&&(yy="0"+yy);var M=(M="0"+(date.getMonth()+1)).substring(M.length-2),d=(d="0"+date.getDate()).substring(d.length-2),h=(h="0"+date.getHours()).substring(h.length-2),m=(m="0"+date.getMinutes()).substring(m.length-2),date=(date="0"+date.getSeconds()).substring(date.length-2);return fmt.replace("yyyy",y).replace("MM",M).replace("dd",d).replace("hh",h).replace("mm",m).replace("ss",date).replace("yy",yy)},toHTML=function(data){var html="<table><tr><td>";for(i in data.columns)html+="<td>"+data.columns[i]+"</td>";html+="</tr>";for(var rows=[],i=0;i<data.rows.length;i++){for(var rowSkip="",row=(5<=i&&i<data.rows.length-5&&(i=data.rows.length-5,rowSkip="<tr><td>...</td>"),"<tr><td>"+data.index[i]+"</td>"),j=0;j<data.columns.length;j++)0<rowSkip.length&&(rowSkip+="<td>...</td>"),row+="<td>"+data.rows[i][j]+"</td>";0<rowSkip.length&&rows.push(rowSkip+"</tr>"),rows.push(row+"</tr>")}return html=(html+=rows.join("")+"</table>")+("<p>"+data.rows.length+" rows x "+data.columns.length+" columns<p>")},pdObj=function(data){var p=this;p.index=data.index,p.columns=data.columns,data.columns.forEach(function(c){p[c]=[]}),data.rows.forEach(function(row){row.forEach(function(f,idx){idx<data.columns.length&&p[data.columns[idx]].push(f)})}),p._toHtml=function(){return toHTML(data)}},__ctx.exports.get_bars=function(symbol,unit,start,end,count){void 0===count&&(count=1e3),"string"==typeof(unit=void 0===unit?"1d":unit)&&(ec=unit[unit.length-1],unit=parseInt(unit.slice(0,unit.length-1)),"d"==ec?unit*=1440:"h"==ec?unit*=60:"s"==ec&&(unit/=60));var key,ec=parseInt((new Date).getTime()/1e3),params=(void 0!==end&&(ec=toUnix(end)),void 0!==start?(ts_from=toUnix(start),void 0===end&&(ec=ts_from+100*unit*(count+10))):void 0===end?(ts_from=0,ts_end=0):ts_from=ec-100*unit*(count+10),{symbol:symbol,resolution:unit,from:ts_from,to:ec,size:count}),arr=[];for(key in params)arr.push(encodeURIComponent(key)+"="+encodeURIComponent(params[key]));for(var data=JSON.parse(httpGet("https://q.fmz.com/chart/history?"+arr.join("&"))),rows=[],index=[],i=0;i<data.length;i++)index.push(fmtTime(new Date(1e3*data[i][0]))),rows.push(data[i].slice(1,data[i].length));return new pdObj({index:index,rows:rows,columns:["open","high","low","close","volume"]})},htmlResult=function(s){var s=JSON.parse(s),pnl=[],index=[];return s.Snapshots.forEach(function(ele){var acc=ele[1][0];pnl.push([acc.PnL,100*acc.Utilization]),index.push(fmtTime(new Date(ele[0])))}),columns=["PnL","Utilization(%)"],new pdObj({columns:columns,index:index,rows:pnl})},__m=VBacktest(),void 0===global.talib&&(global.talib=__m.talib(),global.TA=__m.TA,global.plot=function(data,layout){void 0!==data.index&&void 0!==data.columns&&(arr=[],data.columns.forEach(function(c){arr.push({name:c,x:data.index,y:data[c]})}),data=arr),Array.isArray(data)&&0<data.length&&"number"==typeof data[0]&&(obj={x:[],y:data},data.forEach(function(ele,idx){obj.x.push(idx+1)}),data=[obj]),void 0===layout&&(layout={});var arr,obj,timestamp=(new Date).getTime(),timestamp=["<div class='plotly-plot'>","<div id='notebook-plot-"+timestamp+"'></div>","<script>","function plot(){","Plotly.plot('notebook-plot-"+timestamp+"',",JSON.stringify(data),",",JSON.stringify(layout),",",JSON.stringify({displaylogo:!1}),");","}","if(window.Plotly){","plot();","}else{","var head = document.head || document.getElementsByTagName('head')[0];","var s = document.createElement('script');","s.charset='utf-8';","s.src = 'https://www.fmz.com/pkg/plotly-latest.min.js';","s.type = 'text/javascript';","s.async = false;","s.onreadystatechange = s.onload = plot;","head.appendChild(s);","}","<\/script>","</div>"].join("");$$.html(timestamp)}),__ctx.exports.VCtx=function(obj){function periodToMs(s,def){var tmp;return s.length<2||(tmp=parseInt(s.slice(0,s.length-1)),"d"==(s=s[s.length-1])?def=6e4*tmp*60*24:"m"==s?def=6e4*tmp:"h"==s&&(def=36e4*tmp)),def}function dicGet(obj,k,v){return void 0!==obj[k]?obj[k]:v}var k,period=periodToMs(obj.period,36e5),basePeriod=36e5,exchanges=("string"==typeof obj.basePeriod?basePeriod=periodToMs(obj.basePeriod,basePeriod):864e5==period?basePeriod=36e5:36e5==period?basePeriod=18e5:18e5==period?basePeriod=9e5:9e5==period?basePeriod=3e5:3e5==period&&(basePeriod=6e4),[]),feeDef={Huobi:[150,200],OKX:[150,200],Binance:[150,200],Futures_BitMEX:[8,10],Futures_OKX:[30,30],Futures_HuobiDM:[30,30],Futures_CTP:[25,25],Futures_XTP:[30,130]},isCNY=!1,period=(obj.exchanges.forEach(function(e){var arr=e.currency.toUpperCase().split("_"),fee=(1==arr.length&&arr.push(-1!=e.eid.indexOf("CTP")?"CNY":"USD"),[200,200]),v=e.fee,fee=void 0!==v?[1e3*v[0],1e3*v[1]]:feeDef[e.eid]||[200,200];cfg={Balance:dicGet(e,"balance",1e4),BaseCurrency:arr[0],BasePeriod:basePeriod,DepthDeep:5,DepthAmount:20,FaultTolerant:0,PreBarLen:1e3,FeeDenominator:5,FeeMaker:fee[0],FeeTaker:fee[1],FeeMin:dicGet(e,"feeMin",0),Id:e.eid,Label:e.eid,QuoteCurrency:arr[1],SlipPoint:0,Stocks:dicGet(e,"stocks",3)},"Futures_CTP"==e.eid||"Futures_XTP"==e.eid?(cfg.DepthDeep=1,isCNY=!0):"Futures_OKX"!=e.eid&&"Futures_HuobiDM"!=e.eid&&"Bitfinex"!=e.eid&&"Binance"!=e.eid&&("Futures_BitMEX"==e.eid?15!=(v=cfg.BasePeriod/6e4)&&30!=v||(cfg.BasePeriod=3e5):e.eid.indexOf("Futures")),exchanges.push(cfg)}),(options={DataServer:obj.dataServer||(isCNY?"https://q.youquant.com":"https://q.fmz.com"),MaxChartLogs:800,MaxProfitLogs:800,MaxRuntimeLogs:800,NetDelay:200,Period:period,RetFlags:189,UpdatePeriod:5e3}).TimeBegin=toUnix(obj.start),options.TimeEnd=toUnix(obj.end),86400),obj=options.TimeEnd-options.TimeBegin,ctx=(obj/3600<=2?period=60:obj/86400<=2?period=300:obj/86400<30&&(period=3600),options.SnapshotPeriod=1e3*period,options.RetFlags|=256,{});for(k in __m.VTask({Code:[["function main() {}",[],"main"]],Exchanges:exchanges,Options:options,Step:!0},null,httpGet,function(st){},function(){},ctx),ctx.scope)"Date"!=k&&(global[k]=ctx.scope[k]);var realJoin=ctx.Join;return ctx.Join=function(report){var r=realJoin();return report?htmlResult(r):r},ctx}));