"undefined"==typeof __ctx&&(__ctx={}),__ctx.INITIAL_MEMORY=335544320,"undefined"!=typeof module&&(__ctx.module=module),"undefined"!=typeof exports&&(__ctx.exports=exports),"undefined"==typeof module&&"undefined"==typeof exports||(module=void 0,exports=void 0,print=console.log),!function(n){"use strict";function e(n){var e,i,t,r=n.length-1,s="",o=n[0];if(0<r){for(s+=o,e=1;e<r;e++)t=n[e]+"",(i=Sn-t.length)&&(s+=l(i)),s+=t;o=n[e],(i=Sn-(t=o+"").length)&&(s+=l(i))}else if(0===o)return"0";for(;o%10==0;)o/=10;return s+o}function i(n,e,i){if(n!==~~n||n<e||i<n)throw Error(yn+n)}function t(n,e,i,t){for(var r,u,s=n[0];10<=s;s/=10)--e;return--e<0?(e+=Sn,r=0):(r=Math.ceil((e+1)/Sn),e%=Sn),s=qn(10,Sn-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),i<4&&99999==u||3<i&&49999==u||5e4==u||0==u):(i<4&&u+1==s||3<i&&u+1==s/2)&&(n[r+1]/s/100|0)==qn(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),(t||i<4)&&9999==u||!t&&3<i&&4999==u):((t||i<4)&&u+1==s||!t&&3<i&&u+1==s/2)&&(n[r+1]/s/1e3|0)==qn(10,e-3)-1}function r(n,e,i){for(var t,r,s=[0],o=0,u=n.length;o<u;){for(r=s.length;r--;)s[r]*=e;for(s[0]+=mn.indexOf(n.charAt(o++)),t=0;t<s.length;t++)i-1<s[t]&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i)}return s.reverse()}function o(n,e,i,t){var r,s,o,u,c,h,a,l,d=n.constructor;n:if(null!=e){if(!(a=n.d))return n;for(r=1,u=a[0];10<=u;u/=10)r++;if((s=e-r)<0)s+=Sn,o=e,c=(h=a[l=0])/qn(10,r-o-1)%10|0;else if(l=Math.ceil((s+1)/Sn),(u=a.length)<=l){if(!t)break n;for(;u++<=l;)a.push(0);h=c=0,o=(s%=Sn)-Sn+(r=1)}else{for(h=u=a[l],r=1;10<=u;u/=10)r++;c=(o=(s%=Sn)-Sn+r)<0?0:h/qn(10,r-o-1)%10|0}if(t=t||e<0||void 0!==a[l+1]||(o<0?h:h%qn(10,r-o-1)),c=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):5<c||5==c&&(4==i||t||6==i&&(0<s?0<o?h/qn(10,r-o):0:a[l-1])%10&1||i==(n.s<0?8:7)),e<1||!a[0])return a.length=0,c?(e-=n.e+1,a[0]=qn(10,(Sn-e%Sn)%Sn),n.e=-e||0):a[0]=n.e=0,n;if(0==s?(a.length=l,u=1,l--):(a.length=l+1,u=qn(10,Sn-s),a[l]=0<o?(h/qn(10,r-o)%qn(10,o)|0)*u:0),c)for(;;){if(0==l){for(s=1,o=a[0];10<=o;o/=10)s++;for(o=a[0]+=u,u=1;10<=o;o/=10)u++;s!=u&&(n.e++,a[0]==Rn)&&(a[0]=1);break}if(a[l]+=u,a[l]!=Rn)break;a[l--]=0,u=1}for(s=a.length;0===a[--s];)a.pop()}return En&&(n.e>d.maxE?(n.d=null,n.e=NaN):n.e<d.minE&&(n.e=0,n.d=[0])),n}function u(n,i,t){var r,s,o,u;return n.isFinite()?(s=n.e,u=(o=e(n.d)).length,i?(t&&0<(r=t-u)?o=o.charAt(0)+"."+o.slice(1)+l(r):1<u&&(o=o.charAt(0)+"."+o.slice(1)),o=o+(n.e<0?"e":"e+")+n.e):s<0?(o="0."+l(-s-1)+o,t&&0<(r=t-u)&&(o+=l(r))):u<=s?(o+=l(s+1-u),t&&0<(r=t-s-1)&&(o=o+"."+l(r))):((r=s+1)<u&&(o=o.slice(0,r)+"."+o.slice(r)),t&&0<(r=t-u)&&(s+1===u&&(o+="."),o+=l(r))),o):v(n)}function c(n,e){for(var i=1,t=n[0];10<=t;t/=10)i++;return i+e*Sn-1}function f(n,e,i){if(Un<e)throw En=!0,i&&(n.precision=i),Error(An);return o(new n(vn),e,1,!0)}function h(n,e,i){if(_n<e)throw Error(An);return o(new n(Nn),e,i,!0)}function a(n){var e=n.length-1,i=e*Sn+1;if(e=n[e]){for(;e%10==0;e/=10)i--;for(e=n[0];10<=e;e/=10)i++}return i}function l(n){for(var e="";n--;)e+="0";return e}function d(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/Sn+4);for(En=!1;;){if(i%2&&A((s=s.times(e)).d,o)&&(r=!0),0===(i=On(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break}A((e=e.times(e)).d,o)}return En=!0,s}function g(n){return 1&n.d[n.d.length-1]}function p(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break}r[i](t)&&(r=t)}return r}function w(n,i){var r,s,u,c,f,h,a,l=0,d=0,g=0,p=n.constructor,w=p.rounding,m=p.precision;if(!n.d||!n.d[0]||17<n.e)return new p(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(a=null==i?(En=!1,m):i,h=new p(.03125);-2<n.e;)n=n.times(h),g+=5;for(a+=s=Math.log(qn(2,g))/Math.LN10*2+5|0,r=c=f=new p(1),p.precision=a;;){if(c=o(c.times(n),a,1),r=r.times(++d),e((h=f.plus(Tn(c,r,a,1))).d).slice(0,a)===e(f.d).slice(0,a)){for(u=g;u--;)f=o(f.times(f),a,1);if(null!=i)return p.precision=m,f;if(!(l<3&&t(f.d,a-s,w,l)))return o(f,p.precision=m,w,En=!0);p.precision=a+=10,r=c=h=new p(1),d=0,l++}f=h}}function m(n,i){var r,s,u,c,h,a,l,d,g,p,w,v=1,x=n,b=x.d,E=x.constructor,M=E.rounding,y=E.precision;if(x.s<0||!b||!b[0]||!x.e&&1==b[0]&&1==b.length)return new E(b&&!b[0]?-1/0:1!=x.s?NaN:b?0:x);if(g=null==i?(En=!1,y):i,E.precision=g+=10,s=(r=e(b)).charAt(0),!(Math.abs(c=x.e)<15e14))return d=f(E,g+2,y).times(c+""),x=m(new E(s+"."+r.slice(1)),g-10).plus(d),E.precision=y,null==i?o(x,y,M,En=!0):x;for(;s<7&&1!=s||1==s&&3<r.charAt(1);)s=(r=e((x=x.times(n)).d)).charAt(0),v++;for(c=x.e,1<s?(x=new E("0."+r),c++):x=new E(s+"."+r.slice(1)),l=h=x=Tn((p=x).minus(1),x.plus(1),g,1),w=o(x.times(x),g,1),u=3;;){if(h=o(h.times(w),g,1),e((d=l.plus(Tn(h,new E(u),g,1))).d).slice(0,g)===e(l.d).slice(0,g)){if(l=l.times(2),0!==c&&(l=l.plus(f(E,g+2,y).times(c+""))),l=Tn(l,new E(v),g,1),null!=i)return E.precision=y,l;if(!t(l.d,g-10,M,a))return o(l,E.precision=y,M,En=!0);E.precision=g+=10,d=h=x=Tn(p.minus(1),p.plus(1),g,1),w=o(x.times(x),g,1),u=a=1}l=d,u+=2}}function v(n){return String(n.s*n.s/0)}function N(n,e){var i,t,r;for(0<(t=(e=-1<(i=e.indexOf("."))?e.replace(".",""):e).search(/e/i))?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++);for(r=e.length;48===e.charCodeAt(r-1);--r);if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%Sn,i<0&&(t+=Sn),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=Sn;t<r;)n.d.push(+e.slice(t,t+=Sn));e=e.slice(t),t=Sn-e.length}else t-=r;for(;t--;)e+="0";n.d.push(+e),En&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function x(n,e){var i,t,s,o,u,f,h,a;if("Infinity"===e||"NaN"===e)return+e||(n.s=NaN),n.e=NaN,n.d=null,n;if(Dn.test(e))i=16,e=e.toLowerCase();else if(Fn.test(e))i=2;else{if(!Zn.test(e))throw Error(yn+e);i=8}for(o=(e=0<(o=e.search(/p/i))?(h=+e.slice(o+1),e.substring(2,o)):e.slice(2)).indexOf("."),t=n.constructor,(u=0<=o)&&(o=(f=(e=e.replace(".","")).length)-o,s=d(t,new t(i),o,2*o)),o=e=(a=r(e,i,Rn)).length-1;0===a[o];--o)a.pop();return o<0?new t(0*n.s):(n.e=c(a,e),n.d=a,En=!1,u&&(n=Tn(n,s,4*f)),h&&(n=n.times((Math.abs(h)<54?Math:xn).pow(2,h))),En=!0,n)}function E(n,e,i,t,r){var s,o,u,c,h=n.precision,a=Math.ceil(h/Sn);for(En=!1,c=i.times(i),u=new n(t);;){if(o=Tn(u.times(c),new n(e++*e++),h,1),u=r?t.plus(o):t.minus(o),t=Tn(o.times(c),new n(e++*e++),h,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;);if(-1==s)break}s=u,u=t,t=o,o=s,0}return En=!0,o.d.length=a+1,o}function M(n,e){var i,t=e.s<0,n=h(n,n.precision,1),s=n.times(.5);if((e=e.abs()).lte(s))return gn=t?4:1,e;if((i=e.divToInt(n)).isZero())gn=t?3:2;else{if((e=e.minus(i.times(n))).lte(s))return gn=g(i)?t?2:3:t?4:1,e;gn=g(i)?t?1:4:t?3:2}return e.minus(n).abs()}function y(n,e,t,s){var o,c,f,a,l,d,g,p,w=n.constructor,m=void 0!==t;if(m?(i(t,1,wn),void 0===s?s=w.rounding:i(s,0,8)):(t=w.precision,s=w.rounding),n.isFinite()){for(m?(o=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):o=e,0<=(f=(d=u(n)).indexOf("."))&&(d=d.replace(".",""),(p=new w(1)).e=d.length-f,p.d=r(u(p),10,o),p.e=p.d.length),c=a=(g=r(d,10,o)).length;0==g[--a];)g.pop();if(g[0]){if(f<0?c--:((n=new w(n)).d=g,n.e=c,g=(n=Tn(n,p,t,s,0,o)).d,c=n.e,l=ln),f=g[t],w=o/2,l=l||void 0!==g[t+1],l=s<4?(void 0!==f||l)&&(0===s||s===(n.s<0?3:2)):w<f||f===w&&(4===s||l||6===s&&1&g[t-1]||s===(n.s<0?8:7)),g.length=t,l)for(;++g[--t]>o-1;)g[t]=0,t||(++c,g.unshift(1));for(a=g.length;!g[a-1];--a);for(f=0,d="";f<a;f++)d+=mn.charAt(g[f]);if(m){if(1<a)if(16==e||8==e){for(f=16==e?4:3,--a;a%f;a++)d+="0";for(a=(g=r(d,o,e)).length;!g[a-1];--a);for(f=1,d="1.";f<a;f++)d+=mn.charAt(g[f])}else d=d.charAt(0)+"."+d.slice(1);d=d+(c<0?"p":"p+")+c}else if(c<0){for(;++c;)d="0"+d;d="0."+d}else if(++c>a)for(c-=a;c--;)d+="0";else c<a&&(d=d.slice(0,c)+"."+d.slice(c))}else d=m?"0p+0":"0";d=(16==e?"0x":2==e?"0b":8==e?"0o":"")+d}else d=v(n);return n.s<0?"-"+d:d}function A(n,e){return n.length>e&&(n.length=e,1)}function O(n){return new this(n).abs()}function q(n){return new this(n).acos()}function F(n){return new this(n).acosh()}function D(n,e){return new this(n).plus(e)}function Z(n){return new this(n).asin()}function P(n){return new this(n).asinh()}function R(n){return new this(n).atan()}function S(n){return new this(n).atanh()}function L(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?h(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=h(this,s,1).times(.5)).s=n.s:i=e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Tn(n,e,s,1)),e=h(this,s,1),this.precision=t,this.rounding=r,n.s<0?i.minus(e):i.plus(e)):this.atan(Tn(n,e,s,1)):(i=h(this,s,1).times(0<e.s?.25:.75)).s=n.s:i=new this(NaN),i}function U(n){return new this(n).cbrt()}function _(n){return o(n=new this(n),n.e+1,2)}function k(n){if(!n||"object"!=typeof n)throw Error(Mn+"Object expected");for(var i,t,r=["precision",1,wn,"rounding",0,8,"toExpNeg",-pn,0,"toExpPos",0,pn,"maxE",0,pn,"minE",-pn,0,"modulo",0,9],e=0;e<r.length;e+=3)if(void 0!==(t=n[i=r[e]])){if(!(On(t)===t&&r[e+1]<=t&&t<=r[e+2]))throw Error(yn+i+": "+t);this[i]=t}if(n.hasOwnProperty(i="crypto"))if(void 0===(t=n[i]))this[i]=t;else{if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(yn+i+": "+t);this[i]=!(!t||!bn||!bn.getRandomValues&&!bn.randomBytes)}return this}function T(n){return new this(n).cos()}function C(n){return new this(n).cosh()}function H(n,e){return new this(n).div(e)}function B(n){return new this(n).exp()}function V(n){return o(n=new this(n),n.e+1,3)}function j(n){var e,i,t,s;if("string"!=typeof n||!n)throw Error(yn+n);if(t=n.length,s=mn.indexOf(n.charAt(0)),1===t)return new this(81<s?[-1/0,1/0,NaN][s-82]:40<s?-(s-41):s);if(64&s)e=(i=16&s)?(7&s)-3:(15&s)-7,t=1;else{if(2===t)return new this(2816<=(s=88*s+mn.indexOf(n.charAt(1)))?-(s-2816)-41:s+41);if(i=32&s,!(31&s))return n=r(n.slice(1),88,10).join(""),new this(i?"-"+n:n);t=(e=15&s)+1,e=1===e?mn.indexOf(n.charAt(1)):2===e?88*mn.indexOf(n.charAt(1))+mn.indexOf(n.charAt(2)):+r(n.slice(1,t),88,10).join(""),16&s&&(e=-e)}return n=(n=r(n.slice(t),88,10).join(""))+"e"+(e=e-n.length+1),new this(i?"-"+n:n)}function $(){var n,e,i=new this(0);for(En=!1,n=0;n<arguments.length;)if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return En=!0,new this(1/0);i=e}return En=!0,i.sqrt()}function J(n){return new this(n).ln()}function W(n,e){return new this(n).log(e)}function z(n){return new this(n).log(2)}function G(n){return new this(n).log(10)}function K(){return p(this,arguments,"lt")}function Q(){return p(this,arguments,"gt")}function X(n,e){return new this(n).mod(e)}function Y(n,e){return new this(n).mul(e)}function nn(n,e){return new this(n).pow(e)}function en(n){var e,t,r,s,o=0,u=new this(1),c=[];if(void 0===n?n=this.precision:i(n,1,wn),r=Math.ceil(n/Sn),!1===this.crypto)for(;o<r;)c[o++]=1e7*Math.random()|0;else if(bn&&bn.getRandomValues)for(e=bn.getRandomValues(new Uint32Array(r));o<r;)429e7<=(s=e[o])?e[o]=bn.getRandomValues(new Uint32Array(1))[0]:c[o++]=s%1e7;else if(bn&&bn.randomBytes){for(e=bn.randomBytes(r*=4);o<r;)214e7<=(s=e[o]+(e[o+1]<<8)+(e[o+2]<<16)+((127&e[o+3])<<24))?bn.randomBytes(4).copy(e,o):(c.push(s%1e7),o+=4);o=r/4}else{if(this.crypto)throw Error(Mn+"crypto unavailable");for(;o<r;)c[o++]=1e7*Math.random()|0}for(r=c[--o],n%=Sn,r&&n&&(s=qn(10,Sn-n),c[o]=(r/s|0)*s);0===c[o];o--)c.pop();if(o<0)c=[t=0];else{for(t=-1;0===c[0];t-=Sn)c.shift();for(r=1,s=c[0];10<=s;s/=10)r++;r<Sn&&(t-=Sn-r)}return u.e=t,u.d=c,u}function tn(n){return o(n=new this(n),n.e+1,this.rounding)}function rn(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN}function sn(n){return new this(n).sin()}function on(n){return new this(n).sinh()}function un(n){return new this(n).sqrt()}function cn(n,e){return new this(n).sub(e)}function fn(n){return new this(n).tan()}function hn(n){return new this(n).tanh()}function an(n){return o(n=new this(n),n.e+1,1)}var ln,dn,gn,pn=9e15,wn=1e9,mn="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%()*+,-./:;=?@[]^_`{|}~",vn="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",Nn="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",xn={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-pn,maxE:pn,crypto:void 0},bn=void 0!==crypto?crypto:null,En=!0,Mn="[DecimalError] ",yn=Mn+"Invalid argument: ",An=Mn+"Precision limit exceeded",On=Math.floor,qn=Math.pow,Fn=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,Dn=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,Zn=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,Pn=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,Rn=1e7,Sn=7,Un=vn.length-1,_n=Nn.length-1,kn={},Tn=(kn.absoluteValue=kn.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),o(n)},kn.ceil=function(){return o(new this.constructor(this),this.e+1,2)},kn.comparedTo=kn.cmp=function(n){var e,i,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(f=o.length)<(s=u.length)?f:s;e<i;++e)if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;return f===s?0:s<f^c<0?1:-1},kn.cosine=kn.cos=function(){var n,e,i=this,t=i.constructor;return i.d?i.d[0]?(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+Sn,t.rounding=1,i=function(n,e){var i,r=(r=e.d.length)<32?(i=Math.ceil(r/3),Math.pow(4,-i).toString()):(i=16,"2.3283064365386962890625e-10");n.precision+=i,e=E(n,1,e.times(r),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1)}return n.precision-=i,e}(t,M(t,i)),t.precision=n,t.rounding=e,o(2==gn||3==gn?i.neg():i,n,e,!0)):new t(1):new t(NaN)},kn.cubeRoot=kn.cbrt=function(){var n,i,t,r,s,u,c,f,h,a,l=this,d=l.constructor;if(!l.isFinite()||l.isZero())return new d(l);for(En=!1,(u=l.s*Math.pow(l.s*l,1/3))&&Math.abs(u)!=1/0?r=new d(u.toString()):(t=e(l.d),(u=((n=l.e)-t.length+1)%3)&&(t+=1==u||-2==u?"0":"00"),u=Math.pow(t,1/3),n=On((n+1)/3)-(n%3==(n<0?-1:2)),(r=new d(t=u==1/0?"5e"+n:(t=u.toExponential()).slice(0,t.indexOf("e")+1)+n)).s=l.s),c=(n=d.precision)+3;;)if(a=(h=(f=r).times(f).times(f)).plus(l),r=Tn(a.plus(l).times(f),a.plus(h),c+2,1),e(f.d).slice(0,c)===(t=e(r.d)).slice(0,c)){if("9999"!=(t=t.slice(c-3,c+1))&&(s||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(o(r,n+1,1),i=!r.times(r).times(r).eq(l));break}if(!s&&(o(f,n+1,0),f.times(f).times(f).eq(l))){r=f;break}c+=4,s=1}return En=!0,o(r,n,d.rounding,i)},kn.decimalPlaces=kn.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-On(this.e/Sn))*Sn,n=e[n])for(;n%10==0;n/=10)i--;i<0&&(i=0)}return i},kn.dividedBy=kn.div=function(n){return Tn(this,new this.constructor(n))},kn.dividedToIntegerBy=kn.divToInt=function(n){var i=this.constructor;return o(Tn(this,new i(n),0,1,1),i.precision,i.rounding)},kn.equals=kn.eq=function(n){return 0===this.cmp(n)},kn.floor=function(){return o(new this.constructor(this),this.e+1,3)},kn.greaterThan=kn.gt=function(n){return 0<this.cmp(n)},kn.greaterThanOrEqualTo=kn.gte=function(n){n=this.cmp(n);return 1==n||0===n},kn.hyperbolicCosine=kn.cosh=function(){var n,i,t,u=(s=this).constructor,c=new u(1);if(!s.isFinite())return new u(s.s?1/0:NaN);if(s.isZero())return c;i=u.precision,t=u.rounding,u.precision=i+Math.max(s.e,s.sd())+4,u.rounding=1;for(var f,r=(r=s.d.length)<32?(n=Math.ceil(r/3),Math.pow(4,-n).toString()):(n=16,"2.3283064365386962890625e-10"),s=E(u,1,s.times(r),new u(1),!0),h=n,a=new u(8);h--;)f=s.times(s),s=c.minus(f.times(a.minus(f.times(a))));return o(s,u.precision=i,u.rounding=t,!0)},kn.hyperbolicSine=kn.sinh=function(){var e,i,t,s=(r=this).constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=E(s,2,r,r,!0);else for(var u,n=16<(n=1.4*Math.sqrt(t))?16:0|n,r=E(s,2,r=r.times(Math.pow(5,-n)),r,!0),c=new s(5),f=new s(16),h=new s(20);n--;)u=r.times(r),r=r.times(c.plus(u.times(f.times(u).plus(h))));return o(r,s.precision=e,s.rounding=i,!0)},kn.hyperbolicTangent=kn.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Tn(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s)},kn.inverseCosine=kn.acos=function(){var e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?h(i,r,s):new i(0):new i(NaN):e.isZero()?h(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),t=h(i,r+4,s).times(.5),i.precision=r,i.rounding=s,t.minus(e))},kn.inverseHyperbolicCosine=kn.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,En=!1,i=i.times(i).minus(1).sqrt().plus(i),En=!0,t.precision=n,t.rounding=e,i.ln()):new t(i)},kn.inverseHyperbolicSine=kn.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,En=!1,i=i.times(i).plus(1).sqrt().plus(i),En=!0,t.precision=n,t.rounding=e,i.ln())},kn.inverseHyperbolicTangent=kn.atanh=function(){var n,e,t,r=this,s=r.constructor;return r.isFinite()?0<=r.e?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?o(new s(r),n,e,!0):(s.precision=t=t-r.e,r=Tn(r.plus(1),new s(1).minus(r),t+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN)},kn.inverseSine=kn.asin=function(){var e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((e=h(s,i+4,t).times(.5)).s=r.s,e):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)))},kn.inverseTangent=kn.atan=function(){var n,e,i,t,r,s,u,c,f,a=this,l=a.constructor,d=l.precision,g=l.rounding;if(a.isFinite()){if(a.isZero())return new l(a);if(a.abs().eq(1)&&d+4<=_n)return(u=h(l,d+4,g).times(.25)).s=a.s,u}else{if(!a.s)return new l(NaN);if(d+4<=_n)return(u=h(l,d+4,g).times(.5)).s=a.s,u}for(l.precision=c=d+10,l.rounding=1,n=i=Math.min(28,c/Sn+2|0);n;--n)a=a.div(a.times(a).plus(1).sqrt().plus(1));for(En=!1,e=Math.ceil(c/Sn),t=1,f=a.times(a),u=new l(a),r=a;-1!==n;)if(r=r.times(f),s=u.minus(r.div(t+=2)),r=r.times(f),void 0!==(u=s.plus(r.div(t+=2))).d[e])for(n=e;u.d[n]===s.d[n]&&n--;);return i&&(u=u.times(2<<i-1)),En=!0,o(u,l.precision=d,l.rounding=g,!0)},kn.isFinite=function(){return!!this.d},kn.isInteger=kn.isInt=function(){return!!this.d&&On(this.e/Sn)>this.d.length-2},kn.isNaN=function(){return!this.s},kn.isNegative=kn.isNeg=function(){return this.s<0},kn.isPositive=kn.isPos=function(){return 0<this.s},kn.isZero=function(){return!!this.d&&0===this.d[0]},kn.lessThan=kn.lt=function(n){return this.cmp(n)<0},kn.lessThanOrEqualTo=kn.lte=function(n){return this.cmp(n)<1},kn.logarithm=kn.log=function(n){var i,r,s,u,c,h,a,l,d=this,g=d.constructor,p=g.precision,w=g.rounding;if(null==n)n=new g(10),i=!0;else{if(r=(n=new g(n)).d,n.s<0||!r||!r[0]||n.eq(1))return new g(NaN);i=n.eq(10)}if(r=d.d,d.s<0||!r||!r[0]||d.eq(1))return new g(r&&!r[0]?-1/0:1!=d.s?NaN:r?0:1/0);if(i)if(1<r.length)c=!0;else{for(u=r[0];u%10==0;)u/=10;c=1!==u}if(En=!1,h=m(d,a=p+5),s=i?f(g,a+10):m(n,a),t((l=Tn(h,s,a,1)).d,u=p,w))do{if(h=m(d,a+=10),s=i?f(g,a+10):m(n,a),l=Tn(h,s,a,1),!c){+e(l.d).slice(u+1,u+15)+1==1e14&&(l=o(l,p+1,0));break}}while(t(l.d,u+=10,w));return En=!0,o(l,p,w)},kn.minus=kn.sub=function(n){var e,i,t,r,s,u,f,h,a,d,g,p=this,w=p.constructor;if(n=new w(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new w(n.d||p.s!==n.s?p:NaN):n=new w(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(a=p.d,g=n.d,f=w.precision,h=w.rounding,!a[0]||!g[0]){if(g[0])n.s=-n.s;else{if(!a[0])return new w(3===h?-0:0);n=new w(p)}return En?o(n,f,h):n}if(i=On(n.e/Sn),p=On(p.e/Sn),a=a.slice(),s=p-i){for(u=((d=s<0)?(e=a,s=-s,g):(e=g,i=p,a)).length,(t=Math.max(Math.ceil(f/Sn),u)+2)<s&&(s=t,e.length=1),e.reverse(),t=s;t--;)e.push(0);e.reverse()}else{for((d=(t=a.length)<(u=g.length))&&(u=t),t=0;t<u;t++)if(a[t]!=g[t]){d=a[t]<g[t];break}s=0}for(d&&(e=a,a=g,g=e,n.s=-n.s),u=a.length,t=g.length-u;0<t;--t)a[u++]=0;for(t=g.length;s<t;){if(a[--t]<g[t]){for(r=t;r&&0===a[--r];)a[r]=Rn-1;--a[r],a[t]+=Rn}a[t]-=g[t]}for(;0===a[--u];)a.pop();for(;0===a[0];a.shift())--i;return a[0]?(n.d=a,n.e=c(a,i),En?o(n,f,h):n):new w(3===h?-0:0)},kn.modulo=kn.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?o(new t(i),t.precision,t.rounding):(En=!1,9==t.modulo?(e=Tn(i,n.abs(),0,3,1)).s*=n.s:e=Tn(i,n,0,t.modulo,1),e=e.times(n),En=!0,i.minus(e))},kn.naturalExponential=kn.exp=function(){return w(this)},kn.naturalLogarithm=kn.ln=function(){return m(this)},kn.negated=kn.neg=function(){var n=new this.constructor(this);return n.s=-n.s,o(n)},kn.plus=kn.add=function(n){var e,i,t,r,s,u,f,h,a,l,d=this,g=d.constructor;if(n=new g(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new g(n.d||d.s===n.s?d:NaN)):n=new g(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(a=d.d,l=n.d,f=g.precision,h=g.rounding,a[0]&&l[0]){if(s=On(d.e/Sn),t=On(n.e/Sn),a=a.slice(),r=s-t){for((u=(u=(r<0?(i=a,r=-r,l):(i=l,t=s,a)).length)<(s=Math.ceil(f/Sn))?s+1:u+1)<r&&(r=u,i.length=1),i.reverse();r--;)i.push(0);i.reverse()}for((u=a.length)-(r=l.length)<0&&(r=u,i=l,l=a,a=i),e=0;r;)e=(a[--r]=a[r]+l[r]+e)/Rn|0,a[r]%=Rn;for(e&&(a.unshift(e),++t),u=a.length;0==a[--u];)a.pop();n.d=a,n.e=c(a,t)}else l[0]||(n=new g(d));return En?o(n,f,h):n},kn.precision=kn.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(yn+n);return i.d?(e=a(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e},kn.round=function(){var n=this,e=n.constructor;return o(new e(n),n.e+1,e.rounding)},kn.sine=kn.sin=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+Sn,t.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return E(n,2,e,e);i=16<(i=1.4*Math.sqrt(t))?16:0|i,e=E(n,2,e=e.times(Math.pow(5,-i)),e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;)r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));return e}(t,M(t,i)),t.precision=n,t.rounding=e,o(2<gn?i.neg():i,n,e,!0)):new t(NaN)},kn.squareRoot=kn.sqrt=function(){var n,i,t,r,s,u,c=this,f=c.d,h=c.e,a=c.s,l=c.constructor;if(1!==a||!f||!f[0])return new l(!a||a<0&&(!f||f[0])?NaN:f?c:1/0);for(En=!1,r=0==(a=Math.sqrt(+c))||a==1/0?(((i=e(f)).length+h)%2==0&&(i+="0"),a=Math.sqrt(i),h=On((h+1)/2)-(h<0||h%2),new l(i=a==1/0?"1e"+h:(i=a.toExponential()).slice(0,i.indexOf("e")+1)+h)):new l(a.toString()),t=(h=l.precision)+3;;)if(r=(u=r).plus(Tn(c,u,t+2,1)).times(.5),e(u.d).slice(0,t)===(i=e(r.d)).slice(0,t)){if("9999"!=(i=i.slice(t-3,t+1))&&(s||"4999"!=i)){+i&&(+i.slice(1)||"5"!=i.charAt(0))||(o(r,h+1,1),n=!r.times(r).eq(c));break}if(!s&&(o(u,h+1,0),u.times(u).eq(c))){r=u;break}t+=4,s=1}return En=!0,o(r,h,l.rounding,n)},kn.tangent=kn.tan=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+10,t.rounding=1,(i=i.sin()).s=1,i=Tn(i,new t(1).minus(i.times(i)).sqrt(),n+10,0),t.precision=n,t.rounding=e,o(2==gn||4==gn?i.neg():i,n,e,!0)):new t(NaN)},kn.times=kn.mul=function(n){var e,t,r,s,u,f,h,a,l=this,d=l.constructor,g=l.d,p=(n=new d(n)).d;if(n.s*=l.s,!(g&&g[0]&&p&&p[0]))return new d(!n.s||g&&!g[0]&&!p||p&&!p[0]&&!g?NaN:g&&p?0*n.s:n.s/0);for(l=On(l.e/Sn)+On(n.e/Sn),(h=g.length)<(a=p.length)&&(s=g,g=p,p=s,u=h,h=a,a=u),s=[],t=u=h+a;t--;)s.push(0);for(t=a;0<=--t;){for(e=0,r=h+t;t<r;)f=s[r]+p[t]*g[r-t-1]+e,s[r--]=f%Rn|0,e=f/Rn|0;s[r]=(s[r]+e)%Rn|0}for(;!s[--u];)s.pop();for(e?++l:s.shift(),t=s.length;!s[--t];)s.pop();return n.d=s,n.e=c(s,l),En?o(n,d.precision,d.rounding):n},kn.toBinary=function(n,e){return y(this,2,n,e)},kn.toDecimalPlaces=kn.toDP=function(n,e){var r=this.constructor,t=new r(this);return void 0===n?t:(i(n,0,wn),void 0===e?e=r.rounding:i(e,0,8),o(t,n+t.e+1,e))},kn.toExponential=function(n,e){var r=this,s=r.constructor,s=void 0===n?u(r,!0):(i(n,0,wn),void 0===e?e=s.rounding:i(e,0,8),u(r=o(new s(r),n+1,e),!0,n+1));return r.isNeg()&&!r.isZero()?"-"+s:s},kn.toFixed=function(n,e){var s=this,c=s.constructor,e=void 0===n?u(s):(i(n,0,wn),void 0===e?e=c.rounding:i(e,0,8),u(c=o(new c(s),n+s.e+1,e),!1,n+c.e+1));return s.isNeg()&&!s.isZero()?"-"+e:e},kn.toFraction=function(n){var i,t,r,s,o,c,f,h,u,d,p=this,w=p.d,m=p.constructor;if(!w)return new m(p);if(h=t=new m(1),r=f=new m(0),o=(i=new m(r)).e=a(w)-p.e-1,i.d[0]=qn(10,(u=o%Sn)<0?Sn+u:u),null==n)n=0<o?i:h;else{if(!(c=new m(n)).isInt()||c.lt(h))throw Error(yn+c);n=c.gt(i)?0<o?i:h:c}for(En=!1,c=new m(e(w)),u=m.precision,m.precision=o=w.length*Sn*2;d=Tn(c,i,0,1,1),1!=(s=t.plus(d.times(r))).cmp(n);)t=r,r=s,s=h,h=f.plus(d.times(s)),f=s,s=i,i=c.minus(d.times(s)),c=s;return s=Tn(n.minus(t),r,0,1,1),f=f.plus(s.times(h)),t=t.plus(s.times(r)),f.s=h.s=p.s,w=Tn(h,r,o,1).minus(p).abs().cmp(Tn(f,t,o,1).minus(p).abs())<1?[h,r]:[f,t],m.precision=u,En=!0,w},kn.toHexadecimal=kn.toHex=function(n,e){return y(this,16,n,e)},kn.toJSON=function(){var n,i,t,s,o,u,c,h=this,a=h.s<0;if(!h.d)return mn.charAt(h.s?a?82:83:84);if(i=h.e,1===h.d.length&&i<4&&0<=i&&(u=h.d[0])<2857)return u<41?mn.charAt(a?u+41:u):(u-=41,a&&(u+=2816),mn.charAt(s=u/88|0)+mn.charAt(u-88*s));if(h=e(h.d),c="",!a&&i<=8&&-7<=i)s=64+i+7;else if(a&&i<=4&&-3<=i)s=80+i+3;else if(h.length===i+1)s=32*a;else if(s=32*a+16*(i<0),(i=Math.abs(i))<88)s+=1,c=mn.charAt(i);else if(i<7744)s+=2,c=mn.charAt(u=i/88|0)+mn.charAt(i-88*u);else for(s+=o=(n=r(String(i),10,88)).length,t=0;t<o;t++)c+=mn.charAt(n[t]);for(c=mn.charAt(s)+c,o=(n=r(h,10,88)).length,t=0;t<o;t++)c+=mn.charAt(n[t]);return c},kn.toNearest=function(n,e){var r=(t=this).constructor,t=new r(t);if(null==n){if(!t.d)return t;n=new r(1),e=r.rounding}else{if(n=new r(n),void 0!==e&&i(e,0,8),!t.d)return n.s?t:n;if(!n.d)return n.s&&(n.s=t.s),n}return n.d[0]?(En=!1,t=Tn(t,n,0,e=e<4?[4,5,7,8][e]:e,1).times(n),En=!0,o(t)):(n.s=t.s,t=n),t},kn.toNumber=function(){return+this},kn.toOctal=function(n,e){return y(this,8,n,e)},kn.toPower=kn.pow=function(n){var i,r,s,u,c,f,a=this,l=a.constructor,g=+(n=new l(n));if(!(a.d&&n.d&&a.d[0]&&n.d[0]))return new l(qn(+a,g));if((a=new l(a)).eq(1))return a;if(s=l.precision,c=l.rounding,n.eq(1))return o(a,s,c);if(i=On(n.e/Sn),r=n.d.length-1,f=a.s,r<=i){if((r=g<0?-g:g)<=9007199254740991)return u=d(l,a,r,s),n.s<0?new l(1).div(u):o(u,s,c)}else if(f<0)return new l(NaN);return f=f<0&&1&n.d[Math.max(i,r)]?-1:1,(i=0!=(r=qn(+a,g))&&isFinite(r)?new l(r+"").e:On(g*(Math.log("0."+e(a.d))/Math.LN10+a.e+1)))>l.maxE+1||i<l.minE-1?new l(0<i?f/0:0):(En=!1,l.rounding=a.s=1,r=Math.min(12,(i+"").length),(u=t((u=o(u=w(n.times(m(a,s+r)),s),s+5,1)).d,s,c)&&+e((u=o(w(n.times(m(a,(i=s+10)+r)),i),i+5,1)).d).slice(s+1,s+15)+1==1e14?o(u,s+1,0):u).s=f,En=!0,o(u,s,l.rounding=c))},kn.toPrecision=function(n,e){var r=this,s=r.constructor,e=void 0===n?u(r,r.e<=s.toExpNeg||r.e>=s.toExpPos):(i(n,1,wn),void 0===e?e=s.rounding:i(e,0,8),u(r=o(new s(r),n,e),n<=r.e||r.e<=s.toExpNeg,n));return r.isNeg()&&!r.isZero()?"-"+e:e},kn.toSignificantDigits=kn.toSD=function(n,e){var r=this.constructor;return void 0===n?(n=r.precision,e=r.rounding):(i(n,1,wn),void 0===e?e=r.rounding:i(e,0,8)),o(new r(this),n,e)},kn.toString=function(){var n=this,e=n.constructor,e=u(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?"-"+e:e},kn.truncated=kn.trunc=function(){return o(new this.constructor(this),this.e+1,1)},kn.valueOf=function(){var n=this,e=n.constructor,e=u(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?"-"+e:e},function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;)t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;return r&&n.unshift(r),n}function e(n,e,i,t){var r,s;if(i!=t)s=t<i?1:-1;else for(r=s=0;r<i;r++)if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break}return s}function i(n,e,i,t){for(var r=0;i--;)n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];for(;!n[0]&&1<n.length;)n.shift()}return function(t,r,s,u,c,f){var h,a,l,d,g,p,w,m,N,x,b,E,M,y,A,O,q,F,D,Z=t.constructor,P=t.s==r.s?1:-1,R=t.d,S=r.d;if(!(R&&R[0]&&S&&S[0]))return new Z(t.s&&r.s&&(R?!S||R[0]!=S[0]:S)?R&&0==R[0]||!S?0*P:P/0:NaN);for(a=f?(g=1,t.e-r.e):(f=Rn,On(t.e/(g=Sn))-On(r.e/g)),F=S.length,O=R.length,N=(P=new Z(P)).d=[],l=0;S[l]==(R[l]||0);l++);if(S[l]>(R[l]||0)&&a--,null==s?(M=s=Z.precision,u=Z.rounding):M=c?s+(t.e-r.e)+1:s,M<0)N.push(1),p=!0;else{if(M=M/g+2|0,l=0,1==F){for(S=S[d=0],M++;(l<O||d)&&M--;l++)y=d*f+(R[l]||0),N[l]=y/S|0,d=y%S|0;p=d||l<O}else{for(1<(d=f/(S[0]+1)|0)&&(S=n(S,d,f),R=n(R,d,f),F=S.length,O=R.length),A=F,b=(x=R.slice(0,F)).length;b<F;)x[b++]=0;for((D=S.slice()).unshift(0),q=S[0],S[1]>=f/2&&++q;d=0,(h=e(S,x,F,b))<0?(E=x[0],1<(d=(E=F!=b?E*f+(x[1]||0):E)/q|0)?1==(h=e(w=n(S,d=f<=d?f-1:d,f),x,m=w.length,b=x.length))&&(d--,i(w,F<m?D:S,m,f)):(0==d&&(h=d=1),w=S.slice()),(m=w.length)<b&&w.unshift(0),i(x,w,b,f),-1==h&&(h=e(S,x,F,b=x.length))<1&&(d++,i(x,F<b?D:S,b,f)),b=x.length):0===h&&(d++,x=[0]),N[l++]=d,h&&x[0]?x[b++]=R[A]||0:(x=[R[A]],b=1),(A++<O||void 0!==x[0])&&M--;);p=void 0!==x[0]}N[0]||N.shift()}if(1==g)P.e=a,ln=p;else{for(l=1,d=N[0];10<=d;d/=10)l++;P.e=l+a*g-1,o(P,c?s+P.e+1:s,u,p)}return P}}()),vn=new(xn=function I(n){function e(n){var i,t,r,s=this;if(!(s instanceof e))return new e(n);if(!(n instanceof(s.constructor=e))){if("number"==(r=typeof n)){if(0===n)return s.s=1/n<0?-1:1,s.e=0,void(s.d=[0]);if(n<0?(n=-n,s.s=-1):s.s=1,n===~~n&&n<1e7){for(i=0,t=n;10<=t;t/=10)i++;return s.e=i,void(s.d=[n])}return 0*n!=0?(n||(s.s=NaN),s.e=NaN,void(s.d=null)):N(s,n.toString())}if("string"!=r)throw Error(yn+n);return 45===n.charCodeAt(0)?(n=n.slice(1),s.s=-1):s.s=1,(Pn.test(n)?N:x)(s,n)}s.s=n.s,s.e=n.e,s.d=(n=n.d)&&n.slice()}var i,t,r;if(e.prototype=kn,e.ROUND_UP=0,e.ROUND_DOWN=1,e.ROUND_CEIL=2,e.ROUND_FLOOR=3,e.ROUND_HALF_UP=4,e.ROUND_HALF_DOWN=5,e.ROUND_HALF_EVEN=6,e.ROUND_HALF_CEIL=7,e.ROUND_HALF_FLOOR=8,e.EUCLID=9,e.config=k,e.clone=I,e.abs=O,e.acos=q,e.acosh=F,e.add=D,e.asin=Z,e.asinh=P,e.atan=R,e.atanh=S,e.atan2=L,e.cbrt=U,e.ceil=_,e.cos=T,e.cosh=C,e.div=H,e.exp=B,e.floor=V,e.fromJSON=j,e.hypot=$,e.ln=J,e.log=W,e.log10=G,e.log2=z,e.max=K,e.min=Q,e.mod=X,e.mul=Y,e.pow=nn,e.random=en,e.round=tn,e.sign=rn,e.sin=sn,e.sinh=on,e.sqrt=un,e.sub=cn,e.tan=fn,e.tanh=hn,e.trunc=an,n=void 0===n?{}:n)for(r=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],i=0;i<r.length;)n.hasOwnProperty(t=r[i++])||(n[t]=this[t]);return e.config(n),e}(xn))(vn),Nn=new xn(Nn);if("function"==typeof define&&define.amd)define(function(){return xn});else if("undefined"!=typeof module&&module.exports){if(module.exports=xn,!bn)try{bn=require("crypto")}catch(Cn){}}else n=n||("undefined"!=typeof self&&self&&self.self==self?self:Function("return this")()),dn=n.Decimal,xn.noConflict=function(){return n.Decimal=dn,xn},n.Decimal=xn}(this),!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.math=t():e.math=t()}(this,function(){return e=[function(e,t,r){var i=r(1);e.exports=function n(e){e=i.create(e);return e.create=n,e.import(r(13)),e}()},function(e,t,r){e.exports=r(2)},function(e,t,r){var n=r(3).isFactory,i=r(3).deepExtend,a=r(4),o=r(8),s=r(10),u=r(12);t.create=function(e){function t(e){var i,a;if(n(e))return-1===(a=r.indexOf(e))?(i=!0===e.math?e.factory(f.type,l,t,f.typed,f):e.factory(f.type,l,t,f.typed),r.push(e),c.push(i)):i=c[a],i;throw new Error("Factory object with properties `type`, `name`, and `factory` expected")}if("function"!=typeof Object.create)throw new Error("ES5 not supported by this JavaScript engine. Please load the es5-shim and es5-sham library for compatibility.");var r=[],c=[],f=o.mixin({}),l=(f.type={},f.expression={transform:Object.create(f)},f.typed=a.create(f.type),{epsilon:1e-14,matrix:"matrix",number:"number",precision:64,predictable:!1});return e&&i(l,e),f.import=t(s),f.config=t(u),f}},function(e,t){"use strict";t.clone=function r(e){var t=typeof e;if("number"==t||"string"==t||"boolean"==t||null==e)return e;if("function"==typeof e.clone)return e.clone();if(Array.isArray(e))return e.map(r);if(e instanceof Number)return new Number(e.valueOf());if(e instanceof String)return new String(e.valueOf());if(e instanceof Boolean)return new Boolean(e.valueOf());if(e instanceof Date)return new Date(e.valueOf());if(e&&!0===e.isBigNumber)return e;if(e instanceof RegExp)throw new TypeError("Cannot clone "+e);var i,n={};for(i in e)e.hasOwnProperty(i)&&(n[i]=r(e[i]));return n},t.extend=function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e},t.deepExtend=function n(e,t){if(Array.isArray(t))throw new TypeError("Arrays are not supported by deepExtend");for(var r in t)if(t.hasOwnProperty(r))if(t[r]&&t[r].constructor===Object)void 0===e[r]&&(e[r]={}),e[r].constructor===Object?n(e[r],t[r]):e[r]=t[r];else{if(Array.isArray(t[r]))throw new TypeError("Arrays are not supported by deepExtend");e[r]=t[r]}return e},t.deepEqual=function(e,r){var n,i,a;if(Array.isArray(e)){if(!Array.isArray(r))return!1;if(e.length!=r.length)return!1;for(i=0,a=e.length;i<a;i++)if(!t.deepEqual(e[i],r[i]))return!1;return!0}if(e instanceof Object){if(Array.isArray(r)||!(r instanceof Object))return!1;for(n in e)if(!t.deepEqual(e[n],r[n]))return!1;for(n in r)if(!t.deepEqual(e[n],r[n]))return!1;return!0}return typeof e==typeof r&&e==r},t.canDefineProperty=function(){try{if(Object.defineProperty)return Object.defineProperty({},"x",{get:function(){}}),!0}catch(e){}return!1},t.lazy=function(e,r,n){var i,a;t.canDefineProperty()?(a=!0,Object.defineProperty(e,r,{get:function(){return a&&(i=n(),a=!1),i},set:function(e){i=e,a=!1},configurable:!0,enumerable:!0})):e[r]=n()},t.traverse=function(e,t){var r=e;if(t)for(var n=t.split("."),i=0;i<n.length;i++){var a=n[i];a in r||(r[a]={}),r=r[a]}return r},t.isFactory=function(e){return e&&"function"==typeof e.factory}},function(e,t,r){var n=r(5),i=r(6).digits,a=function(){return a=n.create,n};t.create=function(e){var t=a();return t.types=[{name:"number",test:function(e){return"number"==typeof e}},{name:"Complex",test:function(e){return e&&e.isComplex}},{name:"BigNumber",test:function(e){return e&&e.isBigNumber}},{name:"Fraction",test:function(e){return e&&e.isFraction}},{name:"Unit",test:function(e){return e&&e.isUnit}},{name:"string",test:function(e){return"string"==typeof e}},{name:"Array",test:Array.isArray},{name:"Matrix",test:function(e){return e&&e.isMatrix}},{name:"DenseMatrix",test:function(e){return e&&e.isDenseMatrix}},{name:"SparseMatrix",test:function(e){return e&&e.isSparseMatrix}},{name:"ImmutableDenseMatrix",test:function(e){return e&&e.isImmutableDenseMatrix}},{name:"Range",test:function(e){return e&&e.isRange}},{name:"Index",test:function(e){return e&&e.isIndex}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"ResultSet",test:function(e){return e&&e.isResultSet}},{name:"Help",test:function(e){return e&&e.isHelp}},{name:"function",test:function(e){return"function"==typeof e}},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:function(e){return"object"==typeof e}},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],t.conversions=[{from:"number",to:"BigNumber",convert:function(t){if(15<i(t))throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+t+"). Use function bignumber(x) to convert to BigNumber.");return new e.BigNumber(t)}},{from:"number",to:"Complex",convert:function(t){return new e.Complex(t,0)}},{from:"number",to:"string",convert:function(e){return e+""}},{from:"BigNumber",to:"Complex",convert:function(t){return new e.Complex(t.toNumber(),0)}},{from:"number",to:"Fraction",convert:function(t){if(15<i(t))throw new TypeError("Cannot implicitly convert a number with >15 significant digits to Fraction (value: "+t+"). Use function fraction(x) to convert to Fraction.");return new e.Fraction(t)}},{from:"string",to:"number",convert:function(e){var t=Number(e);if(isNaN(t))throw new Error('Cannot convert "'+e+'" to a number');return t}},{from:"boolean",to:"number",convert:function(e){return+e}},{from:"boolean",to:"BigNumber",convert:function(t){return new e.BigNumber(+t)}},{from:"boolean",to:"string",convert:function(e){return+e}},{from:"null",to:"number",convert:function(){return 0}},{from:"null",to:"string",convert:function(){return"null"}},{from:"null",to:"BigNumber",convert:function(){return new e.BigNumber(0)}},{from:"Array",to:"Matrix",convert:function(t){return new e.DenseMatrix(t)}},{from:"Matrix",to:"Array",convert:function(e){return e.valueOf()}}],t}},function(e,t,r){var n;void 0!==(t="function"==typeof(n=function(){function e(){function t(e){for(var t,r=0;r<N.types.length;r++){var n=N.types[r];if(n.name===e){t=n.test;break}}if(!t){var i;for(r=0;r<N.types.length;r++)if(n=N.types[r],n.name.toLowerCase()==e.toLowerCase()){i=n.name;break}throw new Error('Unknown type "'+e+'"'+(i?'. Did you mean "'+i+'"?':""))}return t}function r(e){for(var t="",r=0;r<e.length;r++){var n=e[r];if(""!=n.name)if(""==t)t=n.name;else if(t!=n.name){var i=new Error("Function names do not match (expected: "+t+", actual: "+n.name+")");throw i.data={actual:n.name,expected:t},i}}return t}function n(e,t,r,n,i){var a,o=h(n),s=i?i.split(","):null,u=e||"unnamed",c=s&&g(s,"any"),f={fn:e,index:r,actual:n,expected:s};a=s?t>r&&!c?"Unexpected type of argument in function "+u+" (expected: "+s.join(" or ")+", actual: "+o+", index: "+r+")":"Too few arguments in function "+u+" (expected: "+s.join(" or ")+", index: "+r+")":"Too many arguments in function "+u+" (expected: "+r+", actual: "+t+")";var l=new TypeError(a);return l.data=f,l}function i(e){this.name=e||"refs",this.categories={}}function a(e,t){if("string"==typeof e){var r=e.trim(),n="..."===r.substr(0,3);if(n&&(r=r.substr(3)),""===r)this.types=["any"];else{this.types=r.split("|");for(var i=0;i<this.types.length;i++)this.types[i]=this.types[i].trim()}}else{if(!Array.isArray(e)){if(e instanceof a)return e.clone();throw new Error("String or Array expected")}this.types=e}this.conversions=[],this.varArgs=n||t||!1,this.anyType=-1!==this.types.indexOf("any")}function o(e,t){var r;if("string"==typeof e)r=""!==e?e.split(","):[];else{if(!Array.isArray(e))throw new Error("string or Array expected");r=e}this.params=new Array(r.length);for(var n=0;n<r.length;n++){var i=new a(r[n]);if(this.params[n]=i,n===r.length-1)this.varArgs=i.varArgs;else if(i.varArgs)throw new SyntaxError('Unexpected variable arguments operator "..."')}this.fn=t}function s(e,t,r){this.path=e||[],this.param=e[e.length-1]||null,this.signature=t||null,this.childs=r||[]}function u(e){var t,r,n={},i=[];for(var a in e)if(e.hasOwnProperty(a)){var s=e[a];if(t=new o(a,s),t.ignore())continue;var u=t.expand();for(r=0;r<u.length;r++){var c=u[r],f=c.toString(),l=n[f];if(l){var p=o.compare(c,l);if(0>p)n[f]=c;else if(0===p)throw new Error('Signature "'+f+'" is defined twice')}else n[f]=c}}for(f in n)n.hasOwnProperty(f)&&i.push(n[f]);for(i.sort(function(e,t){return o.compare(e,t)}),r=0;r<i.length;r++)if(t=i[r],t.varArgs)for(var m=t.params.length-1,h=t.params[m],v=0;v<h.types.length;){if(h.conversions[v])for(var d=h.types[v],y=0;y<i.length;y++){var x=i[y],b=x.params[m];if(x!==t&&b&&g(b.types,d)&&!b.conversions[m]){h.types.splice(v,1),h.conversions.splice(v,1),v--;break}}v++}return i}function c(e){for(var t={},r=0;r<e.length;r++){var n=e[r];if(n.fn&&!n.hasConversions()){var i=n.params.join(",");t[i]=n.fn}}return t}function f(e,t){var r,n,i,o=t.length,u=[];for(r=0;r<e.length;r++)n=e[r],n.params.length!==o||i||(i=n),void 0!=n.params[o]&&u.push(n);u.sort(function(e,t){return a.compare(e.params[o],t.params[o])});var c=[];for(r=0;r<u.length;r++){n=u[r];var l=n.params[o],p=c.filter(function(e){return e.param.overlapping(l)})[0];if(p){if(p.param.varArgs)throw new Error('Conflicting types "'+p.param+'" and "'+l+'"');p.signatures.push(n)}else c.push({param:l,signatures:[n]})}var m=new Array(c.length);for(r=0;r<c.length;r++){var h=c[r];m[r]=f(h.signatures,t.concat(h.param))}return new s(t,i,m)}function l(e){for(var t=[],r=0;e>r;r++)t[r]="arg"+r;return t}function p(e,t){var r=new i,a=u(t);if(0==a.length)throw new Error("No signatures provided");var o=f(a,[]),s=[],p=e||"",h=l(m(a));s.push("function "+p+"("+h.join(", ")+") {"),s.push('  "use strict";'),s.push("  var name = '"+p+"';"),s.push(o.toCode(r,"  ")),s.push("}");var g=[r.toCode(),"return "+s.join("\n")].join("\n"),v=new Function(r.name,"createError",g),d=v(r,n);return d.signatures=c(a),d}function m(e){for(var t=0,r=0;r<e.length;r++){var n=e[r].params.length;n>t&&(t=n)}return t}function h(e){for(var t,r=0;r<N.types.length;r++){var n=N.types[r];if("Object"===n.name)t=n;else if(n.test(e))return n.name}return t&&t.test(e)?t.name:"unknown"}function g(e,t){return-1!==e.indexOf(t)}function v(e,t){if(!e.signatures)throw new TypeError("Function is no typed-function");var r;if("string"==typeof t){r=t.split(",");for(var n=0;n<r.length;n++)r[n]=r[n].trim()}else{if(!Array.isArray(t))throw new TypeError("String array or a comma separated string expected");r=t}var i=r.join(","),a=e.signatures[i];if(a)return a;throw new TypeError("Signature not found (signature: "+(e.name||"unnamed")+"("+r.join(", ")+"))")}function d(e,t){var r=h(e);if(t===r)return e;for(var n=0;n<N.conversions.length;n++){var i=N.conversions[n];if(i.from===r&&i.to===t)return i.convert(e)}throw new Error("Cannot convert from "+r+" to "+t)}i.prototype.add=function(e,t){var r=t||"fn";this.categories[r]||(this.categories[r]=[]);var n=this.categories[r].indexOf(e);return-1==n&&(n=this.categories[r].length,this.categories[r].push(e)),r+n},i.prototype.toCode=function(){var e=[],t=this.name+".categories",r=this.categories;for(var n in r)if(r.hasOwnProperty(n))for(var i=r[n],a=0;a<i.length;a++)e.push("var "+n+a+" = "+t+"['"+n+"']["+a+"];");return e.join("\n")},a.compare=function(e,t){if(e.anyType)return 1;if(t.anyType)return-1;if(g(e.types,"Object"))return 1;if(g(t.types,"Object"))return-1;if(e.hasConversions()){if(t.hasConversions()){var r,n,i;for(r=0;r<e.conversions.length;r++)if(void 0!==e.conversions[r]){n=e.conversions[r];break}for(r=0;r<t.conversions.length;r++)if(void 0!==t.conversions[r]){i=t.conversions[r];break}return N.conversions.indexOf(n)-N.conversions.indexOf(i)}return 1}if(t.hasConversions())return-1;var a,o;for(r=0;r<N.types.length;r++)if(N.types[r].name===e.types[0]){a=r;break}for(r=0;r<N.types.length;r++)if(N.types[r].name===t.types[0]){o=r;break}return a-o},a.prototype.overlapping=function(e){for(var t=0;t<this.types.length;t++)if(g(e.types,this.types[t]))return!0;return!1},a.prototype.clone=function(){var e=new a(this.types.slice(),this.varArgs);return e.conversions=this.conversions.slice(),e},a.prototype.hasConversions=function(){return this.conversions.length>0},a.prototype.contains=function(e){for(var t=0;t<this.types.length;t++)if(e[this.types[t]])return!0;return!1},a.prototype.toString=function(e){for(var t=[],r={},n=0;n<this.types.length;n++){var i=this.conversions[n],a=e&&i?i.to:this.types[n];a in r||(r[a]=!0,t.push(a))}return(this.varArgs?"...":"")+t.join("|")},o.prototype.clone=function(){return new o(this.params.slice(),this.fn)},o.prototype.expand=function(){function e(r,n){if(n.length<r.params.length){var i,s,u,c=r.params[n.length];if(c.varArgs){for(s=c.clone(),i=0;i<N.conversions.length;i++)if(u=N.conversions[i],!g(c.types,u.from)&&g(c.types,u.to)){var f=s.types.length;s.types[f]=u.from,s.conversions[f]=u}e(r,n.concat(s))}else{for(i=0;i<c.types.length;i++)e(r,n.concat(new a(c.types[i])));for(i=0;i<N.conversions.length;i++)u=N.conversions[i],!g(c.types,u.from)&&g(c.types,u.to)&&(s=new a(u.from),s.conversions[0]=u,e(r,n.concat(s)))}}else t.push(new o(n,r.fn))}var t=[];return e(this,[]),t},o.compare=function(e,t){if(e.params.length>t.params.length)return 1;if(e.params.length<t.params.length)return-1;var r,n=e.params.length,i=0,o=0;for(r=0;n>r;r++)e.params[r].hasConversions()&&i++,t.params[r].hasConversions()&&o++;if(i>o)return 1;if(o>i)return-1;for(r=0;r<e.params.length;r++){var s=a.compare(e.params[r],t.params[r]);if(0!==s)return s}return 0},o.prototype.hasConversions=function(){for(var e=0;e<this.params.length;e++)if(this.params[e].hasConversions())return!0;return!1},o.prototype.ignore=function(){for(var e={},t=0;t<N.ignore.length;t++)e[N.ignore[t]]=!0;for(t=0;t<this.params.length;t++)if(this.params[t].contains(e))return!0;return!1},o.prototype.toCode=function(e,t){for(var r=[],n=new Array(this.params.length),i=0;i<this.params.length;i++){var a=this.params[i],o=a.conversions[0];a.varArgs?n[i]="varArgs":o?n[i]=e.add(o.convert,"convert")+"(arg"+i+")":n[i]="arg"+i}var s=this.fn?e.add(this.fn,"signature"):void 0;return s?t+"return "+s+"("+n.join(", ")+"); // signature: "+this.params.join(", "):r.join("\n")},o.prototype.toString=function(){return this.params.join(", ")},s.prototype.toCode=function(e,r,n){var i=[];if(this.param){var a=this.path.length-1,o=this.param.conversions[0],s="// type: "+(o?o.from+" (convert to "+o.to+")":this.param);if(this.param.varArgs)if(this.param.anyType)i.push(r+"if (arguments.length > "+a+") {"),i.push(r+"  var varArgs = [];"),i.push(r+"  for (var i = "+a+"; i < arguments.length; i++) {"),i.push(r+"    varArgs.push(arguments[i]);"),i.push(r+"  }"),i.push(this.signature.toCode(e,r+"  ")),i.push(r+"}");else{for(var u=function(r,n){for(var i=[],a=0;a<r.length;a++)i[a]=e.add(t(r[a]),"test")+"("+n+")";return i.join(" || ")}.bind(this),c=this.param.types,f=[],l=0;l<c.length;l++)void 0===this.param.conversions[l]&&f.push(c[l]);i.push(r+"if ("+u(c,"arg"+a)+") { "+s),i.push(r+"  var varArgs = [arg"+a+"];"),i.push(r+"  for (var i = "+(a+1)+"; i < arguments.length; i++) {"),i.push(r+"    if ("+u(f,"arguments[i]")+") {"),i.push(r+"      varArgs.push(arguments[i]);");for(var l=0;l<c.length;l++){var p=this.param.conversions[l];if(p){var m=e.add(t(c[l]),"test"),h=e.add(p.convert,"convert");i.push(r+"    }"),i.push(r+"    else if ("+m+"(arguments[i])) {"),i.push(r+"      varArgs.push("+h+"(arguments[i]));")}}i.push(r+"    } else {"),i.push(r+"      throw createError(name, arguments.length, i, arguments[i], '"+f.join(",")+"');"),i.push(r+"    }"),i.push(r+"  }"),i.push(this.signature.toCode(e,r+"  ")),i.push(r+"}")}else if(this.param.anyType)i.push(r+"// type: any"),i.push(this._innerCode(e,r,n));else{var g=this.param.types[0],m="any"!==g?e.add(t(g),"test"):null;i.push(r+"if ("+m+"(arg"+a+")) { "+s),i.push(this._innerCode(e,r+"  ",n)),i.push(r+"}")}}else i.push(this._innerCode(e,r,n));return i.join("\n")},s.prototype._innerCode=function(e,t,r){var n,i=[];this.signature&&(i.push(t+"if (arguments.length === "+this.path.length+") {"),i.push(this.signature.toCode(e,t+"  ")),i.push(t+"}"));var a;for(n=0;n<this.childs.length;n++)if(this.childs[n].param.anyType){a=this.childs[n];break}for(n=0;n<this.childs.length;n++)i.push(this.childs[n].toCode(e,t,a));r&&!this.param.anyType&&i.push(r.toCode(e,t,a));var o=this._exceptions(e,t);return o&&i.push(o),i.join("\n")},s.prototype._exceptions=function(e,t){var r=this.path.length;if(0===this.childs.length)return[t+"if (arguments.length > "+r+") {",t+"  throw createError(name, arguments.length, "+r+", arguments["+r+"]);",t+"}"].join("\n");for(var n={},i=[],a=0;a<this.childs.length;a++){var o=this.childs[a];if(o.param)for(var s=0;s<o.param.types.length;s++){var u=o.param.types[s];u in n||o.param.conversions[s]||(n[u]=!0,i.push(u))}}return t+"throw createError(name, arguments.length, "+r+", arguments["+r+"], '"+i.join(",")+"');"};var y=[{name:"number",test:function(e){return"number"==typeof e}},{name:"string",test:function(e){return"string"==typeof e}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"Function",test:function(e){return"function"==typeof e}},{name:"Array",test:Array.isArray},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:function(e){return"object"==typeof e}},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],x={},b=[],w=[],N={config:x,types:y,conversions:b,ignore:w};return N=p("typed",{Object:function(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(e[n]);var i=r(t);return p(i,e)},"string, Object":p,"...Function":function(e){for(var t,n=r(e),i={},a=0;a<e.length;a++){var o=e[a];if("object"!=typeof o.signatures)throw t=new TypeError("Function is no typed-function (index: "+a+")"),t.data={index:a},t;for(var s in o.signatures)if(o.signatures.hasOwnProperty(s))if(i.hasOwnProperty(s)){if(o.signatures[s]!==i[s])throw t=new Error('Signature "'+s+'" is defined twice'),t.data={signature:s},t}else i[s]=o.signatures[s]}return p(n,i)}}),N.config=x,N.types=y,N.conversions=b,N.ignore=w,N.create=e,N.find=v,N.convert=d,N.addType=function(e){if(!e||"string"!=typeof e.name||"function"!=typeof e.test)throw new TypeError("Object with properties {name: string, test: function} expected");N.types.push(e)},N.addConversion=function(e){if(!e||"string"!=typeof e.from||"string"!=typeof e.to||"function"!=typeof e.convert)throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");N.conversions.push(e)},N}return e()})?n.apply(t,[]):n)&&(e.exports=t)},function(e,t,r){"use strict";var n=r(7);t.isNumber=function(e){return"number"==typeof e},t.isInteger=function(e){return!!isFinite(e)&&e==Math.round(e)},t.sign=function(e){return 0<e?1:e<0?-1:0},t.format=function(e,r){if("function"==typeof r)return r(e);if(e===1/0)return"Infinity";if(e===-1/0)return"-Infinity";if(isNaN(e))return"NaN";var n="auto",i=void 0;switch(r&&(r.notation&&(n=r.notation),t.isNumber(r)?i=r:r.precision&&(i=r.precision)),n){case"fixed":return t.toFixed(e,i);case"exponential":return t.toExponential(e,i);case"engineering":return t.toEngineering(e,i);case"auto":return t.toPrecision(e,i,r&&r.exponential).replace(/((\.\d*?)(0+))($|e)/,function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t});default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", or "fixed".')}},t.toExponential=function(e,t){return new n(e).toExponential(t)},t.toEngineering=function(e,t){return new n(e).toEngineering(t)},t.toFixed=function(e,t){return new n(e).toFixed(t)},t.toPrecision=function(e,t,r){return new n(e).toPrecision(t,r)},t.digits=function(e){return e.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length},t.DBL_EPSILON=Number.EPSILON||2220446049250313e-31,t.nearlyEqual=function(e,r,n){var i;return null==n?e==r:e==r||!(isNaN(e)||isNaN(r)||!isFinite(e)||!isFinite(r)||!((i=Math.abs(e-r))<t.DBL_EPSILON||i<=Math.max(Math.abs(e),Math.abs(r))*n))}},function(e,t){"use strict";function r(e){e=String(e).toLowerCase().match(/^0*?(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!e)throw new SyntaxError("Invalid number");var r=e[1],n=e[2],i=parseFloat(e[4]||"0"),e=n.indexOf(".");i+=-1!==e?e-1:n.length-1,this.sign=r,this.coefficients=n.replace(".","").replace(/^0*/,function(e){return i-=e.length,""}).replace(/0*$/,"").split("").map(function(e){return parseInt(e)}),0===this.coefficients.length&&(this.coefficients.push(0),i++),this.exponent=i}function n(e){for(var t=[],r=0;r<e;r++)t.push(0);return t}r.prototype.toEngineering=function(e){var e=this.roundDigits(e),r=e.exponent,i=e.coefficients,a=r%3==0?r:r<0?r-3-r%3:r-r%3,o=0<=r?r:Math.abs(a);i.length-1<o&&(i=i.concat(n(o-(i.length-1))));for(var s=Math.abs(r-a),u=1;0<=--s;)u++;o=i.slice(u).join(""),o=o.match(/[1-9]/)?"."+o:"",i=i.slice(0,u).join("")+o;return i+="e"+(0<=r?"+":"")+a.toString(),e.sign+i},r.prototype.toFixed=function(e){var t=this.roundDigits(this.exponent+1+(e||0)),r=t.coefficients,t=t.exponent+1,a=t+(e||0);return r.length<a&&(r=r.concat(n(a-r.length))),t<0&&(r=n(1-t).concat(r),t=1),e&&r.splice(t,0,0===t?"0.":"."),this.sign+r.join("")},r.prototype.toExponential=function(e){var t=e?this.roundDigits(e):this.clone(),r=t.coefficients,t=t.exponent,e=(r=r.length<e?r.concat(n(e-r.length)):r).shift();return this.sign+e+(0<r.length?"."+r.join(""):"")+"e"+(0<=t?"+":"")+t},r.prototype.toPrecision=function(e,t){var r=t&&void 0!==t.lower?t.lower:.001,t=t&&void 0!==t.upper?t.upper:1e5,a=Math.abs(Math.pow(10,this.exponent));return a<r||t<=a?this.toExponential(e):(t=(r=e?this.roundDigits(e):this.clone()).coefficients,a=r.exponent,t=(t=t.length<e?t.concat(n(e-t.length)):t).concat(n(a-t.length+1+(t.length<e?e-t.length:0))),(r=0<a?a:0)<(t=n(-a).concat(t)).length-1&&t.splice(r+1,0,"."),this.sign+t.join(""))},r.prototype.clone=function(){var e=new r("0");return e.sign=this.sign,e.coefficients=this.coefficients.slice(0),e.exponent=this.exponent,e},r.prototype.roundDigits=function(e){for(var t=this.clone(),r=t.coefficients;e<=0;)r.unshift(0),t.exponent++,e++;if(r.length>e&&5<=r.splice(e,r.length-e)[0]){var i=e-1;for(r[i]++;10===r[i];)r.pop(),0===i&&(r.unshift(0),t.exponent++,i++),r[--i]++}return t},e.exports=r},function(e,t,r){var n=r(9);t.mixin=function(e){var t=new n;return e.on=t.on.bind(t),e.off=t.off.bind(t),e.once=t.once.bind(t),e.emit=t.emit.bind(t),e}},function(e,t){function r(){}r.prototype={on:function(e,t,r){var n=this.e||(this.e={});return(n[e]||(n[e]=[])).push({fn:t,ctx:r}),this},once:function(e,t,r){function n(){i.off(e,n),t.apply(r,arguments)}var i=this;return n._=t,this.on(e,n,r)},emit:function(e){for(var t=[].slice.call(arguments,1),r=((this.e||(this.e={}))[e]||[]).slice(),n=0,i=r.length;n<i;n++)r[n].fn.apply(r[n].ctx,t);return this},off:function(e,t){var r=this.e||(this.e={}),n=r[e],i=[];if(n&&t)for(var a=0,o=n.length;a<o;a++)n[a].fn!==t&&n[a].fn._!==t&&i.push(n[a]);return i.length?r[e]=i:delete r[e],this}},e.exports=r},function(e,t,r){"use strict";var i=r(3).lazy,a=r(3).isFactory,o=r(3).traverse,s=(r(3).extend,r(11));t.math=!0,t.name="import",t.factory=function(e,t,r,n,u){function f(e,t,r){if(r.wrap&&"function"==typeof t&&(t=function(e){function t(){for(var t=[],r=0,n=arguments.length;r<n;r++){var i=arguments[r];t[r]=i&&i.valueOf()}return e.apply(u,t)}return e.transform&&(t.transform=e.transform),t}(t)),g(u[e])&&g(t))return t=r.override?n(e,t.signatures):n(u[e],t),l(e,u[e]=t),u.emit("import",e,function(){return t});if(void 0===u[e]||r.override)return l(e,u[e]=t),u.emit("import",e,function(){return t});if(!r.silent)throw new Error('Cannot import "'+e+'": already exists')}function l(e,t){t&&"function"==typeof t.transform&&(u.expression.transform[e]=t.transform)}function m(e,t){var a,s,c,f;"string"==typeof e.name?(a=e.name,s=e.path?o(u,e.path):u,c=s.hasOwnProperty(a)?s[a]:void 0,!(f=function(){var i=r(e);if(g(c)&&g(i))return i=t.override?i:n(c,i);if(void 0===c||t.override)return i;if(!t.silent)throw new Error('Cannot import "'+a+'": already exists')})!==e.lazy?i(s,a,f):s[a]=f(),u.emit("import",a,f,e.path)):r(e)}function g(e){return"function"==typeof e&&"object"==typeof e.signatures}return function c(e,t){var i,r=arguments.length;if(1!=r&&2!=r)throw new s("import",r,1,2);if(t=t||{},a(e))m(e,t);else if(Array.isArray(e))e.forEach(function(e){c(e,t)});else if("object"==typeof e)for(var n in e)e.hasOwnProperty(n)&&(function(e){return"function"==typeof e||"number"==typeof e||"string"==typeof e||"boolean"==typeof e||null===e||e&&!0===e.isUnit||e&&!0===e.isComplex}(i=e[n])?f(n,i,t):a(e)?m(e,t):c(i,t));else if(!t.silent)throw new TypeError("Factory, Object, or Array expected")}},t.lazy=!0},function(e,t){"use strict";function r(e,t,n,i){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.fn=e,this.count=t,this.min=n,this.max=i,this.message="Wrong number of arguments in function "+e+" ("+t+" provided, "+n+(null!=i?"-"+i:"")+" expected)",this.stack=(new Error).stack}(r.prototype=new Error).constructor=Error,r.prototype.name="ArgumentsError",r.prototype.isArgumentsError=!0,e.exports=r},function(e,t,r){"use strict";var i=r(3);t.name="config",t.math=!0,t.factory=function(e,t,r,n,a){return function(e){var r;return e?(r=i.clone(t),i.deepExtend(t,e),e=i.clone(t),a.emit("config",e,r),e):i.clone(t)}}},function(e,t,r){e.exports=[r(14),r(92),r(96),r(320),r(495),r(497)]},function(e,t,r){e.exports=[r(15),r(20),r(21),r(26),r(30),r(36),r(68),r(69),r(71),r(72)]},function(e,t,r){e.exports=[r(16),r(18)]},function(e,t,r){var i=r(17);r(6).digits,t.name="BigNumber",t.path="type",t.factory=function(e,t,r,n,a){var o=i.constructor(t);return o.prototype.type="BigNumber",o.prototype.isBigNumber=!0,o.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},o.fromJSON=function(e){return new o(e.value)},a.on("config",function(e,t){e.precision!==t.precision&&o.config({precision:e.precision})}),o},t.math=!0},function(e,t,r){var n;!function(i){"use strict";function a(e){for(var t,r,n=1,i=e.length,a=e[0]+"";n<i;n++){for(t=e[n]+"",r=_-t.length;r--;)t="0"+t;a+=t}for(i=a.length;48===a.charCodeAt(--i););return a.slice(0,i+1||1)}function o(e,t,r,n){for(var i,a=1,o=e[0];10<=o;o/=10,a++);return(o=t-a)<0?(o+=_,i=0):(i=Math.ceil((o+1)/_),o%=_),a=E(10,_-o),t=e[i]%a|0,null==n?o<3?(0==o?t=t/100|0:1==o&&(t=t/10|0),r<4&&99999==t||3<r&&49999==t||5e4==t||0==t):(r<4&&t+1==a||3<r&&t+1==a/2)&&(e[i+1]/a/100|0)==E(10,o-2)-1||(t==a/2||0==t)&&0==(e[i+1]/a/100|0):o<4?(0==o?t=t/1e3|0:1==o?t=t/100|0:2==o&&(t=t/10|0),(n||r<4)&&9999==t||!n&&3<r&&4999==t):((n||r<4)&&t+1==a||!n&&3<r&&t+1==a/2)&&(e[i+1]/a/1e3|0)==E(10,o-3)-1}function s(e,t,r){e=e.constructor;return null==t||((y=t<0||8<t)||0!==t&&(e.errors?parseInt:parseFloat)(t)!=t)&&!p(e,"rounding mode",t,r,0)?e.rounding:0|t}function u(e,t,r,n){e=e.constructor;return!(y=t<(n||0)||S+1<=t)&&(0===t||(e.errors?parseInt:parseFloat)(t)==t)||p(e,"argument",t,r,0)}function c(e,t){var r,n,i,s,u,c,f,l=0,p=0,m=0,h=e.constructor,v=h.ONE,d=h.rounding,y=h.precision;if(!e.c||!e.c[0]||17<e.e)return new h(e.c?e.c[0]?e.s<0?0:1/0:v:e.s?e.s<0?0:e:NaN);for(u=null==t?(b=!1,y):t,f=new h(.03125);-2<e.e;)e=e.times(f),m+=5;for(u+=n=Math.log(E(2,m))/Math.LN10*2+5|0,r=s=c=new h(v),h.precision=u;;){if(s=g(s.times(e),u,1),r=r.times(++p),a((f=c.plus(k(s,r,u,1))).c).slice(0,u)===a(c.c).slice(0,u)){for(i=m;i--;)c=g(c.times(c),u,1);if(null!=t)return h.precision=y,c;if(!(l<3&&o(c.c,u-n,d,l)))return g(c,h.precision=y,d,b=!0);h.precision=u+=10,r=s=f=new h(v),p=0,l++}c=f}}function f(e,t,r,n){var i,o,s=e.constructor,u=(e=new s(e)).e;if(r=null==t?0:(g(e,++t,r),n?t:t+e.e-u),u=e.e,i=a(e.c),1==n||2==n&&(t<=u||u<=s.toExpNeg)){for(;i.length<r;i+="0");1<i.length&&(i=i.charAt(0)+"."+i.slice(1)),i+=(u<0?"e":"e+")+u}else{if(n=i.length,u<0){for(o=r-n;++u;i="0"+i);i="0."+i}else if(++u>n){for(o=r-u,u-=n;u--;i+="0");0<o&&(i+=".")}else o=r-n,u<n?i=i.slice(0,u)+"."+i.slice(u):0<o&&(i+=".");if(0<o)for(;o--;i+="0");}return e.s<0&&e.c[0]?"-"+i:i}function l(e){var t=e.length-1,r=t*_+1;if(t=e[t]){for(;t%10==0;t/=10,r--);for(t=e[0];10<=t;t/=10,r++);}return r}function p(e,t,r,n,i){if(e.errors)throw(e=new Error((n||["new Decimal","cmp","div","eq","gt","gte","lt","lte","minus","mod","plus","times","toFraction","pow","random","log","sqrt","toNearest","divToInt"][w?w<0?-w:w:1/w<0?1:0])+"() "+(["number type has more than 15 significant digits","LN10 out of digits"][t]||t+([y?" out of range":" not an integer"," not a boolean or binary digit"][i]||""))+": "+r)).name="Decimal Error",y=w=0,e}function m(e,t,r){var n=new e(e.ONE);for(b=!1;1&r&&(n=n.times(t)),r>>=1;)t=t.times(t);return b=!0,n}function h(e,t){var r,n,i,s,u,c,f,l,m,v,d,y=1,w=e,N=w.c,E=w.constructor,M=E.ONE,A=E.rounding,_=E.precision;if(w.s<0||!N||!N[0]||!w.e&&1==N[0]&&1==N.length)return new E(N&&!N[0]?-1/0:1!=w.s?NaN:N?0:w);if(f=null==t?(b=!1,_):t,E.precision=f+=10,n=(r=a(N)).charAt(0),!(Math.abs(s=w.e)<15e14))return w=new E(n+"."+r.slice(1)),B.length<f+2&&p(E,1,f+2,"ln"),w=h(w,f-10).plus(new E(B.slice(0,f+2)).times(s+"")),E.precision=_,null==t?g(w,_,A,b=!0):w;for(;n<7&&1!=n||1==n&&3<r.charAt(1);)n=(r=a((w=w.times(e)).c)).charAt(0),y++;for(s=w.e,1<n?(w=new E("0."+r),s++):w=new E(n+"."+r.slice(1)),l=u=w=k((v=w).minus(M),w.plus(M),f,1),d=g(w.times(w),f,1),i=3;;){if(u=g(u.times(d),f,1),a((m=l.plus(k(u,new E(i),f,1))).c).slice(0,f)===a(l.c).slice(0,f)){if(l=l.times(2),0!==s&&(B.length<f+2&&p(E,1,f+2,"ln"),l=l.plus(new E(B.slice(0,f+2)).times(s+""))),l=k(l,new E(y),f,1),null!=t)return E.precision=_,l;if(!o(l.c,f-10,A,c))return g(l,E.precision=_,A,b=!0);E.precision=f+=10,m=u=w=k(v.minus(M),v.plus(M),f,1),d=g(w.times(w),f,1),i=c=1}l=m,i+=2}}function g(e,t,r,n){var i,a,o,s,u,c,f,l,p=e.constructor;e:if(null!=t){if(!(f=e.c))return e;for(i=1,s=f[0];10<=s;s/=10,i++);if((a=t-i)<0)a+=_,o=t,c=(u=f[l=0])/E(10,i-o-1)%10|0;else if((l=Math.ceil((a+1)/_))>=f.length){if(!n)break e;for(;f.length<=l;f.push(0));u=c=0,o=(a%=_)-_+(i=1)}else{for(u=s=f[l],i=1;10<=s;s/=10,i++);c=(o=(a%=_)-_+i)<0?0:N(u/E(10,i-o-1)%10)}if(n=n||t<0||null!=f[l+1]||(o<0?u:u%E(10,i-o-1)),n=r<4?(c||n)&&(0==r||r==(e.s<0?3:2)):5<c||5==c&&(4==r||n||6==r&&(0<a?0<o?u/E(10,i-o):0:f[l-1])%10&1||r==(e.s<0?8:7)),t<1||!f[0])return f.length=0,n?(t-=e.e+1,f[0]=E(10,(_-t%_)%_),e.e=-t||0):f[0]=e.e=0,e;if(0==a?(f.length=l,s=1,l--):(f.length=l+1,s=E(10,_-a),f[l]=0<o?(u/E(10,i-o)%E(10,o)|0)*s:0),n)for(;;){if(0==l){for(a=1,o=f[0];10<=o;o/=10,a++);for(o=f[0]+=s,s=1;10<=o;o/=10,s++);a!=s&&(e.e++,f[0]==A)&&(f[0]=1);break}if(f[l]+=s,f[l]!=A)break;f[l--]=0,s=1}for(a=f.length;0===f[--a];f.pop());}return b&&(e.e>p.maxE?e.c=e.e=null:e.e<p.minE&&(e.c=[e.e=0])),e}var v,y,x=i.crypto,b=!0,w=0,N=Math.floor,E=Math.pow,M=Object.prototype.toString,A=1e7,_=7,O="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_",T={},C=9e15,S=1e9,B="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",k=(T.absoluteValue=T.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),g(e)},T.ceil=function(){return g(new this.constructor(this),this.e+1,2)},T.comparedTo=T.cmp=function(e,t){var r,n=this,i=n.c,a=(w=-w,(e=new n.constructor(e,t)).c),o=n.s,s=e.s,n=n.e,e=e.e;if(!o||!s)return null;if(r=i&&!i[0],t=a&&!a[0],r||t)return r?t?0:-s:o;if(o!=s)return o;if(r=o<0,!i||!a)return n==e?0:!i^r?1:-1;if(n!=e)return e<n^r?1:-1;for(o=-1,s=(n=i.length)<(e=a.length)?n:e;++o<s;)if(i[o]!=a[o])return i[o]>a[o]^r?1:-1;return n==e?0:e<n^r?1:-1},T.decimalPlaces=T.dp=function(){var e,t,r=null;if(e=this.c){if(r=((t=e.length-1)-N(this.e/_))*_,t=e[t])for(;t%10==0;t/=10,r--);r<0&&(r=0)}return r},T.dividedBy=T.div=function(e,t){return w=2,k(this,new this.constructor(e,t))},T.dividedToIntegerBy=T.divToInt=function(e,t){var n=this.constructor;return w=18,g(k(this,new n(e,t),0,1,1),n.precision,n.rounding)},T.equals=T.eq=function(e,t){return w=3,0===this.cmp(e,t)},T.exponential=T.exp=function(){return c(this)},T.floor=function(){return g(new this.constructor(this),this.e+1,3)},T.greaterThan=T.gt=function(e,t){return w=4,0<this.cmp(e,t)},T.greaterThanOrEqualTo=T.gte=function(e,t){return w=5,1==(t=this.cmp(e,t))||0===t},T.isFinite=function(){return!!this.c},T.isInteger=T.isInt=function(){return!!this.c&&N(this.e/_)>this.c.length-2},T.isNaN=function(){return!this.s},T.isNegative=T.isNeg=function(){return this.s<0},T.isZero=function(){return!!this.c&&0==this.c[0]},T.lessThan=T.lt=function(e,t){return w=6,this.cmp(e,t)<0},T.lessThanOrEqualTo=T.lte=function(e,t){return w=7,-1==(t=this.cmp(e,t))||0===t},T.logarithm=T.log=function(e,t){var r,n,i,s,u,c,f,l,m,v=this,d=v.constructor,y=d.precision,x=d.rounding;if(null==e)e=new d(10),r=!0;else{if(w=15,n=(e=new d(e,t)).c,e.s<0||!n||!n[0]||!e.e&&1==n[0]&&1==n.length)return new d(NaN);r=e.eq(10)}if(n=v.c,v.s<0||!n||!n[0]||!v.e&&1==n[0]&&1==n.length)return new d(n&&!n[0]?-1/0:1!=v.s?NaN:n?0:1/0);if(u=r&&(s=n[0],1<n.length||1!=s&&10!=s&&100!=s&&1e3!=s&&1e4!=s&&1e5!=s&&1e6!=s),b=!1,l=(f=y+5)+10,c=h(v,f),i=r?(B.length<l&&p(d,1,l,"log"),new d(B.slice(0,l))):h(e,f),o((m=k(c,i,f,1)).c,s=y,x))do{if(c=h(v,f+=10),i=r?(B.length<(l=f+10)&&p(d,1,l,"log"),new d(B.slice(0,l))):h(e,f),m=k(c,i,f,1),!u){+a(m.c).slice(s+1,s+15)+1==1e14&&(m=g(m,y+1,0));break}}while(o(m.c,s+=10,x));return b=!0,g(m,y,x)},T.minus=function(e,t){var r,n,i,a,o=this,s=o.constructor,u=o.s;if(w=8,t=(e=new s(e,t)).s,!u||!t)return new s(NaN);if(u!=t)return e.s=-t,o.plus(e);var c=o.c,f=e.c,l=N(e.e/_),p=N(o.e/_),m=s.precision,h=s.rounding;if(!p||!l){if(!c||!f)return c?(e.s=-t,e):new s(f?o:NaN);if(!c[0]||!f[0])return o=f[0]?(e.s=-t,e):new s(c[0]?o:3==h?-0:0),b?g(o,m,h):o}if(n=(c=c.slice()).length,u=p-l){for((a=u<0)?(u=-u,r=c,n=f.length):(l=p,r=f),(p=Math.ceil(m/_))>n&&(n=p),u>(n+=2)&&(u=n,r.length=1),r.reverse(),t=u;t--;r.push(0));r.reverse()}else for((a=n<(i=f.length))&&(i=n),u=t=0;t<i;t++)if(c[t]!=f[t]){a=c[t]<f[t];break}if(a&&(r=c,c=f,f=r,e.s=-e.s),0<(t=-((i=c.length)-f.length)))for(;t--;c[i++]=0);for(p=A-1,t=f.length;u<t;){if(c[--t]<f[t]){for(n=t;n&&!c[--n];c[n]=p);--c[n],c[t]+=A}c[t]-=f[t]}for(;0==c[--i];c.pop());for(;0==c[0];c.shift(),--l);for(c[0]||(c=[l=0],e.s=3==h?-1:1),u=1,t=(e.c=c)[0];10<=t;t/=10,u++);return e.e=u+l*_-1,b?g(e,m,h):e},T.modulo=T.mod=function(e,t){var r,n,i=this,a=i.constructor,o=a.modulo;return w=9,t=(e=new a(e,t)).s,(r=!i.c||!t||e.c&&!e.c[0])||!e.c||i.c&&!i.c[0]?r?new a(NaN):g(new a(i),a.precision,a.rounding):(b=!1,9==o?(e.s=1,n=k(i,e,0,3,1),e.s=t,n.s*=t):n=k(i,e,0,o,1),n=n.times(e),b=!0,i.minus(n))},T.naturalLogarithm=T.ln=function(){return h(this)},T.negated=T.neg=function(){var e=new this.constructor(this);return e.s=-e.s||null,g(e)},T.plus=function(e,t){var r,n=this,i=n.constructor,a=n.s;if(w=10,t=(e=new i(e,t)).s,!a||!t)return new i(NaN);if(a!=t)return e.s=-t,n.minus(e);var o=n.c,s=e.c,u=N(e.e/_),c=N(n.e/_),f=i.precision,l=i.rounding;if(!c||!u){if(!o||!s)return new i(a/0);if(!o[0]||!s[0])return n=s[0]?e:new i(o[0]?n:0*a),b?g(n,f,l):n}if(o=o.slice(),a=c-u){for(t=(a<0?(a=-a,r=o,s):(u=c,r=s,o)).length,(c=Math.ceil(f/_))>t&&(t=c),a>++t&&(a=t,r.length=1),r.reverse();a--;r.push(0));r.reverse()}for(o.length-s.length<0&&(r=s,s=o,o=r),a=s.length,t=0,c=A;a;o[a]%=c)t=(o[--a]=o[a]+s[a]+t)/c|0;for(t&&(o.unshift(t),++u),a=o.length;0==o[--a];o.pop());for(a=1,t=(e.c=o)[0];10<=t;t/=10,a++);return e.e=a+u*_-1,b?g(e,f,l):e},T.precision=T.sd=function(e){var t=null,r=this;return e!=t&&e!==!!e&&1!==e&&0!==e&&p(r.constructor,"argument",e,"precision",1),t=r.c&&(t=l(r.c),e)&&r.e+1>t?r.e+1:t},T.round=function(){var e=this,t=e.constructor;return g(new t(e),e.e+1,t.rounding)},T.squareRoot=T.sqrt=function(){var e,t,r,n,i,o,s=this,u=s.c,c=s.s,f=s.e,l=s.constructor,p=new l(.5);if(1!==c||!u||!u[0])return new l(!c||c<0&&(!u||u[0])?NaN:u?s:1/0);for(b=!1,n=0==(c=Math.sqrt(+s))||c==1/0?(((t=a(u)).length+f)%2==0&&(t+="0"),c=Math.sqrt(t),f=N((f+1)/2)-(f<0||f%2),new l(t=c==1/0?"1e"+f:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+f)):new l(c.toString()),r=(f=l.precision)+3;;)if(o=n,n=p.times(o.plus(k(s,o,r+2,1))),a(o.c).slice(0,r)===(t=a(n.c)).slice(0,r)){if("9999"!=(t=t.slice(r-3,r+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(g(n,f+1,1),e=!n.times(n).eq(s));break}if(!i&&(g(o,f+1,0),o.times(o).eq(s))){n=o;break}r+=4,i=1}return b=!0,g(n,f,l.rounding,e)},T.times=function(e,t){var r,i=this,a=i.constructor,o=i.c,s=(w=11,(e=new a(e,t)).c),u=N(i.e/_),c=N(e.e/_),f=i.s;if(t=e.s,e.s=f==t?1:-1,!(u||o&&o[0])||!(c||s&&s[0]))return new a(!f||!t||o&&!o[0]&&!s||s&&!s[0]&&!o?NaN:o&&s?0*e.s:e.s/0);for(i=u+c,(f=o.length)<(t=s.length)&&(r=o,o=s,s=r,c=f,f=t,t=c),c=f+t,r=[];c--;r.push(0));for(u=t-1;-1<u;u--){for(t=0,c=f+u;u<c;)t=r[c]+s[u]*o[c-u-1]+t,r[c--]=t%A|0,t=t/A|0;r[c]=(r[c]+t)%A|0}for(t?++i:r[0]||r.shift(),c=r.length;!r[--c];r.pop());for(f=1,t=(e.c=r)[0];10<=t;t/=10,f++);return e.e=f+i*_-1,b?g(e,a.precision,a.rounding):e},T.toDecimalPlaces=T.toDP=function(e,t){var r=new this.constructor(this);return null!=e&&u(r,e,"toDP")?g(r,(0|e)+r.e+1,s(r,t,"toDP")):r},T.toExponential=function(e,t){var r=this;return r.c?f(r,null!=e&&u(r,e,"toExponential")?0|e:null,null!=e&&s(r,t,"toExponential"),1):r.toString()},T.toFixed=function(e,t){var r,n=this,i=n.constructor,a=i.toExpNeg,o=i.toExpPos;return null!=e&&(e=u(n,e,r="toFixed")?n.e+(0|e):null,t=s(n,t,r)),i.toExpNeg=-(i.toExpPos=1/0),null!=e&&n.c?(r=f(n,e,t),n.s<0&&n.c&&(n.c[0]?r.indexOf("-")<0&&(r="-"+r):r=r.replace("-",""))):r=n.toString(),i.toExpNeg=a,i.toExpPos=o,r},T.toFormat=function(e,t){var r=this;if(!r.c)return r.toString();var n,i=r.s<0,a=r.constructor.format,o=a.groupSeparator,s=+a.groupSize,u=+a.secondaryGroupSize,r=r.toFixed(e,t).split("."),f=r[0],e=r[1],p=i?f.slice(1):f,m=p.length;if(u&&(n=s,s=u,m-=u=n),0<s&&0<m){for(f=p.substr(0,n=m%s||s);n<m;n+=s)f+=o+p.substr(n,s);0<u&&(f+=o+p.slice(n)),i&&(f="-"+f)}return e?f+a.decimalSeparator+((u=+a.fractionGroupSize)?e.replace(new RegExp("\\d{"+u+"}\\B","g"),"$&"+a.fractionGroupSeparator):e):f},T.toFraction=function(e){var t,r,n,o,s,u,c,f=this,m=f.constructor,h=t=new m(m.ONE),g=s=new m(0),v=f.c,d=new m(g);if(!v)return f.toString();for(n=d.e=l(v)-f.e-1,d.c[0]=E(10,(u=n%_)<0?_+u:u),(null==e||(w=12,(!(o=new m(e)).s||(y=o.cmp(h)<0||!o.c)||m.errors&&N(o.e/_)<o.c.length-1)&&!p(m,"max denominator",e,"toFraction",0))||0<(e=o).cmp(d))&&(e=0<n?d:h),b=!1,o=new m(a(v)),u=m.precision,m.precision=n=v.length*_*2;c=k(o,d,0,1,1),1!=(r=t.plus(c.times(g))).cmp(e);)t=g,g=r,h=s.plus(c.times(r=h)),s=r,d=o.minus(c.times(r=d)),o=r;return r=k(e.minus(t),g,0,1,1),s=s.plus(r.times(h)),t=t.plus(r.times(g)),s.s=h.s=f.s,v=k(h,g,n,1).minus(f).abs().cmp(k(s,t,n,1).minus(f).abs())<1?[h+"",g+""]:[s+"",t+""],b=!0,m.precision=u,v},T.toNearest=function(e,t){var n=(r=this).constructor,r=new n(r);return t=null==e?(e=new n(n.ONE),n.rounding):(w=17,e=new n(e),s(r,t,"toNearest")),e.c?r.c&&(e.c[0]?(b=!1,r=k(r,e,0,t<4?[4,5,7,8][t]:t,1).times(e),b=!0,g(r)):r.c=[r.e=0]):r.s&&(e.s&&(e.s=r.s),r=e),r},T.toNumber=function(){var e=this;return+e||(e.s?0*e.s:NaN)},T.toPower=T.pow=function(e,t){var r,n,i,s,u=this,f=u.constructor,l=u.s,p=(w=13,+(e=new f(e,t))),v=p<0?-p:p,d=f.precision,y=f.rounding;if(!u.c||!e.c||(i=!u.c[0])||!e.c[0])return new f(E(i?0*l:+u,p));if(r=(u=new f(u)).c.length,!u.e&&u.c[0]==u.s&&1==r)return u;if(t=e.c.length-1,e.e||e.c[0]!=e.s||t)if(!(i=t<=(n=N(e.e/_)))&&l<0)s=new f(NaN);else{if(i&&r*_*v<3e3){if(s=m(f,u,v),e.s<0)return f.ONE.div(s)}else{if(l=l<0&&1&e.c[Math.max(n,t)]?-1:1,(n=0!=(t=E(+u,p))&&isFinite(t)?new f(t+"").e:N(p*(Math.log("0."+a(u.c))/Math.LN10+u.e+1)))>f.maxE+1||n<f.minE-1)return new f(0<n?l/0:0);b=!1,f.rounding=u.s=1,v=Math.min(12,(n+"").length),(s=o((s=g(s=c(e.times(h(u,d+v)),d),d+5,1)).c,d,y)&&+a((s=g(c(e.times(h(u,(n=d+10)+v)),n),n+5,1)).c).slice(d+1,d+15)+1==1e14?g(s,d+1,0):s).s=l,b=!0,f.rounding=y}s=g(s,d,y)}else s=g(u,d,y);return s},T.toPrecision=function(e,t){var r=this;return null!=e&&u(r,e,"toPrecision",1)&&r.c?f(r,0|--e,s(r,t,"toPrecision"),2):r.toString()},T.toSignificantDigits=T.toSD=function(e,t){var n=this.constructor,r=new n(this);return null!=e&&u(r,e,"toSD",1)?g(r,0|e,s(r,t,"toSD")):g(r,n.precision,n.rounding)},T.toString=function(e){var t,r,n,i=this,o=i.constructor,s=i.e;if(null===s)r=i.s?"Infinity":"NaN";else{if(e===t&&(s<=o.toExpNeg||s>=o.toExpPos))return f(i,null,o.rounding,1);if(r=a(i.c),s<0){for(;++s;r="0"+r);r="0."+r}else if(n=r.length,0<s)if(++s>n)for(s-=n;s--;r+="0");else s<n&&(r=r.slice(0,s)+"."+r.slice(s));else if(t=r.charAt(0),1<n)r=t+"."+r.slice(1);else if("0"==t)return t;if(null!=e)if((y=!(2<=e&&e<65))||e!=(0|e)&&o.errors)p(o,"base",e,"toString",0);else if("0"==(r=v(o,r,0|e,10,i.s)))return r}return i.s<0?"-"+r:r},T.truncated=T.trunc=function(){return g(new this.constructor(this),this.e+1,1)},T.valueOf=T.toJSON=function(){return this.toString()},v=function(){function e(e,t,r){for(var n,i,a=[0],o=0,s=e.length;o<s;){for(i=a.length;i--;a[i]*=t);for(a[n=0]+=O.indexOf(e.charAt(o++));n<a.length;n++)r-1<a[n]&&(null==a[n+1]&&(a[n+1]=0),a[n+1]+=a[n]/r|0,a[n]%=r)}return a.reverse()}return function(t,r,n,i,a){var o,s,u,c,f,l,p=r.indexOf("."),h=t.precision,g=t.rounding;for(i<37&&(r=r.toLowerCase()),0<=p&&(r=r.replace(".",""),l=new t(i),c=m(t,l,r.length-p),l.c=e(c.toFixed(),10,n),l.e=l.c.length),o=s=(f=e(r,i,n)).length;0==f[--s];f.pop());if(!f[0])return"0";if(p<0?o--:(c.c=f,c.e=o,c.s=a,f=(c=k(c,l,h,g,0,n)).c,u=c.r,o=c.e),p=f[h],s=n/2,u=u||null!=f[h+1],g<4?(null!=p||u)&&(0==g||g==(a<0?3:2)):s<p||p==s&&(4==g||u||6==g&&1&f[h-1]||g==(a<0?8:7)))for(f.length=h,--n;++f[--h]>n;)f[h]=0,h||(++o,f.unshift(1));else f.length=h;for(s=f.length;!f[--s];);for(p=0,r="";p<=s;r+=O.charAt(f[p++]));if(o<0){for(;++o;r="0"+r);r="0."+r}else if(++o>(p=r.length))for(o-=p;o--;r+="0");else o<p&&(r=r.slice(0,o)+"."+r.slice(o));return r}}(),function(){function e(e,t,r){var n,i=0,a=e.length;for(e=e.slice();a--;)n=e[a]*t+i,e[a]=n%r|0,i=n/r|0;return i&&e.unshift(i),e}function t(e,t,r,n){var i,a;if(r!=n)a=n<r?1:-1;else for(i=a=0;i<r;i++)if(e[i]!=t[i]){a=e[i]>t[i]?1:-1;break}return a}function r(e,t,r,n){for(var i=0;r--;)e[r]-=i,i=e[r]<t[r]?1:0,e[r]=i*n+e[r]-t[r];for(;!e[0]&&1<e.length;e.shift());}return function(n,i,a,o,s,u){var c,f,l,p,m,h,v,d,y,x,b,w,E,M,O,T,C,S,z,B=n.constructor,k=n.s==i.s?1:-1,I=n.c,R=i.c;if(!(I&&I[0]&&R&&R[0]))return new B(n.s&&i.s&&(I?!R||I[0]!=R[0]:R)?I&&0==I[0]||!R?0*k:k/0:NaN);for(f=u?(p=1,n.e-i.e):(u=A,N(n.e/(p=_))-N(i.e/p)),S=R.length,T=I.length,x=(y=new B(k)).c=[],l=0;R[l]==(I[l]||0);l++);if(R[l]>(I[l]||0)&&f--,null==a?(k=a=B.precision,o=B.rounding):k=s?a+(n.e-i.e)+1:a,k<0)x.push(1),m=!0;else{if(k=k/p+2|0,l=0,1==S){for(R=R[h=0],k++;(l<T||h)&&k--;l++)M=h*u+(I[l]||0),x[l]=M/R|0,h=M%R|0;m=h||l<T}else{for(1<(h=u/(R[0]+1)|0)&&(R=e(R,h,u),I=e(I,h,u),S=R.length,T=I.length),O=S,w=(b=I.slice(0,S)).length;w<S;b[w++]=0);for((z=R.slice()).unshift(0),C=R[0],R[1]>=u/2&&C++;h=0,(c=t(R,b,S,w))<0?(E=b[0],1<(h=(E=S!=w?E*u+(b[1]||0):E)/C|0)?1==(c=t(v=e(R,h=u<=h?u-1:h,u),b,d=v.length,w=b.length))&&(h--,r(v,S<d?z:R,d,u)):(0==h&&(c=h=1),v=R.slice()),(d=v.length)<w&&v.unshift(0),r(b,v,w,u),-1==c&&(c=t(R,b,S,w=b.length))<1&&(h++,r(b,S<w?z:R,w,u)),w=b.length):0===c&&(h++,b=[0]),x[l++]=h,c&&b[0]?b[w++]=I[O]||0:(b=[I[O]],w=1),(O++<T||null!=b[0])&&k--;);m=null!=b[0]}x[0]||x.shift()}if(1==p)y.e=f,y.r=+m;else{for(l=1,k=x[0];10<=k;k/=10,l++);y.e=l+f*p-1,g(y,s?a+y.e+1:a,o,m)}return y}}()),d=function(){function e(e){var t,r,n,i=this,a="config",o=i.errors?parseInt:parseFloat;return e==r||("object"!=typeof e?!p(i,"object expected",e,a):((n=e[t="precision"])!=r&&((y=n<1||S<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(n=e[t="rounding"])!=r&&((y=n<0||8<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(n=e[t="toExpNeg"])!=r&&((y=n<-C||0<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="toExpPos"])!=r&&((y=n<0||C<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="minE"])!=r&&((y=n<-C||0<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="maxE"])!=r&&((y=n<0||C<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="errors"])!=r&&(n===!!n||1===n||0===n?(y=w=0,i[t]=!!n):p(i,t,n,a,1)),(n=e[t="crypto"])!=r&&(n===!!n||1===n||0===n?i[t]=!(!n||!x||"object"!=typeof x):p(i,t,n,a,1)),(n=e[t="modulo"])!=r&&((y=n<0||9<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(e=e[t="format"])!=r&&("object"==typeof e?i[t]=e:p(i,"format object expected",e,a)))),i}function t(e){return new this(e).exp()}function r(e){return new this(e).ln()}function n(e,t){return new this(e).log(t)}function i(e,t,r){for(var i,a=0,n=new e((t="[object Array]"==M.call(t[0])?t[0]:t)[0]);++a<t.length;){if(!(i=new e(t[a])).s){n=i;break}n[r](i)&&(n=i)}return n}function a(){return i(this,arguments,"lt")}function o(){return i(this,arguments,"gt")}function s(e,t){return new this(e).pow(t)}function c(e){var t,r,n,i=0,a=[],o=this,s=new o(o.ONE);if(null!=e&&u(s,e,"random")?e|=0:e=o.precision,r=Math.ceil(e/_),o.crypto)if(x&&x.getRandomValues)for(t=x.getRandomValues(new Uint32Array(r));i<r;)429e7<=(n=t[i])?t[i]=x.getRandomValues(new Uint32Array(1))[0]:a[i++]=n%1e7;else if(x&&x.randomBytes){for(t=x.randomBytes(r*=4);i<r;)214e7<=(n=t[i]+(t[i+1]<<8)+(t[i+2]<<16)+((127&t[i+3])<<24))?x.randomBytes(4).copy(t,i):(a.push(n%1e7),i+=4);i=r/4}else p(o,"crypto unavailable",x,"random");if(!i)for(;i<r;)a[i++]=1e7*Math.random()|0;for(r=a[--i],e%=_,r&&e&&(n=E(10,_-e),a[i]=(r/n|0)*n);0===a[i];i--)a.pop();if(i<0)a=[r=0];else{for(r=-1;0===a[0];)a.shift(),r-=_;for(i=1,n=a[0];10<=n;)n/=10,i++;i<_&&(r-=_-i)}return s.e=r,s.c=a,s}function f(e){return new this(e).sqrt()}var m=function(){var e=/^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,t=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};return function(r,n,i,a){var o,u,c,l,f=i="string"!=typeof i?(c="number"==typeof i||"[object Number]"==M.call(i))&&0===i&&1/i<0?"-0":i+"":i;if(null==a&&e.test(i))n.s=45===i.charCodeAt(0)?(i=i.slice(1),-1):1;else{if(10==a)return g(new r(i),r.precision,r.rounding);if(i=t.call(i).replace(/^\+(?!-)/,""),n.s=45===i.charCodeAt(0)?(i=i.replace(/^-(?!-)/,""),-1):1,null!=a?a!=(0|a)&&r.errors||(y=!(2<=a&&a<65))?(p(r,"base",a,0,0),l=e.test(i)):(o="["+O.slice(0,a|=0)+"]+",i=i.replace(/\.$/,"").replace(/^\./,"0."),(l=new RegExp("^"+o+"(?:\\."+o+")?$",a<37?"i":"").test(i))?(c&&(15<i.replace(/^0\.0*|\./,"").length&&p(r,0,f),c=!c),i=v(r,i,10,a,n.s)):"Infinity"!=i&&"NaN"!=i&&(p(r,"not a base "+a+" number",f),i="NaN")):l=e.test(i),!l)return n.c=n.e=null,"Infinity"!=i&&("NaN"!=i&&p(r,"not a number",f),n.s=null),w=0,n}for(0<(u=(i=-1<(o=i.indexOf("."))?i.replace(".",""):i).search(/e/i))?(o<0&&(o=u),o+=+i.slice(u+1),i=i.substring(0,u)):o<0&&(o=i.length),u=0;48===i.charCodeAt(u);u++);for(a=i.length;48===i.charCodeAt(--a););if(i=i.slice(u,a+1)){if(a=i.length,c&&15<a&&p(r,0,f),n.e=o=o-u-1,n.c=[],u=(o+1)%_,o<0&&(u+=_),u<a){for(u&&n.c.push(+i.slice(0,u)),a-=_;u<a;)n.c.push(+i.slice(u,u+=_));i=i.slice(u),u=_-i.length}else u-=a;for(;u--;i+="0");n.c.push(+i),b&&(n.e>r.maxE?n.c=n.e=null:n.e<r.minE&&(n.c=[n.e=0]))}else n.c=[n.e=0];return w=0,n}}();return function l(i){function u(e,t){var r=this;if(!(r instanceof u))return p(u,"Decimal called without new",e),new u(e,t);if(e instanceof(r.constructor=u)){if(null==t)return w=0,r.s=e.s,r.e=e.e,r.c=(e=e.c)&&e.slice(),r;if(10==t)return g(new u(e),u.precision,u.rounding);e+=""}return m(u,r,e,t)}return u.precision=20,u.rounding=4,u.modulo=1,u.toExpNeg=-7,u.toExpPos=21,u.minE=-C,u.maxE=C,u.errors=!0,u.crypto=!1,u.format={decimalSeparator:".",groupSeparator:",",groupSize:3,secondaryGroupSize:0,fractionGroupSeparator:" ",fractionGroupSize:0},u.prototype=T,u.ONE=new u(1),u.ROUND_UP=0,u.ROUND_DOWN=1,u.ROUND_CEIL=2,u.ROUND_FLOOR=3,u.ROUND_HALF_UP=4,u.ROUND_HALF_DOWN=5,u.ROUND_HALF_EVEN=6,u.ROUND_HALF_CEIL=7,u.ROUND_HALF_FLOOR=8,u.EUCLID=9,u.config=e,u.constructor=l,u.exp=t,u.ln=r,u.log=n,u.max=a,u.min=o,u.pow=s,u.sqrt=f,u.random=c,null!=i&&u.config(i),u}()}();void 0!==(n=function(){return d}.call(t,r,t,e))&&(e.exports=n)}(this)},function(e,t,r){"use strict";var i=r(19);t.name="bignumber",t.factory=function(e,t,r,n){var a=n("bignumber",{"":function(){return new e.BigNumber(0)},number:function(t){return new e.BigNumber(t+"")},string:function(t){return new e.BigNumber(t)},BigNumber:function(e){return e},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={0:"0",1:"\\left(${args[0]}\\right)"},a}},function(e,t){"use strict";e.exports=function r(e,t,n){return e&&"function"==typeof e.map?e.map(function(e){return r(e,t,n)}):t(e)}},function(e,t,r){"use strict";var i=r(19);t.name="boolean",t.factory=function(e,t,r,n){var a=n("bool",{"":function(){return!1},boolean:function(e){return e},number:function(e){return!!e},BigNumber:function(e){return!e.isZero()},string:function(e){var t=e.toLowerCase();if("true"===t)return!0;if("false"===t)return!1;t=Number(e);if(""==e||isNaN(t))throw new Error('Cannot convert "'+e+'" to a boolean');return!!t},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){e.exports=[r(22),r(25)]},function(e,t,r){"use strict";var i=r(23).format,a=r(3).lazy;t.name="Chain",t.path="type",t.factory=function(e,t,r,n,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");e&&e.isChain?this.value=e.value:this.value=e}function u(e,t){"function"==typeof t&&(s.prototype[e]=f(t))}function f(e){return function(){for(var t=[this.value],r=0;r<arguments.length;r++)t[r+1]=arguments[r];return new s(e.apply(e,t))}}return s.prototype.type="Chain",s.prototype.isChain=!0,s.prototype.done=function(){return this.value},s.prototype.valueOf=function(){return this.value},s.prototype.toString=function(){return i(this.value)},(s.createProxy=function(e,t){if("string"==typeof e)u(e,t);else for(var r in e)e.hasOwnProperty(r)&&u(r,e[r])})(o),o.on("import",function(e,t,r){void 0===r&&function(e,t){a(s.prototype,e,function(){var e=t();return"function"==typeof e?f(e):void 0})}(e,t)}),s},t.math=!0,t.lazy=!1},function(e,t,r){"use strict";var i=r(6).format,a=r(24).format;t.isString=function(e){return"string"==typeof e},t.endsWith=function(e,t){var r=e.length-t.length,n=e.length;return e.substring(r,n)===t},t.format=function(e,r){return"number"==typeof e?i(e,r):e&&!0===e.isBigNumber?a(e,r):e&&!0===e.isFraction?r&&"decimal"===r.fraction?e.toString():e.s*e.n+"/"+e.d:Array.isArray(e)?function n(e,r){if(Array.isArray(e)){for(var i="[",a=e.length,o=0;o<a;o++)0!=o&&(i+=", "),i+=n(e[o],r);return i+"]"}return t.format(e,r)}(e,r):t.isString(e)?'"'+e+'"':"function"==typeof e?e.syntax?e.syntax+"":"function":"object"==typeof e?"function"==typeof e.format?e.format(r):e.toString():String(e)}},function(e,t){t.format=function(e,r){if("function"==typeof r)return r(e);if(!e.isFinite())return e.isNaN()?"NaN":e.gt(0)?"Infinity":"-Infinity";var n="auto",i=void 0;switch(void 0!==r&&(r.notation&&(n=r.notation),"number"==typeof r?i=r:r.precision&&(i=r.precision)),n){case"fixed":return t.toFixed(e,i);case"exponential":return t.toExponential(e,i);case"auto":var u,a=.001,o=1e5;return r&&r.exponential&&(void 0!==r.exponential.lower&&(a=r.exponential.lower),void 0!==r.exponential.upper)&&(o=r.exponential.upper),e.constructor.toExpNeg,e.constructor.toExpPos,(e.constructor.config({toExpNeg:Math.round(Math.log(a)/Math.LN10),toExpPos:Math.round(Math.log(o)/Math.LN10)}),e.isZero())?"0":((u=e.abs()).gte(a)&&u.lt(o)?e.toSignificantDigits(i).toFixed():t.toExponential(e,i)).replace(/((\.\d*?)(0+))($|e)/,function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t});default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", or "fixed".')}},t.toExponential=function(e,t){return void 0!==t?e.toExponential(t-1):e.toExponential()},t.toFixed=function(e,t){return e.toFixed(t||0)}},function(e,t){"use strict";t.name="chain",t.factory=function(e,t,r,n){return n("chain",{"":function(){return new e.Chain},any:function(t){return new e.Chain(t)}})}},function(e,t,r){e.exports=[r(27),r(28)]},function(e,t,r){"use strict";var i=r(6).isNumber,a=r(6).format;t.name="Complex",t.path="type",t.factory=function(e,t,r,n){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");switch(arguments.length){case 0:this.re=0,this.im=0;break;case 1:var r=e;if("object"==typeof r){if("re"in r&&"im"in r){var n=new o(r.re,r.im);this.re=n.re,this.im=n.im;break}if("r"in r&&"phi"in r){n=o.fromPolar(r.r,r.phi);this.re=n.re,this.im=n.im;break}}throw new SyntaxError("Object with the re and im or r and phi properties expected.");case 2:if(!i(e)||!i(t))throw new TypeError("Two numbers expected in Complex constructor");this.re=e,this.im=t;break;default:throw new SyntaxError("One, two or three arguments expected in Complex constructor")}}function s(){for(;" "==d||"\t"==d;)f()}function c(e){return"0"<=e&&e<="9"}function f(){v++,d=g.charAt(v)}function l(e){v=e,d=g.charAt(v)}function p(){var t="",e=v;if("+"==d?f():"-"==d&&(t+=d,f()),!function(e){return"0"<=e&&e<="9"||"."==e}(d))return l(e),null;if("."==d){if(t+=d,f(),!c(d))return l(e),null}else{for(;c(d);)t+=d,f();"."==d&&(t+=d,f())}for(;c(d);)t+=d,f();if("E"==d||"e"==d){if(t+=d,f(),"+"!=d&&"-"!=d||(t+=d,f()),!c(d))return l(e),null;for(;c(d);)t+=d,f()}return t}function m(){var e=g.charAt(v+1);return"I"==d||"i"==d?(f(),"1"):"+"!=d&&"-"!=d||"I"!=e&&"i"!=e?null:(e="+"==d?"1":"-1",f(),f(),e)}function h(){return new SyntaxError('End of string expected, got "'+g.substr(v)+'"')}var g,v,d;return o.prototype.isComplex=!0,o.prototype.type="Complex",o.parse=function(e){if(v=-1,d="","string"!=typeof(g=e))throw new TypeError("Invalid argument in Complex.parse, string expected");f(),s();var t=p();if(t){if("I"==d||"i"==d){if(f(),s(),d)throw h();return new o(0,Number(t))}s();var r=d;if("+"!=r&&"-"!=r){if(s(),d)throw h();return new o(Number(t),0)}f(),s();var n=p();if(n){if("I"!=d&&"i"!=d)throw new SyntaxError('Character "i" expected, got "'+d+'"');f()}else if(!(n=m()))throw new SyntaxError("Imaginary part expected");if("-"==r&&(n="-"==n[0]?"+"+n.substring(1):"-"+n),f(),s(),d)throw h();return new o(Number(t),Number(n))}if(t=m()){if(s(),d)throw h();return new o(0,Number(t))}throw new SyntaxError('Could not parse: "'+e+'" as complex number')},o.fromPolar=function(e){switch(arguments.length){case 1:if("object"==typeof e)return o.fromPolar(e.r,e.phi);throw new TypeError("Input has to be an object with r and phi keys.");case 2:var r=e,n=arguments[1];if(i(r)){if(n&&n.isUnit&&n.hasBase("ANGLE")&&(n=n.toNumber("rad")),i(n))return new o(r*Math.cos(n),r*Math.sin(n));throw new TypeError("Phi is not a number nor an angle unit.")}throw new TypeError("Radius r is not a number.");default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},o.prototype.toPolar=function(){return{r:Math.sqrt(this.re*this.re+this.im*this.im),phi:Math.atan2(this.im,this.re)}},o.prototype.clone=function(){return new o(this.re,this.im)},o.prototype.equals=function(e){return this.re===e.re&&this.im===e.im},o.prototype.format=function(e){var r=this.im,n=this.re,o=a(this.re,e),s=a(this.im,e),e=i(e)?e:e?e.precision:null;return 0==(r=null!==e&&(e=Math.pow(10,-e),Math.abs(n/r)<e&&(n=0),Math.abs(r/n)<e)?0:r)?o:0==n?1==r?"i":-1==r?"-i":s+"i":0<r?1==r?o+" + i":o+" + "+s+"i":-1==r?o+" - i":o+" - "+s.substring(1)+"i"},o.prototype.toString=function(){return this.format()},o.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},o.fromJSON=function(e){return new o(e)},o.prototype.valueOf=o.prototype.toString,o}},function(e,t,r){"use strict";var i=r(19);t.name="complex",t.factory=function(e,t,n,a){var o=r(29),s=a("complex",{"":function(){return new e.Complex(0,0)},number:function(t){return new e.Complex(t,0)},"number, number":function(t,r){return new e.Complex(t,r)},"BigNumber, BigNumber":function(t,r){return new e.Complex(t.toNumber(),r.toNumber())},Complex:function(e){return e.clone()},string:function(t){return e.Complex.parse(t)},Object:function(t){if("re"in t&&"im"in t)return new e.Complex(t.re,t.im);if("r"in t&&"phi"in t)return e.Complex.fromPolar(t.r,t.phi);throw new Error("Expected object with either properties re and im, or properties r and phi.")},"Array | Matrix":function(e){return i(e,s)}});return s.toTex={0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)+"+o.symbols.i+"\\cdot\\left(${args[1]}\\right)\\right)"},s}},function(e,t){"use strict";t.symbols={Alpha:"A",alpha:"\\alpha",Beta:"B",beta:"\\beta",Gamma:"\\Gamma",gamma:"\\gamma",Delta:"\\Delta",delta:"\\delta",Epsilon:"E",epsilon:"\\epsilon",varepsilon:"\\varepsilon",Zeta:"Z",zeta:"\\zeta",Eta:"H",eta:"\\eta",Theta:"\\Theta",theta:"\\theta",vartheta:"\\vartheta",Iota:"I",iota:"\\iota",Kappa:"K",kappa:"\\kappa",varkappa:"\\varkappa",Lambda:"\\Lambda",lambda:"\\lambda",Mu:"M",mu:"\\mu",Nu:"N",nu:"\\nu",Xi:"\\Xi",xi:"\\xi",Omicron:"O",omicron:"o",Pi:"\\Pi",pi:"\\pi",varpi:"\\varpi",Rho:"P",rho:"\\rho",varrho:"\\varrho",Sigma:"\\Sigma",sigma:"\\sigma",varsigma:"\\varsigma",Tau:"T",tau:"\\tau",Upsilon:"\\Upsilon",upsilon:"\\upsilon",Phi:"\\Phi",phi:"\\phi",varphi:"\\varphi",Chi:"X",chi:"\\chi",Psi:"\\Psi",psi:"\\psi",Omega:"\\Omega",omega:"\\omega",true:"\\mathrm{True}",false:"\\mathrm{False}",i:"i",inf:"\\infty",Inf:"\\infty",infinity:"\\infty",Infinity:"\\infty",oo:"\\infty",lim:"\\lim",undefined:"\\mathbf{?}"},t.operators={transpose:"^\\top",factorial:"!",pow:"^",dotPow:".^\\wedge",unaryPlus:"+",unaryMinus:"-",bitNot:"~",not:"\\neg",multiply:"\\cdot",divide:"\\frac",dotMultiply:".\\cdot",dotDivide:".:",mod:"\\mod",add:"+",subtract:"-",to:"\\rightarrow",leftShift:"<<",rightArithShift:">>",rightLogShift:">>>",equal:"=",unequal:"\\neq",smaller:"<",larger:">",smallerEq:"\\leq",largerEq:"\\geq",bitAnd:"\\&",bitXor:"\\underline{|}",bitOr:"|",and:"\\wedge",xor:"\\veebar",or:"\\vee"},t.defaultTemplate="\\mathrm{${name}}\\left(${args}\\right)";var r={deg:"^\\circ"};t.toSymbol=function(e,n){return(n=void 0!==n&&n)?r.hasOwnProperty(e)?r[e]:"\\mathrm{"+e+"}":t.symbols.hasOwnProperty(e)?t.symbols[e]:-1!==e.indexOf("_")?(n=e.indexOf("_"),t.toSymbol(e.substring(0,n))+"_{"+t.toSymbol(e.substring(n+1))+"}"):e}},function(e,t,r){e.exports=[r(31),r(35)]},function(e,t,r){var i=r(32);i.prototype.type="Fraction",i.prototype.isFraction=!0,i.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},i.fromJSON=function(e){return new i(e)},t.name="Fraction",t.path="type",t.factory=function(e,t,r,n){return i}},function(e,t,r){var i;!function(e){!function(){"use strict";function o(e,t){return isNaN(e=parseInt(e,10))&&s(),e*t}function s(){throw"Invalid Param"}function u(e,t){return this instanceof u?(l(e,t),e=u.REDUCE?g(f.d,f.n):1,this.s=f.s,this.n=f.n/e,void(this.d=f.d/e)):new u(e,t)}function l(e,t){var r,n=0,i=1,a=1,u=0,c=0,l=0,p=1,m=1,h=0,g=1,v=1,d=1,y=1e7;if(null!=e)if(void 0!==t)a=(n=e)*(i=t);else switch(typeof e){case"object":"d"in e&&"n"in e?(n=e.n,i=e.d,"s"in e&&(n*=e.s)):0 in e?(n=e[0],1 in e&&(i=e[1])):s(),a=n*i;break;case"number":if((e=e<0?-(a=e):e)%1==0)n=e;else if(0<e){for(1<=e&&(e/=m=Math.pow(10,Math.floor(1+Math.log(e)/Math.LN10)));g<=y&&d<=y;){if(e===(r=(h+v)/(g+d))){i=g+d<=y?(n=h+v,g+d):g<d?(n=v,d):(n=h,g);break}r<e?(h+=v,g+=d):(v+=h,d+=g),i=y<g?(n=v,d):(n=h,g)}n*=m}break;case"string":if("-"===(g=e.match(/\d+|./g))[h]?(a=-1,h++):"+"===g[h]&&h++,g.length===h+1?c=o(g[h++],a):"."===g[h+1]||"."===g[h]?("."!==g[h]&&(u=o(g[h++],a)),(++h+1===g.length||"("===g[h+1]&&")"===g[h+3]||"'"===g[h+1]&&"'"===g[h+3])&&(c=o(g[h],a),p=Math.pow(10,g[h].length),h++),("("===g[h]&&")"===g[h+2]||"'"===g[h]&&"'"===g[h+2])&&(l=o(g[h+1],a),m=Math.pow(10,g[h+1].length)-1,h+=3)):"/"===g[h+1]||":"===g[h+1]?(c=o(g[h],a),p=o(g[h+2],1),h+=3):"/"===g[h+3]&&" "===g[h+1]&&(u=o(g[h],a),c=o(g[h+2],a),p=o(g[h+4],1),h+=5),g.length<=h){a=n=l+m*(u*p+c),i=p*m;break}default:s()}if(!i)throw"DIV/0";f.s=a<0?-1:1,f.n=Math.abs(n),f.d=Math.abs(i)}function g(e,t){if(!e)return t;if(!t)return e;for(;;){if(!(e%=t))return t;if(!(t%=e))return e}}var f={s:1,n:0,d:1};u.REDUCE=1,u.prototype={s:1,n:0,d:1,abs:function(){return new u(this.n,this.d)},neg:function(){return new u(-this.s*this.n,this.d)},add:function(e,t){return l(e,t),new u(this.s*this.n*f.d+f.s*this.d*f.n,this.d*f.d)},sub:function(e,t){return l(e,t),new u(this.s*this.n*f.d-f.s*this.d*f.n,this.d*f.d)},mul:function(e,t){return l(e,t),new u(this.s*f.s*this.n*f.n,this.d*f.d)},div:function(e,t){return l(e,t),new u(this.s*f.s*this.n*f.d,this.d*f.n)},clone:function(){return new u(this)},mod:function(e,t){return void 0===e?new u(this.s*this.n%this.d,1):(l(e,t),0==f.n*this.d&&u(0,0),new u(this.s*f.d*this.n%(f.n*this.d),f.d*this.d))},gcd:function(e,t){return l(e,t),new u(g(f.n,this.n),f.d*this.d/g(f.d,this.d))},lcm:function(e,t){return l(e,t),new u(f.n*this.n/g(f.n,this.n),g(f.d,this.d))},ceil:function(){return new u(Math.ceil(this.s*this.n/this.d),1)},floor:function(){return new u(Math.floor(this.s*this.n/this.d),1)},round:function(){return new u(Math.round(this.s*this.n/this.d),1)},inverse:function(){return new u(this.s*this.d,this.n)},pow:function(e){var t=this.d,r=this.n;return e<0?(this.d=Math.pow(r,-e),this.n=Math.pow(t,-e)):(this.d=Math.pow(t,e),this.n=Math.pow(r,e)),0==e%2&&(this.s=1),this},equals:function(e,t){return l(e,t),this.s*this.n*f.d==f.s*f.n*this.d},compare:function(e,t){l(e,t);e=this.s*this.n*f.d-f.s*f.n*this.d;return(0<e)-(e<0)},divisible:function(e,t){return l(e,t),!(!(f.n*this.d)||this.n*f.d%(f.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(e){var r="",n=this.n,i=this.d;return this.s<0&&(r+="-"),1===i?r+=n:(e&&0<(e=Math.floor(n/i))&&(r=r+e+" ",n%=i),r=(r+=n)+"/"+i),r},toLatex:function(e){var r="",n=this.n,i=this.d;return this.s<0&&(r+="-"),1===i?r+=n:(e&&0<(e=Math.floor(n/i))&&(r+=e,n%=i),r=(r=(r+="\\frac{")+n+"}{")+i+"}"),r},toString:function(){var e,t=this.n,r=this.d;u.REDUCE||(t/=e=g(t,r),r/=e);for(var n=String(t).split(""),i=0,a=[~this.s?"":"-","",""],o="",s=function(t){for(;t%2==0;t/=2);for(;t%5==0;t/=5);if(1===t)return 0;for(var r=10%t,n=1;1!==r;n++)if(r=10*r%t,2e3<n)return 0;return n}(r),c=function(t,r){for(var n=1,i=function(e,t,r){for(var n=1;0<t;e=e*e%r,t>>=1)1&t&&(n=n*e%r);return n}(10,r,t),a=0;a<300;a++){if(n===i)return a;n=10*n%t,i=10*i%t}return 0}(r,s),f=-1,l=1,p=10+s+c+n.length,v=0;v<p;v++,i*=10){if(v<n.length?i+=Number(n[v]):(l=2,f++),0<s)if(f===c)a[l]+=o+"(",o="";else if(f===s+c){a[l]+=o+")";break}r<=i?(a[l]+=o+(i/r|0),o="",i%=r):1<l?o+="0":a[l]&&(a[l]+="0")}return a[0]+=a[1]||"0",a[2]?a[0]+"."+a[2]:a[0]}},r(34).amd?void 0!==(i=function(){return u}.apply(t,[]))&&(e.exports=i):e.exports=u}()}.call(t,r(33)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children=[],e.webpackPolyfill=1),e}},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,r){"use strict";var i=r(19);t.name="fraction",t.factory=function(e,t,r,n){var a=n("fraction",{number:function(t){if(!isFinite(t)||isNaN(t))throw new Error(t+" cannot be represented as a fraction");return new e.Fraction(t)},string:function(t){return new e.Fraction(t)},"number, number":function(t,r){return new e.Fraction(t,r)},Fraction:function(e){return e},Object:function(t){return new e.Fraction(t)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){e.exports=[r(37),r(45),r(46),r(48),r(57),r(63),r(64),r(65),r(66),r(50),r(67)]},function(e,t,r){"use strict";var o=r(38).string.isString;t.name="Matrix",t.path="type",t.factory=function(e,t,r,n){function i(){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator")}return i.prototype.type="Matrix",i.prototype.isMatrix=!0,i.storage=function(e){if(!o(e))throw new TypeError("format must be a string value");var t=i._storage[e];if(t)return t;throw new SyntaxError("Unsupported matrix storage format: "+e)},i._storage={},i.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},i.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},i.prototype.create=function(e,t){throw new Error("Cannot invoke create on a Matrix interface")},i.prototype.subset=function(e,t,r){throw new Error("Cannot invoke subset on a Matrix interface")},i.prototype.get=function(e){throw new Error("Cannot invoke get on a Matrix interface")},i.prototype.set=function(e,t,r){throw new Error("Cannot invoke set on a Matrix interface")},i.prototype.resize=function(e,t){throw new Error("Cannot invoke resize on a Matrix interface")},i.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},i.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},i.prototype.map=function(e,t){throw new Error("Cannot invoke map on a Matrix interface")},i.prototype.forEach=function(e){throw new Error("Cannot invoke forEach on a Matrix interface")},i.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},i.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},i.prototype.format=function(e){throw new Error("Cannot invoke format on a Matrix interface")},i.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},i}},function(e,t,r){"use strict";t.array=r(39),t.boolean=r(43),t.function=r(44),t.number=r(6),t.object=r(3),t.string=r(23),t.types=r(40),t.emitter=r(8)},function(e,t,r){"use strict";function i(e,r,n,a){var s,u=e.length,f=r[n],l=Math.min(u,f);if(e.length=f,n<r.length-1){for(var p=n+1,o=0;o<l;o++)s=e[o],Array.isArray(s)||(e[o]=s=[s]),i(s,r,p,a);for(o=l;o<f;o++)i(e[o]=s=[],r,p,a)}else{for(o=0;o<l;o++)for(;Array.isArray(e[o]);)e[o]=e[o][0];if(a!==t.UNINITIALIZED)for(o=l;o<f;o++)e[o]=c.clone(a)}}var s=r(6),u=r(23),c=r(3),f=(r(40),r(41)),l=r(42);t.size=function(e){for(var t=[];Array.isArray(e);)t.push(e.length),e=e[0];return t},t.validate=function(e,t){if(0==t.length){if(Array.isArray(e))throw new f(e.length,0)}else!function n(e,t,r){var a=e.length;if(a!=t[r])throw new f(a,t[r]);if(r<t.length-1)for(var o=r+1,i=0;i<a;i++){var s=e[i];if(!Array.isArray(s))throw new f(t.length-1,t.length,"<");n(e[i],t,o)}else for(i=0;i<a;i++)if(Array.isArray(e[i]))throw new f(t.length+1,t.length,">")}(e,t,0)},t.validateIndex=function(e,t){if(!s.isNumber(e)||!s.isInteger(e))throw new TypeError("Index must be an integer (value: "+e+")");if(e<0)throw new l(e);if(void 0!==t&&t<=e)throw new l(e,t)},t.UNINITIALIZED={},t.resize=function(e,t,r){if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new Error("Resizing to scalar is not supported");return t.forEach(function(e){if(!s.isNumber(e)||!s.isInteger(e)||e<0)throw new TypeError("Invalid size, must contain positive integers (size: "+u.format(t)+")")}),i(e,t,0,void 0!==r?r:0),e},t.squeeze=function(e,r){for(var n=r||t.size(e);Array.isArray(e)&&1===e.length;)e=e[0],n.shift();for(var i=n.length;1===n[i-1];)i--;return i<n.length&&(e=function a(e,t,r){if(r<t)for(var o=r+1,n=0,i=e.length;n<i;n++)e[n]=a(e[n],t,o);else for(;Array.isArray(e);)e=e[0];return e}(e,i,0),n.length=i),e},t.unsqueeze=function(e,r,n,i){var a=i||t.size(e);if(n)for(var s=0;s<n;s++)e=[e],a.unshift(1);for(e=function o(e,t,r){if(Array.isArray(e))for(var a=r+1,n=0,i=e.length;n<i;n++)e[n]=o(e[n],t,a);else for(var s=r;s<t;s++)e=[e];return e}(e,r,0);a.length<r;)a.push(1);return e},t.flatten=function(e){var t;return Array.isArray(e)?(t=[],e.forEach(function r(e){Array.isArray(e)?e.forEach(r):t.push(e)}),t):e},t.isArray=Array.isArray},function(e,t){"use strict";t.type=function(e){var t=typeof e;return"object"==t?null===e?"null":e instanceof Boolean?"boolean":e instanceof Number?"number":e instanceof String?"string":Array.isArray(e)?"Array":e instanceof Date?"Date":e instanceof RegExp?"RegExp":"Object":"function"==t?"Function":t}},function(e,t){"use strict";function r(e,t,n){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.actual=e,this.expected=t,this.relation=n,this.message="Dimension mismatch ("+(Array.isArray(e)?"["+e.join(", ")+"]":e)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=(new Error).stack}(r.prototype=new RangeError).constructor=RangeError,r.prototype.name="DimensionError",r.prototype.isDimensionError=!0,e.exports=r},function(e,t){"use strict";function r(e,t,n){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.index=e,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=n),void 0!==this.min&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":void 0!==this.max&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=(new Error).stack}(r.prototype=new RangeError).constructor=RangeError,r.prototype.name="IndexError",r.prototype.isIndexError=!0,e.exports=r},function(e,t){"use strict";t.isBoolean=function(e){return"boolean"==typeof e}},function(e,t){t.memoize=function(e,t){return function r(){"object"!=typeof r.cache&&(r.cache={});for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];var a=t?t(n):JSON.stringify(n);return a in r.cache?r.cache[a]:r.cache[a]=e.apply(e,n)}}},function(e,t,r){"use strict";var i=r(38),a=r(41),o=i.string,s=i.array,u=i.object,c=i.number,f=Array.isArray,l=c.isNumber,p=c.isInteger,m=o.isString,h=s.validateIndex;t.name="DenseMatrix",t.path="type",t.factory=function(e,t,n,c){function g(e,t){if(!(this instanceof g))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!m(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix)"DenseMatrix"===e.type?(this._data=u.clone(e._data),this._size=u.clone(e._size)):(this._data=e.toArray(),this._size=e.size()),this._datatype=t||e._datatype;else if(e&&f(e.data)&&f(e.size))this._data=e.data,this._size=e.size,this._datatype=t||e.datatype;else{if(f(e))this._data=function w(e){for(var t=0,r=e.length;t<r;t++){var n=e[t];f(n)?e[t]=w(n):n&&!0===n.isMatrix&&(e[t]=w(n.valueOf()))}return e}(e),this._size=s.size(this._data),s.validate(this._data,this._size);else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._data=[],this._size=[0]}this._datatype=t}}function v(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var n=t.size();if(n.length!=e._size.length)throw new a(n.length,e._size.length);for(var i=t.min(),o=t.max(),s=0,u=e._size.length;s<u;s++)h(i[s],e._size[s]),h(o[s],e._size[s]);return new g(function d(e,t,r,n){var i=n==r-1,a=t.dimension(n);return(i?a.map(function(t){return e[t]}):a.map(function(i){i=e[i];return d(i,t,r,n+1)})).valueOf()}(e._data,t,n.length,0),e._datatype)}function x(e,t,r,n,i){var a=i==n-1,o=t.dimension(i);a?o.forEach(function(t,n){h(t),e[t]=r[n[0]]}):o.forEach(function(a,o){h(a),x(e[a],t,r[o[0]],n,i+1)})}function b(e,t,r){for(var n=u.clone(e._size),i=!1;n.length<t.length;)n.push(0),i=!0;for(var a=0,o=t.length;a<o;a++)t[a]>n[a]&&(n[a]=t[a],i=!0);i&&E(e,n,r)}var n=n(r(37)),E=((g.prototype=new n).type="DenseMatrix",g.prototype.isDenseMatrix=!0,g.prototype.storage=function(){return"dense"},g.prototype.datatype=function(){return this._datatype},g.prototype.create=function(e,t){return new g(e,t)},g.prototype.subset=function(e,t,r){switch(arguments.length){case 1:return v(this,e);case 2:case 3:return function(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var i,o=t.size(),c=t.isScalar();if(r&&!0===r.isMatrix?(i=r.size(),r=r.valueOf()):i=s.size(r),c){if(0!==i.length)throw new TypeError("Scalar expected");e.set(t.min(),r,n)}else{if(o.length<e._size.length)throw new a(o.length,e._size.length,"<");if(i.length<o.length){for(var f=0,l=0;1===o[f]&&1===i[f];)f++;for(;1===o[f];)l++,f++;r=s.unsqueeze(r,o.length,l,i)}if(!u.deepEqual(o,i))throw new a(o,i,">");b(e,t.max().map(function(e){return e+1}),n);c=o.length;x(e._data,t,r,c,0)}return e}(this,e,t,r);default:throw new SyntaxError("Wrong number of arguments")}},g.prototype.get=function(e){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);for(var t=0;t<e.length;t++)h(e[t],this._size[t]);for(var r=this._data,n=0,i=e.length;n<i;n++){var o=e[n];h(o,r.length),r=r[o]}return u.clone(r)},g.prototype.set=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(e.length<this._size.length)throw new a(e.length,this._size.length,"<");b(this,e.map(function(e){return e+1}),r);for(var o,u=this._data,n=0,i=e.length-1;n<i;n++)o=e[n],h(o,u.length),u=u[o];return o=e[e.length-1],h(o,u.length),u[o]=t,this},g.prototype.resize=function(e,t,r){if(f(e))return r=r?this.clone():this,E(r,e,t);throw new TypeError("Array expected")},function(e,t,r){if(0!==t.length)return e._size=u.clone(t),e._data=s.resize(e._data,e._size,r),e;for(var n=e._data;f(n);)n=n[0];return u.clone(n)});return g.prototype.clone=function(){return new g({data:u.clone(this._data),size:u.clone(this._size),datatype:this._datatype})},g.prototype.size=function(){return this._size},g.prototype.map=function(e){var t=this,r=function(n,i){return f(n)?n.map(function(e,t){return r(e,i.concat(t))}):e(n,i,t)};return new g({data:r(this._data,[]),size:u.clone(this._size),datatype:this._datatype})},g.prototype.forEach=function(e){var t=this,r=function(n,i){f(n)?n.forEach(function(e,t){r(e,i.concat(t))}):e(n,i,t)};r(this._data,[])},g.prototype.toArray=function(){return u.clone(this._data)},g.prototype.valueOf=function(){return this._data},g.prototype.format=function(e){return o.format(this._data,e)},g.prototype.toString=function(){return o.format(this._data)},g.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},g.prototype.diagonal=function(e){if(e){if(!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e))throw new TypeError("The parameter k must be an integer number")}else e=0;for(var t=0<e?e:0,r=e<0?-e:0,e=this._size[0],i=this._size[1],a=Math.min(e-r,i-t),o=[],s=0;s<a;s++)o[s]=u.clone(this._data[s+r][s+t]);return new g({data:o,size:[a],datatype:this._datatype})},g.diagonal=function(t,r,n,i,a){if(!f(t))throw new TypeError("Array expected, size parameter");if(2!==t.length)throw new Error("Only two dimensions matrix are supported");if(t=t.map(function(e){if(e&&!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e)||e<1)throw new Error("Size values must be positive integers");return e}),n){if(n&&!0===n.isBigNumber&&(n=n.toNumber()),!l(n)||!p(n))throw new TypeError("The parameter k must be an integer number")}else n=0;i&&m(a)&&(i=c.convert(i,a));var o,u=0<n?n:0,h=n<0?-n:0,a=t[0],n=t[1],y=Math.min(a-h,n-u);if(f(r)){if(r.length!==y)throw new Error("Invalid value array length");o=function(e){return r[e]}}else if(r&&!0===r.isMatrix){var x=r.size();if(1!==x.length||x[0]!==y)throw new Error("Invalid matrix length");o=function(e){return r.get([e])}}else o=function(){return r};i=i||(o(0)&&!0===o(0).isBigNumber?new e.BigNumber(0):0);var b=[];if(0<t.length)for(var b=s.resize(b,t,i),w=0;w<y;w++)b[w+h][w+u]=o(w);return new g({data:b,size:[a,n]})},g.fromJSON=function(e){return new g(e)},g.prototype.swapRows=function(e,t){if(!(l(e)&&p(e)&&l(t)&&p(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return h(e,this._size[0]),h(t,this._size[0]),g._swapRows(e,t,this._data),this},g._swapRows=function(e,t,r){var n=r[e];r[e]=r[t],r[t]=n},e.Matrix._storage.dense=g,e.Matrix._storage.default=g},t.lazy=!1},function(e,t,r){"use strict";var i=r(38),a=r(41),o=i.array,s=i.object,u=i.string,c=i.number,f=Array.isArray,l=c.isNumber,p=c.isInteger,m=u.isString,h=o.validateIndex;t.name="SparseMatrix",t.path="type",t.factory=function(e,t,n,g){function v(e,t){if(!(this instanceof v))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!m(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix)!function(e,t,r){"SparseMatrix"===t.type?(e._values=t._values?s.clone(t._values):void 0,e._index=s.clone(t._index),e._ptr=s.clone(t._ptr),e._size=s.clone(t._size),e._datatype=r||t._datatype):b(e,t.valueOf(),r||t._datatype)}(this,e,t);else if(e&&f(e.index)&&f(e.ptr)&&f(e.size))this._values=e.values,this._index=e.index,this._ptr=e.ptr,this._size=e.size,this._datatype=t||e.datatype;else if(f(e))b(this,e,t);else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=t}}var d=n(r(37)),y=n(r(47)),b=function(e,t,r){e._values=[],e._index=[],e._ptr=[],e._datatype=r;var n=t.length,i=0,a=y,o=0;if(m(r)&&(a=g.find(y,[r,r])||y,o=g.convert(0,r)),0<n){var s=0;do{e._ptr.push(e._index.length);for(var u=0;u<n;u++){var l,c=t[u];f(c)?(0===s&&i<c.length&&(i=c.length),s<c.length&&(a(l=c[s],o)||(e._values.push(l),e._index.push(u)))):(0===s&&i<1&&(i=1),a(c,o)||(e._values.push(c),e._index.push(u)))}}while(++s<i)}e._ptr.push(e._index.length),e._size=[n,i]},w=((v.prototype=new d).type="SparseMatrix",v.prototype.isSparseMatrix=!0,v.prototype.storage=function(){return"sparse"},v.prototype.datatype=function(){return this._datatype},v.prototype.create=function(e,t){return new v(e,t)},v.prototype.density=function(){var e=this._size[0],t=this._size[1];return 0!==e&&0!==t?this._index.length/(e*t):0},v.prototype.subset=function(e,t,r){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return w(this,e);case 2:case 3:return N(this,e,t,r);default:throw new SyntaxError("Wrong number of arguments")}},function(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var n=t.size();if(n.length!=e._size.length)throw new a(n.length,e._size.length);for(var s,u,c=t.min(),f=t.max(),i=0,o=e._size.length;i<o;i++)h(c[i],e._size[i]),h(f[i],e._size[i]);var l=e._values,p=e._index,m=e._ptr,g=t.dimension(0),t=t.dimension(1),y=[],x=[],b=(g.forEach(function(e,t){x[e]=t[0],y[e]=!0}),l?[]:void 0),w=[],N=[];return t.forEach(function(e){for(N.push(w.length),s=m[e],u=m[e+1];s<u;s++)i=p[s],!0===y[i]&&(w.push(x[i]),b)&&b.push(l[s])}),N.push(w.length),new v({values:b,index:w,ptr:N,size:n,datatype:e._datatype})}),N=function(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var i,u=t.size(),c=t.isScalar();if(r&&!0===r.isMatrix?(i=r.size(),r=r.toArray()):i=o.size(r),c){if(0!==i.length)throw new TypeError("Scalar expected");e.set(t.min(),r,n)}else{if(1!==u.length&&2!==u.length)throw new a(u.length,e._size.length,"<");if(i.length<u.length){for(var f=0,l=0;1===u[f]&&1===i[f];)f++;for(;1===u[f];)l++,f++;r=o.unsqueeze(r,u.length,l,i)}if(!s.deepEqual(u,i))throw new a(u,i,">");for(var p=t.min()[0],m=t.min()[1],h=i[0],g=i[1],v=0;v<h;v++)for(var d=0;d<g;d++){var y=r[v][d];e.set([v+p,d+m],y,n)}}return e},E=(v.prototype.get=function(e){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);var t,n;if(this._values)return t=e[0],e=e[1],h(t,this._size[0]),h(e,this._size[1]),(n=E(t,this._ptr[e],this._ptr[e+1],this._index))<this._ptr[e+1]&&this._index[n]===t?s.clone(this._values[n]):0;throw new Error("Cannot invoke get on a Pattern only matrix")},v.prototype.set=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);var n,o,s,u,c;if(this._values)return n=e[0],e=e[1],o=this._size[0],s=this._size[1],u=y,c=0,m(this._datatype)&&(u=g.find(y,[this._datatype,this._datatype])||y,c=g.convert(0,this._datatype)),(o-1<n||s-1<e)&&(_(this,Math.max(n+1,o),Math.max(e+1,s),r),o=this._size[0],s=this._size[1]),h(n,o),h(e,s),(r=E(n,this._ptr[e],this._ptr[e+1],this._index))<this._ptr[e+1]&&this._index[r]===n?u(t,c)?M(r,e,this._values,this._index,this._ptr):this._values[r]=t:A(r,n,e,t,this._values,this._index,this._ptr),this;throw new Error("Cannot invoke set on a Pattern only matrix")},function(e,t,r,n){if(r-t==0)return r;for(var i=t;i<r;i++)if(n[i]===e)return i;return t}),M=function(e,t,r,n,i){r.splice(e,1),n.splice(e,1);for(var a=t+1;a<i.length;a++)i[a]--},A=function(e,t,r,n,i,a,o){i.splice(e,0,n),a.splice(e,0,t);for(var s=r+1;s<o.length;s++)o[s]++},_=(v.prototype.resize=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");e.forEach(function(t){if(!c.isNumber(t)||!c.isInteger(t)||t<0)throw new TypeError("Invalid size, must contain positive integers (size: "+u.format(e)+")")});r=r?this.clone():this;return _(r,e[0],e[1],t)},function(e,t,r,n){var i=n||0,n=y,o=0;m(e._datatype)&&(n=g.find(y,[e._datatype,e._datatype])||y,o=g.convert(0,e._datatype),i=g.convert(i,e._datatype));var f=!n(i,o),l=e._size[0],p=e._size[1];if(p<r){for(u=p;u<r;u++)if(e._ptr[u]=e._values.length,f)for(s=0;s<l;s++)e._values.push(i),e._index.push(s);e._ptr[r]=e._values.length}else r<p&&(e._ptr.splice(r+1,p-r),e._values.splice(e._ptr[r],e._values.length),e._index.splice(e._ptr[r],e._index.length));if(p=r,l<t){if(f){for(var h=0,u=0;u<p;u++){e._ptr[u]=e._ptr[u]+h;for(var c=e._ptr[u+1]+h,v=0,s=l;s<t;s++,v++)e._values.splice(c+v,0,i),e._index.splice(c+v,0,s),h++}e._ptr[p]=e._values.length}}else if(t<l){var d=0;for(u=0;u<p;u++){e._ptr[u]=e._ptr[u]-d;var x=e._ptr[u],b=e._ptr[u+1]-d;for(c=x;c<b;c++)t-1<(s=e._index[c])&&(e._values.splice(c,1),e._index.splice(c,1),d++)}e._ptr[u]=e._values.length}return e._size[0]=t,e._size[1]=r,e}),O=(v.prototype.clone=function(){return new v({values:this._values?s.clone(this._values):void 0,index:s.clone(this._index),ptr:s.clone(this._ptr),size:s.clone(this._size),datatype:this._datatype})},v.prototype.size=function(){return s.clone(this._size)},v.prototype.map=function(e,t){var r,n,i;if(this._values)return n=(r=this)._size[0],i=this._size[1],O(this,0,n-1,0,i-1,function(t,n,i){return e(t,[n,i],r)},t);throw new Error("Cannot invoke map on a Pattern only matrix")},function(e,t,r,n,i,a,o){var s=[],u=[],c=[],f=y,l=0;m(e._datatype)&&(f=g.find(y,[e._datatype,e._datatype])||y,l=g.convert(0,e._datatype));for(var p=function(e,t,r){e=a(e,t,r),f(e,l)||(s.push(e),u.push(t))},h=n;h<=i;h++){c.push(s.length);for(var d=e._ptr[h],x=e._ptr[h+1],b=t,w=d;w<x;w++){var N=e._index[w];if(t<=N&&N<=r){if(!o)for(var E=b;E<N;E++)p(0,E-t,h-n);p(e._values[w],N-t,h-n)}b=N+1}if(!o)for(var M=b;M<=r;M++)p(0,M-t,h-n)}return c.push(s.length),new v({values:s,index:u,ptr:c,size:[r-t+1,i-n+1]})}),T=(v.prototype.forEach=function(e,t){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var r=this,n=this._size[0],i=this._size[1],a=0;a<i;a++){for(var o=this._ptr[a],s=this._ptr[a+1],u=0,c=o;c<s;c++){var f=this._index[c];if(!t)for(var l=u;l<f;l++)e(0,[l,a],r);e(this._values[c],[f,a],r),u=f+1}if(!t)for(var p=u;p<n;p++)e(0,[p,a],r)}},v.prototype.toArray=function(){return T(this._values,this._index,this._ptr,this._size,!0)},v.prototype.valueOf=function(){return T(this._values,this._index,this._ptr,this._size,!1)},function(e,t,r,n,i){for(var o,u=n[0],c=n[1],f=[],a=0;a<u;a++)for(f[a]=[],o=0;o<c;o++)f[a][o]=0;for(o=0;o<c;o++)for(var l=r[o],p=r[o+1],m=l;m<p;m++)f[a=t[m]][o]=e?i?s.clone(e[m]):e[m]:1;return f});return v.prototype.format=function(e){for(var t=this._size[0],r=this._size[1],n=this.density(),i="Sparse Matrix ["+u.format(t,e)+" x "+u.format(r,e)+"] density: "+u.format(n,e)+"\n",a=0;a<r;a++)for(var o=this._ptr[a],s=this._ptr[a+1],c=o;c<s;c++){var f=this._index[c];i+="\n    ("+u.format(f,e)+", "+u.format(a,e)+") ==> "+(this._values?u.format(this._values[c],e):"X")}return i},v.prototype.toString=function(){return u.format(this.toArray())},v.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},v.prototype.diagonal=function(e){if(e){if(!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e))throw new TypeError("The parameter k must be an integer number")}else e=0;var t=0<e?e:0,r=e<0?-e:0,e=this._size[0],i=this._size[1],a=Math.min(e-r,i-t),o=[],u=[],e=[];e[0]=0;for(var f=t;f<i&&o.length<a;f++)for(var m=this._ptr[f],h=this._ptr[f+1],g=m;g<h;g++){var d=this._index[g];if(d===f-t+r){o.push(s.clone(this._values[g])),u[o.length-1]=d-r;break}}return e.push(o.length),new v({values:o,index:u,ptr:e,size:[a,1]})},v.fromJSON=function(e){return new v(e)},v.diagonal=function(e,t,r,n,i){if(!f(e))throw new TypeError("Array expected, size parameter");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");if(e=e.map(function(e){if(e&&!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e)||e<1)throw new Error("Size values must be positive integers");return e}),r){if(!0===r.isBigNumber&&(r=r.toNumber()),!l(r)||!p(r))throw new TypeError("The parameter k must be an integer number")}else r=0;var a=y,o=0;m(i)&&(a=g.find(y,[i,i])||y,o=g.convert(0,i));var s,u=0<r?r:0,c=r<0?-r:0,i=e[0],d=e[1],x=Math.min(i-c,d-u);if(f(t)){if(t.length!==x)throw new Error("Invalid value array length");s=function(e){return t[e]}}else if(t&&!0===t.isMatrix){r=t.size();if(1!==r.length||r[0]!==x)throw new Error("Invalid matrix length");s=function(e){return t.get([e])}}else s=function(){return t};for(var w=[],N=[],E=[],M=0;M<d;M++){E.push(w.length);var _,A=M-u;0<=A&&A<x&&(a(_=s(A),o)||(N.push(A+c),w.push(_)))}return E.push(w.length),new v({values:w,index:N,ptr:E,size:[i,d]})},v.prototype.swapRows=function(e,t){if(!(l(e)&&p(e)&&l(t)&&p(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return h(e,this._size[0]),h(t,this._size[0]),v._swapRows(e,t,this._size[1],this._values,this._index,this._ptr),this},v._forEachRow=function(e,t,r,n,i){for(var a=n[e],o=n[e+1],s=a;s<o;s++)i(r[s],t[s])},v._swapRows=function(e,t,r,n,i,a){for(var o=0;o<r;o++){var l,s=a[o],u=a[o+1],c=E(e,s,u,i),s=E(t,s,u,i);c<u&&s<u&&i[c]===e&&i[s]===t?n&&(l=n[c],n[c]=n[s],n[s]=l):c<u&&i[c]===e&&(u<=s||i[s]!==t)?(l=n?n[c]:void 0,i.splice(s,0,t),n&&n.splice(s,0,l),i.splice(s<=c?c+1:c,1),n&&n.splice(s<=c?c+1:c,1)):s<u&&i[s]===t&&(u<=c||i[c]!==e)&&(u=n?n[s]:void 0,i.splice(c,0,e),n&&n.splice(c,0,u),i.splice(c<=s?s+1:s,1),n)&&n.splice(c<=s?s+1:s,1)}},e.Matrix._storage.sparse=v},t.lazy=!1},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.factory=function(e,t,r,n){var a=n("equalScalar",{"boolean, boolean":function(e,t){return e===t},"number, number":function(e,r){return e===r||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.eq(t)},"Fraction, Fraction":function(e,t){return e.equals(t)},"Complex, Complex":function(e,r){return(e.re===r.re||i(e.re,r.re,t.epsilon))&&(e.im===r.im||i(e.im,r.im,t.epsilon))},"Unit, Unit":function(e,t){if(e.equalBase(t))return a(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e===t}});return a}},function(e,t,r){"use strict";t.name="Spa",t.path="type",t.factory=function(e,t,n){function i(){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");this._values=[],this._heap=new e.FibonacciHeap}var a=n(r(49)),o=n(r(47));return i.prototype.type="Spa",i.prototype.isSpa=!0,i.prototype.set=function(e,t){this._values[e]?this._values[e].value=t:(t=this._heap.insert(e,t),this._values[e]=t)},i.prototype.get=function(e){e=this._values[e];return e?e.value:0},i.prototype.accumulate=function(e,t){var r=this._values[e];r?r.value=a(r.value,t):(r=this._heap.insert(e,t),this._values[e]=r)},i.prototype.forEach=function(e,t,r){var n=this._heap,i=this._values,a=[];for((s=n.extractMinimum())&&a.push(s);s&&s.key<=t;)s.key>=e&&(o(s.value,0)||r(s.key,s.value,this)),(s=n.extractMinimum())&&a.push(s);for(var u=0;u<a.length;u++){var s,c=a[u];i[(s=n.insert(c.key,c.value)).key]=s}},i.prototype.swap=function(e,t){var r=this._values[e],n=this._values[t];!r&&n?(r=this._heap.insert(e,n.value),this._heap.remove(n),this._values[e]=r,this._values[t]=void 0):r&&!n?(n=this._heap.insert(t,r.value),this._heap.remove(r),this._values[t]=n,this._values[e]=void 0):r&&n&&(t=r.value,r.value=n.value,n.value=t)},i}},function(e,t,r){"use strict";var i=r(3).extend;t.name="add",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(51)),u=r(29),c=n(r(52)),f=n(r(53)),l=n(r(54)),p=n(r(55)),m=n(r(56)),h=a("add",i({"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,s):c(t,e,s,!0):"sparse"===t.storage()?c(e,t,s,!1):p(e,t,s);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,s,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,s,!0);return t},"Array, any":function(e,t){return m(o(e),t,s,!1).valueOf()},"any, Array":function(e,t){return m(o(t),e,s,!0).valueOf()}},s.signatures));return h.toTex="\\left(${args[0]}"+u.operators.add+"${args[1]}\\right)",h}},function(e,t){"use strict";t.name="matrix",t.factory=function(e,t,r,n){function i(t,r,n){return new(e.Matrix.storage(r||"default"))(t,n)}return(n=n("matrix",{"":function(){return i([])},string:function(e){return i([],e)},"string, string":function(e,t){return i([],e,t)},Array:function(e){return i(e)},Matrix:function(e){return i(e,e.storage())},"Array | Matrix, string":i,"Array | Matrix, string, string":i})).toTex={0:"\\begin{bmatrix}\\end{bmatrix}",1:"\\left(${args[0]}\\right)",2:"\\left(${args[0]}\\right)"},n}},function(e,t){"use strict";t.factory=function(e,t,r,n){var i=n("add",{"number, number":function(e,t){return e+t},"Complex, Complex":function(t,r){return new e.Complex(t.re+r.re,t.im+r.im)},"BigNumber, BigNumber":function(e,t){return e.plus(t)},"Fraction, Fraction":function(e,t){return e.add(t)},"Unit, Unit":function(e,t){if(null==e.value)throw new Error("Parameter x contains a unit with undefined value");if(null==t.value)throw new Error("Parameter y contains a unit with undefined value");if(e.equalBase(t))return(e=e.clone()).value=i(e.value,t.value),e.fixPrefix=!1,e;throw new Error("Units do not match")}});return i}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm01",t.factory=function(e,t,r,n){var a=e.DenseMatrix;return function(e,t,r,o){var s=e._data,u=e._size,e=e._datatype,f=t._values,l=t._index,p=t._ptr,m=t._size,t=t._datatype;if(u.length!==m.length)throw new i(u.length,m.length);if(u[0]!==m[0]||u[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+m+")");if(!f)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");for(var d=u[0],y=u[1],m="string"==typeof e&&e===t?e:void 0,b=m?n.find(r,[m,m]):r,w=[],g=0;g<d;g++)w[g]=[];for(var N=[],E=[],v=0;v<y;v++){for(var M=v+1,A=p[v],_=p[v+1],O=A;O<_;O++)N[g=l[O]]=o?b(f[O],s[g][v]):b(s[g][v],f[O]),E[g]=M;for(g=0;g<d;g++)w[g][v]=E[g]===M?N[g]:s[g][v]}return new a({data:w,size:[d,y],datatype:m})}}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm04",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var E,T=n&&p?[]:void 0,C=[],S=[],f=new s({values:T,index:C,ptr:S,size:[g,x],datatype:d}),B=n&&p?[]:void 0,k=n&&p?[]:void 0,I=[],R=[],M=0;M<x;M++){S[M]=C.length;for(var U,P=M+1,_=c[M],O=c[M+1],A=_;A<O;A++)E=u[A],C.push(E),I[E]=P,B&&(B[E]=n[A]);for(_=h[M],O=h[M+1],A=_;A<O;A++)I[E=m[A]]===P?B&&(b(U=N(B[E],p[A]),w)?I[E]=null:B[E]=U):(C.push(E),R[E]=P,k&&(k[E]=p[A]));if(B&&k)for(A=S[M];A<C.length;)I[E=C[A]]===P?(T[A]=B[E],A++):R[E]===P?(T[A]=k[E],A++):C.splice(A,1)}return S[x]=C.length,f}}},function(e,t){"use strict";t.name="algorithm10",t.factory=function(e,t,r,n){var i=e.DenseMatrix;return function(e,t,r,a){var o=e._values,s=e._index,u=e._ptr,c=e._size,e=e._datatype;if(!o)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var l,p=c[0],m=c[1],h=r;"string"==typeof e&&(t=n.convert(t,l=e),h=n.find(r,[l,l]));for(var g=[],c=new i({data:g,size:[p,m],datatype:l}),d=[],y=[],x=0;x<m;x++){for(var b=x+1,w=u[x],N=u[x+1],E=w;E<N;E++){var M=s[E];d[M]=o[E],y[M]=b}for(var A=0;A<p;A++)0===x&&(g[A]=[]),g[A][x]=y[A]===b?a?h(t,d[A]):h(d[A],t):t}return c}}},function(e,t,r){"use strict";var i=r(38),a=r(41);i.string.isString,t.name="algorithm13",t.factory=function(e,t,r,n){var i=e.DenseMatrix,s=function(e,t,r,n,i,a){var o=[];if(t===r.length-1)for(var u=0;u<n;u++)o[u]=e(i[u],a[u]);else for(var c=0;c<n;c++)o[c]=s(e,t+1,r,r[t+1],i[c],a[c]);return o};return function(e,t,r){var o=e._data,u=e._size,e=e._datatype,f=t._data,l=t._size,p=t._datatype,m=[];if(u.length!==l.length)throw new a(u.length,l.length);for(var h=0;h<u.length;h++){if(u[h]!==l[h])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+l+")");m[h]=u[h]}var g,v=r,p=("string"==typeof e&&e===p&&(t=n.convert(t,g=e),v=n.find(r,[g,g])),0<m.length?s(v,0,m,m[0],o,f):[]);return new i({data:p,size:m,datatype:g})}}},function(e,t,r){"use strict";var i=r(3).clone;t.name="algorithm14",t.factory=function(e,t,r,n){var a=e.DenseMatrix,s=function(e,t,r,n,i,a,o){var u=[];if(t===r.length-1)for(var c=0;c<n;c++)u[c]=o?e(a,i[c]):e(i[c],a);else for(var f=0;f<n;f++)u[f]=s(e,t+1,r,r[t+1],i[f],a,o);return u};return function(e,t,r,o){var u,c=e._data,f=e._size,e=e._datatype,p=r,e=("string"==typeof e&&(t=n.convert(t,u=e),p=n.find(r,[u,u])),0<f.length?s(p,0,f,f[0],c,t,o):[]);return new a({data:e,size:i(f),datatype:u})}}},function(e,t,r){"use strict";t.name="FibonacciHeap",t.path="type",t.factory=function(e,t,n,i){function a(){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");this._minimum=null,this._size=0}var o=n(r(58)),s=n(r(62)),u=1/Math.log((1+Math.sqrt(5))/2),c=(a.prototype.type="FibonacciHeap",a.prototype.isFibonacciHeap=!0,a.prototype.insert=function(e,t){var n,t={key:e,value:t,degree:0};return this._minimum?(n=this._minimum,t.left=n,t.right=n.right,(n.right=t).right.left=t,o(e,n.key)&&(this._minimum=t)):this._minimum=(t.left=t).right=t,this._size++,t},a.prototype.size=function(){return this._size},a.prototype.clear=function(){this._minimum=null,this._size=0},a.prototype.isEmpty=function(){return!!this._minimum},a.prototype.extractMinimum=function(){var e=this._minimum;if(null!==e){for(var t=this._minimum,r=e.degree,n=e.child;0<r;){var i=n.right;n.left.right=n.right,n.right.left=n.left,n.left=t,n.right=t.right,((t.right=n).right.left=n).parent=null,n=i,r--}e.left.right=e.right,e.right.left=e.left,t=e==e.right?null:(t=e.right,m(t,this._size)),this._size--,this._minimum=t}return e},a.prototype.remove=function(e){this._minimum=c(this._minimum,e,-1),this.extractMinimum()},function(e,t,r){t.key=r;r=t.parent;return r&&o(t.key,r.key)&&(f(e,t,r),l(e,r)),e=o(t.key,e.key)?t:e}),f=function(e,t,r){t.left.right=t.right,t.right.left=t.left,r.degree--,r.child==t&&(r.child=t.right),0===r.degree&&(r.child=null),t.left=e,t.right=e.right,((e.right=t).right.left=t).parent=null,t.mark=!1},l=function(e,t){var r=t.parent;r&&(t.mark?(f(e,t,r),l(r)):t.mark=!0)},m=function(e,t){var r=Math.floor(Math.log(t)*u)+1,n=new Array(r),i=0;if(a=e)for(i++,a=a.right;a!==e;)i++,a=a.right;for(;0<i;){for(var m,c,a,f=a.degree,l=a.right;c=n[f];)s(a.key,c.key)&&(m=c,c=a,a=m),function(e,t){e.left.right=e.right,e.right.left=e.left,(e.parent=t).child?(e.left=t.child,e.right=t.child.right,(t.child.right=e).right.left=e):((t.child=e).right=e).left=e,t.degree++,e.mark=!1}(c,a),n[f]=null,f++;n[f]=a,a=l,i--}e=null;for(var h=0;h<r;h++)!(c=n[h])||e&&(c.left.right=c.right,c.right.left=c.left,c.left=e,c.right=e.right,(e.right=c).right.left=c,!o(c.key,e.key))||(e=c);return e};return a}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="smaller",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("smaller",{"boolean, boolean":function(e,t){return e<t},"number, number":function(e,r){return e<r&&!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lt(t)},"Fraction, Fraction":function(e,t){return-1===e.compare(t)},"Complex, Complex":function(e,t){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e<t},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.smaller+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm03",t.factory=function(e,t,r,n){var a=e.DenseMatrix;return function(e,t,r,o){var s=e._data,u=e._size,e=e._datatype,f=t._values,l=t._index,p=t._ptr,m=t._size,t=t._datatype;if(u.length!==m.length)throw new i(u.length,m.length);if(u[0]!==m[0]||u[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+m+")");if(!f)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var g,v=u[0],d=u[1],y=0,x=r;"string"==typeof e&&e===t&&(y=n.convert(0,g=e),x=n.find(r,[g,g]));for(var b=[],w=0;w<v;w++)b[w]=[];for(var N=[],E=[],M=0;M<d;M++){for(var A=M+1,_=p[M],O=p[M+1],T=_;T<O;T++){var C=l[T];N[C]=o?x(f[T],s[C][M]):x(s[C][M],f[T]),E[C]=A}for(var S=0;S<v;S++)b[S][M]=E[S]===A?N[S]:o?x(y,s[S][M]):x(s[S][M],y)}return new a({data:b,size:[v,d],datatype:g})}}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm07",t.factory=function(e,t,r,n){function s(e,t,r,n,i){for(var a=e._values,o=e._index,u=(e=e._ptr)[t],c=e[t+1];u<c;u++){var f=o[u];r[f]=i,n[f]=a[u]}}var a=e.DenseMatrix;return function(e,t,r){var o=e._size,u=e._datatype,c=t._size,f=t._datatype;if(o.length!==c.length)throw new i(o.length,c.length);if(o[0]!==c[0]||o[1]!==c[1])throw new RangeError("Dimension mismatch. Matrix A ("+o+") must match Matrix B ("+c+")");var l,p=o[0],m=o[1],h=0,g=r;"string"==typeof u&&u===f&&(h=n.convert(0,l=u),g=n.find(r,[l,l]));for(var y=[],v=0;v<p;v++)y[v]=[];for(var c=new a({data:y,size:[p,m],datatype:l}),b=[],w=[],N=[],E=[],d=0;d<m;d++){var M=d+1;for(s(e,d,N,b,M),s(t,d,E,w,M),v=0;v<p;v++)y[v][d]=g(N[v]===M?b[v]:h,E[v]===M?w[v]:h)}return c}}},function(e,t){"use strict";t.name="algorithm12",t.factory=function(e,t,r,n){var i=e.DenseMatrix;return function(e,t,r,a){var o=e._values,s=e._index,u=e._ptr,c=e._size,e=e._datatype;if(!o)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var l,p=c[0],m=c[1],h=r;"string"==typeof e&&(t=n.convert(t,l=e),h=n.find(r,[l,l]));for(var g=[],c=new i({data:g,size:[p,m],datatype:l}),d=[],y=[],x=0;x<m;x++){for(var b=x+1,w=u[x],N=u[x+1],E=w;E<N;E++){var M=s[E];d[M]=o[E],y[M]=b}for(var A=0;A<p;A++)0===x&&(g[A]=[]),g[A][x]=y[A]===b?a?h(t,d[A]):h(d[A],t):a?h(t,0):h(0,t)}return c}}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="larger",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("larger",{"boolean, boolean":function(e,t){return t<e},"number, number":function(e,r){return r<e&&!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gt(t)},"Fraction, Fraction":function(e,t){return 1===e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return t<e},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.larger+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(38),a=i.string,o=i.object,s=Array.isArray,u=a.isString;t.name="ImmutableDenseMatrix",t.path="type",t.factory=function(e,t,n){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!u(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix||s(e)){var r=new c(e,t);this._data=r._data,this._size=r._size,this._datatype=r._datatype,this._min=null,this._max=null}else if(e&&s(e.data)&&s(e.size))this._data=e.data,this._size=e.size,this._datatype=e.datatype,this._min=void 0!==e.min?e.min:null,this._max=void 0!==e.max?e.max:null;else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._data=[],this._size=[0],this._datatype=t,this._min=null,this._max=null}}var c=n(r(45)),f=n(r(58));return(a.prototype=new c).type="ImmutableDenseMatrix",a.prototype.isImmutableDenseMatrix=!0,a.prototype.subset=function(e){switch(arguments.length){case 1:var t=c.prototype.subset.call(this,e);return t.isMatrix?new a({data:t._data,size:t._size,datatype:t._datatype}):t;case 2:case 3:throw new Error("Cannot invoke set subset on an Immutable Matrix instance");default:throw new SyntaxError("Wrong number of arguments")}},a.prototype.set=function(){throw new Error("Cannot invoke set on an Immutable Matrix instance")},a.prototype.resize=function(){throw new Error("Cannot invoke resize on an Immutable Matrix instance")},a.prototype.clone=function(){return new a({data:o.clone(this._data),size:o.clone(this._size),datatype:this._datatype})},a.prototype.toJSON=function(){return{mathjs:"ImmutableDenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},a.fromJSON=function(e){return new a(e)},a.prototype.swapRows=function(){throw new Error("Cannot invoke swapRows on an Immutable Matrix instance")},a.prototype.min=function(){var e;return null===this._min&&(e=null,this.forEach(function(t){null!==e&&!f(t,e)||(e=t)}),this._min=null!==e?e:void 0),this._min},a.prototype.max=function(){var e;return null===this._max&&(e=null,this.forEach(function(t){null!==e&&!f(e,t)||(e=t)}),this._max=null!==e?e:void 0),this._max},a}},function(e,t,r){"use strict";var i=r(3).clone,a=r(6).isInteger;t.name="Index",t.path="type",t.factory=function(e){function t(e){if(!(this instanceof t))throw new SyntaxError("Constructor must be called with the new operator");this._dimensions=[],this._isScalar=!0;for(var n=0,i=arguments.length;n<i;n++){var a=arguments[n];if(a&&!0===a.isRange)this._dimensions.push(a),this._isScalar=!1;else if(a&&(Array.isArray(a)||!0===a.isMatrix)){var o=r(a.valueOf()),o=(this._dimensions.push(o),o.size());1===o.length&&1===o[0]||(this._isScalar=!1)}else{if("number"!=typeof a)throw new TypeError("Dimension must be an Array, Matrix, Number or Range");this._dimensions.push(r([a]))}}}function r(t){for(var r=0,n=t.length;r<n;r++)if("number"!=typeof t[r]||!a(t[r]))throw new TypeError("Index parameters must be positive integer numbers");return new e.ImmutableDenseMatrix(t)}return t.prototype.type="Index",t.prototype.isIndex=!0,t.prototype.clone=function(){var e=new t;return e._dimensions=i(this._dimensions),e._isScalar=this._isScalar,e},t.create=function(e){var r=new t;return t.apply(r,e),r},t.prototype.size=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.size()[0]}return e},t.prototype.max=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.max()}return e},t.prototype.min=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.min()}return e},t.prototype.forEach=function(e){for(var t=0,r=this._dimensions.length;t<r;t++)e(this._dimensions[t],t,this)},t.prototype.dimension=function(e){return this._dimensions[e]||null},t.prototype.isScalar=function(){return this._isScalar},t.prototype.valueOf=t.prototype.toArray=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++)e.push(this._dimensions[t].toArray());return e},t.prototype.toString=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++)e.push(this._dimensions[t].toString());return"["+e.join(", ")+"]"},t.prototype.toJSON=function(){return{mathjs:"Index",dimensions:this._dimensions}},t.fromJSON=function(e){return t.create(e.dimensions)},t}},function(e,t,r){"use strict";var i=r(6);t.name="Range",t.path="type",t.factory=function(e,t,r,n){function a(e,t,r){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(null!=e)if(!0===e.isBigNumber)e=e.toNumber();else if("number"!=typeof e)throw new TypeError("Parameter start must be a number");if(null!=t)if(!0===t.isBigNumber)t=t.toNumber();else if("number"!=typeof t)throw new TypeError("Parameter end must be a number");if(null!=r)if(!0===r.isBigNumber)r=r.toNumber();else if("number"!=typeof r)throw new TypeError("Parameter step must be a number");this.start=null!=e?parseFloat(e):0,this.end=null!=t?parseFloat(t):0,this.step=null!=r?parseFloat(r):1}return a.prototype.type="Range",a.prototype.isRange=!0,a.parse=function(e){if("string"!=typeof e)return null;var r=e.split(":").map(function(e){return parseFloat(e)});if(r.some(function(e){return isNaN(e)}))return null;switch(r.length){case 2:return new a(r[0],r[1]);case 3:return new a(r[0],r[2],r[1]);default:return null}},a.prototype.clone=function(){return new a(this.start,this.end,this.step)},a.prototype.size=function(){var e=0,t=this.start,r=this.step,t=this.end-t;return i.sign(r)==i.sign(t)?e=Math.ceil(t/r):0==t&&(e=0),[e=isNaN(e)?0:e]},a.prototype.min=function(){var e=this.size()[0];return 0<e?0<this.step?this.start:this.start+(e-1)*this.step:void 0},a.prototype.max=function(){var e=this.size()[0];return 0<e?0<this.step?this.start+(e-1)*this.step:this.start:void 0},a.prototype.forEach=function(e){var t=this.start,r=this.step,n=this.end,i=0;if(0<r)for(;t<n;)e(t,[i],this),t+=r,i++;else if(r<0)for(;n<t;)e(t,[i],this),t+=r,i++},a.prototype.map=function(e){var t=[];return this.forEach(function(r,n,i){t[n[0]]=e(r,n,i)}),t},a.prototype.toArray=function(){var e=[];return this.forEach(function(t,r){e[r[0]]=t}),e},a.prototype.valueOf=function(){return this.toArray()},a.prototype.format=function(e){var t=i.format(this.start,e);return 1!=this.step&&(t+=":"+i.format(this.step,e)),t+(":"+i.format(this.end,e))},a.prototype.toString=function(){return this.format()},a.prototype.toJSON=function(){return{mathjs:"Range",start:this.start,end:this.end,step:this.step}},a.fromJSON=function(e){return new a(e.start,e.end,e.step)},a}},function(e,t){"use strict";t.name="index",t.factory=function(e,t,r,n){return n("index",{"...number | BigNumber | Range | Array | Matrix":function(t){var t=t.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e&&(Array.isArray(e)||!0===e.isMatrix)?e.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e}):e}),n=new e.Index;return e.Index.apply(n,t),n}})}},function(e,t){"use strict";t.name="sparse",t.factory=function(e,t,r,n){var i=e.SparseMatrix;return(e=n("sparse",{"":function(){return new i([])},string:function(e){return new i([],e)},"Array | Matrix":function(e){return new i(e)},"Array | Matrix, string":function(e,t){return new i(e,t)}})).toTex={0:"\\begin{bsparse}\\end{bsparse}",1:"\\left(${args[0]}\\right)"},e}},function(e,t,r){"use strict";var i=r(19);t.name="number",t.factory=function(e,t,r,n){var a=n("number",{"":function(){return 0},number:function(e){return e},string:function(e){var t=Number(e);if(isNaN(t))throw new SyntaxError('String "'+e+'" is no valid number');return t},BigNumber:function(e){return e.toNumber()},Fraction:function(e){return e.valueOf()},Unit:function(e){throw new Error("Second argument with valueless unit expected")},"Unit, string | Unit":function(e,t){return e.toNumber(t)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},a}},function(e,t,r){e.exports=[r(70)]},function(e,t){"use strict";t.name="ResultSet",t.path="type",t.factory=function(e,t,r,n){function i(e){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");this.entries=e||[]}return i.prototype.type="ResultSet",i.prototype.isResultSet=!0,i.prototype.valueOf=function(){return this.entries},i.prototype.toString=function(){return"["+this.entries.join(", ")+"]"},i.prototype.toJSON=function(){return{mathjs:"ResultSet",entries:this.entries}},i.fromJSON=function(e){return new i(e.entries)},i}},function(e,t,r){"use strict";var i=r(19),a=r(6);t.name="string",t.factory=function(e,t,r,n){var o=n("string",{"":function(){return""},number:a.format,null:function(e){return"null"},boolean:function(e){return e+""},string:function(e){return e},"Array | Matrix":function(e){return i(e,o)},any:function(e){return String(e)}});return o.toTex={0:'\\mathtt{""}',1:"\\mathrm{string}\\left(${args[0]}\\right)"},o}},function(e,t,r){e.exports=[r(73),r(90),r(91)]},function(e,t,r){"use strict";var i=r(23).endsWith,a=r(3).clone;t.name="Unit",t.path="type",t.factory=function(e,t,n,o){function s(e,t){if(!(this instanceof s))throw new Error("Constructor must be called with the new operator");if(void 0!==e&&!M(e)&&!e.isComplex)throw new TypeError("First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined");if(null!=t&&("string"!=typeof t||""==t))throw new TypeError("Second parameter in Unit constructor must be a string");null!=t?(t=s.parse(t),this.units=t.units,this.dimensions=t.dimensions):(this.units=[{unit:q,prefix:I,power:0}],this.dimensions=[0,0,0,0,0,0,0,0,0]),this.value=null!=e?this._normalize(e):null,this.fixPrefix=!1,this.isUnitListSimplified=!0}function u(){for(;" "==z||"\t"==z;)l()}function f(e){return"0"<=e&&e<="9"}function l(){S++,z=C.charAt(S)}function p(e){S=e,z=C.charAt(S)}function m(){var t="",e=S;if("+"==z?l():"-"==z&&(t+=z,l()),!function(e){return"0"<=e&&e<="9"||"."==e}(z))return p(e),null;if("."==z){if(t+=z,l(),!f(z))return p(e),null}else{for(;f(z);)t+=z,l();"."==z&&(t+=z,l())}for(;f(z);)t+=z,l();if("E"==z||"e"==z){var e="",n=S;if(e+=z,l(),"+"!=z&&"-"!=z||(e+=z,l()),!f(z))return p(n),t;for(t+=e;f(z);)t+=z,l()}return t}function g(e){return z===e&&(l(),e)}function v(e){for(var t in L)if(L.hasOwnProperty(t)&&i(e,t)){var r=L[t],t=e.length-t.length,t=e.substring(0,t),t=r.prefixes[t];if(void 0!==t)return{unit:r,prefix:t}}return null}var C,S,z,d=n(r(51)),y=n(r(74)),x=n(r(77)),b=n(r(78)),w=n(r(79)),N=n(r(85)),E=n(r(86)),M=n(r(87)),A=n(r(88)),_=n(r(89)),O=n(r(68)),n=n(r(27)),B=(s.prototype.type="Unit",s.prototype.isUnit=!0,s.parse=function(r){if(S=-1,z="","string"!=typeof(C=r))throw new TypeError("Invalid argument in Unit.parse, string expected");var n=new s,i=(n.units=[],l(),u(),m()),a=null;i&&(a="bignumber"===t.number?new e.BigNumber(i):"fraction"===t.number?new e.Fraction(i):parseFloat(i)),u();for(var o=1,c=!1,f=[],p=1;;){for(u();"("===z;)f.push(o),p*=o,o=1,l(),u();if(!z)break;var d=z,y=function(){for(var e="",t=C.charCodeAt(S);48<=t&&t<=57||65<=t&&t<=90||97<=t&&t<=122;)e+=z,l(),t=C.charCodeAt(S);return(65<=(t=e.charCodeAt(0))&&t<=90||97<=t&&t<=122)&&e||null}();if(null==y)throw new SyntaxError('Unexpected "'+d+'" in "'+C+'" at index '+S.toString());var x=v(y);if(null==x)throw new SyntaxError('Unit "'+y+'" not found.');var b=o*p;if(u(),g("^")){u();d=m();if(null==d)throw new SyntaxError('In "'+r+'", "^" must be followed by a floating-point number');b*=d}n.units.push({unit:x.unit,prefix:x.prefix,power:b});for(var N=0;N<R.length;N++)n.dimensions[N]+=x.unit.dimensions[N]*b;for(u();")"===z;){if(0===f.length)throw new SyntaxError('Unmatched ")" in "'+C+'" at index '+S.toString());p/=f.pop(),l(),u()}c=!1,g("*")?(o=1,c=!0):g("/")?(o=-1,c=!0):o=1;y=x.unit.base.key;D.auto[y]={unit:x.unit,prefix:x.prefix}}if(u(),z)throw new SyntaxError('Could not parse: "'+r+'"');if(c)throw new SyntaxError('Trailing characters: "'+r+'"');if(0!==f.length)throw new SyntaxError('Unmatched "(" in "'+C+'"');if(0==n.units.length)throw new SyntaxError('"'+r+'" contains no units');return n.value=null!=a?n._normalize(a):null,n},s.prototype.clone=function(){var e=new s;e.fixPrefix=this.fixPrefix,e.isUnitListSimplified=this.isUnitListSimplified,e.value=a(this.value),e.dimensions=this.dimensions.slice(0),e.units=[];for(var t=0;t<this.units.length;t++)for(var r in e.units[t]={},this.units[t])this.units[t].hasOwnProperty(r)&&(e.units[t][r]=this.units[t][r]);return e},s.prototype._isDerived=function(){return 0!==this.units.length&&(1<this.units.length||1e-15<Math.abs(this.units[0].power-1))},s.prototype._normalize=function(e){var t,r,n,i;if(null==e||0===this.units.length)return e;if(this._isDerived()){for(var o=e,a=s._getNumberConverter(_(e)),u=0;u<this.units.length;u++)t=a(this.units[u].unit.value),i=a(this.units[u].prefix.value),n=a(this.units[u].power),o=x(o,w(x(t,i),n));return o}return t=(a=s._getNumberConverter(_(e)))(this.units[0].unit.value),r=a(this.units[0].unit.offset),i=a(this.units[0].prefix.value),x(d(e,r),x(t,i))},s.prototype._denormalize=function(e,t){var r,n,i,a;if(null==e||0===this.units.length)return e;if(this._isDerived()){for(var u=e,o=s._getNumberConverter(_(e)),c=0;c<this.units.length;c++)r=o(this.units[c].unit.value),a=o(this.units[c].prefix.value),i=o(this.units[c].power),u=b(u,w(x(r,a),i));return u}return r=(o=s._getNumberConverter(_(e)))(this.units[0].unit.value),a=o(this.units[0].prefix.value),n=o(this.units[0].unit.offset),y(b(b(e,r),null==t?a:t),n)},s.isValuelessUnit=function(e){return null!=v(e)},s.prototype.hasBase=function(e){if(!(e="string"==typeof e?P[e]:e))return!1;for(var t=0;t<R.length;t++)if(1e-12<Math.abs(this.dimensions[t]-e.dimensions[t]))return!1;return!0},s.prototype.equalBase=function(e){for(var t=0;t<R.length;t++)if(1e-12<Math.abs(this.dimensions[t]-e.dimensions[t]))return!1;return!0},s.prototype.equals=function(e){return this.equalBase(e)&&E(this.value,e.value)},s.prototype.multiply=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]+e.dimensions[r];for(var i,a,r=0;r<e.units.length;r++){var n=JSON.parse(JSON.stringify(e.units[r]));t.units.push(n)}return null!=this.value||null!=e.value?(i=null==this.value?this._normalize(1):this.value,a=null==e.value?e._normalize(1):e.value,t.value=x(i,a)):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.divide=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]-e.dimensions[r];for(var i,a,r=0;r<e.units.length;r++){var n=JSON.parse(JSON.stringify(e.units[r]));n.power=-n.power,t.units.push(n)}return null!=this.value||null!=e.value?(i=null==this.value?this._normalize(1):this.value,a=null==e.value?e._normalize(1):e.value,t.value=b(i,a)):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.pow=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]*e;for(r=0;r<t.units.length;r++)t.units[r].power*=e;return null!=t.value?t.value=w(t.value,e):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.abs=function(){var t,e=this.clone();for(t in e.value=N(e.value),e.units)"VA"!==e.units[t].unit.name&&"VAR"!==e.units[t].unit.name||(e.units[t].unit=L.W);return e},s.prototype.to=function(e){var t,r=null==this.value?this._normalize(1):this.value;if("string"==typeof e){if(t=s.parse(e),!this.equalBase(t))throw new Error("Units do not match");if(null!==t.value)throw new Error("Cannot convert to a unit with a value");return t.value=a(r),t.fixPrefix=!0,t.isUnitListSimplified=!0,t}if(e&&e.isUnit){if(!this.equalBase(e))throw new Error("Units do not match");if(null!==e.value)throw new Error("Cannot convert to a unit with a value");return(t=e.clone()).value=a(r),t.fixPrefix=!0,t.isUnitListSimplified=!0,t}throw new Error("String or Unit expected as parameter")},s.prototype.toNumber=function(e){return O(this.toNumeric(e))},s.prototype.toNumeric=function(e){e=this.to(e);return e._isDerived()?e._denormalize(e.value):e._denormalize(e.value,e.units[0].prefix.value)},s.prototype.toString=function(){return this.format()},s.prototype.toJSON=function(){return{mathjs:"Unit",value:this._denormalize(this.value),unit:this.formatUnits(),fixPrefix:this.fixPrefix}},s.fromJSON=function(e){var t=new s(e.value,e.unit);return t.fixPrefix=e.fixPrefix||!1,t},s.prototype.valueOf=s.prototype.toString,s.prototype.simplifyUnitListLazy=function(){if(!this.isUnitListSimplified&&null!=this.value){var e,r,n,t=[];for(r in $)if(this.hasBase(P[r])){e=r;break}if("NONE"===e)this.units=[];else if(n=e&&$.hasOwnProperty(e)?$[e]:n)this.units=[{unit:n.unit,prefix:n.prefix,power:1}];else{for(var i=0;i<R.length;i++){var a=R[i];1e-12<Math.abs(this.dimensions[i])&&t.push({unit:$[a].unit,prefix:$[a].prefix,power:this.dimensions[i]})}t.length<this.units.length&&(this.units=t)}this.isUnitListSimplified=!0}},s.prototype.formatUnits=function(){this.simplifyUnitListLazy();for(var e="",t="",r=0,n=0,i=0;i<this.units.length;i++)0<this.units[i].power?(r++,e+=" "+this.units[i].prefix.name+this.units[i].unit.name,1e-15<Math.abs(this.units[i].power-1)&&(e+="^"+this.units[i].power)):this.units[i].power<0&&n++;if(0<n)for(i=0;i<this.units.length;i++)this.units[i].power<0&&(0<r?(t+=" "+this.units[i].prefix.name+this.units[i].unit.name,1e-15<Math.abs(this.units[i].power+1)&&(t+="^"+-this.units[i].power)):t=(t+=" "+this.units[i].prefix.name+this.units[i].unit.name)+("^"+this.units[i].power));var e=e.substr(1),t=t.substr(1),a=e=1<r&&0<n?"("+e+")":e;return 0<r&&0<n&&(a+=" / "),a+(t=1<n&&0<r?"("+t+")":t)},s.prototype.format=function(e){this.simplifyUnitListLazy();var n,t=!1;for(n in void 0!==this.value&&null!==this.value&&this.value.isComplex&&(t=Math.abs(this.value.re)<1e-14,Math.abs(this.value.im)),this.units)this.units[n].unit&&("VA"===this.units[n].unit.name&&t?this.units[n].unit=L.VAR:"VAR"!==this.units[n].unit.name||t||(this.units[n].unit=L.VA));1!==this.units.length||this.fixPrefix||Math.abs(this.units[0].power-Math.round(this.units[0].power))<1e-14&&(this.units[0].prefix=this._bestPrefix());var i=this._denormalize(this.value),i=null!==this.value?A(i,e||{}):"",e=this.formatUnits();return this.value&&this.value.isComplex&&(i="("+i+")"),0<e.length&&0<i.length&&(i+=" "),i+e},{NONE:{"":{name:"",value:1,scientific:!0}},SHORT:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:10,scientific:!(s.prototype._bestPrefix=function(){if(1!==this.units.length)throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");if(1e-14<=Math.abs(this.units[0].power-Math.round(this.units[0].power)))throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");var e=N(this.value),t=N(this.units[0].unit.value),r=this.units[0].prefix;if(0!==e){var o,s,u,n=this.units[0].power,i=Math.abs(Math.log(e/Math.pow(r.value*t,n))/Math.LN10-1.2),a=this.units[0].unit.prefixes;for(o in a)a.hasOwnProperty(o)&&(s=a[o]).scientific&&((u=Math.abs(Math.log(e/Math.pow(s.value*t,n))/Math.LN10-1.2))<i||u===i&&s.name.length<r.name.length)&&(r=s,i=u)}return r})},h:{name:"h",value:100,scientific:!1},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0},d:{name:"d",value:.1,scientific:!1},c:{name:"c",value:.01,scientific:!1},m:{name:"m",value:.001,scientific:!0},u:{name:"u",value:1e-6,scientific:!0},n:{name:"n",value:1e-9,scientific:!0},p:{name:"p",value:1e-12,scientific:!0},f:{name:"f",value:1e-15,scientific:!0},a:{name:"a",value:1e-18,scientific:!0},z:{name:"z",value:1e-21,scientific:!0},y:{name:"y",value:1e-24,scientific:!0}},LONG:{"":{name:"",value:1,scientific:!0},deca:{name:"deca",value:10,scientific:!1},hecto:{name:"hecto",value:100,scientific:!1},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0},deci:{name:"deci",value:.1,scientific:!1},centi:{name:"centi",value:.01,scientific:!1},milli:{name:"milli",value:.001,scientific:!0},micro:{name:"micro",value:1e-6,scientific:!0},nano:{name:"nano",value:1e-9,scientific:!0},pico:{name:"pico",value:1e-12,scientific:!0},femto:{name:"femto",value:1e-15,scientific:!0},atto:{name:"atto",value:1e-18,scientific:!0},zepto:{name:"zepto",value:1e-21,scientific:!0},yocto:{name:"yocto",value:1e-24,scientific:!0}},SQUARED:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:100,scientific:!1},h:{name:"h",value:1e4,scientific:!1},k:{name:"k",value:1e6,scientific:!0},M:{name:"M",value:1e12,scientific:!0},G:{name:"G",value:1e18,scientific:!0},T:{name:"T",value:1e24,scientific:!0},P:{name:"P",value:1e30,scientific:!0},E:{name:"E",value:1e36,scientific:!0},Z:{name:"Z",value:1e42,scientific:!0},Y:{name:"Y",value:1e48,scientific:!0},d:{name:"d",value:.01,scientific:!1},c:{name:"c",value:1e-4,scientific:!1},m:{name:"m",value:1e-6,scientific:!0},u:{name:"u",value:1e-12,scientific:!0},n:{name:"n",value:1e-18,scientific:!0},p:{name:"p",value:1e-24,scientific:!0},f:{name:"f",value:1e-30,scientific:!0},a:{name:"a",value:1e-36,scientific:!0},z:{name:"z",value:1e-42,scientific:!0},y:{name:"y",value:1e-48,scientific:!0}},CUBIC:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:1e3,scientific:!1},h:{name:"h",value:1e6,scientific:!1},k:{name:"k",value:1e9,scientific:!0},M:{name:"M",value:1e18,scientific:!0},G:{name:"G",value:1e27,scientific:!0},T:{name:"T",value:1e36,scientific:!0},P:{name:"P",value:1e45,scientific:!0},E:{name:"E",value:1e54,scientific:!0},Z:{name:"Z",value:1e63,scientific:!0},Y:{name:"Y",value:1e72,scientific:!0},d:{name:"d",value:.001,scientific:!1},c:{name:"c",value:1e-6,scientific:!1},m:{name:"m",value:1e-9,scientific:!0},u:{name:"u",value:1e-18,scientific:!0},n:{name:"n",value:1e-27,scientific:!0},p:{name:"p",value:1e-36,scientific:!0},f:{name:"f",value:1e-45,scientific:!0},a:{name:"a",value:1e-54,scientific:!0},z:{name:"z",value:1e-63,scientific:!0},y:{name:"y",value:1e-72,scientific:!0}},BINARY_SHORT:{"":{name:"",value:1,scientific:!0},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0},Ki:{name:"Ki",value:1024,scientific:!0},Mi:{name:"Mi",value:Math.pow(1024,2),scientific:!0},Gi:{name:"Gi",value:Math.pow(1024,3),scientific:!0},Ti:{name:"Ti",value:Math.pow(1024,4),scientific:!0},Pi:{name:"Pi",value:Math.pow(1024,5),scientific:!0},Ei:{name:"Ei",value:Math.pow(1024,6),scientific:!0},Zi:{name:"Zi",value:Math.pow(1024,7),scientific:!0},Yi:{name:"Yi",value:Math.pow(1024,8),scientific:!0}},BINARY_LONG:{"":{name:"",value:1,scientific:!0},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0},kibi:{name:"kibi",value:1024,scientific:!0},mebi:{name:"mebi",value:Math.pow(1024,2),scientific:!0},gibi:{name:"gibi",value:Math.pow(1024,3),scientific:!0},tebi:{name:"tebi",value:Math.pow(1024,4),scientific:!0},pebi:{name:"pebi",value:Math.pow(1024,5),scientific:!0},exi:{name:"exi",value:Math.pow(1024,6),scientific:!0},zebi:{name:"zebi",value:Math.pow(1024,7),scientific:!0},yobi:{name:"yobi",value:Math.pow(1024,8),scientific:!0}},BTU:{"":{name:"",value:1,scientific:!0},MM:{name:"MM",value:1e6,scientific:!0}}});for(k in B.SHORTLONG={},B.SHORT)B.SHORT.hasOwnProperty(k)&&(B.SHORTLONG[k]=B.SHORT[k]);for(k in B.LONG)B.LONG.hasOwnProperty(k)&&(B.SHORTLONG[k]=B.LONG[k]);var I={name:"",value:1,scientific:!0},R=["MASS","LENGTH","TIME","CURRENT","TEMPERATURE","LUMINOUS_INTENSITY","AMOUNT_OF_SUBSTANCE","ANGLE","BIT"],P={NONE:{dimensions:[0,0,0,0,0,0,0,0,0]},MASS:{dimensions:[1,0,0,0,0,0,0,0,0]},LENGTH:{dimensions:[0,1,0,0,0,0,0,0,0]},TIME:{dimensions:[0,0,1,0,0,0,0,0,0]},CURRENT:{dimensions:[0,0,0,1,0,0,0,0,0]},TEMPERATURE:{dimensions:[0,0,0,0,1,0,0,0,0]},LUMINOUS_INTENSITY:{dimensions:[0,0,0,0,0,1,0,0,0]},AMOUNT_OF_SUBSTANCE:{dimensions:[0,0,0,0,0,0,1,0,0]},FORCE:{dimensions:[1,1,-2,0,0,0,0,0,0]},SURFACE:{dimensions:[0,2,0,0,0,0,0,0,0]},VOLUME:{dimensions:[0,3,0,0,0,0,0,0,0]},ENERGY:{dimensions:[1,2,-2,0,0,0,0,0,0]},POWER:{dimensions:[1,2,-3,0,0,0,0,0,0]},PRESSURE:{dimensions:[1,-1,-2,0,0,0,0,0,0]},ELECTRIC_CHARGE:{dimensions:[0,0,1,1,0,0,0,0,0]},ELECTRIC_CAPACITANCE:{dimensions:[-1,-2,4,2,0,0,0,0,0]},ELECTRIC_POTENTIAL:{dimensions:[1,2,-3,-1,0,0,0,0,0]},ELECTRIC_RESISTANCE:{dimensions:[1,2,-3,-2,0,0,0,0,0]},ELECTRIC_INDUCTANCE:{dimensions:[1,2,-2,-2,0,0,0,0,0]},ELECTRIC_CONDUCTANCE:{dimensions:[-1,-2,3,2,0,0,0,0,0]},MAGNETIC_FLUX:{dimensions:[1,2,-2,-1,0,0,0,0,0]},MAGNETIC_FLUX_DENSITY:{dimensions:[1,0,-2,-1,0,0,0,0,0]},FREQUENCY:{dimensions:[0,0,-1,0,0,0,0,0,0]},ANGLE:{dimensions:[0,0,0,0,0,0,0,1,0]},BIT:{dimensions:[0,0,0,0,0,0,0,0,1]}};for(k in P)P[k].key=k;var k,G,j,H,q={name:"",base:{},value:1,offset:0,dimensions:[0,0,0,0,0,0,0,0,0]},L={meter:{name:"meter",base:P.LENGTH,prefixes:B.LONG,value:1,offset:0},inch:{name:"inch",base:P.LENGTH,prefixes:B.NONE,value:.0254,offset:0},foot:{name:"foot",base:P.LENGTH,prefixes:B.NONE,value:.3048,offset:0},yard:{name:"yard",base:P.LENGTH,prefixes:B.NONE,value:.9144,offset:0},mile:{name:"mile",base:P.LENGTH,prefixes:B.NONE,value:1609.344,offset:0},link:{name:"link",base:P.LENGTH,prefixes:B.NONE,value:.201168,offset:0},rod:{name:"rod",base:P.LENGTH,prefixes:B.NONE,value:5.02921,offset:0},chain:{name:"chain",base:P.LENGTH,prefixes:B.NONE,value:20.1168,offset:0},angstrom:{name:"angstrom",base:P.LENGTH,prefixes:B.NONE,value:1e-10,offset:0},m:{name:"m",base:P.LENGTH,prefixes:B.SHORT,value:1,offset:0},in:{name:"in",base:P.LENGTH,prefixes:B.NONE,value:.0254,offset:0},ft:{name:"ft",base:P.LENGTH,prefixes:B.NONE,value:.3048,offset:0},yd:{name:"yd",base:P.LENGTH,prefixes:B.NONE,value:.9144,offset:0},mi:{name:"mi",base:P.LENGTH,prefixes:B.NONE,value:1609.344,offset:0},li:{name:"li",base:P.LENGTH,prefixes:B.NONE,value:.201168,offset:0},rd:{name:"rd",base:P.LENGTH,prefixes:B.NONE,value:5.02921,offset:0},ch:{name:"ch",base:P.LENGTH,prefixes:B.NONE,value:20.1168,offset:0},mil:{name:"mil",base:P.LENGTH,prefixes:B.NONE,value:254e-7,offset:0},m2:{name:"m2",base:P.SURFACE,prefixes:B.SQUARED,value:1,offset:0},sqin:{name:"sqin",base:P.SURFACE,prefixes:B.NONE,value:64516e-8,offset:0},sqft:{name:"sqft",base:P.SURFACE,prefixes:B.NONE,value:.09290304,offset:0},sqyd:{name:"sqyd",base:P.SURFACE,prefixes:B.NONE,value:.83612736,offset:0},sqmi:{name:"sqmi",base:P.SURFACE,prefixes:B.NONE,value:2589988.110336,offset:0},sqrd:{name:"sqrd",base:P.SURFACE,prefixes:B.NONE,value:25.29295,offset:0},sqch:{name:"sqch",base:P.SURFACE,prefixes:B.NONE,value:404.6873,offset:0},sqmil:{name:"sqmil",base:P.SURFACE,prefixes:B.NONE,value:6.4516e-10,offset:0},m3:{name:"m3",base:P.VOLUME,prefixes:B.CUBIC,value:1,offset:0},L:{name:"L",base:P.VOLUME,prefixes:B.SHORT,value:.001,offset:0},l:{name:"l",base:P.VOLUME,prefixes:B.SHORT,value:.001,offset:0},litre:{name:"litre",base:P.VOLUME,prefixes:B.LONG,value:.001,offset:0},cuin:{name:"cuin",base:P.VOLUME,prefixes:B.NONE,value:16387064e-12,offset:0},cuft:{name:"cuft",base:P.VOLUME,prefixes:B.NONE,value:.028316846592,offset:0},cuyd:{name:"cuyd",base:P.VOLUME,prefixes:B.NONE,value:.764554857984,offset:0},teaspoon:{name:"teaspoon",base:P.VOLUME,prefixes:B.NONE,value:5e-6,offset:0},tablespoon:{name:"tablespoon",base:P.VOLUME,prefixes:B.NONE,value:15e-6,offset:0},drop:{name:"drop",base:P.VOLUME,prefixes:B.NONE,value:5e-8,offset:0},gtt:{name:"gtt",base:P.VOLUME,prefixes:B.NONE,value:5e-8,offset:0},minim:{name:"minim",base:P.VOLUME,prefixes:B.NONE,value:6.161152e-8,offset:0},fluiddram:{name:"fluiddram",base:P.VOLUME,prefixes:B.NONE,value:36966911e-13,offset:0},fluidounce:{name:"fluidounce",base:P.VOLUME,prefixes:B.NONE,value:2957353e-11,offset:0},gill:{name:"gill",base:P.VOLUME,prefixes:B.NONE,value:.0001182941,offset:0},cc:{name:"cc",base:P.VOLUME,prefixes:B.NONE,value:1e-6,offset:0},cup:{name:"cup",base:P.VOLUME,prefixes:B.NONE,value:.0002365882,offset:0},pint:{name:"pint",base:P.VOLUME,prefixes:B.NONE,value:.0004731765,offset:0},quart:{name:"quart",base:P.VOLUME,prefixes:B.NONE,value:.0009463529,offset:0},gallon:{name:"gallon",base:P.VOLUME,prefixes:B.NONE,value:.003785412,offset:0},beerbarrel:{name:"beerbarrel",base:P.VOLUME,prefixes:B.NONE,value:.1173478,offset:0},oilbarrel:{name:"oilbarrel",base:P.VOLUME,prefixes:B.NONE,value:.1589873,offset:0},hogshead:{name:"hogshead",base:P.VOLUME,prefixes:B.NONE,value:.238481,offset:0},fldr:{name:"fldr",base:P.VOLUME,prefixes:B.NONE,value:36966911e-13,offset:0},floz:{name:"floz",base:P.VOLUME,prefixes:B.NONE,value:2957353e-11,offset:0},gi:{name:"gi",base:P.VOLUME,prefixes:B.NONE,value:.0001182941,offset:0},cp:{name:"cp",base:P.VOLUME,prefixes:B.NONE,value:.0002365882,offset:0},pt:{name:"pt",base:P.VOLUME,prefixes:B.NONE,value:.0004731765,offset:0},qt:{name:"qt",base:P.VOLUME,prefixes:B.NONE,value:.0009463529,offset:0},gal:{name:"gal",base:P.VOLUME,prefixes:B.NONE,value:.003785412,offset:0},bbl:{name:"bbl",base:P.VOLUME,prefixes:B.NONE,value:.1173478,offset:0},obl:{name:"obl",base:P.VOLUME,prefixes:B.NONE,value:.1589873,offset:0},g:{name:"g",base:P.MASS,prefixes:B.SHORT,value:.001,offset:0},gram:{name:"gram",base:P.MASS,prefixes:B.LONG,value:.001,offset:0},ton:{name:"ton",base:P.MASS,prefixes:B.SHORT,value:907.18474,offset:0},tonne:{name:"tonne",base:P.MASS,prefixes:B.SHORT,value:1e3,offset:0},grain:{name:"grain",base:P.MASS,prefixes:B.NONE,value:6479891e-11,offset:0},dram:{name:"dram",base:P.MASS,prefixes:B.NONE,value:.0017718451953125,offset:0},ounce:{name:"ounce",base:P.MASS,prefixes:B.NONE,value:.028349523125,offset:0},poundmass:{name:"poundmass",base:P.MASS,prefixes:B.NONE,value:.45359237,offset:0},hundredweight:{name:"hundredweight",base:P.MASS,prefixes:B.NONE,value:45.359237,offset:0},stick:{name:"stick",base:P.MASS,prefixes:B.NONE,value:.115,offset:0},stone:{name:"stone",base:P.MASS,prefixes:B.NONE,value:6.35029318,offset:0},gr:{name:"gr",base:P.MASS,prefixes:B.NONE,value:6479891e-11,offset:0},dr:{name:"dr",base:P.MASS,prefixes:B.NONE,value:.0017718451953125,offset:0},oz:{name:"oz",base:P.MASS,prefixes:B.NONE,value:.028349523125,offset:0},lbm:{name:"lbm",base:P.MASS,prefixes:B.NONE,value:.45359237,offset:0},cwt:{name:"cwt",base:P.MASS,prefixes:B.NONE,value:45.359237,offset:0},s:{name:"s",base:P.TIME,prefixes:B.SHORT,value:1,offset:0},min:{name:"min",base:P.TIME,prefixes:B.NONE,value:60,offset:0},h:{name:"h",base:P.TIME,prefixes:B.NONE,value:3600,offset:0},second:{name:"second",base:P.TIME,prefixes:B.LONG,value:1,offset:0},sec:{name:"sec",base:P.TIME,prefixes:B.LONG,value:1,offset:0},minute:{name:"minute",base:P.TIME,prefixes:B.NONE,value:60,offset:0},hour:{name:"hour",base:P.TIME,prefixes:B.NONE,value:3600,offset:0},day:{name:"day",base:P.TIME,prefixes:B.NONE,value:86400,offset:0},week:{name:"week",base:P.TIME,prefixes:B.NONE,value:604800,offset:0},month:{name:"month",base:P.TIME,prefixes:B.NONE,value:2629800,offset:0},year:{name:"year",base:P.TIME,prefixes:B.NONE,value:31557600,offset:0},decade:{name:"year",base:P.TIME,prefixes:B.NONE,value:315576e3,offset:0},century:{name:"century",base:P.TIME,prefixes:B.NONE,value:315576e4,offset:0},millennium:{name:"millennium",base:P.TIME,prefixes:B.NONE,value:315576e5,offset:0},hertz:{name:"Hertz",base:P.FREQUENCY,prefixes:B.LONG,value:1,offset:0,reciprocal:!0},Hz:{name:"Hz",base:P.FREQUENCY,prefixes:B.SHORT,value:1,offset:0,reciprocal:!0},rad:{name:"rad",base:P.ANGLE,prefixes:B.NONE,value:1,offset:0},deg:{name:"deg",base:P.ANGLE,prefixes:B.NONE,value:.017453292519943295,offset:0},grad:{name:"grad",base:P.ANGLE,prefixes:B.NONE,value:.015707963267948967,offset:0},cycle:{name:"cycle",base:P.ANGLE,prefixes:B.NONE,value:6.283185307179586,offset:0},arcsec:{name:"arcsec",base:P.ANGLE,prefixes:B.NONE,value:484813681109536e-20,offset:0},arcmin:{name:"arcmin",base:P.ANGLE,prefixes:B.NONE,value:.0002908882086657216,offset:0},A:{name:"A",base:P.CURRENT,prefixes:B.SHORT,value:1,offset:0},ampere:{name:"ampere",base:P.CURRENT,prefixes:B.LONG,value:1,offset:0},K:{name:"K",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:0},degC:{name:"degC",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:273.15},degF:{name:"degF",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:459.67},degR:{name:"degR",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:0},kelvin:{name:"kelvin",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:0},celsius:{name:"celsius",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:273.15},fahrenheit:{name:"fahrenheit",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:459.67},rankine:{name:"rankine",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:0},mol:{name:"mol",base:P.AMOUNT_OF_SUBSTANCE,prefixes:B.NONE,value:1,offset:0},mole:{name:"mole",base:P.AMOUNT_OF_SUBSTANCE,prefixes:B.NONE,value:1,offset:0},cd:{name:"cd",base:P.LUMINOUS_INTENSITY,prefixes:B.NONE,value:1,offset:0},candela:{name:"candela",base:P.LUMINOUS_INTENSITY,prefixes:B.NONE,value:1,offset:0},N:{name:"N",base:P.FORCE,prefixes:B.SHORT,value:1,offset:0},newton:{name:"newton",base:P.FORCE,prefixes:B.LONG,value:1,offset:0},dyn:{name:"dyn",base:P.FORCE,prefixes:B.SHORT,value:1e-5,offset:0},dyne:{name:"dyne",base:P.FORCE,prefixes:B.LONG,value:1e-5,offset:0},lbf:{name:"lbf",base:P.FORCE,prefixes:B.NONE,value:4.4482216152605,offset:0},poundforce:{name:"poundforce",base:P.FORCE,prefixes:B.NONE,value:4.4482216152605,offset:0},J:{name:"J",base:P.ENERGY,prefixes:B.SHORT,value:1,offset:0},joule:{name:"joule",base:P.ENERGY,prefixes:B.SHORT,value:1,offset:0},erg:{name:"erg",base:P.ENERGY,prefixes:B.NONE,value:1e-5,offset:0},Wh:{name:"Wh",base:P.ENERGY,prefixes:B.SHORT,value:3600,offset:0},BTU:{name:"BTU",base:P.ENERGY,prefixes:B.BTU,value:1055.05585262,offset:0},eV:{name:"eV",base:P.ENERGY,prefixes:B.SHORT,value:1602176565e-28,offset:0},electronvolt:{name:"electronvolt",base:P.ENERGY,prefixes:B.LONG,value:1602176565e-28,offset:0},W:{name:"W",base:P.POWER,prefixes:B.SHORT,value:1,offset:0},watt:{name:"W",base:P.POWER,prefixes:B.LONG,value:1,offset:0},hp:{name:"hp",base:P.POWER,prefixes:B.NONE,value:745.6998715386,offset:0},VAR:{name:"VAR",base:P.POWER,prefixes:B.SHORT,value:new n(0,1),offset:0},VA:{name:"VA",base:P.POWER,prefixes:B.SHORT,value:1,offset:0},Pa:{name:"Pa",base:P.PRESSURE,prefixes:B.SHORT,value:1,offset:0},psi:{name:"psi",base:P.PRESSURE,prefixes:B.NONE,value:6894.75729276459,offset:0},atm:{name:"atm",base:P.PRESSURE,prefixes:B.NONE,value:101325,offset:0},coulomb:{name:"coulomb",base:P.ELECTRIC_CHARGE,prefixes:B.LONG,value:1,offset:0},C:{name:"C",base:P.ELECTRIC_CHARGE,prefixes:B.SHORT,value:1,offset:0},farad:{name:"farad",base:P.ELECTRIC_CAPACITANCE,prefixes:B.LONG,value:1,offset:0},F:{name:"F",base:P.ELECTRIC_CAPACITANCE,prefixes:B.SHORT,value:1,offset:0},volt:{name:"volt",base:P.ELECTRIC_POTENTIAL,prefixes:B.LONG,value:1,offset:0},V:{name:"V",base:P.ELECTRIC_POTENTIAL,prefixes:B.SHORT,value:1,offset:0},ohm:{name:"ohm",base:P.ELECTRIC_RESISTANCE,prefixes:B.SHORTLONG,value:1,offset:0},henry:{name:"henry",base:P.ELECTRIC_INDUCTANCE,prefixes:B.LONG,value:1,offset:0},H:{name:"H",base:P.ELECTRIC_INDUCTANCE,prefixes:B.SHORT,value:1,offset:0},siemens:{name:"siemens",base:P.ELECTRIC_CONDUCTANCE,prefixes:B.LONG,value:1,offset:0},S:{name:"S",base:P.ELECTRIC_CONDUCTANCE,prefixes:B.SHORT,value:1,offset:0},weber:{name:"weber",base:P.MAGNETIC_FLUX,prefixes:B.LONG,value:1,offset:0},Wb:{name:"Wb",base:P.MAGNETIC_FLUX,prefixes:B.SHORT,value:1,offset:0},tesla:{name:"tesla",base:P.MAGNETIC_FLUX_DENSITY,prefixes:B.LONG,value:1,offset:0},T:{name:"T",base:P.MAGNETIC_FLUX_DENSITY,prefixes:B.SHORT,value:1,offset:0},b:{name:"b",base:P.BIT,prefixes:B.BINARY_SHORT,value:1,offset:0},bits:{name:"bits",base:P.BIT,prefixes:B.BINARY_LONG,value:1,offset:0},B:{name:"B",base:P.BIT,prefixes:B.BINARY_SHORT,value:8,offset:0},bytes:{name:"bytes",base:P.BIT,prefixes:B.BINARY_LONG,value:8,offset:0}},F={meters:"meter",inches:"inch",feet:"foot",yards:"yard",miles:"mile",links:"link",rods:"rod",chains:"chain",angstroms:"angstrom",lt:"l",litres:"litre",liter:"litre",liters:"litre",teaspoons:"teaspoon",tablespoons:"tablespoon",minims:"minim",fluiddrams:"fluiddram",fluidounces:"fluidounce",gills:"gill",cups:"cup",pints:"pint",quarts:"quart",gallons:"gallon",beerbarrels:"beerbarrel",oilbarrels:"oilbarrel",hogsheads:"hogshead",gtts:"gtt",grams:"gram",tons:"ton",tonnes:"tonne",grains:"grain",drams:"dram",ounces:"ounce",poundmasses:"poundmass",hundredweights:"hundredweight",sticks:"stick",lb:"lbm",lbs:"lbm",seconds:"second",minutes:"minute",hours:"hour",days:"day",hertz:"hertz",radians:"rad",degree:"deg",degrees:"deg",gradian:"grad",gradians:"grad",cycles:"cycle",arcsecond:"arcsec",arcseconds:"arcsec",arcminute:"arcmin",arcminutes:"arcmin",BTUs:"BTU",watts:"watt",joules:"joule",amperes:"ampere",coulombs:"coulomb",volts:"volt",ohms:"ohm",farads:"farad",webers:"weber",teslas:"tesla",electronvolts:"electronvolt",moles:"mole"},D={si:{NONE:{unit:q,prefix:B.NONE[""]},LENGTH:{unit:L.m,prefix:B.SHORT[""]},MASS:{unit:L.g,prefix:B.SHORT.k},TIME:{unit:L.s,prefix:B.SHORT[""]},CURRENT:{unit:L.A,prefix:B.SHORT[""]},TEMPERATURE:{unit:L.K,prefix:B.SHORT[""]},LUMINOUS_INTENSITY:{unit:L.cd,prefix:B.SHORT[""]},AMOUNT_OF_SUBSTANCE:{unit:L.mol,prefix:B.SHORT[""]},ANGLE:{unit:L.rad,prefix:B.SHORT[""]},BIT:{unit:L.bit,prefix:B.SHORT[""]},FORCE:{unit:L.N,prefix:B.SHORT[""]},ENERGY:{unit:L.J,prefix:B.SHORT[""]},POWER:{unit:L.W,prefix:B.SHORT[""]},PRESSURE:{unit:L.Pa,prefix:B.SHORT[""]},ELECTRIC_CHARGE:{unit:L.C,prefix:B.SHORT[""]},ELECTRIC_CAPACITANCE:{unit:L.F,prefix:B.SHORT[""]},ELECTRIC_POTENTIAL:{unit:L.V,prefix:B.SHORT[""]},ELECTRIC_RESISTANCE:{unit:L.ohm,prefix:B.SHORT[""]},ELECTRIC_INDUCTANCE:{unit:L.H,prefix:B.SHORT[""]},ELECTRIC_CONDUCTANCE:{unit:L.S,prefix:B.SHORT[""]},MAGNETIC_FLUX:{unit:L.Wb,prefix:B.SHORT[""]},MAGNETIC_FLUX_DENSITY:{unit:L.T,prefix:B.SHORT[""]},FREQUENCY:{unit:L.Hz,prefix:B.SHORT[""]}}},$=(D.cgs=JSON.parse(JSON.stringify(D.si)),D.cgs.LENGTH={unit:L.m,prefix:B.SHORT.c},D.cgs.MASS={unit:L.g,prefix:B.SHORT[""]},D.cgs.FORCE={unit:L.dyn,prefix:B.SHORT[""]},D.cgs.ENERGY={unit:L.erg,prefix:B.NONE[""]},D.us=JSON.parse(JSON.stringify(D.si)),D.us.LENGTH={unit:L.ft,prefix:B.NONE[""]},D.us.MASS={unit:L.lbm,prefix:B.NONE[""]},D.us.TEMPERATURE={unit:L.degF,prefix:B.NONE[""]},D.us.FORCE={unit:L.lbf,prefix:B.NONE[""]},D.us.ENERGY={unit:L.BTU,prefix:B.BTU[""]},D.us.POWER={unit:L.hp,prefix:B.NONE[""]},D.us.PRESSURE={unit:L.psi,prefix:B.NONE[""]},D.auto=JSON.parse(JSON.stringify(D.si)),D.auto);for(k in s.setUnitSystem=function(e){if(!D.hasOwnProperty(e))throw new Error("Unit system "+e+" does not exist. Choices are: "+Object.keys(D).join(", "));$=D[e]},s.getUnitSystem=function(){for(var e in D)if(D[e]===$)return e},s.typeConverters={BigNumber:function(t){return new e.BigNumber(t+"")},Fraction:function(t){return new e.Fraction(t)},Complex:function(e){return e},number:function(e){return e}},s._getNumberConverter=function(e){if(s.typeConverters[e])return s.typeConverters[e];throw new TypeError('Unsupported type "'+e+'"')},L)(j=L[k]).dimensions=j.base.dimensions;for(G in F)F.hasOwnProperty(G)&&(j=L[F[G]],(H=Object.create(j)).name=G,L[G]=H);return s.PREFIXES=B,s.BASE_UNITS=P,s.UNITS=L,s.UNIT_SYSTEMS=D,s}},function(e,t,r){"use strict";var i=r(41);t.name="subtract",t.factory=function(e,t,n,a){var o=r(29),s=n(r(50)),u=n(r(51)),c=n(r(75)),f=n(r(52)),l=n(r(59)),p=n(r(76)),m=n(r(54)),h=n(r(55)),g=n(r(56)),v=a("subtract",{"number, number":function(e,t){return e-t},"Complex, Complex":function(t,r){return new e.Complex(t.re-r.re,t.im-r.im)},"BigNumber, BigNumber":function(e,t){return e.minus(t)},"Fraction, Fraction":function(e,t){return e.sub(t)},"Unit, Unit":function(e,t){if(null==e.value)throw new Error("Parameter x contains a unit with undefined value");if(null==t.value)throw new Error("Parameter y contains a unit with undefined value");if(e.equalBase(t))return(e=e.clone()).value=v(e.value,t.value),e.fixPrefix=!1,e;throw new Error("Units do not match")},"Matrix, Matrix":function(e,t){var r=e.size(),n=t.size();if(r.length!==n.length)throw new i(r.length,n.length);return"sparse"===e.storage()?"sparse"===t.storage()?p(e,t,v):l(t,e,v,!0):"sparse"===t.storage()?f(e,t,v,!1):h(e,t,v)},"Array, Array":function(e,t){return v(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return v(s(e),t)},"Matrix, Array":function(e,t){return v(e,s(t))},"Matrix, any":function(e,t){e="sparse"===e.storage()?m(e,c(t),u):g(e,t,v);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?m:g)(t,e,v,!0);return t},"Array, any":function(e,t){return g(s(e),t,v,!1).valueOf()},"any, Array":function(e,t){return g(s(t),e,v,!0).valueOf()}});return v.toTex="\\left(${args[0]}"+o.operators.subtract+"${args[1]}\\right)",v}},function(e,t,r){"use strict";var i=r(19);t.name="unaryMinus",t.factory=function(e,t,n,a){var o=r(29),s=a("unaryMinus",{number:function(e){return-e},Complex:function(t){return new e.Complex(-t.re,-t.im)},BigNumber:function(e){return e.neg()},Fraction:function(e){return e.neg()},Unit:function(e){var t=e.clone();return t.value=s(e.value),t},"Array | Matrix":function(e){return i(e,s,!0)}});return s.toTex=o.operators.unaryMinus+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm05",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var O=n&&p?[]:void 0,T=[],C=[],f=new s({values:O,index:T,ptr:C,size:[g,x],datatype:d}),z=O?[]:void 0,B=O?[]:void 0,k=[],I=[],M=0;M<x;M++){C[M]=T.length;for(var R=M+1,A=c[M],_=c[M+1];A<_;A++)E=u[A],T.push(E),k[E]=R,z&&(z[E]=n[A]);for(A=h[M],_=h[M+1];A<_;A++)k[E=m[A]]!==R&&T.push(E),I[E]=R,B&&(B[E]=p[A]);if(O)for(A=C[M];A<T.length;){var E,P=k[E=T[A]],U=I[E];P!==R&&U!==R||(b(P=N(P===R?z[E]:w,U===R?B[E]:w),w)?T.splice(A,1):(O.push(P),A++))}}return C[x]=T.length,f}}},function(e,t){"use strict";t.factory=function(e,t,r,n){var i=n("multiplyScalar",{"number, number":function(e,t){return e*t},"Complex, Complex":function(t,r){return new e.Complex(t.re*r.re-t.im*r.im,t.re*r.im+t.im*r.re)},"BigNumber, BigNumber":function(e,t){return e.times(t)},"Fraction, Fraction":function(e,t){return e.mul(t)},"number | Fraction | BigNumber | Complex, Unit":function(e,t){t=t.clone();return t.value=null===t.value?t._normalize(e):i(t.value,e),t},"Unit, number | Fraction | BigNumber | Complex":function(e,t){e=e.clone();return e.value=null===e.value?e._normalize(t):i(e.value,t),e},"Unit, Unit":function(e,t){return e.multiply(t)}});return i}},function(e,t,r){"use strict";t.factory=function(e,t,n,i){var o=n(r(77)),s=i("divide",{"number, number":function(e,t){return e/t},"Complex, Complex":function(t,r){var n=r.re*r.re+r.im*r.im;return 0!=n?new e.Complex((t.re*r.re+t.im*r.im)/n,(t.im*r.re-t.re*r.im)/n):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?t.im/0:0)},"BigNumber, BigNumber":function(e,t){return e.div(t)},"Fraction, Fraction":function(e,t){return e.div(t)},"Unit, number | Fraction | BigNumber":function(e,t){e=e.clone();return e.value=s(null===e.value?e._normalize(1):e.value,t),e},"number | Fraction | BigNumber, Unit":function(e,t){t=t.pow(-1);return t.value=o(null===t.value?t._normalize(1):t.value,e),t},"Unit, Unit":function(e,t){return e.divide(t)}});return s}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).size;t.name="pow",t.factory=function(e,t,n,o){function s(r,n){return i(n)||0<=r||t.predictable?Math.pow(r,n):u(new e.Complex(r,0),new e.Complex(n,0))}function u(e,t){return p(g(h(e),t))}function c(e,t){if(!i(t)||t<0)throw new TypeError("For A^b, b must be a positive integer (value is "+t+")");var r=a(e);if(2!=r.length)throw new Error("For A^b, A must be 2 dimensional (A has "+r.length+" dimensions)");if(r[0]!=r[1])throw new Error("For A^b, A must be square (size is "+r[0]+"x"+r[1]+")");for(var n=m(r[0]).valueOf(),o=e;1<=t;)1==(1&t)&&(n=g(o,n)),t>>=1,o=g(o,o);return n}function f(e,t){return v(c(e.valueOf(),t))}var l=r(29),p=n(r(80)),m=n(r(81)),h=n(r(82)),g=n(r(83)),v=n(r(50));return(n=o("pow",{"number, number":s,"Complex, Complex":u,"BigNumber, BigNumber":function(r,n){return n.isInteger()||0<=r||t.predictable?r.pow(n):u(new e.Complex(r.toNumber(),0),new e.Complex(n.toNumber(),0))},"Fraction, Fraction":function(e,r){if(1===r.d)return e.pow(r);if(t.predictable)throw new Error("Function pow does not support non-integer exponents for fractions.");return s(e.valueOf(),r.valueOf())},"Array, number":c,"Array, BigNumber":function(e,t){return c(e,t.toNumber())},"Matrix, number":f,"Matrix, BigNumber":function(e,t){return f(e,t.toNumber())},"Unit, number":function(e,t){return e.pow(t)}})).toTex="\\left(${args[0]}\\right)"+l.operators.pow+"{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(19);t.name="exp",t.factory=function(e,t,r,n){var a=n("exp",{number:Math.exp,Complex:function(t){var r=Math.exp(t.re);return new e.Complex(r*Math.cos(t.im),r*Math.sin(t.im))},BigNumber:function(e){return e.exp()},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\exp\\left(${args[0]}\\right)",a}},function(e,t,r){"use strict";var i=r(39),a=r(6).isInteger;t.name="eye",t.factory=function(e,t,n,o){function s(e,t){switch(e.length){case 0:return t?c(t):[];case 1:return u(e[0],e[0],t);case 2:return u(e[0],e[1],t);default:throw new Error("Vector containing two values expected")}}function u(t,r,n){var o=t&&!0===t.isBigNumber||r&&!0===r.isBigNumber?e.BigNumber:null;if(t&&!0===t.isBigNumber&&(t=t.toNumber()),r&&!0===r.isBigNumber&&(r=r.toNumber()),!a(t)||t<1)throw new Error("Parameters in function eye must be positive integers");if(!a(r)||r<1)throw new Error("Parameters in function eye must be positive integers");var s=o?new e.BigNumber(1):1,o=o?new o(0):0,c=[t,r];if(n)return e.Matrix.storage(n).diagonal(c,s,0,o);for(var l=i.resize([],c,o),p=t<r?t:r,m=0;m<p;m++)l[m][m]=s;return l}var c=n(r(50));return(n=o("eye",{"":function(){return"matrix"===t.matrix?c([]):[]},string:function(e){return c(e)},"number | BigNumber":function(e){return u(e,e,"matrix"===t.matrix?"default":void 0)},"number | BigNumber, string":function(e,t){return u(e,e,t)},"number | BigNumber, number | BigNumber":function(e,r){return u(e,r,"matrix"===t.matrix?"default":void 0)},"number | BigNumber, number | BigNumber, string":u,Array:function(e){return s(e)},"Array, string":s,Matrix:function(e){return s(e.valueOf(),e.storage())},"Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(19);t.name="log",t.factory=function(e,t,n,a){function s(t){return new e.Complex(Math.log(Math.sqrt(t.re*t.re+t.im*t.im)),Math.atan2(t.im,t.re))}var u=n(r(78)),c=a("log",{number:function(r){return 0<=r||t.predictable?Math.log(r):c(new e.Complex(r,0))},Complex:s,BigNumber:function(r){return!r.isNegative()||t.predictable?r.ln():s(new e.Complex(r.toNumber(),0))},"Array | Matrix":function(e){return i(e,c)},"any, any":function(e,t){return u(c(e),c(t))}});return c.toTex={1:"\\ln\\left(${args[0]}\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}\\right)"},c}},function(e,t,r){"use strict";var i=r(3).extend,a=r(39);t.name="multiply",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(51)),f=n(r(77)),l=n(r(47)),p=n(r(84)),m=n(r(56)),h=e.DenseMatrix,g=e.SparseMatrix,v=o("multiply",i({"Array, Array":function(e,t){d(a.size(e),a.size(t));e=v(u(e),u(t));return e&&!0===e.isMatrix?e.valueOf():e},"Matrix, Matrix":function(e,t){var r=e.size(),n=t.size();return d(r,n),1===r.length?1===n.length?y(e,t,r[0]):x(e,t):(1===n.length?w:N)(e,t)},"Matrix, Array":function(e,t){return v(e,u(t))},"Array, Matrix":function(e,t){return v(u(e,t.storage()),t)},"Matrix, any":function(e,t){var r;switch(e.storage()){case"sparse":r=p(e,t,f,!1);break;case"dense":r=m(e,t,f,!1)}return r},"any, Matrix":function(e,t){var r;switch(t.storage()){case"sparse":r=p(t,e,f,!0);break;case"dense":r=m(t,e,f,!0)}return r},"Array, any":function(e,t){return m(u(e),t,f,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,f,!0).valueOf()}},f.signatures)),d=function(e,t){switch(e.length){case 1:switch(t.length){case 1:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+e[0]+") must match Matrix rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;case 2:switch(t.length){case 1:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+e[1]+") must match Vector length ("+t[0]+")");break;case 2:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+e[1]+") must match Matrix B rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+e.length+" dimensions)")}},y=function(e,t,r){if(0===r)throw new Error("Cannot multiply two empty vectors");var i=e._data,e=e._datatype,s=t._data,t=t._datatype,l=c,p=f;e&&t&&e===t&&"string"==typeof e&&(l=o.find(c,[t=e,t]),p=o.find(f,[t,t]));for(var m=p(i[0],s[0]),h=1;h<r;h++)m=l(m,p(i[h],s[h]));return m},x=function(e,t){if("dense"===t.storage())return b(e,t);throw new Error("Not implemented")},b=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,u=t._size,t=t._datatype,p=i[0],m=u[1],g=c,v=f;e&&t&&e===t&&"string"==typeof e&&(g=o.find(c,[r=e,r]),v=o.find(f,[r,r]));for(var d=[],y=0;y<m;y++){for(var x=v(n[0],s[0][y]),b=1;b<p;b++)x=g(x,v(n[b],s[b][y]));d[y]=x}return 1===m?d[0]:new h({data:d,size:[m],datatype:r})},w=function(e,t){switch(e.storage()){case"dense":return E(e,t);case"sparse":return _(e,t)}},N=function(e,t){switch(e.storage()){case"dense":switch(t.storage()){case"dense":return M(e,t);case"sparse":return A(e,t)}break;case"sparse":switch(t.storage()){case"dense":return O(e,t);case"sparse":return T(e,t)}}},E=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,t=t._datatype,l=i[0],p=i[1],m=c,g=f;e&&t&&e===t&&"string"==typeof e&&(m=o.find(c,[r=e,r]),g=o.find(f,[r,r]));for(var v=[],d=0;d<l;d++){for(var y=n[d],x=g(y[0],s[0]),b=1;b<p;b++)x=m(x,g(y[b],s[b]));v[d]=x}return 1===l?v[0]:new h({data:v,size:[l],datatype:r})},M=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,u=t._size,t=t._datatype,p=i[0],m=i[1],g=u[1],v=c,d=f;e&&t&&e===t&&"string"==typeof e&&(v=o.find(c,[r=e,r]),d=o.find(f,[r,r]));for(var y=[],x=0;x<p;x++){var b=n[x];y[x]=[];for(var w=0;w<g;w++){for(var N=d(b[0],s[0][w]),E=1;E<m;E++)N=v(N,d(b[E],s[E][w]));y[x][w]=N}}return 1===p&&1===g?y[0][0]:new h({data:y,size:[p,g],datatype:r})},A=function(e,t){var r=e._data,n=e._size,e=e._datatype,a=t._values,s=t._index,u=t._ptr,p=t._size,t=t._datatype;if(!a)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var h,v=n[0],d=p[1],y=c,x=f,b=l,w=0;e&&t&&e===t&&"string"==typeof e&&(y=o.find(c,[h=e,h]),x=o.find(f,[h,h]),b=o.find(l,[h,h]),w=o.convert(0,h));for(var N=[],E=[],M=[],n=new g({values:N,index:E,ptr:M,size:[v,d],datatype:h}),_=0;_<d;_++){M[_]=E.length;var O=u[_],T=u[_+1];if(O<T)for(var C=0,S=0;S<v;S++){for(var z,B=S+1,k=O;k<T;k++){var I=s[k];C!==B?(z=x(r[S][I],a[k]),C=B):z=y(z,x(r[S][I],a[k]))}C!==B||b(z,w)||(E.push(S),N.push(z))}}return M[d]=E.length,1===v&&1===d?1===N.length?N[0]:0:n},_=function(e,t){var r=e._values,n=e._index,i=e._ptr,a=e._datatype;if(!r)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");for(var s,u=t._data,p=t._datatype,e=e._size[0],h=t._size[0],v=[],d=[],t=[],x=c,b=f,w=l,N=0,E=(a&&p&&a===p&&"string"==typeof a&&(x=o.find(c,[s=a,s]),b=o.find(f,[s,s]),w=o.find(l,[s,s]),N=o.convert(0,s)),[]),M=[],A=t[0]=0;A<h;A++){var _=u[A];if(!w(_,N))for(var O=i[A],T=i[A+1],C=O;C<T;C++){var S=n[C];M[S]?E[S]=x(E[S],b(_,r[C])):(M[S]=!0,d.push(S),E[S]=b(_,r[C]))}}for(var z=d.length,B=0;B<z;B++)v[B]=E[d[B]];return t[1]=d.length,1===e?1===v.length?v[0]:0:new g({values:v,index:d,ptr:t,size:[e,1],datatype:s})},O=function(e,t){var r=e._values,n=e._index,i=e._ptr,a=e._datatype;if(!r)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var s,u=t._data,p=t._datatype,e=e._size[0],h=t._size[0],v=t._size[1],d=c,y=f,x=l,b=0;a&&p&&a===p&&"string"==typeof a&&(d=o.find(c,[s=a,s]),y=o.find(f,[s,s]),x=o.find(l,[s,s]),b=o.convert(0,s));for(var w=[],N=[],E=[],t=new g({values:w,index:N,ptr:E,size:[e,v],datatype:s}),A=[],_=[],O=0;O<v;O++){E[O]=N.length;for(var T=O+1,C=0;C<h;C++){var S=u[C][O];if(!x(S,b))for(var z=i[C],B=i[C+1],k=z;k<B;k++){var I=n[k];_[I]!==T?(_[I]=T,N.push(I),A[I]=y(S,r[k])):A[I]=d(A[I],y(S,r[k]))}}for(var R=E[O],P=N.length,U=R;U<P;U++){var q=N[U];w[U]=A[q]}}return E[v]=N.length,1===e&&1===v?1===w.length?w[0]:0:t},T=function(e,t){var r,n=e._values,i=e._index,a=e._ptr,s=e._datatype,u=t._values,l=t._index,p=t._ptr,m=t._datatype,e=e._size[0],v=t._size[1],d=n&&u,y=c,x=f;s&&m&&s===m&&"string"==typeof s&&(y=o.find(c,[r=s,r]),x=o.find(f,[r,r]));for(var b,w,N,_,O,T=d?[]:void 0,C=[],S=[],t=new g({values:T,index:C,ptr:S,size:[e,v],datatype:r}),B=d?[]:void 0,k=[],I=0;I<v;I++){S[I]=C.length;for(var R=I+1,M=p[I],A=p[I+1],E=M;E<A;E++)if(O=l[E],d)for(w=a[O],N=a[O+1],b=w;b<N;b++)k[_=i[b]]!==R?(k[_]=R,C.push(_),B[_]=x(u[E],n[b])):B[_]=y(B[_],x(u[E],n[b]));else for(w=a[O],N=a[O+1],b=w;b<N;b++)k[_=i[b]]!==R&&(k[_]=R,C.push(_));if(d)for(var M=S[I],U=C.length,q=M;q<U;q++){var L=C[q];T[q]=B[L]}}return S[v]=C.length,1===e&&1===v&&d?1===T.length?T[0]:0:t};return v.toTex="\\left(${args[0]}"+s.operators.multiply+"${args[1]}\\right)",v}},function(e,t,r){"use strict";t.name="algorithm11",t.factory=function(e,t,n,i){var a=n(r(47)),o=e.SparseMatrix;return function(e,t,r,n){var s=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype;if(!s)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var p,m=f[0],h=f[1],g=a,v=0,d=r;"string"==typeof e&&(g=i.find(a,[p=e,p]),v=i.convert(0,p),t=i.convert(t,p),d=i.find(r,[p,p]));for(var y=[],x=[],b=[],f=new o({values:y,index:x,ptr:b,size:[m,h],datatype:p}),N=0;N<h;N++){b[N]=x.length;for(var E=c[N],M=c[N+1],A=E;A<M;A++){var _=u[A],O=n?d(t,s[A]):d(s[A],t);g(O,v)||(x.push(_),y.push(O))}}return b[h]=x.length,f}}},function(e,t,r){"use strict";var i=r(19);t.name="abs",t.factory=function(e,t,r,n){var a=n("abs",{number:Math.abs,Complex:function(e){var n,t=Math.abs(e.re),e=Math.abs(e.im);return t<1e3&&e<1e3?Math.sqrt(t*t+e*e):e<=t?(n=e/t,t*Math.sqrt(1+n*n)):(n=t/e,e*Math.sqrt(1+n*n))},BigNumber:function(e){return e.abs()},Fraction:function(e){return e.abs()},"Array | Matrix":function(e){return i(e,a,!0)},Unit:function(e){return e.abs()}});return a.toTex="\\left|${args[0]}\\right|",a}},function(e,t,r){"use strict";t.name="equal",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(47)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=i("equal",{"any, any":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:o(e,t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,o):s(t,e,o,!0):"sparse"===t.storage()?s(e,t,o,!1):f(e,t,o);return e},"Array, Array":function(e,t){return m(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return m(a(e),t)},"Matrix, Array":function(e,t){return m(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,o,!0);return t},"Array, any":function(e,t){return l(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return l(a(t),e,o,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.equal+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isNumeric",t.factory=function(e,t,r,n){var a=n("isNumeric",{"number | BigNumber | Fraction | boolean":function(){return!0},"Complex | Unit | string":function(){return!1},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";var i=r(23);t.name="format",t.factory=function(e,t,r,n){return(n=n("format",{any:i.format,"any, Object | function | number":i.format})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(40);t.name="typeof",t.factory=function(e,t,r,n){return(n=n("_typeof",{any:function(e){var t=i.type(e);if("Object"===t){if(!0===e.isBigNumber)return"BigNumber";if(!0===e.isComplex)return"Complex";if(!0===e.isFraction)return"Fraction";if(!0===e.isMatrix)return"Matrix";if(!0===e.isUnit)return"Unit";if(!0===e.isIndex)return"Index";if(!0===e.isRange)return"Range";if(!0===e.isChain)return"Chain";if(!0===e.isHelp)return"Help"}return t}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(19);t.name="unit",t.factory=function(e,t,r,n){var a=n("unit",{Unit:function(e){return e.clone()},string:function(t){return e.Unit.isValuelessUnit(t)?new e.Unit(null,t):e.Unit.parse(t)},"number | BigNumber | Fraction | Complex, string":function(t,r){return new e.Unit(t,r)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},a}},function(e,t,r){var i=r(3).lazy;t.factory=function(e,t,r,n,a){function o(t){t=e.Unit.parse(t);return t.fixPrefix=!0,t}i(a,"speedOfLight",function(){return o("299792458 m s^-1")}),i(a,"gravitationConstant",function(){return o("6.6738480e-11 m^3 kg^-1 s^-2")}),i(a,"planckConstant",function(){return o("6.626069311e-34 J s")}),i(a,"reducedPlanckConstant",function(){return o("1.05457172647e-34 J s")}),i(a,"magneticConstant",function(){return o("1.2566370614e-6 N A^-2")}),i(a,"electricConstant",function(){return o("8.854187817e-12 F m^-1")}),i(a,"vacuumImpedance",function(){return o("376.730313461 ohm")}),i(a,"coulomb",function(){return o("8.9875517873681764e9 N m^2 C^-2")}),i(a,"elementaryCharge",function(){return o("1.60217656535e-19 C")}),i(a,"bohrMagneton",function(){return o("9.2740096820e-24 J T^-1")}),i(a,"conductanceQuantum",function(){return o("7.748091734625e-5 S")}),i(a,"inverseConductanceQuantum",function(){return o("12906.403721742 ohm")}),i(a,"magneticFluxQuantum",function(){return o("2.06783375846e-15 Wb")}),i(a,"nuclearMagneton",function(){return o("5.0507835311e-27 J T^-1")}),i(a,"klitzing",function(){return o("25812.807443484 ohm")}),i(a,"bohrRadius",function(){return o("5.291772109217e-11 m")}),i(a,"classicalElectronRadius",function(){return o("2.817940326727e-15 m")}),i(a,"electronMass",function(){return o("9.1093829140e-31 kg")}),i(a,"fermiCoupling",function(){return o("1.1663645e-5 GeV^-2")}),i(a,"fineStructure",function(){return.007297352569824}),i(a,"hartreeEnergy",function(){return o("4.3597443419e-18 J")}),i(a,"protonMass",function(){return o("1.67262177774e-27 kg")}),i(a,"deuteronMass",function(){return o("3.3435830926e-27 kg")}),i(a,"neutronMass",function(){return o("1.6749271613e-27 kg")}),i(a,"quantumOfCirculation",function(){return o("3.636947552024e-4 m^2 s^-1")}),i(a,"rydberg",function(){return o("10973731.56853955 m^-1")}),i(a,"thomsonCrossSection",function(){return o("6.65245873413e-29 m^2")}),i(a,"weakMixingAngle",function(){return.222321}),i(a,"efimovFactor",function(){return 22.7}),i(a,"atomicMass",function(){return o("1.66053892173e-27 kg")}),i(a,"avogadro",function(){return o("6.0221412927e23 mol^-1")}),i(a,"boltzmann",function(){return o("1.380648813e-23 J K^-1")}),i(a,"faraday",function(){return o("96485.336521 C mol^-1")}),i(a,"firstRadiation",function(){return o("3.7417715317e-16 W m^2")}),i(a,"loschmidt",function(){return o("2.686780524e25 m^-3")}),i(a,"gasConstant",function(){return o("8.314462175 J K^-1 mol^-1")}),i(a,"molarPlanckConstant",function(){return o("3.990312717628e-10 J s mol^-1")}),i(a,"molarVolume",function(){return o("2.241396820e-10 m^3 mol^-1")}),i(a,"sackurTetrode",function(){return-1.164870823}),i(a,"secondRadiation",function(){return o("1.438777013e-2 m K")}),i(a,"stefanBoltzmann",function(){return o("5.67037321e-8 W m^-2 K^-4")}),i(a,"wienDisplacement",function(){return o("2.897772126e-3 m K")}),i(a,"molarMass",function(){return o("1e-3 kg mol^-1")}),i(a,"molarMassC12",function(){return o("1.2e-2 kg mol^-1")}),i(a,"gravity",function(){return o("9.80665 m s^-2")}),i(a,"planckLength",function(){return o("1.61619997e-35 m")}),i(a,"planckMass",function(){return o("2.1765113e-8 kg")}),i(a,"planckTime",function(){return o("5.3910632e-44 s")}),i(a,"planckCharge",function(){return o("1.87554595641e-18 C")}),i(a,"planckTemperature",function(){return o("1.41683385e+32 K")})},t.lazy=!1,t.math=!0},function(e,t,r){"use strict";var i=r(3),a=r(93);t.factory=function n(e,t,o,s,u){u.on("config",function(r,i){r.number!==i.number&&n(e,t,o,s,u)}),u.true=!0,u.false=!1,u.null=null,u.uninitialized=r(39).UNINITIALIZED,"bignumber"===t.number?(u.Infinity=new e.BigNumber(1/0),u.NaN=new e.BigNumber(NaN),i.lazy(u,"pi",function(){return a.pi(e.BigNumber)}),i.lazy(u,"tau",function(){return a.tau(e.BigNumber)}),i.lazy(u,"e",function(){return a.e(e.BigNumber)}),i.lazy(u,"phi",function(){return a.phi(e.BigNumber)}),i.lazy(u,"E",function(){return u.e}),i.lazy(u,"LN2",function(){return new e.BigNumber(2).ln()}),i.lazy(u,"LN10",function(){return new e.BigNumber(10).ln()}),i.lazy(u,"LOG2E",function(){return new e.BigNumber(1).div(new e.BigNumber(2).ln())}),i.lazy(u,"LOG10E",function(){return new e.BigNumber(1).div(new e.BigNumber(10).ln())}),i.lazy(u,"PI",function(){return u.pi}),i.lazy(u,"SQRT1_2",function(){return new e.BigNumber("0.5").sqrt()}),i.lazy(u,"SQRT2",function(){return new e.BigNumber(2).sqrt()})):(u.Infinity=1/0,u.NaN=NaN,u.pi=Math.PI,u.tau=2*Math.PI,u.e=Math.E,u.phi=1.618033988749895,u.E=u.e,u.LN2=Math.LN2,u.LN10=Math.LN10,u.LOG2E=Math.LOG2E,u.LOG10E=Math.LOG10E,u.PI=u.pi,u.SQRT1_2=Math.SQRT1_2,u.SQRT2=Math.SQRT2),u.i=new e.Complex(0,1),u.version=r(95)},t.lazy=!1,t.math=!0},function(e,t,r){function n(e){return e[0].precision}var i=r(44).memoize,a=r(94);t.e=i(function(e){return new e(1).exp()},n),t.phi=i(function(e){return new e(1).plus(new e(5).sqrt()).div(2)},n),t.pi=i(function(e){var t=e.constructor({precision:e.precision+4}),t=new t(4).times(a(new t(1).div(5))).minus(a(new t(1).div(239)));return new e(4).times(t)},n),t.tau=i(function(e){var r=t.pi(e.constructor({precision:e.precision+2}));return new e(2).times(r)},n)},function(e,t){e.exports=function(e){for(var t=e,r=NaN,n=e.times(e),i=e,a=!0,o=3;!t.equals(r);o+=2)i=i.times(n),r=t,t=(a=!a)?t.plus(i.div(o)):t.minus(i.div(o));return t}},function(e,t){e.exports="2.6.0"},function(e,t,r){e.exports=[r(97),r(267),r(291),r(292),r(319),r(269),r(290)]},function(e,t,r){t.name="docs",t.path="expression",t.factory=function(e,t,n,i){var a={};return a.bignumber=r(98),a.boolean=r(99),a.complex=r(100),a.fraction=r(101),a.index=r(102),a.matrix=r(103),a.number=r(104),a.sparse=r(105),a.string=r(106),a.unit=r(107),a.e=r(108),a.E=r(108),a.false=r(109),a.i=r(110),a.Infinity=r(111),a.LN2=r(112),a.LN10=r(113),a.LOG2E=r(114),a.LOG10E=r(115),a.NaN=r(116),a.null=r(117),a.pi=r(118),a.PI=r(118),a.phi=r(119),a.SQRT1_2=r(120),a.SQRT2=r(121),a.tau=r(122),a.true=r(123),a.version=r(124),a.speedOfLight={description:"Speed of light in vacuum",examples:["speedOfLight"]},a.gravitationConstant={description:"Newtonian constant of gravitation",examples:["gravitationConstant"]},a.planckConstant={description:"Planck constant",examples:["planckConstant"]},a.reducedPlanckConstant={description:"Reduced Planck constant",examples:["reducedPlanckConstant"]},a.magneticConstant={description:"Magnetic constant (vacuum permeability)",examples:["magneticConstant"]},a.electricConstant={description:"Electric constant (vacuum permeability)",examples:["electricConstant"]},a.vacuumImpedance={description:"Characteristic impedance of vacuum",examples:["vacuumImpedance"]},a.coulomb={description:"Coulomb's constant",examples:["coulomb"]},a.elementaryCharge={description:"Elementary charge",examples:["elementaryCharge"]},a.bohrMagneton={description:"Borh magneton",examples:["bohrMagneton"]},a.conductanceQuantum={description:"Conductance quantum",examples:["conductanceQuantum"]},a.inverseConductanceQuantum={description:"Inverse conductance quantum",examples:["inverseConductanceQuantum"]},a.magneticFluxQuantum={description:"Magnetic flux quantum",examples:["magneticFluxQuantum"]},a.nuclearMagneton={description:"Nuclear magneton",examples:["nuclearMagneton"]},a.klitzing={description:"Von Klitzing constant",examples:["klitzing"]},a.bohrRadius={description:"Borh radius",examples:["bohrRadius"]},a.classicalElectronRadius={description:"Classical electron radius",examples:["classicalElectronRadius"]},a.electronMass={description:"Electron mass",examples:["electronMass"]},a.fermiCoupling={description:"Fermi coupling constant",examples:["fermiCoupling"]},a.fineStructure={description:"Fine-structure constant",examples:["fineStructure"]},a.hartreeEnergy={description:"Hartree energy",examples:["hartreeEnergy"]},a.protonMass={description:"Proton mass",examples:["protonMass"]},a.deuteronMass={description:"Deuteron Mass",examples:["deuteronMass"]},a.neutronMass={description:"Neutron mass",examples:["neutronMass"]},a.quantumOfCirculation={description:"Quantum of circulation",examples:["quantumOfCirculation"]},a.rydberg={description:"Rydberg constant",examples:["rydberg"]},a.thomsonCrossSection={description:"Thomson cross section",examples:["thomsonCrossSection"]},a.weakMixingAngle={description:"Weak mixing angle",examples:["weakMixingAngle"]},a.efimovFactor={description:"Efimov factor",examples:["efimovFactor"]},a.atomicMass={description:"Atomic mass constant",examples:["atomicMass"]},a.avogadro={description:"Avogadro's number",examples:["avogadro"]},a.boltzmann={description:"Boltzmann constant",examples:["boltzmann"]},a.faraday={description:"Faraday constant",examples:["faraday"]},a.firstRadiation={description:"First radiation constant",examples:["firstRadiation"]},a.loschmidt={description:"Loschmidt constant at T=273.15 K and p=101.325 kPa",examples:["loschmidt"]},a.gasConstant={description:"Gas constant",examples:["gasConstant"]},a.molarPlanckConstant={description:"Molar Planck constant",examples:["molarPlanckConstant"]},a.molarVolume={description:"Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",examples:["molarVolume"]},a.sackurTetrode={description:"Sackur-Tetrode constant at T=1 K and p=101.325 kPa",examples:["sackurTetrode"]},a.secondRadiation={description:"Second radiation constant",examples:["secondRadiation"]},a.stefanBoltzmann={description:"Stefan-Boltzmann constant",examples:["stefanBoltzmann"]},a.wienDisplacement={description:"Wien displacement law constant",examples:["wienDisplacement"]},a.molarMass={description:"Molar mass constant",examples:["molarMass"]},a.molarMassC12={description:"Molar mass constant of carbon-12",examples:["molarMassC12"]},a.gravity={description:"Standard acceleration of gravity (standard acceleration of free-fall on Earth)",examples:["gravity"]},a.planckLength={description:"Planck length",examples:["planckLength"]},a.planckMass={description:"Planck mass",examples:["planckMass"]},a.planckTime={description:"Planck time",examples:["planckTime"]},a.planckCharge={description:"Planck charge",examples:["planckCharge"]},a.planckTemperature={description:"Planck temperature",examples:["planckTemperature"]},a.lsolve=r(125),a.lup=r(126),a.lusolve=r(127),a.slu=r(128),a.usolve=r(129),a.abs=r(130),a.add=r(131),a.cbrt=r(132),a.ceil=r(133),a.cube=r(134),a.divide=r(135),a.dotDivide=r(136),a.dotMultiply=r(137),a.dotPow=r(138),a.exp=r(139),a.fix=r(140),a.floor=r(141),a.gcd=r(142),a.hypot=r(143),a.lcm=r(144),a.log=r(145),a.log10=r(146),a.mod=r(147),a.multiply=r(148),a.norm=r(149),a.nthRoot=r(150),a.pow=r(151),a.round=r(152),a.sign=r(153),a.sqrt=r(154),a.square=r(155),a.subtract=r(156),a.unaryMinus=r(157),a.unaryPlus=r(158),a.xgcd=r(159),a.bitAnd=r(160),a.bitNot=r(161),a.bitOr=r(162),a.bitXor=r(163),a.leftShift=r(164),a.rightArithShift=r(165),a.rightLogShift=r(166),a.bellNumbers=r(167),a.catalan=r(168),a.composition=r(169),a.stirlingS2=r(170),a.arg=r(171),a.conj=r(172),a.re=r(173),a.im=r(174),a.eval=r(175),a.help=r(176),a.distance=r(177),a.intersect=r(178),a.and=r(179),a.not=r(180),a.or=r(181),a.xor=r(182),a.concat=r(183),a.cross=r(184),a.det=r(185),a.diag=r(186),a.dot=r(187),a.eye=r(188),a.flatten=r(189),a.inv=r(190),a.ones=r(191),a.range=r(192),a.resize=r(193),a.size=r(194),a.squeeze=r(195),a.subset=r(196),a.trace=r(197),a.transpose=r(198),a.zeros=r(199),a.combinations=r(200),a.factorial=r(201),a.gamma=r(202),a.kldivergence=r(203),a.multinomial=r(204),a.permutations=r(205),a.pickRandom=r(206),a.random=r(207),a.randomInt=r(208),a.compare=r(209),a.deepEqual=r(210),a.equal=r(211),a.larger=r(212),a.largerEq=r(213),a.smaller=r(214),a.smallerEq=r(215),a.unequal=r(216),a.max=r(217),a.mean=r(218),a.median=r(219),a.min=r(220),a.mode=r(221),a.prod=r(222),a.quantileSeq=r(223),a.std=r(224),a.sum=r(225),a.var=r(226),a.acos=r(227),a.acosh=r(228),a.acot=r(229),a.acoth=r(230),a.acsc=r(231),a.acsch=r(232),a.asec=r(233),a.asech=r(234),a.asin=r(235),a.asinh=r(236),a.atan=r(237),a.atanh=r(238),a.atan2=r(239),a.cos=r(240),a.cosh=r(241),a.cot=r(242),a.coth=r(243),a.csc=r(244),a.csch=r(245),a.sec=r(246),a.sech=r(247),a.sin=r(248),a.sinh=r(249),a.tan=r(250),a.tanh=r(251),a.to=r(252),a.clone=r(253),a.map=r(254),a.partitionSelect=r(255),a.filter=r(256),a.forEach=r(257),a.format=r(258),a.isInteger=r(259),a.isNegative=r(260),a.isNumeric=r(261),a.isPositive=r(262),a.isZero=r(263),a.import=r(264),a.sort=r(265),a.typeof=r(266),a}},function(e,t){e.exports={name:"bignumber",category:"Type",syntax:["bignumber(x)"],description:"Create a big number from a number or string.",examples:["0.1 + 0.2","bignumber(0.1) + bignumber(0.2)",'bignumber("7.2")','bignumber("7.2e500")',"bignumber([0.1, 0.2, 0.3])"],seealso:["boolean","complex","fraction","index","matrix","string","unit"]}},function(e,t){e.exports={name:"boolean",category:"Type",syntax:["x","boolean(x)"],description:"Convert a string or number into a boolean.",examples:["boolean(0)","boolean(1)","boolean(3)",'boolean("true")','boolean("false")',"boolean([1, 0, 1, 1])"],seealso:["bignumber","complex","index","matrix","number","string","unit"]}},function(e,t){e.exports={name:"complex",category:"Type",syntax:["complex()","complex(re, im)","complex(string)"],description:"Create a complex number.",examples:["complex()","complex(2, 3)",'complex("7 - 2i")'],seealso:["bignumber","boolean","index","matrix","number","string","unit"]}},function(e,t){e.exports={name:"fraction",category:"Type",syntax:["fraction(num)","fraction(num,den)"],description:"Create a fraction from a number or from a numerator and denominator.",examples:["fraction(0.125)","fraction(1, 3) + fraction(2, 5)"],seealso:["bignumber","boolean","complex","index","matrix","string","unit"]}},function(e,t){e.exports={name:"index",category:"Type",syntax:["[start]","[start:end]","[start:step:end]","[start1, start 2, ...]","[start1:end1, start2:end2, ...]","[start1:step1:end1, start2:step2:end2, ...]"],description:"Create an index to get or replace a subset of a matrix",examples:["[]","[1, 2, 3]","A = [1, 2, 3; 4, 5, 6]","A[1, :]","A[1, 2] = 50","A[0:2, 0:2] = ones(2, 2)"],seealso:["bignumber","boolean","complex","matrix,","number","range","string","unit"]}},function(e,t){e.exports={name:"matrix",category:"Type",syntax:["[]","[a1, b1, ...; a2, b2, ...]","matrix()",'matrix("dense")',"matrix([...])"],description:"Create a matrix.",examples:["[]","[1, 2, 3]","[1, 2, 3; 4, 5, 6]","matrix()","matrix([3, 4])",'matrix([3, 4; 5, 6], "sparse")','matrix([3, 4; 5, 6], "sparse", "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","sparse"]}},function(e,t){e.exports={name:"number",category:"Type",syntax:["x","number(x)"],description:"Create a number or convert a string or boolean into a number.",examples:["2","2e3","4.05","number(2)",'number("7.2")',"number(true)","number([true, false, true, true])",'number("52cm", "m")'],seealso:["bignumber","boolean","complex","fraction","index","matrix","string","unit"]}},function(e,t){e.exports={name:"sparse",category:"Type",syntax:["sparse()","sparse([a1, b1, ...; a1, b2, ...])",'sparse([a1, b1, ...; a1, b2, ...], "number")'],description:"Create a sparse matrix.",examples:["sparse()","sparse([3, 4; 5, 6])",'sparse([3, 0; 5, 0], "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","matrix"]}},function(e,t){e.exports={name:"string",category:"Type",syntax:['"text"',"string(x)"],description:"Create a string or convert a value to a string",examples:['"Hello World!"',"string(4.2)","string(3 + 2i)"],seealso:["bignumber","boolean","complex","index","matrix","number","unit"]}},function(e,t){e.exports={name:"unit",category:"Type",syntax:["value unit","unit(value, unit)","unit(string)"],description:"Create a unit.",examples:["5.5 mm","3 inch",'unit(7.1, "kilogram")','unit("23 deg")'],seealso:["bignumber","boolean","complex","index","matrix","number","string"]}},function(e,t){e.exports={name:"e",category:"Constants",syntax:["e"],description:"Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",examples:["e","e ^ 2","exp(2)","log(e)"],seealso:["exp"]}},function(e,t){e.exports={name:"false",category:"Constants",syntax:["false"],description:"Boolean value false",examples:["false"],seealso:["true"]}},function(e,t){e.exports={name:"i",category:"Constants",syntax:["i"],description:"Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",examples:["i","i * i","sqrt(-1)"],seealso:[]}},function(e,t){e.exports={name:"Infinity",category:"Constants",syntax:["Infinity"],description:"Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",examples:["Infinity","1 / 0"],seealso:[]}},function(e,t){e.exports={name:"LN2",category:"Constants",syntax:["LN2"],description:"Returns the natural logarithm of 2, approximately equal to 0.693",examples:["LN2","log(2)"],seealso:[]}},function(e,t){e.exports={name:"LN10",category:"Constants",syntax:["LN10"],description:"Returns the natural logarithm of 10, approximately equal to 2.302",examples:["LN10","log(10)"],seealso:[]}},function(e,t){e.exports={name:"LOG2E",category:"Constants",syntax:["LOG2E"],description:"Returns the base-2 logarithm of E, approximately equal to 1.442",examples:["LOG2E","log(e, 2)"],seealso:[]}},function(e,t){e.exports={name:"LOG10E",category:"Constants",syntax:["LOG10E"],description:"Returns the base-10 logarithm of E, approximately equal to 0.434",examples:["LOG10E","log(e, 10)"],seealso:[]}},function(e,t){e.exports={name:"NaN",category:"Constants",syntax:["NaN"],description:"Not a number",examples:["NaN","0 / 0"],seealso:[]}},function(e,t){e.exports={name:"null",category:"Constants",syntax:["null"],description:"Value null",examples:["null"],seealso:["true","false"]}},function(e,t){e.exports={name:"pi",category:"Constants",syntax:["pi"],description:"The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",examples:["pi","sin(pi/2)"],seealso:["tau"]}},function(e,t){e.exports={name:"phi",category:"Constants",syntax:["phi"],description:"Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",examples:["tau"],seealso:[]}},function(e,t){e.exports={name:"SQRT1_2",category:"Constants",syntax:["SQRT1_2"],description:"Returns the square root of 1/2, approximately equal to 0.707",examples:["SQRT1_2","sqrt(1/2)"],seealso:[]}},function(e,t){e.exports={name:"SQRT2",category:"Constants",syntax:["SQRT2"],description:"Returns the square root of 2, approximately equal to 1.414",examples:["SQRT2","sqrt(2)"],seealso:[]}},function(e,t){e.exports={name:"tau",category:"Constants",syntax:["tau"],description:"Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",examples:["tau","2 * pi"],seealso:["pi"]}},function(e,t){e.exports={name:"true",category:"Constants",syntax:["true"],description:"Boolean value true",examples:["true"],seealso:["false"]}},function(e,t){e.exports={name:"version",category:"Constants",syntax:["version"],description:"A string with the version number of math.js",examples:["version"],seealso:[]}},function(e,t){e.exports={name:"lsolve",category:"Algebra",syntax:["x=lsolve(L, b)"],description:"Solves the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lup","lusolve","usolve","matrix","sparse"]}},function(e,t){e.exports={name:"lup",category:"Algebra",syntax:["lup(m)"],description:"Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",examples:["lup([[2, 1], [1, 4]])","lup(matrix([[2, 1], [1, 4]]))","lup(sparse([[2, 1], [1, 4]]))"],seealso:["lusolve","lsolve","usolve","matrix","sparse","slu"]}},function(e,t){e.exports={name:"lusolve",category:"Algebra",syntax:["x=lusolve(A, b)","x=lusolve(lu, b)"],description:"Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lusolve(a, b)"],seealso:["lup","slu","lsolve","usolve","matrix","sparse"]}},function(e,t){e.exports={name:"slu",category:"Algebra",syntax:["slu(A, order, threshold)"],description:"Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",examples:["slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)"],seealso:["lusolve","lsolve","usolve","matrix","sparse","lup"]}},function(e,t){e.exports={name:"usolve",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Solves the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["lup","lusolve","lsolve","matrix","sparse"]}},function(e,t){e.exports={name:"abs",category:"Arithmetic",syntax:["abs(x)"],description:"Compute the absolute value.",examples:["abs(3.5)","abs(-4.2)"],seealso:["sign"]}},function(e,t){e.exports={name:"add",category:"Operators",syntax:["x + y","add(x, y)"],description:"Add two values.",examples:["a = 2.1 + 3.6","a - 3.6","3 + 2i","3 cm + 2 inch",'"2.3" + "4"'],seealso:["subtract"]}},function(e,t){e.exports={name:"cbrt",category:"Arithmetic",syntax:["cbrt(x)","cbrt(x, allRoots)"],description:"Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",examples:["cbrt(64)","cube(4)","cbrt(-8)","cbrt(2 + 3i)","cbrt(8i)","cbrt(8i, true)","cbrt(27 m^3)"],seealso:["square","sqrt","cube","multiply"]}},function(e,t){e.exports={name:"ceil",category:"Arithmetic",syntax:["ceil(x)"],description:"Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",examples:["ceil(3.2)","ceil(3.8)","ceil(-4.2)"],seealso:["floor","fix","round"]}},function(e,t){e.exports={name:"cube",category:"Arithmetic",syntax:["cube(x)"],description:"Compute the cube of a value. The cube of x is x * x * x.",examples:["cube(2)","2^3","2 * 2 * 2"],seealso:["multiply","square","pow"]}},function(e,t){e.exports={name:"divide",category:"Operators",syntax:["x / y","divide(x, y)"],description:"Divide two values.",examples:["a = 2 / 3","a * 3","4.5 / 2","3 + 4 / 2","(3 + 4) / 2","18 km / 4.5"],seealso:["multiply"]}},function(e,t){e.exports={name:"dotDivide",category:"Operators",syntax:["x ./ y","dotDivide(x, y)"],description:"Divide two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a ./ b"],seealso:["multiply","dotMultiply","divide"]}},function(e,t){e.exports={name:"dotMultiply",category:"Operators",syntax:["x .* y","dotMultiply(x, y)"],description:"Multiply two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a .* b"],seealso:["multiply","divide","dotDivide"]}},function(e,t){e.exports={name:"dotpow",category:"Operators",syntax:["x .^ y","dotpow(x, y)"],description:"Calculates the power of x to y element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","a .^ 2"],seealso:["pow"]}},function(e,t){e.exports={name:"exp",category:"Arithmetic",syntax:["exp(x)"],description:"Calculate the exponent of a value.",examples:["exp(1.3)","e ^ 1.3","log(exp(1.3))","x = 2.4","(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula"],seealso:["pow","log"]}},function(e,t){e.exports={name:"fix",category:"Arithmetic",syntax:["fix(x)"],description:"Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",examples:["fix(3.2)","fix(3.8)","fix(-4.2)","fix(-4.8)"],seealso:["ceil","floor","round"]}},function(e,t){e.exports={name:"floor",category:"Arithmetic",syntax:["floor(x)"],description:"Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",examples:["floor(3.2)","floor(3.8)","floor(-4.2)"],seealso:["ceil","fix","round"]}},function(e,t){e.exports={name:"gcd",category:"Arithmetic",syntax:["gcd(a, b)","gcd(a, b, c, ...)"],description:"Compute the greatest common divisor.",examples:["gcd(8, 12)","gcd(-4, 6)","gcd(25, 15, -10)"],seealso:["lcm","xgcd"]}},function(e,t){e.exports={name:"hypot",category:"Arithmetic",syntax:["hypot(a, b, c, ...)","hypot([a, b, c, ...])"],description:"Calculate the hypotenusa of a list with values. ",examples:["hypot(3, 4)","sqrt(3^2 + 4^2)","hypot(-2)","hypot([3, 4, 5])"],seealso:["abs","norm"]}},function(e,t){e.exports={name:"lcm",category:"Arithmetic",syntax:["lcm(x, y)"],description:"Compute the least common multiple.",examples:["lcm(4, 6)","lcm(6, 21)","lcm(6, 21, 5)"],seealso:["gcd"]}},function(e,t){e.exports={name:"log",category:"Arithmetic",syntax:["log(x)","log(x, base)"],description:"Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",examples:["log(3.5)","a = log(2.4)","exp(a)","10 ^ 4","log(10000, 10)","log(10000) / log(10)","b = log(1024, 2)","2 ^ b"],seealso:["exp","log10"]}},function(e,t){e.exports={name:"log10",category:"Arithmetic",syntax:["log10(x)"],description:"Compute the 10-base logarithm of a value.",examples:["log10(0.00001)","log10(10000)","10 ^ 4","log(10000) / log(10)","log(10000, 10)"],seealso:["exp","log"]}},function(e,t){e.exports={name:"mod",category:"Operators",syntax:["x % y","x mod y","mod(x, y)"],description:"Calculates the modulus, the remainder of an integer division.",examples:["7 % 3","11 % 2","10 mod 4","function isOdd(x) = x % 2","isOdd(2)","isOdd(3)"],seealso:["divide"]}},function(e,t){e.exports={name:"multiply",category:"Operators",syntax:["x * y","multiply(x, y)"],description:"multiply two values.",examples:["a = 2.1 * 3.4","a / 3.4","2 * 3 + 4","2 * (3 + 4)","3 * 2.1 km"],seealso:["divide"]}},function(e,t){e.exports={name:"norm",category:"Arithmetic",syntax:["norm(x)","norm(x, p)"],description:"Calculate the norm of a number, vector or matrix.",examples:["abs(-3.5)","norm(-3.5)","norm(3 - 4i))","norm([1, 2, -3], Infinity)","norm([1, 2, -3], -Infinity)","norm([3, 4], 2)","norm([[1, 2], [3, 4]], 1)","norm([[1, 2], [3, 4]], 'inf')","norm([[1, 2], [3, 4]], 'fro')"]}},function(e,t){e.exports={name:"nthRoot",category:"Arithmetic",syntax:["nthRoot(a)","nthRoot(a, root)"],description:'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',examples:["4 ^ 3","nthRoot(64, 3)","nthRoot(9, 2)","sqrt(9)"],seealso:["sqrt","pow"]}},function(e,t){e.exports={name:"pow",category:"Operators",syntax:["x ^ y","pow(x, y)"],description:"Calculates the power of x to y, x^y.",examples:["2^3 = 8","2*2*2","1 + e ^ (pi * i)"],seealso:["multiply"]}},function(e,t){e.exports={name:"round",category:"Arithmetic",syntax:["round(x)","round(x, n)"],description:"round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",examples:["round(3.2)","round(3.8)","round(-4.2)","round(-4.8)","round(pi, 3)","round(123.45678, 2)"],seealso:["ceil","floor","fix"]}},function(e,t){e.exports={name:"sign",category:"Arithmetic",syntax:["sign(x)"],description:"Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",examples:["sign(3.5)","sign(-4.2)","sign(0)"],seealso:["abs"]}},function(e,t){e.exports={name:"sqrt",category:"Arithmetic",syntax:["sqrt(x)"],description:"Compute the square root value. If x = y * y, then y is the square root of x.",examples:["sqrt(25)","5 * 5","sqrt(-1)"],seealso:["square","multiply"]}},function(e,t){e.exports={name:"square",category:"Arithmetic",syntax:["square(x)"],description:"Compute the square of a value. The square of x is x * x.",examples:["square(3)","sqrt(9)","3^2","3 * 3"],seealso:["multiply","pow","sqrt","cube"]}},function(e,t){e.exports={name:"subtract",category:"Operators",syntax:["x - y","subtract(x, y)"],description:"subtract two values.",examples:["a = 5.3 - 2","a + 2","2/3 - 1/6","2 * 3 - 3","2.1 km - 500m"],seealso:["add"]}},function(e,t){e.exports={name:"unaryMinus",category:"Operators",syntax:["-x","unaryMinus(x)"],description:"Inverse the sign of a value. Converts booleans and strings to numbers.",examples:["-4.5","-(-5.6)",'-"22"'],seealso:["add","subtract","unaryPlus"]}},function(e,t){e.exports={name:"unaryPlus",category:"Operators",syntax:["+x","unaryPlus(x)"],description:"Converts booleans and strings to numbers.",examples:["+true",'+"2"'],seealso:["add","subtract","unaryMinus"]}},function(e,t){e.exports={name:"xgcd",category:"Arithmetic",syntax:["xgcd(a, b)"],description:"Calculate the extended greatest common divisor for two values",examples:["xgcd(8, 12)","gcd(8, 12)","xgcd(36163, 21199)"],seealso:["gcd","lcm"]}},function(e,t){e.exports={name:"bitAnd",category:"Bitwise",syntax:["x & y","bitAnd(x, y)"],description:"Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",examples:["5 & 3","bitAnd(53, 131)","[1, 12, 31] & 42"],seealso:["bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitNot",category:"Bitwise",syntax:["~x","bitNot(x)"],description:"Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",examples:["~1","~2","bitNot([2, -3, 4])"],seealso:["bitAnd","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitOr",category:"Bitwise",syntax:["x | y","bitOr(x, y)"],description:"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",examples:["5 | 3","bitOr([1, 2, 3], 4)"],seealso:["bitAnd","bitNot","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitXor",category:"Bitwise",syntax:["bitXor(x, y)"],description:"Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",examples:["bitOr(1, 2)","bitXor([2, 3, 4], 4)"],seealso:["bitAnd","bitNot","bitOr","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"leftShift",category:"Bitwise",syntax:["x << y","leftShift(x, y)"],description:"Bitwise left logical shift of a value x by y number of bits.",examples:["4 << 1","8 >> 1"],seealso:["bitAnd","bitNot","bitOr","bitXor","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"rightArithShift",category:"Bitwise",syntax:["x >> y","leftShift(x, y)"],description:"Bitwise right arithmetic shift of a value x by y number of bits.",examples:["8 >> 1","4 << 1","-12 >> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightLogShift"]}},function(e,t){e.exports={name:"rightLogShift",category:"Bitwise",syntax:["x >> y","leftShift(x, y)"],description:"Bitwise right logical shift of a value x by y number of bits.",examples:["8 >>> 1","4 << 1","-12 >>> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift"]}},function(e,t){e.exports={name:"bellNumbers",category:"Combinatorics",syntax:["bellNumbers(n)"],description:"The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["bellNumbers(3)","bellNumbers(8)"],seealso:["stirlingS2"]}},function(e,t){e.exports={name:"catalan",category:"Combinatorics",syntax:["catalan(n)"],description:"The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["catalan(3)","catalan(8)"],seealso:["bellNumbers"]}},function(e,t){e.exports={name:"composition",category:"Combinatorics",syntax:["composition(n, k)"],description:"The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",examples:["composition(5, 3)"],seealso:["combinations"]}},function(e,t){e.exports={name:"stirlingS2",category:"Combinatorics",syntax:["stirlingS2(n, k)"],description:"he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",examples:["stirlingS2(5, 3)"],seealso:["bellNumbers"]}},function(e,t){e.exports={name:"arg",category:"Complex",syntax:["arg(x)"],description:"Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",examples:["arg(2 + 2i)","atan2(3, 2)","arg(2 + 3i)"],seealso:["re","im","conj","abs"]}},function(e,t){e.exports={name:"conj",category:"Complex",syntax:["conj(x)"],description:"Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",examples:["conj(2 + 3i)","conj(2 - 3i)","conj(-5.2i)"],seealso:["re","im","abs","arg"]}},function(e,t){e.exports={name:"re",category:"Complex",syntax:["re(x)"],description:"Get the real part of a complex number.",examples:["re(2 + 3i)","im(2 + 3i)","re(-5.2i)","re(2.4)"],seealso:["im","conj","abs","arg"]}},function(e,t){e.exports={name:"im",category:"Complex",syntax:["im(x)"],description:"Get the imaginary part of a complex number.",examples:["im(2 + 3i)","re(2 + 3i)","im(-5.2i)","im(2.4)"],seealso:["re","conj","abs","arg"]}},function(e,t){e.exports={name:"eval",category:"Expression",syntax:["eval(expression)","eval([expr1, expr2, expr3, ...])"],description:"Evaluate an expression or an array with expressions.",examples:['eval("2 + 3")','eval("sqrt(" + 4 + ")")'],seealso:[]}},function(e,t){e.exports={name:"help",category:"Expression",syntax:["help(object)","help(string)"],description:"Display documentation on a function or data type.",examples:["help(sqrt)",'help("complex")'],seealso:[]}},function(e,t){e.exports={name:"distance",category:"Geometry",syntax:["distance([x1, y1], [x2, y2])","distance([[x1, y1], [x2, y2])"],description:"Calculates the Euclidean distance between two points.",examples:["distance([0,0], [4,4])","distance([[0,0], [4,4]])"],seealso:[]}},function(e,t){e.exports={name:"intersect",category:"Geometry",syntax:["intersect(expr1, expr2, expr3, expr4)","intersect(expr1, expr2, expr3)"],description:"Computes the intersection point of lines and/or planes.",examples:["intersect([0, 0], [10, 10], [10, 0], [0, 10])","intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])"],seealso:[]}},function(e,t){e.exports={name:"and",category:"Logical",syntax:["x and y","and(x, y)"],description:"Logical and. Test whether two values are both defined with a nonzero/nonempty value.",examples:["true and false","true and true","2 and 4"],seealso:["not","or","xor"]}},function(e,t){e.exports={name:"not",category:"Logical",syntax:["not x","not(x)"],description:"Logical not. Flips the boolean value of given argument.",examples:["not true","not false","not 2","not 0"],seealso:["and","or","xor"]}},function(e,t){e.exports={name:"or",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical or. Test if at least one value is defined with a nonzero/nonempty value.",examples:["true or false","false or false","0 or 4"],seealso:["not","and","xor"]}},function(e,t){e.exports={name:"xor",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",examples:["true xor false","false xor false","true xor true","0 or 4"],seealso:["not","and","or"]}},function(e,t){e.exports={name:"concat",category:"Matrix",syntax:["concat(A, B, C, ...)","concat(A, B, C, ..., dim)"],description:"Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",examples:["A = [1, 2; 5, 6]","B = [3, 4; 7, 8]","concat(A, B)","concat(A, B, 1)","concat(A, B, 2)"],seealso:["det","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"cross",category:"Matrix",syntax:["cross(A, B)"],description:"Calculate the cross product for two vectors in three dimensional space.",examples:["cross([1, 1, 0],  [0, 1, 1])","cross([3, -3, 1], [4, 9, 2])","cross([2, 3, 4],  [5, 6, 7])"],seealso:["multiply","dot"]}},function(e,t){e.exports={name:"det",category:"Matrix",syntax:["det(x)"],description:"Calculate the determinant of a matrix",examples:["det([1, 2; 3, 4])","det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],seealso:["concat","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"diag",category:"Matrix",syntax:["diag(x)","diag(x, k)"],description:"Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",examples:["diag(1:3)","diag(1:3, 1)","a = [1, 2, 3; 4, 5, 6; 7, 8, 9]","diag(a)"],seealso:["concat","det","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"dot",category:"Matrix",syntax:["dot(A, B)"],description:"Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",examples:["dot([2, 4, 1], [2, 2, 3])","[2, 4, 1] * [2, 2, 3]"],seealso:["multiply","cross"]}},function(e,t){e.exports={name:"eye",category:"Matrix",syntax:["eye(n)","eye(m, n)","eye([m, n])","eye"],description:"Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",examples:["eye(3)","eye(3, 5)","a = [1, 2, 3; 4, 5, 6]","eye(size(a))"],seealso:["concat","det","diag","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"flatten",category:"Matrix",syntax:["flatten(x)"],description:"Flatten a multi dimensional matrix into a single dimensional matrix.",examples:["a = [1, 2, 3; 4, 5, 6]","size(a)","b = flatten(a)","size(b)"],seealso:["concat","resize","size","squeeze"]}},function(e,t){e.exports={name:"inv",category:"Matrix",syntax:["inv(x)"],description:"Calculate the inverse of a matrix",examples:["inv([1, 2; 3, 4])","inv(4)","1 / 4"],seealso:["concat","det","diag","eye","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"ones",category:"Matrix",syntax:["ones(m)","ones(m, n)","ones(m, n, p, ...)","ones([m])","ones([m, n])","ones([m, n, p, ...])","ones"],description:"Create a matrix containing ones.",examples:["ones(3)","ones(3, 5)","ones([2,3]) * 4.5","a = [1, 2, 3; 4, 5, 6]","ones(size(a))"],seealso:["concat","det","diag","eye","inv","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"range",category:"Type",syntax:["start:end","start:step:end","range(start, end)","range(start, end, step)","range(string)"],description:"Create a range. Lower bound of the range is included, upper bound is excluded.",examples:["1:5","3:-1:-3","range(3, 7)","range(0, 12, 2)",'range("4:10")',"a = [1, 2, 3, 4; 5, 6, 7, 8]","a[1:2, 1:2]"],seealso:["concat","det","diag","eye","inv","ones","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"resize",category:"Matrix",syntax:["resize(x, size)","resize(x, size, defaultValue)"],description:"Resize a matrix.",examples:["resize([1,2,3,4,5], [3])","resize([1,2,3], [5])","resize([1,2,3], [5], -1)","resize(2, [2, 3])",'resize("hello", [8], "!")'],seealso:["size","subset","squeeze"]}},function(e,t){e.exports={name:"size",category:"Matrix",syntax:["size(x)"],description:"Calculate the size of a matrix.",examples:["size(2.3)",'size("hello world")',"a = [1, 2; 3, 4; 5, 6]","size(a)","size(1:6)"],seealso:["concat","det","diag","eye","inv","ones","range","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"squeeze",category:"Matrix",syntax:["squeeze(x)"],description:"Remove inner and outer singleton dimensions from a matrix.",examples:["a = zeros(3,2,1)","size(squeeze(a))","b = zeros(1,1,3)","size(squeeze(b))"],seealso:["concat","det","diag","eye","inv","ones","range","size","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"subset",category:"Matrix",syntax:["value(index)","value(index) = replacement","subset(value, [index])","subset(value, [index], replacement)"],description:"Get or set a subset of a matrix or string. Indexes are one-based. Both the ranges lower-bound and upper-bound are included.",examples:["d = [1, 2; 3, 4]","e = []","e[1, 1:2] = [5, 6]","e[2, :] = [7, 8]","f = d * e","f[2, 1]","f[:, 1]"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","trace","transpose","zeros"]}},function(e,t){e.exports={name:"trace",category:"Matrix",syntax:["trace(A)"],description:"Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",examples:["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]","trace(A)"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","transpose","zeros"]}},function(e,t){e.exports={name:"transpose",category:"Matrix",syntax:["x'","transpose(x)"],description:"Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","transpose(a)"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","trace","zeros"]}},function(e,t){e.exports={name:"zeros",category:"Matrix",syntax:["zeros(m)","zeros(m, n)","zeros(m, n, p, ...)","zeros([m])","zeros([m, n])","zeros([m, n, p, ...])","zeros"],description:"Create a matrix containing zeros.",examples:["zeros(3)","zeros(3, 5)","a = [1, 2, 3; 4, 5, 6]","zeros(size(a))"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose"]}},function(e,t){e.exports={name:"combinations",category:"Probability",syntax:["combinations(n, k)"],description:"Compute the number of combinations of n items taken k at a time",examples:["combinations(7, 5)"],seealso:["permutations","factorial"]}},function(e,t){e.exports={name:"factorial",category:"Probability",syntax:["kldivergence(x, y)"],description:"Compute the factorial of a value",examples:["5!","5 * 4 * 3 * 2 * 1","3!"],seealso:["combinations","permutations","gamma"]}},function(e,t){e.exports={name:"gamma",category:"Probability",syntax:["gamma(n)"],description:"Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",examples:["gamma(4)","3!","gamma(1/2)","sqrt(pi)"],seealso:["factorial"]}},function(e,t){e.exports={name:"kldivergence",category:"Probability",syntax:["n!","factorial(n)"],description:"Calculate the Kullback-Leibler (KL) divergence  between two distributions.",examples:["math.kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],seealso:[]}},function(e,t){e.exports={name:"multinomial",category:"Probability",syntax:["multinomial(A)"],description:"Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai <= 0.",examples:["multinomial([1, 2, 1])"],seealso:["combinations","factorial"]}},function(e,t){e.exports={name:"permutations",category:"Probability",syntax:["permutations(n)","permutations(n, k)"],description:"Compute the number of permutations of n items taken k at a time",examples:["permutations(5)","permutations(5, 3)"],seealso:["combinations","factorial"]}},function(e,t){e.exports={name:"pickRandom",category:"Probability",syntax:["pickRandom(array)"],description:"Pick a random entry from a given array.",examples:["pickRandom(0:10)","pickRandom([1, 3, 1, 6])"],seealso:["random","randomInt"]}},function(e,t){e.exports={name:"random",category:"Probability",syntax:["random()","random(max)","random(min, max)","random(size)","random(size, max)","random(size, min, max)"],description:"Return a random number.",examples:["random()","random(10, 20)","random([2, 3])"],seealso:["pickRandom","randomInt"]}},function(e,t){e.exports={name:"randInt",category:"Probability",syntax:["randInt(max)","randInt(min, max)","randInt(size)","randInt(size, max)","randInt(size, min, max)"],description:"Return a random integer number",examples:["randInt(10, 20)","randInt([2, 3], 10)"],seealso:["pickRandom","random"]}},function(e,t){e.exports={name:"compare",category:"Relational",syntax:["compare(x, y)"],description:"Compare two values. Returns 1 if x is larger than y, -1 if x is smaller than y, and 0 if x and y are equal.",examples:["compare(2, 3)","compare(3, 2)","compare(2, 2)","compare(5cm, 40mm)","compare(2, [1, 2, 3])"],seealso:["equal","unequal","smaller","smallerEq","largerEq"]}},function(e,t){e.exports={name:"deepEqual",category:"Relational",syntax:["deepEqual(x, y)"],description:"Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",examples:["[1,3,4] == [1,3,4]","[1,3,4] == [1,3]"],seealso:["equal","unequal","smaller","larger","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"equal",category:"Relational",syntax:["x == y","equal(x, y)"],description:"Check equality of two values. Returns true if the values are equal, and false if not.",examples:["2+2 == 3","2+2 == 4","a = 3.2","b = 6-2.8","a == b","50cm == 0.5m"],seealso:["unequal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]}},function(e,t){e.exports={name:"larger",category:"Relational",syntax:["x > y","larger(x, y)"],description:"Check if value x is larger than y. Returns true if x is larger than y, and false if not.",examples:["2 > 3","5 > 2*2","a = 3.3","b = 6-2.8","(a > b)","(b < a)","5 cm > 2 inch"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"largerEq",category:"Relational",syntax:["x >= y","largerEq(x, y)"],description:"Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",examples:["2 > 1+1","2 >= 1+1","a = 3.2","b = 6-2.8","(a > b)"],seealso:["equal","unequal","smallerEq","smaller","largerEq","compare"]}},function(e,t){e.exports={name:"smaller",category:"Relational",syntax:["x < y","smaller(x, y)"],description:"Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 3","5 < 2*2","a = 3.3","b = 6-2.8","(a < b)","5 cm < 2 inch"],seealso:["equal","unequal","larger","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"smallerEq",category:"Relational",syntax:["x <= y","smallerEq(x, y)"],description:"Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 1+1","2 <= 1+1","a = 3.2","b = 6-2.8","(a < b)"],seealso:["equal","unequal","larger","smaller","largerEq","compare"]}},function(e,t){e.exports={name:"unequal",category:"Relational",syntax:["x != y","unequal(x, y)"],description:"Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",examples:["2+2 != 3","2+2 != 4","a = 3.2","b = 6-2.8","a != b","50cm != 0.5m","5 cm != 2 inch"],seealso:["equal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]}},function(e,t){e.exports={name:"max",category:"Statistics",syntax:["max(a, b, c, ...)","max(A)","max(A, dim)"],description:"Compute the maximum value of a list of values.",examples:["max(2, 3, 4, 1)","max([2, 3, 4, 1])","max([2, 5; 4, 3])","max([2, 5; 4, 3], 1)","max([2, 5; 4, 3], 2)","max(2.7, 7.1, -4.5, 2.0, 4.1)","min(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["mean","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"mean",category:"Statistics",syntax:["mean(a, b, c, ...)","mean(A)","mean(A, dim)"],description:"Compute the arithmetic mean of a list of values.",examples:["mean(2, 3, 4, 1)","mean([2, 3, 4, 1])","mean([2, 5; 4, 3])","mean([2, 5; 4, 3], 1)","mean([2, 5; 4, 3], 2)","mean([1.0, 2.7, 3.2, 4.0])"],seealso:["max","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"median",category:"Statistics",syntax:["median(a, b, c, ...)","median(A)"],description:"Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",examples:["median(5, 2, 7)","median([3, -1, 5, 7])"],seealso:["max","mean","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"min",category:"Statistics",syntax:["min(a, b, c, ...)","min(A)","min(A, dim)"],description:"Compute the minimum value of a list of values.",examples:["min(2, 3, 4, 1)","min([2, 3, 4, 1])","min([2, 5; 4, 3])","min([2, 5; 4, 3], 1)","min([2, 5; 4, 3], 2)","min(2.7, 7.1, -4.5, 2.0, 4.1)","max(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["max","mean","median","prod","std","sum","var"]}},function(e,t){e.exports={name:"mode",category:"Statistics",syntax:["mode(a, b, c, ...)","mode(A)","mode(A, a, b, B, c, ...)"],description:"Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",examples:["mode(5, 2, 7)","mode([3, -1, 5, 7])"],seealso:["max","mean","min","median","prod","std","sum","var"]}},function(e,t){e.exports={name:"prod",category:"Statistics",syntax:["prod(a, b, c, ...)","prod(A)"],description:"Compute the product of all values.",examples:["prod(2, 3, 4)","prod([2, 3, 4])","prod([2, 5; 4, 3])"],seealso:["max","mean","min","median","min","std","sum","var"]}},function(e,t){e.exports={name:"quantileSeq",category:"Statistics",syntax:["quantileSeq(A, prob[, sorted])","quantileSeq(A, [prob1, prob2, ...][, sorted])","quantileSeq(A, N[, sorted])"],description:"Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.",examples:["quantileSeq([3, -1, 5, 7], 0.5)","quantileSeq([3, -1, 5, 7], [1/3, 2/3])","quantileSeq([3, -1, 5, 7], 2)","quantileSeq([-1, 3, 5, 7], 0.5, true)"],seealso:["mean","median","min","max","prod","std","sum","var"]}},function(e,t){e.exports={name:"std",category:"Statistics",syntax:["std(a, b, c, ...)","std(A)","std(A, normalization)"],description:'Compute the standard deviation of all values, defined as std(A) = sqrt(var(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["std(2, 4, 6)","std([2, 4, 6, 8])",'std([2, 4, 6, 8], "uncorrected")','std([2, 4, 6, 8], "biased")',"std([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","sum","var"]}},function(e,t){e.exports={name:"sum",category:"Statistics",syntax:["sum(a, b, c, ...)","sum(A)"],description:"Compute the sum of all values.",examples:["sum(2, 3, 4, 1)","sum([2, 3, 4, 1])","sum([2, 5; 4, 3])"],seealso:["max","mean","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"var",category:"Statistics",syntax:["var(a, b, c, ...)","var(A)","var(A, normalization)"],description:'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["var(2, 4, 6)","var([2, 4, 6, 8])",'var([2, 4, 6, 8], "uncorrected")','var([2, 4, 6, 8], "biased")',"var([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","std","sum"]}},function(e,t){e.exports={name:"acos",category:"Trigonometry",syntax:["acos(x)"],description:"Compute the inverse cosine of a value in radians.",examples:["acos(0.5)","acos(cos(2.3))"],seealso:["cos","atan","asin"]}},function(e,t){e.exports={name:"acosh",category:"Trigonometry",syntax:["acosh(x)"],description:"Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",examples:["acosh(1.5)"],seealso:["cosh","asinh","atanh"]}},function(e,t){e.exports={name:"acot",category:"Trigonometry",syntax:["acot(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acot(0.5)","acot(cot(0.5))","acot(2)"],seealso:["cot","atan"]}},function(e,t){e.exports={name:"acoth",category:"Trigonometry",syntax:["acoth(x)"],description:"Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",examples:["acoth(0.5)"],seealso:["acsch","asech"]}},function(e,t){e.exports={name:"acsc",category:"Trigonometry",syntax:["acsc(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acsc(0.5)","acsc(csc(0.5))","acsc(2)"],seealso:["csc","asin","asec"]}},function(e,t){e.exports={name:"acsch",category:"Trigonometry",syntax:["acsch(x)"],description:"Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",examples:["acsch(0.5)"],seealso:["asech","acoth"]}},function(e,t){e.exports={name:"asec",category:"Trigonometry",syntax:["asec(x)"],description:"Calculate the inverse secant of a value.",examples:["asec(0.5)","asec(sec(0.5))","asec(2)"],seealso:["acos","acot","acsc"]}},function(e,t){e.exports={name:"asech",category:"Trigonometry",syntax:["asech(x)"],description:"Calculate the inverse secant of a value.",examples:["asech(0.5)"],seealso:["acsch","acoth"]}},function(e,t){e.exports={name:"asin",category:"Trigonometry",syntax:["asin(x)"],description:"Compute the inverse sine of a value in radians.",examples:["asin(0.5)","asin(sin(2.3))"],seealso:["sin","acos","atan"]}},function(e,t){e.exports={name:"asinh",category:"Trigonometry",syntax:["asinh(x)"],description:"Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",examples:["asinh(0.5)"],seealso:["acosh","atanh"]}},function(e,t){e.exports={name:"atan",category:"Trigonometry",syntax:["atan(x)"],description:"Compute the inverse tangent of a value in radians.",examples:["atan(0.5)","atan(tan(2.3))"],seealso:["tan","acos","asin"]}},function(e,t){e.exports={name:"atanh",category:"Trigonometry",syntax:["atanh(x)"],description:"Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",examples:["atanh(0.5)"],seealso:["acosh","asinh"]}},function(e,t){e.exports={name:"atan2",category:"Trigonometry",syntax:["atan2(y, x)"],description:"Computes the principal value of the arc tangent of y/x in radians.",examples:["atan2(2, 2) / pi","angle = 60 deg in rad","x = cos(angle)","y = sin(angle)","atan2(y, x)"],seealso:["sin","cos","tan"]}},function(e,t){e.exports={name:"cos",category:"Trigonometry",syntax:["cos(x)"],description:"Compute the cosine of x in radians.",examples:["cos(2)","cos(pi / 4) ^ 2","cos(180 deg)","cos(60 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["acos","sin","tan"]}},function(e,t){e.exports={name:"cosh",category:"Trigonometry",syntax:["cosh(x)"],description:"Compute the hyperbolic cosine of x in radians.",examples:["cosh(0.5)"],seealso:["sinh","tanh","coth"]}},function(e,t){e.exports={name:"cot",category:"Trigonometry",syntax:["cot(x)"],description:"Compute the cotangent of x in radians. Defined as 1/tan(x)",examples:["cot(2)","1 / tan(2)"],seealso:["sec","csc","tan"]}},function(e,t){e.exports={name:"coth",category:"Trigonometry",syntax:["coth(x)"],description:"Compute the hyperbolic cotangent of x in radians.",examples:["coth(2)","1 / tanh(2)"],seealso:["sech","csch","tanh"]}},function(e,t){e.exports={name:"csc",category:"Trigonometry",syntax:["csc(x)"],description:"Compute the cosecant of x in radians. Defined as 1/sin(x)",examples:["csc(2)","1 / sin(2)"],seealso:["sec","cot","sin"]}},function(e,t){e.exports={name:"csch",category:"Trigonometry",syntax:["csch(x)"],description:"Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",examples:["csch(2)","1 / sinh(2)"],seealso:["sech","coth","sinh"]}},function(e,t){e.exports={name:"sec",category:"Trigonometry",syntax:["sec(x)"],description:"Compute the secant of x in radians. Defined as 1/cos(x)",examples:["sec(2)","1 / cos(2)"],seealso:["cot","csc","cos"]}},function(e,t){e.exports={name:"sech",category:"Trigonometry",syntax:["sech(x)"],description:"Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",examples:["sech(2)","1 / cosh(2)"],seealso:["coth","csch","cosh"]}},function(e,t){e.exports={name:"sin",category:"Trigonometry",syntax:["sin(x)"],description:"Compute the sine of x in radians.",examples:["sin(2)","sin(pi / 4) ^ 2","sin(90 deg)","sin(30 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["asin","cos","tan"]}},function(e,t){e.exports={name:"sinh",category:"Trigonometry",syntax:["sinh(x)"],description:"Compute the hyperbolic sine of x in radians.",examples:["sinh(0.5)"],seealso:["cosh","tanh"]}},function(e,t){e.exports={name:"tan",category:"Trigonometry",syntax:["tan(x)"],description:"Compute the tangent of x in radians.",examples:["tan(0.5)","sin(0.5) / cos(0.5)","tan(pi / 4)","tan(45 deg)"],seealso:["atan","sin","cos"]}},function(e,t){e.exports={name:"tanh",category:"Trigonometry",syntax:["tanh(x)"],description:"Compute the hyperbolic tangent of x in radians.",examples:["tanh(0.5)","sinh(0.5) / cosh(0.5)"],seealso:["sinh","cosh"]}},function(e,t){e.exports={name:"to",category:"Units",syntax:["x to unit","to(x, unit)"],description:"Change the unit of a value.",examples:["5 inch to cm","3.2kg to g","16 bytes in bits"],seealso:[]}},function(e,t){e.exports={name:"clone",category:"Utils",syntax:["clone(x)"],description:"Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",examples:["clone(3.5)","clone(2 - 4i)","clone(45 deg)","clone([1, 2; 3, 4])",'clone("hello world")'],seealso:[]}},function(e,t){e.exports={name:"map",category:"Utils",syntax:["map(x, callback)"],description:"Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",examples:["map([1, 2, 3], function(val) { return value * value })"],seealso:["filter","forEach"]}},function(e,t){e.exports={name:"partitionSelect",category:"Utils",syntax:["partitionSelect(x, k)","partitionSelect(x, k, compare)"],description:"Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",examples:["partitionSelect([5, 10, 1], 2)",'partitionSelect(["C", "B", "A", "D"], 1)'],seealso:["sort"]}},function(e,t){e.exports={name:"filter",category:"Utils",syntax:["filter(x, test)"],description:"Filter items in a matrix.",examples:["isPositive(x) = x > 0","filter([6, -2, -1, 4, 3], isPositive)","filter([6, -2, 0, 1, 0], x != 0)"],seealso:["sort","map","forEach"]}},function(e,t){e.exports={name:"forEach",category:"Utils",syntax:["forEach(x, callback)"],description:"Iterates over all elements of a matrix/array, and executes the given callback function.",examples:["forEach([1, 2, 3], function(val) { console.log(val) })"],seealso:["map","sort","filter"]}},function(e,t){e.exports={name:"format",category:"Utils",syntax:["format(value)","format(value, precision)"],description:"Format a value of any type as string.",examples:["format(2.3)","format(3 - 4i)","format([])","format(pi, 3)"],seealso:["print"]}},function(e,t){e.exports={name:"isInteger",category:"Utils",syntax:["isInteger(x)"],description:"Test whether a value is an integer number.",examples:["isInteger(2)","isInteger(3.5)","isInteger([3, 0.5, -2])"],seealso:["isNegative","isNumeric","isPositive","isZero"]}},function(e,t){e.exports={name:"isNegative",category:"Utils",syntax:["isNegative(x)"],description:"Test whether a value is negative: smaller than zero.",examples:["isNegative(2)","isNegative(0)","isNegative(-4)","isNegative([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isPositive","isZero"]}},function(e,t){e.exports={name:"isNumeric",category:"Utils",syntax:["isNumeric(x)"],description:"Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",examples:["isNumeric(2)","isNumeric(0)","isNumeric(bignumber(500))","isNumeric(fraction(0.125))",'isNumeric("3")',"isNumeric(2 + 3i)",'isNumeric([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive"]}},function(e,t){e.exports={name:"isPositive",category:"Utils",syntax:["isPositive(x)"],description:"Test whether a value is positive: larger than zero.",examples:["isPositive(2)","isPositive(0)","isPositive(-4)","isPositive([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isNegative","isZero"]}},function(e,t){e.exports={name:"isZero",category:"Utils",syntax:["isZero(x)"],description:"Test whether a value is zero.",examples:["isZero(2)","isZero(0)","isZero(-4)","isZero([3, 0, -2, 0])"],seealso:["isInteger","isNumeric","isNegative","isPositive"]}},function(e,t){e.exports={name:"import",category:"Utils",syntax:["import(string)"],description:"Import functions from a file.",examples:['import("numbers")','import("./mylib.js")'],seealso:[]}},function(e,t){e.exports={name:"sort",category:"Utils",syntax:["sort(x)","sort(x, compare)"],description:'Sort the items in a matrix. Compare can be a string "asc" or "desc", or a custom sort function.',examples:["sort([5, 10, 1])",'sort(["C", "B", "A", "D"])',"sortByLength(a, b) = size(a)[1] - size(b)[1]",'sort(["Langdon", "Tom", "Sara"], sortByLength)'],seealso:["map","filter","forEach"]}},function(e,t){e.exports={name:"typeof",category:"Utils",syntax:["typeof(x)"],description:"Get the type of a variable.",examples:["typeof(3.5)","typeof(2 - 4i)","typeof(45 deg)",'typeof("hello world")'],seealso:[]}},function(e,t,r){e.exports=[r(268),r(286),r(287),r(288),r(289)]},function(e,t,r){"use strict";var i=r(19);t.name="compile",t.factory=function(e,t,n,a){var o=n(r(269));return a("compile",{string:function(e){return o(e).compile()},"Array | Matrix":function(e){return i(e,function(e){return o(e).compile()})}})}},function(e,t,r){"use strict";var i=r(11),a=r(19);t.name="parse",t.path="expression",t.factory=function(e,t,n,o){function c(){ve++,de=ge.charAt(ve)}function f(){return ge.charAt(ve+1)}function p(){for(xe=le.NULL,ye="";" "==de||"\t"==de||"\n"==de&&be;)c();if("#"==de)for(;"\n"!=de&&""!=de;)c();if(""==de)return xe=le.DELIMITER;if("\n"==de&&!be)return xe=le.DELIMITER,ye=de,c();var e=de+f(),t=e+ge.charAt(ve+2);if(3==t.length&&pe[t])return xe=le.DELIMITER,ye=t,c(),c(),c();if(2==e.length&&pe[e])return xe=le.DELIMITER,ye=e,c(),c();if(pe[de])return xe=le.DELIMITER,ye=de,c();if(!function(e){return"0"<=e&&e<="9"||"."==e}(de)){if(v()){for(;v()||y(de);)ye+=de,c();return xe=me[ye]?le.DELIMITER:le.SYMBOL}for(xe=le.UNKNOWN;""!=de;)ye+=de,c();throw X('Syntax error in part "'+ye+'"')}if(xe=le.NUMBER,"."==de)ye+=de,c(),y(de)||(xe=le.UNKNOWN);else{for(;y(de);)ye+=de,c();"."==de&&(ye+=de,c())}for(;y(de);)ye+=de,c();if(e=f(),("E"==de||"e"==de)&&(y(e)||"-"==e||"+"==e))for(ye+=de,c(),"+"!=de&&"-"!=de||(ye+=de,c()),y(de)||(xe=le.UNKNOWN);y(de);)ye+=de,c()}function m(){for(;p(),"\n"==ye;);}function h(){be++}function g(){be--}function v(){function n(e,t){return/^[\uD835]$/.test(e)&&/^[\uDC00-\uDFFF]$/.test(t)&&/^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(t)}var e=ge.charAt(ve-1),t=ge.charAt(ve+1);return/^[a-zA-Z_\u00C0-\u02AF\u0370-\u03FF]$/.test(de)||n(de,t)||n(e,de)}function y(e){return"0"<=e&&e<="9"}function x(){ve=0,de=ge.charAt(0),be=0,we=null,p();var e=function(){var e,t,r=[];if(""==ye)return new re("undefined","undefined");for("\n"!=ye&&";"!=ye&&(e=w());"\n"==ye||";"==ye;)0==r.length&&e&&(t=";"!=ye,r.push({node:e,visible:t})),p(),"\n"!=ye&&";"!=ye&&""!=ye&&(e=w(),t=";"!=ye,r.push({node:e,visible:t}));return 0<r.length?new ee(r):e}();if(""!=ye)throw xe==le.DELIMITER?J("Unexpected operator "+ye):X('Unexpected part "'+ye+'"');return e}function w(){if(xe==le.SYMBOL&&"function"==ye)throw X('Deprecated keyword "function". Functions can now be assigned without it, like "f(x) = x^2".');return N()}function N(){var e,t,r,n,i=E();if("="!=ye)return i;if(i&&i.isSymbolNode)return e=i.name,m(),r=N(),new K(e,r);if(i&&i.isIndexNode)return m(),r=N(),new fe(i,r);if(i&&i.isFunctionNode&&(n=!0,t=[],e=i.name,i.args.forEach(function(e,r){e&&e.isSymbolNode?t[r]=e.name:n=!1}),n))return m(),r=N(),new ne(e,t,r);throw X("Invalid left hand side of assignment operator =")}function E(){for(var e=M();"?"==ye;){var t=we,r=(we=be,m(),e),n=M();if(":"!=ye)throw X("False part of conditional expression expected");we=null,m();var i=E(),e=new te(r,n,i);we=t}return e}function M(){for(var e=A();"or"==ye;)m(),e=new ae("or","or",[e,A()]);return e}function A(){for(var e=_();"xor"==ye;)m(),e=new ae("xor","xor",[e,_()]);return e}function _(){for(var e=O();"and"==ye;)m(),e=new ae("and","and",[e,O()]);return e}function O(){for(var e=T();"|"==ye;)m(),e=new ae("|","bitOr",[e,T()]);return e}function T(){for(var e=C();"^|"==ye;)m(),e=new ae("^|","bitXor",[e,C()]);return e}function C(){for(var e=S();"&"==ye;)m(),e=new ae("&","bitAnd",[e,S()]);return e}function S(){for(var r,n,i,e=z(),t={"==":"equal","!=":"unequal","<":"smaller",">":"larger","<=":"smallerEq",">=":"largerEq"};ye in t;)n=t[r=ye],m(),i=[e,z()],e=new ae(r,n,i);return e}function z(){for(var r,n,i,e=B(),t={"<<":"leftShift",">>":"rightArithShift",">>>":"rightLogShift"};ye in t;)n=t[r=ye],m(),i=[e,B()],e=new ae(r,n,i);return e}function B(){for(var r,n,i,e=k(),t={to:"to",in:"to"};ye in t;)n=t[r=ye],m(),i=[e,k()],e=new ae(r,n,i);return e}function k(){var t=[],e=":"==ye?new re("1","number"):I();if(":"==ye&&we!==be){for(t.push(e);":"==ye&&t.length<3;)m(),t.push(")"==ye||"]"==ye||","==ye||""==ye?new ce("end"):I());e=3==t.length?new ue(t[0],t[2],t[1]):new ue(t[0],t[1])}return e}function I(){for(var r,n,i,e=R(),t={"+":"add","-":"subtract"};ye in t;)n=t[r=ye],m(),i=[e,R()],e=new ae(r,n,i);return e}function R(){for(var n,i,e=P(),t=e,r={"*":"multiply",".*":"dotMultiply","/":"divide","./":"dotDivide","%":"mod",mod:"mod"};;)if(ye in r)i=r[n=ye],m(),t=P(),e=new ae(n,i,[e,t]);else{if(!(xe==le.SYMBOL||"in"==ye&&e&&e.isConstantNode||xe==le.NUMBER&&!t.isConstantNode||"("==ye||"["==ye))break;t=P(),e=new ae("*","multiply",[e,t])}return e}function P(){var e,t,r={"-":"unaryMinus","+":"unaryPlus","~":"bitNot",not:"not"}[ye];return r?(e=ye,m(),t=[P()],new ae(e,r,t)):function(){var e,t,r,n;return e=function(){var e,t,r,n;for(e=function(){var e,t=[];if(xe==le.SYMBOL&&he[ye]){if(e=he[ye],p(),"("==ye){if(t=[],h(),p(),")"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if(")"!=ye)throw X("Parenthesis ) expected");g(),p()}return new e(t)}return function(){var t;return xe==le.SYMBOL||xe==le.DELIMITER&&ye in me?(t=ye,p(),$(function(e){var t;if("("!=ye)return new ce(e);if(t=[],h(),p(),")"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if(")"!=ye)throw X("Parenthesis ) expected");return g(),p(),new se(e,t)}(t))):function(){var t,r;if('"'!=ye)return function(){var e,t,r,n;if("["!=ye)return function(){var e;return xe==le.NUMBER?(e=ye,p(),new re(e,"number")):function(){var e;if("("!=ye)throw X(""==ye?"Unexpected end of expression":"Value expected");if(h(),p(),e=N(),")"!=ye)throw X("Parenthesis ) expected");return g(),p(),new oe(e)}()}();if(h(),p(),"]"!=ye){var i=H();if(";"==ye){for(r=1,t=[i];";"==ye;)p(),t[r]=H(),r++;if("]"!=ye)throw X("End of matrix ] expected");g(),p(),n=t[0].nodes.length;for(var a=1;a<r;a++)if(t[a].nodes.length!=n)throw J("Column dimensions mismatch ("+t[a].nodes.length+" != "+n+")");e=new Q(t)}else{if("]"!=ye)throw X("End of matrix ] expected");g(),p(),e=i}}else g(),p(),e=new Q([]);return e}();for(r=t="";""!=de&&('"'!=de||"\\"==r);)t+=de,r=de,c();if(p(),'"'!=ye)throw X('End of string " expected');return p(),$(new re(t,"string"))}()}()}(),t={"!":"factorial","'":"transpose"};ye in t;)n=t[r=ye],p(),e=new ae(r,n,[e]);return e}(),"^"!=ye&&".^"!=ye||(r="^"==(t=ye)?"pow":"dotPow",m(),n=[e,P()],e=new ae(t,r,n)),e}()}function $(e){for(var t;"["==ye;){if(t=[],h(),p(),"]"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if("]"!=ye)throw X("Parenthesis ] expected");g(),p(),e=new ie(e,t)}return e}function H(){for(var e=[N()],t=1;","==ye;)p(),e[t]=N(),t++;return new Q(e)}function W(){return ve-ye.length+1}function X(e){var t=W(),e=new SyntaxError(e+" (char "+t+")");return e.char=t,e}function J(e){var t=W(),e=new Error(e+" (char "+t+")");return e.char=t,e}var Q=n(r(270)),K=n(r(273)),ee=n(r(275)),te=n(r(276)),re=n(r(277)),ne=n(r(278)),ie=n(r(279)),ae=n(r(282)),oe=n(r(284)),se=n(r(283)),ue=n(r(280)),ce=n(r(281)),fe=n(r(285)),le={NULL:0,DELIMITER:1,NUMBER:2,SYMBOL:3,UNKNOWN:4},pe={",":!0,"(":!0,")":!0,"[":!0,"]":!0,'"':!0,";":!0,"+":!0,"-":!0,"*":!0,".*":!0,"/":!0,"./":!0,"%":!0,"^":!0,".^":!0,"~":!0,"!":!0,"&":!0,"|":!0,"^|":!0,"'":!0,"=":!0,":":!0,"?":!0,"==":!0,"!=":!0,"<":!0,">":!0,"<=":!0,">=":!0,"<<":!0,">>":!0,">>>":!0},me={mod:!0,to:!0,in:!0,and:!0,xor:!0,or:!0,not:!0},he={},ge="",ve=0,de="",ye="",xe=le.NULL,be=0,we=null;return function(t,r){if(1!=arguments.length&&2!=arguments.length)throw new i("parse",arguments.length,1,2);if(he=r&&r.nodes?r.nodes:{},"string"==typeof t)return ge=t,x();if(Array.isArray(t)||t instanceof e.Matrix)return a(t,function(e){if("string"!=typeof e)throw new TypeError("String expected");return ge=e,x()});throw new TypeError("String or matrix expected")}}},function(e,t,r){"use strict";var i=r(23);t.name="ArrayNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(this.nodes=e||[],!Array.isArray(this.nodes)||!this.nodes.every(function(e){return e&&e.isNode}))throw new TypeError("Array containing Nodes expected")}return n=n(r(271)),(o.prototype=new n).type="ArrayNode",o.prototype.isArrayNode=!0,o.prototype._compile=function(e,t){var r="array"!==e.math.config().matrix,n=this.nodes.map(function(r){return r._compile(e,t)});return(r?"math.matrix([":"[")+n.join(",")+(r?"])":"]")},o.prototype.forEach=function(e){for(var t=0;t<this.nodes.length;t++)e(this.nodes[t],"nodes["+t+"]",this)},o.prototype.map=function(e){for(var t=[],r=0;r<this.nodes.length;r++)t[r]=this._ifNode(e(this.nodes[r],"nodes["+r+"]",this));return new o(t)},o.prototype.clone=function(){return new o(this.nodes.slice(0))},o.prototype._toString=function(e){return i.format(this.nodes)},o.prototype._toTex=function(e){var t="\\begin{bmatrix}";return this.nodes.forEach(function(r){t=t+(r.nodes?r.nodes.map(function(t){return t.toTex(e)}).join("&"):r.toTex(e))+"\\\\"}),t+="\\end{bmatrix}"},o}},function(e,t,r){"use strict";var i=r(272);r(3).extend,t.name="Node",t.path="expression.node",t.math=!0,t.factory=function(e,t,r,n,a){function o(){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator")}function s(e){for(var t in e)if(e.hasOwnProperty(t)&&t in i)throw new Error('Scope contains an illegal symbol, "'+t+'" is a reserved keyword')}return o.prototype.eval=function(e){return this.compile().eval(e)},o.prototype.type="Node",o.prototype.isNode=!0,o.prototype.compile=function(){if(0<arguments.length)throw new Error("Calling compile(math) is deprecated. Call the function as compile() instead.");var e={math:a.expression.transform,args:{},_validateScope:s},r=this._compile(e,{}),r=Object.keys(e).map(function(e){return"    var "+e+' = defs["'+e+'"];'}).join(" ")+'return {  "eval": function (scope) {    if (scope) _validateScope(scope);    scope = scope || {};    return '+r+";  }};";return new Function("defs",r)(e)},o.prototype._compile=function(e,t){throw new Error("Cannot compile a Node interface")},o.prototype.forEach=function(e){throw new Error("Cannot run forEach on a Node interface")},o.prototype.map=function(e){throw new Error("Cannot run map on a Node interface")},o.prototype._ifNode=function(e){if(e&&e.isNode)return e;throw new TypeError("Callback function must return a Node")},o.prototype.traverse=function(e){e(this,null,null),function t(e,r){e.forEach(function(e,n,i){r(e,n,i),t(e,r)})}(this,e)},o.prototype.transform=function(e){return function t(e,r){return e.map(function(e,n,i){return t(r(e,n,i),r)})}(e(this,null,null),e)},o.prototype.filter=function(e){var t=[];return this.traverse(function(r,n,i){e(r,n,i)&&t.push(r)}),t},o.prototype.find=function(){throw new Error("Function Node.find is deprecated. Use Node.filter instead.")},o.prototype.match=function(){throw new Error("Function Node.match is deprecated. See functions Node.filter, Node.transform, Node.traverse.")},o.prototype.clone=function(){throw new Error("Cannot clone a Node interface")},o.prototype.toString=function(e){var t;if(e&&"object"==typeof e)switch(typeof e.handler){case"object":case"undefined":break;case"function":t=e.handler(this,e);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==t?t:this._toString(e)},o.prototype._toString=function(){throw new Error("_toString not implemented for "+this.type)},o.prototype.toTex=function(e){var t;if(e&&"object"==typeof e)switch(typeof e.handler){case"object":case"undefined":break;case"function":t=e.handler(this,e);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==t?t:this._toTex(e)},o.prototype._toTex=function(e){throw new Error("_toTex not implemented for "+this.type)},o.prototype.getIdentifier=function(){return this.type},o.prototype.getContent=function(){return this},o}},function(e,t){"use strict";e.exports={end:!0}},function(e,t,r){"use strict";var i=r(29);t.name="AssignmentNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');if(!t||!t.isNode)throw new TypeError('Node expected for parameter "expr"');if(e in c)throw new Error('Illegal symbol name, "'+e+'" is a reserved keyword');this.name=e,this.expr=t}function s(e,t){var r=f.getPrecedence(e,t),e=f.getPrecedence(e.expr,t);return"all"===t||null!==e&&e<=r}var u=n(r(271)),c=(n(r(270)),r(272)),f=r(274);return(o.prototype=new u).type="AssignmentNode",o.prototype.isAssignmentNode=!0,o.prototype._compile=function(e,t){return'scope["'+this.name+'"] = '+this.expr._compile(e,t)},o.prototype.forEach=function(e){e(this.expr,"expr",this)},o.prototype.map=function(e){return new o(this.name,this._ifNode(e(this.expr,"expr",this)))},o.prototype.clone=function(){return new o(this.name,this.expr)},o.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toString(e);return s(this,t)&&(e="("+e+")"),this.name+" = "+e},o.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toTex(e);return s(this,t)&&(e="\\left("+e+"\\right)"),i.toSymbol(this.name)+":="+e},o}},function(e,t){"use strict";function r(e,t){for(var r=e,n=(r="keep"!==t?e.getContent():r).getIdentifier(),i=0;i<a.length;i++)if(n in a[i])return i;return null}var a=[{AssignmentNode:{},FunctionAssignmentNode:{}},{ConditionalNode:{latexLeftParens:!1,latexRightParens:!1,latexParens:!1}},{"OperatorNode:or":{associativity:"left",associativeWith:[]}},{"OperatorNode:xor":{associativity:"left",associativeWith:[]}},{"OperatorNode:and":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitOr":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitXor":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitAnd":{associativity:"left",associativeWith:[]}},{"OperatorNode:equal":{associativity:"left",associativeWith:[]},"OperatorNode:unequal":{associativity:"left",associativeWith:[]},"OperatorNode:smaller":{associativity:"left",associativeWith:[]},"OperatorNode:larger":{associativity:"left",associativeWith:[]},"OperatorNode:smallerEq":{associativity:"left",associativeWith:[]},"OperatorNode:largerEq":{associativity:"left",associativeWith:[]}},{"OperatorNode:leftShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightArithShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightLogShift":{associativity:"left",associativeWith:[]}},{"OperatorNode:to":{associativity:"left",associativeWith:[]}},{RangeNode:{}},{"OperatorNode:add":{associativity:"left",associativeWith:["OperatorNode:add","OperatorNode:subtract"]},"OperatorNode:subtract":{associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]},"OperatorNode:divide":{associativity:"left",associativeWith:[],latexLeftParens:!1,latexRightParens:!1,latexParens:!1},"OperatorNode:dotMultiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:doDivide"]},"OperatorNode:dotDivide":{associativity:"left",associativeWith:[]},"OperatorNode:mod":{associativity:"left",associativeWith:[]}},{"OperatorNode:unaryPlus":{associativity:"right"},"OperatorNode:unaryMinus":{associativity:"right"},"OperatorNode:bitNot":{associativity:"right"},"OperatorNode:not":{associativity:"right"}},{"OperatorNode:pow":{associativity:"right",associativeWith:[],latexRightParens:!1},"OperatorNode:dotPow":{associativity:"right",associativeWith:[]}},{"OperatorNode:factorial":{associativity:"left"}},{"OperatorNode:transpose":{associativity:"left"}}];e.exports.properties=a,e.exports.getPrecedence=r,e.exports.getAssociativity=function(e,t){var n=e,e=(n="keep"!==t?e.getContent():n).getIdentifier(),n=r(n,t);if(null!==n){t=a[n][e];if(t.hasOwnProperty("associativity")){if("left"===t.associativity)return"left";if("right"===t.associativity)return"right";throw Error("'"+e+"' has the invalid associativity '"+t.associativity+"'.")}}return null},e.exports.isAssociativeWith=function(e,t,n){var i=e,o=t,e=("keep"!==n&&(i=e.getContent(),o=t.getContent()),i.getIdentifier()),u=o.getIdentifier(),t=r(i,n);if(null!==t){var f=a[t][e];if(f.hasOwnProperty("associativeWith")&&f.associativeWith instanceof Array){for(var l=0;l<f.associativeWith.length;l++)if(f.associativeWith[l]===u)return!0;return!1}}return null}},function(e,t,r){"use strict";t.name="BlockNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!Array.isArray(e))throw new Error("Array expected");this.blocks=e.map(function(e){var t=e&&e.node,e=!e||void 0===e.visible||e.visible;if(!t||!t.isNode)throw new TypeError('Property "node" must be a Node');if("boolean"!=typeof e)throw new TypeError('Property "visible" must be a boolean');return{node:t,visible:e}})}var o=n(r(271)),s=n(r(70));return(a.prototype=new o).type="BlockNode",a.prototype.isBlockNode=!0,a.prototype._compile=function(e,t){return e.ResultSet=s,"(function () {var results = [];"+this.blocks.map(function(r){var n=r.node._compile(e,t);return r.visible?"results.push("+n+");":n+";"}).join("")+"return new ResultSet(results);})()"},a.prototype.forEach=function(e){for(var t=0;t<this.blocks.length;t++)e(this.blocks[t].node,"blocks["+t+"].node",this)},a.prototype.map=function(e){for(var t=[],r=0;r<this.blocks.length;r++){var n=this.blocks[r],i=this._ifNode(e(n.node,"blocks["+r+"].node",this));t[r]={node:i,visible:n.visible}}return new a(t)},a.prototype.clone=function(){return new a(this.blocks.map(function(e){return{node:e.node,visible:e.visible}}))},a.prototype._toString=function(e){return this.blocks.map(function(t){return t.node.toString(e)+(t.visible?"":";")}).join("\n")},a.prototype._toTex=function(e){return this.blocks.map(function(t){return t.node.toTex(e)+(t.visible?"":";")}).join("\\;\\;\n")},a}},function(e,t,r){"use strict";r(29);var i=r(274);t.name="ConditionalNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t,r){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError("Parameter condition must be a Node");if(!t||!t.isNode)throw new TypeError("Parameter trueExpr must be a Node");if(!r||!r.isNode)throw new TypeError("Parameter falseExpr must be a Node");this.condition=e,this.trueExpr=t,this.falseExpr=r}return n=n(r(271)),(o.prototype=new n).type="ConditionalNode",o.prototype.isConditionalNode=!0,o.prototype._compile=function(e,t){return e.testCondition=function(t){if("number"==typeof t||"boolean"==typeof t||"string"==typeof t)return!!t;if(t){if(!0===t.isBigNumber)return!t.isZero();if(!0===t.isComplex)return!(!t.re&&!t.im);if(!0===t.isUnit)return!!t.value}if(null==t)return!1;throw new TypeError('Unsupported type of condition "'+e.math.typeof(t)+'"')},"testCondition("+this.condition._compile(e,t)+") ? ( "+this.trueExpr._compile(e,t)+") : ( "+this.falseExpr._compile(e,t)+")"},o.prototype.forEach=function(e){e(this.condition,"condition",this),e(this.trueExpr,"trueExpr",this),e(this.falseExpr,"falseExpr",this)},o.prototype.map=function(e){return new o(this._ifNode(e(this.condition,"condition",this)),this._ifNode(e(this.trueExpr,"trueExpr",this)),this._ifNode(e(this.falseExpr,"falseExpr",this)))},o.prototype.clone=function(){return new o(this.condition,this.trueExpr,this.falseExpr)},o.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=i.getPrecedence(this,t),n=this.condition.toString(e),a=i.getPrecedence(this.condition,t),a=(("all"===t||"OperatorNode"===this.condition.type||null!==a&&a<=r)&&(n="("+n+")"),this.trueExpr.toString(e)),s=i.getPrecedence(this.trueExpr,t),s=(("all"===t||"OperatorNode"===this.trueExpr.type||null!==s&&s<=r)&&(a="("+a+")"),this.falseExpr.toString(e)),e=i.getPrecedence(this.falseExpr,t);return n+" ? "+a+" : "+(s="all"===t||"OperatorNode"===this.falseExpr.type||null!==e&&e<=r?"("+s+")":s)},o.prototype._toTex=function(e){return"\\begin{cases} {"+this.trueExpr.toTex(e)+"}, &\\quad{\\text{if }\\;"+this.condition.toTex(e)+"}\\\\{"+this.falseExpr.toTex(e)+"}, &\\quad{\\text{otherwise}}\\end{cases}"},o}},function(e,t,r){"use strict";var i=r(40).type;t.name="ConstantNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(t){if("string"!=typeof t)throw new TypeError('String expected for parameter "valueType"');if("string"!=typeof e)throw new TypeError('String expected for parameter "value"');this.value=e,this.valueType=t}else this.value=e+"",this.valueType=i(e);if(!u[this.valueType])throw new TypeError('Unsupported type of value "'+this.valueType+'"')}var n=n(r(271)),u={number:!0,string:!0,boolean:!0,undefined:!0,null:!0};return(o.prototype=new n).type="ConstantNode",o.prototype.isConstantNode=!0,o.prototype._compile=function(e,t){switch(this.valueType){case"number":var r=e.math.config().number;return"bignumber"===r?'math.bignumber("'+this.value+'")':"fraction"===r?'math.fraction("'+this.value+'")':this.value.replace(/^(0*)[0-9]/,function(e,t){return e.substring(t.length)});case"string":return'"'+this.value+'"';case"boolean":case"undefined":case"null":return this.value;default:throw new TypeError('Unsupported type of constant "'+this.valueType+'"')}},o.prototype.forEach=function(e){},o.prototype.map=function(e){return this.clone()},o.prototype.clone=function(){return new o(this.value,this.valueType)},o.prototype._toString=function(e){return"string"!==this.valueType?this.value:'"'+this.value+'"'},o.prototype._toTex=function(e){var t,r=this.value;switch(this.valueType){case"string":return'\\mathtt{"'+r+'"}';case"number":return-1!==(t=r.toLowerCase().indexOf("e"))?r.substring(0,t)+"\\cdot10^{"+r.substring(t+1)+"}":r;default:return r}},o}},function(e,t,r){"use strict";function n(e){return"string"==typeof e}var a=r(272),o=r(29),s=r(274);t.name="FunctionAssignmentNode",t.path="expression.node",t.factory=function(e,t,i,u){function c(e,t,r){if(!(this instanceof c))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');if(!Array.isArray(t)||!t.every(n))throw new TypeError('Array containing strings expected for parameter "params"');if(!r||!r.isNode)throw new TypeError('Node expected for parameter "expr"');if(e in a)throw new Error('Illegal function name, "'+e+'" is a reserved keyword');this.name=e,this.params=t,this.expr=r}function f(e,t){var r=s.getPrecedence(e,t),e=s.getPrecedence(e.expr,t);return"all"===t||null!==e&&e<=r}return i=i(r(271)),(c.prototype=new i).type="FunctionAssignmentNode",c.prototype.isFunctionAssignmentNode=!0,c.prototype._compile=function(e,t){var r=Object.create(t),t=(this.params.forEach(function(e){r[e]=!0}),this.expr._compile(e,r));return'scope["'+this.name+'"] =   (function () {    var fn = function '+this.name+"("+this.params.join(",")+") {      if (arguments.length != "+this.params.length+') {        throw new SyntaxError("Wrong number of arguments in function '+this.name+' (" + arguments.length + " provided, '+this.params.length+' expected)");      }      return '+t+'    };    fn.syntax = "'+this.name+"("+this.params.join(", ")+')";    return fn;  })()'},c.prototype.forEach=function(e){e(this.expr,"expr",this)},c.prototype.map=function(e){e=this._ifNode(e(this.expr,"expr",this));return new c(this.name,this.params.slice(0),e)},c.prototype.clone=function(){return new c(this.name,this.params.slice(0),this.expr)},c.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toString(e);return f(this,t)&&(e="("+e+")"),"function "+this.name+"("+this.params.join(", ")+") = "+e},c.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toTex(e);return f(this,t)&&(e="\\left("+e+"\\right)"),"\\mathrm{"+this.name+"}\\left("+this.params.map(o.toSymbol).join(",")+"\\right):="+e},c}},function(e,t,r){"use strict";t.name="IndexNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError('Node expected for parameter "object"');if(!c(t)||!t.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "ranges"');this.object=e,this.ranges=t}function o(e){switch(e.object.type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":return;default:return 1}}var s=n(r(271)),u=(n(r(280)),n(r(281)),n(r(65))),c=Array.isArray;return(a.prototype=new s).type="IndexNode",a.prototype.isIndexNode=!0,a.prototype._compile=function(e,t){return this.compileSubset(e,t)},a.prototype.compileSubset=function(e,t,r){function n(e){return e&&e.isSymbolNode&&"end"==e.name}var i=!1,a=this.ranges.map(function(e){e=0<e.filter(n).length;return i=e||i,e}),o=(e.range=function(e,t,r){return new u(e&&!0===e.isBigNumber?e.toNumber():e,t&&!0===t.isBigNumber?t.toNumber():t,r&&!0===r.isBigNumber?r.toNumber():r)},Object.create(t)),t=this.ranges.map(function(t,r){var n=a[r];return t&&t.isRangeNode?n?(o.end=!0,"(function () {  var end = size["+r+"];  return range(    "+t.start._compile(e,o)+",     "+t.end._compile(e,o)+",     "+(t.step?t.step._compile(e,o):"1")+"  );})()"):"range("+t.start._compile(e,o)+", "+t.end._compile(e,o)+", "+(t.step?t.step._compile(e,o):"1")+")":n?(o.end=!0,"(function () {  var end = size["+r+"];  return "+t._compile(e,o)+";})()"):t._compile(e,o)});return i?"(function () {  var obj = "+this.object._compile(e,o)+";  var size = math.size(obj).valueOf();  return math.subset(    obj,     math.index("+t.join(", ")+")    "+(r?", "+r:"")+"  );})()":"math.subset("+this.object._compile(e,o)+",math.index("+t.join(", ")+")"+(r?", "+r:"")+")"},a.prototype.forEach=function(e){e(this.object,"object",this);for(var t=0;t<this.ranges.length;t++)e(this.ranges[t],"ranges["+t+"]",this)},a.prototype.map=function(e){for(var t=this._ifNode(e(this.object,"object",this)),r=[],n=0;n<this.ranges.length;n++)r[n]=this._ifNode(e(this.ranges[n],"ranges["+n+"]",this));return new a(t,r)},a.prototype.objectName=function(){return this.object.name},a.prototype.clone=function(){return new a(this.object,this.ranges.slice(0))},a.prototype._toString=function(e){e=this.object.toString(e);return(e=o(this)?"("+e+"(":e)+"["+this.ranges.join(", ")+"]"},a.prototype._toTex=function(e){var t=this.object.toTex(e),r=(o(this)&&(t="\\left("+t+"\\right)"),this.ranges.map(function(t){return t.toTex(e)}));return t+"_{"+r.join(",")+"}"},a}},function(e,t,r){"use strict";var i=r(274);t.name="RangeNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t,r){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError("Node expected");if(!t||!t.isNode)throw new TypeError("Node expected");if(r&&(!r||!r.isNode))throw new TypeError("Node expected");if(3<arguments.length)throw new Error("Too many arguments");this.start=e,this.end=t,this.step=r||null}function s(e,t){var r=i.getPrecedence(e,t),n={},a=i.getPrecedence(e.start,t),a=(n.start=null!==a&&a<=r||"all"===t,e.step&&(a=i.getPrecedence(e.step,t),n.step=null!==a&&a<=r||"all"===t),i.getPrecedence(e.end,t));return n.end=null!==a&&a<=r||"all"===t,n}return n=n(r(271)),(o.prototype=new n).type="RangeNode",o.prototype.isRangeNode=!0,o.prototype._compile=function(e,t){return"math.range("+this.start._compile(e,t)+", "+this.end._compile(e,t)+(this.step?", "+this.step._compile(e,t):"")+")"},o.prototype.forEach=function(e){e(this.start,"start",this),e(this.end,"end",this),this.step&&e(this.step,"step",this)},o.prototype.map=function(e){return new o(this._ifNode(e(this.start,"start",this)),this._ifNode(e(this.end,"end",this)),this.step&&this._ifNode(e(this.step,"step",this)))},o.prototype.clone=function(){return new o(this.start,this.end,this.step&&this.step)},o.prototype._toString=function(e){var n=s(this,e&&e.parenthesis?e.parenthesis:"keep"),i=this.start.toString(e),i=i=n.start?"("+i+")":i,a=(this.step&&(a=this.step.toString(e),i+=":"+(a=n.step?"("+a+")":a)),this.end.toString(e));return i+":"+(a=n.end?"("+a+")":a)},o.prototype._toTex=function(e){var r=s(this,e&&e.parenthesis?e.parenthesis:"keep"),n=this.start.toTex(e),i=(r.start&&(n="\\left("+n+"\\right)"),this.step&&(i=this.step.toTex(e),n+=":"+(i=r.step?"\\left("+i+"\\right)":i)),this.end.toTex(e));return n+":"+(i=r.end?"\\left("+i+"\\right)":i)},o}},function(e,t,r){"use strict";var i=r(29);t.name="SymbolNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,a,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');this.name=e}function u(e){throw new Error("Undefined symbol "+e)}var c=n(r(271)),f=n(r(73));return(s.prototype=new c).type="SymbolNode",s.prototype.isSymbolNode=!0,s.prototype._compile=function(e,t){return e.undef=u,e.Unit=f,t[this.name]?this.name:this.name in e.math?'("'+this.name+'" in scope ? scope["'+this.name+'"] : math["'+this.name+'"])':'("'+this.name+'" in scope ? scope["'+this.name+'"] : '+(f.isValuelessUnit(this.name)?'new Unit(null, "'+this.name+'")':'undef("'+this.name+'")')+")"},s.prototype.forEach=function(e){},s.prototype.map=function(e){return this.clone()},s.prototype.clone=function(){return new s(this.name)},s.prototype._toString=function(e){return this.name},s.prototype._toTex=function(e){var t=!1,t=(void 0===o[this.name]&&f.isValuelessUnit(this.name)&&(t=!0),i.toSymbol(this.name,t));return"\\"===t[0]?t:" "+t},s}},function(e,t,r){"use strict";var i=r(29),a=r(274);t.name="OperatorNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,o,s){function u(e,t,r){if(!(this instanceof u))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('string expected for parameter "op"');if("string"!=typeof t)throw new TypeError('string expected for parameter "fn"');if(!Array.isArray(r)||!r.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "args"');this.op=e,this.fn=t,this.args=r||[]}function c(e,t,r,n){var s,i=a.getPrecedence(e,t),o=a.getAssociativity(e,t);if("all"===t||2<r.length)return s=[],r.forEach(function(e){switch(e.getContent().type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":s.push(!1);break;default:s.push(!0)}}),s;switch(r.length){case 0:return[];case 1:var u=a.getPrecedence(r[0],t);if(n&&null!==u){if(f=("keep"===t?(c=r[0].getIdentifier(),e):(c=r[0].getContent().getIdentifier(),e.getContent())).getIdentifier(),!1===a.properties[i][f].latexLeftParens)return[!1];if(!1===a.properties[u][c].latexParens)return[!1]}return null!==u&&u<=i?[!0]:[!1];case 2:var f,d,y,c=a.getPrecedence(r[0],t),u=a.isAssociativeWith(e,r[0],t),u=null!==c&&(c===i&&"right"===o&&!u||c<i),g=a.getPrecedence(r[1],t),v=a.isAssociativeWith(e,r[1],t),v=null!==g&&(g===i&&"left"===o&&!v||g<i);return n&&(y=("keep"===t?(f=e.getIdentifier(),d=e.args[0].getIdentifier(),e.args[1]):(f=e.getContent().getIdentifier(),d=e.args[0].getContent().getIdentifier(),e.args[1].getContent())).getIdentifier(),null!==c&&(!1===a.properties[i][f].latexLeftParens&&(u=!1),!1===a.properties[c][d].latexParens)&&(u=!1),null!==g)&&(!1===a.properties[i][f].latexRightParens&&(v=!1),!1===a.properties[g][y].latexParens)&&(v=!1),[u,v]}}var f=n(r(271));return n(r(277)),n(r(281)),n(r(283)),(u.prototype=new f).type="OperatorNode",u.prototype.isOperatorNode=!0,u.prototype._compile=function(e,t){var r;if(e.math[this.fn])return r=this.args.map(function(r){return r._compile(e,t)}),"math."+this.fn+"("+r.join(", ")+")";throw new Error("Function "+this.fn+' missing in provided namespace "math"')},u.prototype.forEach=function(e){for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},u.prototype.map=function(e){for(var t=[],r=0;r<this.args.length;r++)t[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new u(this.op,this.fn,t)},u.prototype.clone=function(){return new u(this.op,this.fn,this.args.slice(0))},u.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=this.args,n=c(this,t,r,!1);switch(r.length){case 1:var i=a.getAssociativity(this,t),o=r[0].toString(e);return n[0]&&(o="("+o+")"),"right"===i?this.op+o:o+this.op;case 2:i=r[0].toString(e),o=r[1].toString(e);return n[0]&&(i="("+i+")"),n[1]&&(o="("+o+")"),i+" "+this.op+" "+o;default:return this.fn+"("+this.args.join(", ")+")"}},u.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=this.args,n=c(this,t,r,!0),o=void 0===(o=i.operators[this.fn])?this.op:o;switch(r.length){case 1:var s=a.getAssociativity(this,t),u=r[0].toTex(e);return n[0]&&(u="\\left("+u+"\\right)"),"right"===s?o+u:u+o;case 2:var s=r[0],l=s.toTex(e);n[0]&&(l="\\left("+l+"\\right)");var h,m=r[1].toTex(e);switch(n[1]&&(m="\\left("+m+"\\right)"),h=("keep"===t?s:s.getContent()).getIdentifier(),this.getIdentifier()){case"OperatorNode:divide":return o+"{"+l+"}{"+m+"}";case"OperatorNode:pow":switch(l="{"+l+"}",m="{"+m+"}",h){case"ConditionalNode":case"OperatorNode:divide":l="\\left("+l+"\\right)"}}return l+o+m;default:return"\\mathrm{"+this.fn+"}\\left("+r.map(function(t){return t.toTex(e)}).join(",")+"\\right)"}},u.prototype.getIdentifier=function(){return this.type+":"+this.fn},u}},function(e,t,r){"use strict";var i=r(29);t.name="FunctionNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,a,o){function s(e,t){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('string expected for parameter "name"');if(!Array.isArray(t)||!t.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "args"');this.name=e,this.args=t||[]}function u(e,t,r){for(var n,i="",a=new RegExp("\\$(?:\\{([a-z_][a-z_0-9]*)(?:\\[([0-9]+)\\])?\\}|\\$)","ig"),o=0;null!==(n=a.exec(e));)if(i+=e.substring(o,n.index),o=n.index,"$$"===n[0])i+="$",o++;else{o+=n[0].length;var s=t[n[1]];if(!s)throw new ReferenceError("Template: Property "+n[1]+" does not exist.");if(void 0===n[2])switch(typeof s){case"string":i+=s;break;case"object":if(s.isNode)i+=s.toTex(r);else{if(!Array.isArray(s))throw new TypeError("Template: "+n[1]+" has to be a Node, String or array of Nodes");i+=s.map(function(e,t){if(e&&e.isNode)return e.toTex(r);throw new TypeError("Template: "+n[1]+"["+t+"] is not a Node.")}).join(",")}break;default:throw new TypeError("Template: "+n[1]+" has to be a Node, String or array of Nodes")}else{if(!s[n[2]]||!s[n[2]].isNode)throw new TypeError("Template: "+n[1]+"["+n[2]+"] is not a Node.");i+=s[n[2]].toTex(r)}}return i+e.slice(o)}var c=n(r(271)),f=n(r(281)),l=((s.prototype=new c).type="FunctionNode",s.prototype.isFunctionNode=!0,s.prototype._compile=function(e,t){var r=e.math[this.name],r="function"==typeof r&&1==r.rawArgs,i=this.args.map(function(r){return r._compile(e,t)});if(r){for(var a,o=0;a="p"+o,o++,a in e;);return e[a]=this.args,'("'+this.name+'" in scope ? scope["'+this.name+'"]('+i.join(", ")+') : math["'+this.name+'"]('+a+", math, scope))"}return new f(this.name)._compile(e,t)+"("+i.join(", ")+")"},s.prototype.forEach=function(e){for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},s.prototype.map=function(e){for(var t=[],r=0;r<this.args.length;r++)t[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new s(this.name,t)},s.prototype.clone=function(){return new s(this.name,this.args.slice(0))},s.prototype.toString),p=(s.prototype.toString=function(e){var t;return void 0!==(t=e&&"object"==typeof e.handler&&e.handler.hasOwnProperty(this.name)?e.handler[this.name](this,e):t)?t:l.call(this,e)},s.prototype._toString=function(e){return this.name+"("+this.args.join(", ")+")"},s.prototype.toTex);return s.prototype.toTex=function(e){var t;return void 0!==(t=e&&"object"==typeof e.handler&&e.handler.hasOwnProperty(this.name)?e.handler[this.name](this,e):t)?t:p.call(this,e)},s.prototype._toTex=function(e){e&&e.parenthesis&&e.parenthesis;var t,n,r=this.args.map(function(t){return t.toTex(e)});switch(typeof(t=!o[this.name]||"function"!=typeof o[this.name].toTex&&"object"!=typeof o[this.name].toTex&&"string"!=typeof o[this.name].toTex?t:o[this.name].toTex)){case"function":n=t(this,e);break;case"string":n=u(t,this,e);break;case"object":switch(typeof t[r.length]){case"function":n=t[r.length](this,e);break;case"string":n=u(t[r.length],this,e)}}return void 0!==n?n:u(i.defaultTemplate,this,e)},s.prototype.getIdentifier=function(){return this.type+":"+this.name},s}},function(e,t,r){"use strict";t.name="ParenthesisNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError('Node expected for parameter "content"');this.content=e}return n=n(r(271)),(a.prototype=new n).type="ParenthesisNode",a.prototype.isParenthesisNode=!0,a.prototype._compile=function(e,t){return this.content._compile(e,t)},a.prototype.getContent=function(){return this.content.getContent()},a.prototype.forEach=function(e){e(this.content,"content",this)},a.prototype.map=function(e){return new a(e(this.content,"content",this))},a.prototype.clone=function(){return new a(this.content)},a.prototype._toString=function(e){return e&&"keep"!==e.parenthesis?this.content.toString(e):"("+this.content.toString(e)+")"},a.prototype._toTex=function(e){return e&&"keep"!==e.parenthesis?this.content.toTex(e):"\\left("+this.content.toTex(e)+"\\right)"},a}},function(e,t,r){"use strict";t.name="UpdateNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isIndexNode)throw new TypeError('Expected IndexNode for parameter "index"');if(!t||!t.isNode)throw new TypeError('Expected Node for parameter "expr"');this.index=e,this.expr=t}var o=n(r(271));return n(r(279)),(a.prototype=new o).type="UpdateNode",a.prototype.isUpdateNode=!0,a.prototype._compile=function(e,t){return(t[this.index.objectName()]?this.name+" = ":'scope["'+this.index.objectName()+'"]')+" = "+this.index.compileSubset(e,t,this.expr._compile(e,t))},a.prototype.forEach=function(e){e(this.index,"index",this),e(this.expr,"expr",this)},a.prototype.map=function(e){return new a(this._ifNode(e(this.index,"index",this)),this._ifNode(e(this.expr,"expr",this)))},a.prototype.clone=function(){return new a(this.index,this.expr)},a.prototype._toString=function(e){var t=this.expr.toString(e);return e&&"all"===e.parenthesis&&(t="("+t+")"),this.index.toString(e)+" = "+t},a.prototype._toTex=function(e){var t=this.expr.toTex(e);return e&&"all"===e.parenthesis&&(t="\\left("+t+"\\right)"),this.index.toTex(e)+":="+t},a}},function(e,t,r){"use strict";var i=r(19);t.name="eval",t.factory=function(e,t,n,a){var o=n(r(269));return a("compile",{string:function(e){return o(e).compile().eval({})},"string, Object":function(e,t){return o(e).compile().eval(t)},"Array | Matrix":function(e){var t={};return i(e,function(e){return o(e).compile().eval(t)})},"Array | Matrix, Object":function(e,t){return i(e,function(e){return o(e).compile().eval(t)})}})}},function(e,t,r){"use strict";t.math=!0,t.name="help",t.factory=function(e,t,n,i,a){var o=n(r(97));return i("help",{any:function(t){var r,n=t;if("string"!=typeof t)for(r in a)if(a.hasOwnProperty(r)&&t===a[r]){n=r;break}var i=o[n];if(i)return new e.Help(i);throw new Error('No documentation found on "'+n+'"')}})}},function(e,t,r){"use strict";t.name="parse",t.factory=function(e,t,n,i){return n=n(r(269)),i("parse",{"string | Array | Matrix":n,"string | Array | Matrix, Object":n})}},function(e,t,r){"use strict";t.name="parser",t.factory=function(e,t,n,i,a){var o=n(r(290));return i("parser",{"":function(){return new o(a)}})},t.math=!0},function(e,t,r){"use strict";t.name="Parser",t.path="expression",t.factory=function(e,t,n,i,a){function o(){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");this.scope={}}var s=n(r(269));return o.prototype.type="Parser",o.prototype.isParser=!0,o.prototype.parse=function(e){throw new Error("Parser.parse is deprecated. Use math.parse instead.")},o.prototype.compile=function(e){throw new Error("Parser.compile is deprecated. Use math.compile instead.")},o.prototype.eval=function(e){return s(e).compile().eval(this.scope)},o.prototype.get=function(e){return this.scope[e]},o.prototype.set=function(e,t){return this.scope[e]=t},o.prototype.remove=function(e){delete this.scope[e]},o.prototype.clear=function(){for(var e in this.scope)this.scope.hasOwnProperty(e)&&delete this.scope[e]},o},t.math=!0},function(e,t,r){e.exports=[r(270),r(273),r(275),r(276),r(277),r(279),r(278),r(283),r(271),r(282),r(284),r(280),r(281),r(285)]},function(e,t,r){e.exports=[r(293),r(296),r(298),r(300),r(301),r(303),r(308),r(313),r(315),r(317)]},function(e,t,r){"use strict";var i=r(294).transform;t.name="concat",t.path="expression.transform",t.factory=function(e,t,n,a){var o=n(r(295));return a("concat",{"...any":function(e){var t=e.length-1,r=e[t];"number"==typeof r?e[t]=r-1:r&&!0===r.isBigNumber&&(e[t]=r.minus(1));try{return o.apply(null,e)}catch(n){throw i(n)}}})}},function(e,t,r){var n=r(42);t.transform=function(e){return e&&e.isIndexError?new n(e.index+1,e.min+1,e.max+1):e}},function(e,t,r){"use strict";var a=r(3).clone,o=r(6).isInteger,s=r(39),u=r(42),c=r(41);t.name="concat",t.factory=function(e,t,n,f){var l=n(r(50));return(n=f("concat",{"...Array | Matrix | number | BigNumber":function(e){for(var r,n=e.length,f=-1,p=!1,m=[],t=0;t<n;t++){var h=e[t];if(h&&!0===h.isMatrix&&(p=!0),"number"==typeof h||h&&!0===h.isBigNumber){if(t!==n-1)throw new Error("Dimension must be specified as last argument");if(r=f,f=h.valueOf(),!o(f))throw new TypeError("Integer number expected for dimension");if(f<0)throw new u(f);if(0<t&&r<f)throw new u(f,r+1)}else{var h=a(h).valueOf(),v=s.size(h);if(m[t]=h,r=f,f=v.length-1,0<t&&f!=r)throw new c(r+1,f+1)}}if(0==m.length)throw new SyntaxError("At least one matrix expected");for(var d=m.shift();m.length;)d=function i(e,t,r,n){if(n<r){if(e.length!=t.length)throw new c(e.length,t.length);for(var a=[],o=0;o<e.length;o++)a[o]=i(e[o],t[o],r,n+1);return a}return e.concat(t)}(d,m.shift(),f,0);return p?l(d):d},"...string":function(e){return e.join("")}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="filter",t.path="expression.transform",t.factory=function(e,t,n,i){function a(e,t,r){var n;if(e[0]&&(n=e[0].compile().eval(r)),e[1])if(e[1]&&e[1].isSymbolNode)i=e[1].compile().eval(r);else{var a=r||{},r=e[1].filter(function(e){return e&&e.isSymbolNode&&!(e.name in t)&&!(e.name in a)})[0],u=Object.create(a),c=e[1].compile();if(!r)throw new Error("No undefined variable found in filter equation");var f=r.name,i=function(e){return u[f]=e,c.eval(u)}}return o(n,i)}var o=n(r(297));return n(r(281)),a.rawArgs=!0,a}},function(e,t,r){"use strict";function i(e,t){if(1!==o(e).length)throw new Error("Only one dimensional matrices supported");return e.filter(function(e){return t(e)})}function a(e,t){if(1!==o(e).length)throw new Error("Only one dimensional matrices supported");return e.filter(function(e){return t.test(e)})}var o=r(39).size;t.name="filter",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("filter",{"Array, function":i,"Array, RegExp":a,"Matrix, function":function(e,t){return s(i(e.toArray(),t))},"Matrix, RegExp":function(e,t){return s(a(e.toArray(),t))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="forEach",t.path="expression.transform",t.factory=function(e,t,n,i){return n(r(299)),i("forEach",{"Array | Matrix, function":function(e,t){var r=function(n,i){Array.isArray(n)?n.forEach(function(e,t){r(e,i.concat(t+1))}):t(n,i,e)};r(e.valueOf(),[])}})}},function(e,t){"use strict";function n(e,t){function r(n,i){Array.isArray(n)?n.forEach(function(e,t){r(e,i.concat(t))}):t(n,i,e)}r(e,[])}t.name="forEach",t.factory=function(e,t,r,i){return(i=i("forEach",{"Array, function":n,"Matrix, function":function(e,t){return e.forEach(t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",i}},function(e,t,r){"use strict";Array.isArray,t.name="index",t.path="expression.transform",t.factory=function(e,t,n){return n(r(66)),function(){for(var t=[],r=0,n=arguments.length;r<n;r++){var i=arguments[r];if(i&&!0===i.isRange)i.start--,i.end-=0<i.step?0:2;else if(i&&!0===i.isSet)i=i.map(function(e){return e-1});else if(i&&(!0===i.isArray||i.isMatrix))i=i.map(function(e){return e-1});else if("number"==typeof i)i--;else{if(!i||!0!==i.isBigNumber)throw new TypeError("Ranges must be a Number, Range, Array or Matrix");i=i.toNumber()-1}t[r]=i}var a=new e.Index;return e.Index.apply(a,t),a}}},function(e,t,r){"use strict";function i(e,t,r){return function n(e,i){return Array.isArray(e)?e.map(function(e,t){return n(e,i.concat(t+1))}):t(e,i,r)}(e,[])}t.name="map",t.path="expression.transform",t.factory=function(e,t,n,a){n(r(302));var o=n(r(50));return a("max",{"Array, function":function(e,t){return i(e,t,e)},"Matrix, function":function(e,t){return o(i(e.valueOf(),t,e))}})}},function(e,t){"use strict";function n(e,t){function r(n,i){return Array.isArray(n)?n.map(function(e,t){return r(e,i.concat(t))}):t(n,i,e)}return r(e,[])}t.name="map",t.factory=function(e,t,r,i){return(i=i("map",{"Array, function":n,"Matrix, function":function(e,t){return e.map(t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",i}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="max",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(305));return o("max",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t){"use strict";e.exports=function(e){return Array.isArray(e)||e&&!0===e.isMatrix}},function(e,t,r){"use strict";var i=r(306),a=r(307);t.name="max",t.factory=function(e,t,n,o){function s(e,t){return c(e,t)?e:t}function u(e){var t=void 0;if(i(e,function(e){void 0!==t&&!c(e,t)||(t=e)}),void 0===t)throw new Error("Cannot calculate max of an empty array");return t}var c=n(r(62));return(n=o("max",{"Array | Matrix":u,"Array | Matrix, number | BigNumber":function(e,t){return a(e,t.valueOf(),s)},"...":function(){return u(arguments)}})).toTex="\\max\\left(${args}\\right)",n}},function(e,t){"use strict";e.exports=function r(e,t){for(var n=0,i=(e=e&&!0===e.isMatrix?e.valueOf():e).length;n<i;n++){var a=e[n];Array.isArray(a)?r(a,t):t(a)}}},function(e,t,r){"use strict";function n(e,t,r){var a,o,s,u;if(t<=0){if(Array.isArray(e[0])){for(u=function(e){var t,r,n=e.length,i=e[0].length,a=[];for(r=0;r<i;r++){var o=[];for(t=0;t<n;t++)o.push(e[t][r]);a.push(o)}return a}(e),o=[],a=0;a<u.length;a++)o[a]=n(u[a],t-1,r);return o}for(s=e[0],a=1;a<e.length;a++)s=r(s,e[a]);return s}for(o=[],a=0;a<e.length;a++)o[a]=n(e[a],t-1,r);return o}var a=r(39).size,o=r(42);e.exports=function(e,t,r){var i=Array.isArray(e)?a(e):e.size();if(t<0)throw new o(t);if(t>=i.length)throw new o(t,i.length);return e&&!0===e.isMatrix?e.create(n(e.valueOf(),t,r)):n(e,t,r)}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="mean",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(309));return o("mean",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t,r){"use strict";var i=r(39).size,a=r(306),o=r(307);t.name="mean",t.factory=function(e,t,n,s){function c(e){var t=0,r=0;if(a(e,function(e){t=f(t,e),r++}),0===r)throw new Error("Cannot calculate mean of an empty array");return l(t,r)}var f=n(r(49)),l=n(r(310));return(n=s("mean",{"Array | Matrix":c,"Array | Matrix, number | BigNumber":function(e,t){var r=o(e,t,f),e=Array.isArray(e)?i(e):e.size();return l(r,e[t])},"...":function(){return c(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3).extend;t.name="divide",t.factory=function(e,t,n,a){var o=n(r(78)),s=n(r(83)),u=n(r(311)),c=n(r(50)),f=n(r(84)),l=n(r(56));return(n=a("divide",i({"Array | Matrix, Array | Matrix":function(e,t){return s(e,u(t))},"Matrix, any":function(e,t){var r;switch(e.storage()){case"sparse":r=f(e,t,o,!1);break;case"dense":r=l(e,t,o,!1)}return r},"Array, any":function(e,t){return l(c(e),t,o,!1).valueOf()},"any, Array | Matrix":function(e,t){return s(e,u(t))}},o.signatures))).toTex="\\frac{${args[0]}}{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(38);t.name="inv",t.factory=function(e,t,n,a){function o(e,t,r){var i,a,s;if(1==t){if(0==(o=e[0][0]))throw Error("Cannot calculate inverse, determinant is zero");return[[u(1,o)]]}if(2==t){var o=p(e);if(0==o)throw Error("Cannot calculate inverse, determinant is zero");return[[u(e[1][1],o),u(l(e[0][1]),o)],[u(l(e[1][0]),o),u(e[0][0],o)]]}var g=e.concat();for(n=0;n<t;n++)g[n]=g[n].concat();for(var v=m(t).valueOf(),d=0;d<r;d++){for(n=d;n<t&&0==g[n][d];)n++;if(n==t||0==g[n][d])throw Error("Cannot calculate inverse, determinant is zero");n!=d&&(s=g[d],g[d]=g[n],g[n]=s,s=v[d],v[d]=v[n],v[n]=s);for(var y=g[d],x=v[d],n=0;n<t;n++){var b=g[n],w=v[n];if(n!=d){if(0!=b[d]){for(a=u(l(b[d]),y[d]),i=d;i<r;i++)b[i]=c(b[i],f(a,y[i]));for(i=0;i<r;i++)w[i]=c(w[i],f(a,x[i]))}}else{for(a=y[d],i=d;i<r;i++)b[i]=u(b[i],a);for(i=0;i<r;i++)w[i]=u(w[i],a)}}}return v}var s=n(r(50)),u=n(r(78)),c=n(r(51)),f=n(r(83)),l=n(r(75)),p=n(r(312)),m=n(r(81));return(n=a("inv",{"Array | Matrix":function(e){var t=!0===e.isMatrix?e.size():i.array.size(e);switch(t.length){case 1:if(1==t[0])return!0===e.isMatrix?s([u(1,e.valueOf()[0])]):[u(1,e[0])];throw new RangeError("Matrix must be square (size: "+i.string.format(t)+")");case 2:var r=t[0],n=t[1];if(r==n)return!0===e.isMatrix?s(o(e.valueOf(),r,n),e.storage()):o(e,r,n);throw new RangeError("Matrix must be square (size: "+i.string.format(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+i.string.format(t)+")")}},any:function(e){return u(1,e)}})).toTex="\\left(${args[0]}\\right)^{-1}",n}},function(e,t,r){"use strict";var i=r(38),a=i.object,o=i.string;t.name="det",t.factory=function(e,t,n,i){var u=n(r(50)),c=n(r(49)),f=n(r(74)),l=n(r(83)),p=n(r(75));return(n=i("det",{any:function(e){return a.clone(e)},"Array | Matrix":function(e){var t=e&&!0===e.isMatrix?e.size():Array.isArray(e)?(e=u(e)).size():[];switch(t.length){case 0:return a.clone(e);case 1:if(1==t[0])return a.clone(e.valueOf()[0]);throw new RangeError("Matrix must be square (size: "+o.format(t)+")");case 2:var r=t[0],n=t[1];if(r==n)return function(e,t){if(1==t)return a.clone(e[0][0]);if(2==t)return f(l(e[0][0],e[1][1]),l(e[1][0],e[0][1]));for(var i=e,o=0;o<t-1;o++)i=l(function(e){for(var r,n=new Array(e.length),i=0,t=1;t<e.length;t++)i=c(i,e[t][t]);for(t=0;t<e.length;t++){for(n[t]=new Array(e.length),n[t][t]=p(i),r=0;r<t;r++)n[t][r]=0;for(r=t+1;r<e.length;r++)n[t][r]=e[t][r];t+1<e.length&&(i=f(i,e[t+1][t+1]))}return n}(i),e);return t%2==0?p(i[0][0]):i[0][0]}(e.clone().valueOf(),r);throw new RangeError("Matrix must be square (size: "+o.format(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+o.format(t)+")")}}})).toTex="\\det\\left(${args[0]}\\right)",n}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="min",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(314));return o("min",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t,r){"use strict";var i=r(306),a=r(307);t.name="min",t.factory=function(e,t,n,o){function s(e,t){return c(e,t)?e:t}function u(e){var t=void 0;if(i(e,function(e){void 0!==t&&!c(e,t)||(t=e)}),void 0===t)throw new Error("Cannot calculate min of an empty array");return t}var c=n(r(58));return(n=o("min",{"Array | Matrix":u,"Array | Matrix, number | BigNumber":function(e,t){return a(e,t.valueOf(),s)},"...":function(){return u(arguments)}})).toTex="\\min\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="range",t.path="expression.transform",t.factory=function(e,t,n,i){var a=n(r(316));return i("range",{"...any":function(e){return"boolean"!=typeof e[e.length-1]&&e.push(!0),a.apply(null,e)}})}},function(e,t,r){"use strict";t.name="range",t.factory=function(e,t,n,i){function a(e){return"array"===t.matrix?e:p(e)}function o(r,n){var i=function(e){var r=e.split(":").map(function(e){return Number(e)});if(r.some(function(e){return isNaN(e)}))return null;switch(r.length){case 2:return{start:r[0],end:r[1],step:1};case 3:return{start:r[0],end:r[2],step:r[1]};default:return null}}(r);if(i)return"bignumber"===t.number?a((n?f:c)(new e.BigNumber(i.start),new e.BigNumber(i.end),new e.BigNumber(i.step))):a((n?u:s)(i.start,i.end,i.step));throw new SyntaxError('String "'+r+'" is no valid range')}function s(e,t,r){var n=[],i=e;if(0<r)for(;i<t;)n.push(i),i+=r;else if(r<0)for(;t<i;)n.push(i),i+=r;return n}function u(e,t,r){var n=[],i=e;if(0<r)for(;i<=t;)n.push(i),i+=r;else if(r<0)for(;t<=i;)n.push(i),i+=r;return n}function c(e,t,r){var n=[],i=e;if(r.gt(m))for(;i.lt(t);)n.push(i),i=i.plus(r);else if(r.lt(m))for(;i.gt(t);)n.push(i),i=i.plus(r);return n}function f(e,t,r){var n=[],i=e;if(r.gt(m))for(;i.lte(t);)n.push(i),i=i.plus(r);else if(r.lt(m))for(;i.gte(t);)n.push(i),i=i.plus(r);return n}var p=n(r(50)),m=new e.BigNumber(0),h=new e.BigNumber(1);return(n=i("range",{string:o,"string, boolean":o,"number, number":function(e,t){return a(s(e,t,1))},"number, number, number":function(e,t,r){return a(s(e,t,r))},"number, number, boolean":function(e,t,r){return a((r?u:s)(e,t,1))},"number, number, number, boolean":function(e,t,r,n){return a((n?u:s)(e,t,r))},"BigNumber, BigNumber":function(e,t){return a(c(e,t,h))},"BigNumber, BigNumber, BigNumber":function(e,t,r){return a(c(e,t,r))},"BigNumber, BigNumber, boolean":function(e,t,r){return a((r?f:c)(e,t,h))},"BigNumber, BigNumber, BigNumber, boolean":function(e,t,r,n){return a((n?f:c)(e,t,r))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(294).transform;t.name="subset",t.path="expression.transform",t.factory=function(e,t,n,a){var o=n(r(318));return a("subset",{"...any":function(e){try{return o.apply(null,e)}catch(t){throw i(t)}}})}},function(e,t,r){"use strict";var i=r(3).clone,a=r(39).validateIndex,o=r(41);t.name="subset",t.factory=function(e,t,n,s){function c(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Index expected");if(1!=t.size().length)throw new o(t.size().length,1);if(void 0!==n){if("string"!=typeof n||1!==n.length)throw new TypeError("Single character expected as defaultValue")}else n=" ";var s,i=t.dimension(0);if(i.size()[0]!=r.length)throw new o(i.size()[0],r.length);var u=e.length;a(t.min()[0]),a(t.max()[0]);for(var c=[],f=0;f<u;f++)c[f]=e.charAt(f);if(i.forEach(function(e,t){c[e]=r.charAt(t[0])}),u<c.length)for(f=u-1,s=c.length;f<s;f++)c[f]||(c[f]=n);return c.join("")}var f=n(r(50));return(n=s("subset",{"Array, Index":function(e,t){e=f(e).subset(t);return e&&e.valueOf()},"Matrix, Index":function(e,t){return e.subset(t)},"string, Index":function(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Index expected");if(1!=t.size().length)throw new o(t.size().length,1);var r=e.length,r=(a(t.min()[0],r),a(t.max()[0],r),t.dimension(0)),i="";return r.forEach(function(t){i+=e.charAt(t)}),i},"Array, Index, any":function(e,t,r){return f(i(e)).subset(t,r,void 0).valueOf()},"Array, Index, any, any":function(e,t,r,n){return f(i(e)).subset(t,r,n).valueOf()},"Matrix, Index, any":function(e,t,r){return e.clone().subset(t,r)},"Matrix, Index, any, any":function(e,t,r,n){return e.clone().subset(t,r,n)},"string, Index, string":c,"string, Index, string, string":c})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3),a=r(23);t.name="Help",t.path="type",t.factory=function(e,t,n,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if(!e)throw new Error('Argument "doc" missing');this.doc=e}var u=n(r(289))();return s.prototype.type="Help",s.prototype.isHelp=!0,s.prototype.toString=function(){var e=this.doc||{},t="\n";if(e.name&&(t+="Name: "+e.name+"\n\n"),e.category&&(t+="Category: "+e.category+"\n\n"),e.description&&(t+="Description:\n    "+e.description+"\n\n"),e.syntax&&(t+="Syntax:\n    "+e.syntax.join("\n    ")+"\n\n"),e.examples){t+="Examples:\n";for(var r=0;r<e.examples.length;r++){var i,n=e.examples[r];t+="    "+n+"\n";try{i=u.eval(n)}catch(o){i=o}i&&!i.isHelp&&(t+="        "+a.format(i,{precision:14})+"\n")}t+="\n"}return e.seealso&&(t+="See also: "+e.seealso.join(", ")+"\n"),t},s.prototype.toJSON=function(){var e=i.clone(this.doc);return e.mathjs="Help",e},s.fromJSON=function(e){var r,t={};for(r in e)"mathjs"!==r&&(t[r]=e[r]);return new s(t)},s.prototype.valueOf=s.prototype.toString,s}},function(e,t,r){e.exports=[r(321),r(348),r(378),r(394),r(403),r(408),r(411),r(417),r(426),r(435),r(440),r(448),r(489),r(491)]},function(e,t,r){e.exports=[r(322),r(323),r(343),r(345),r(347)]},function(e,t,r){"use strict";var a=r(38).object;t.name="lup",t.factory=function(e,t,n,i){var o=n(r(50)),s=n(r(85)),u=n(r(51)),c=n(r(78)),f=n(r(77)),l=n(r(74)),p=n(r(62)),m=n(r(47)),h=n(r(75)),g=e.SparseMatrix,v=e.DenseMatrix,d=e.Spa,n=i("lup",{DenseMatrix:function(e){return x(e)},SparseMatrix:function(e){return b(e)},Array:function(e){e=o(e),e=x(e);return{L:e.L.valueOf(),U:e.U.valueOf(),p:e.p}}}),x=function(e){var r,i=e._size[0],o=e._size[1],h=Math.min(i,o),g=a.clone(e._data),d=[],e=[i,h],x=[],b=[h,o],w=[];for(t=0;t<i;t++)w[t]=t;for(r=0;r<o;r++){if(0<r)for(t=0;t<i;t++){for(var N=Math.min(t,r),E=0,n=0;n<N;n++)E=u(E,f(g[t][n],g[n][r]));g[t][r]=l(g[t][r],E)}for(var M=r,A=0,_=0,t=r;t<i;t++){var O=g[t][r],T=s(O);p(T,A)&&(M=t,A=T,_=O)}if(r!==M&&(w[r]=[w[M],w[M]=w[r]][0],v._swapRows(r,M,g)),r<i)for(t=r+1;t<i;t++){var C=g[t][r];m(C,0)||(g[t][r]=c(g[t][r],_))}}for(r=0;r<o;r++)for(t=0;t<i;t++)0===r&&(t<o&&(x[t]=[]),d[t]=[]),t<r?(t<o&&(x[t][r]=g[t][r]),r<i&&(d[t][r]=0)):t!==r?(t<o&&(x[t][r]=0),r<i&&(d[t][r]=g[t][r])):(t<o&&(x[t][r]=g[t][r]),r<i&&(d[t][r]=1));var e=new v({data:d,size:e}),b=new v({data:x,size:b}),B=[];for(t=0,h=w.length;t<h;t++)B[w[t]]=t;return{L:e,U:b,p:B,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}},b=function(e){for(var i=e._size[0],a=e._size[1],o=Math.min(i,a),u=e._values,l=e._index,v=e._ptr,y=[],x=[],b=[],w=[i,o],N=[],E=[],M=[],A=[o,a],_=[],O=[],t=0;t<i;t++)O[_[t]=t]=t;for(var r=0;r<a;r++){for(var C=new d,S=(r<i&&(b.push(y.length),y.push(1),x.push(r)),M.push(N.length),v[r]),z=v[r+1],n=S;n<z;n++)t=l[n],C.set(_[t],u[n]);0<r&&C.forEach(0,r-1,function(e,t){g._forEachRow(e,y,x,b,function(r,n){e<r&&C.accumulate(r,h(f(n,t)))})});var B=r,k=C.get(r),I=s(k);C.forEach(r+1,i-1,function(e,t){var r=s(t);p(r,I)&&(B=e,I=r,k=t)}),r!==B&&(g._swapRows(r,B,w[1],y,x,b),g._swapRows(r,B,A[1],N,E,M),C.swap(r,B),function(e,t){var r=O[e],n=O[t];_[r]=t,O[_[n]=e]=n,O[t]=r}(r,B)),C.forEach(0,i-1,function(e,t){e<=r?(N.push(t),E.push(e)):(t=c(t,k),m(t,0)||(y.push(t),x.push(e)))})}return M.push(N.length),b.push(y.length),{L:new g({values:y,index:x,ptr:b,size:w}),U:new g({values:N,index:E,ptr:M,size:A}),p:_,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}};return n}},function(e,t,r){"use strict";var o=r(38).number.isInteger;t.name="slu",t.factory=function(e,t,n,i){var a=n(r(324)),s=n(r(335));return i("slu",{"SparseMatrix, number, number":function(e,t,r){if(!o(t)||t<0||3<t)throw new Error("Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]");if(r<0||1<r)throw new Error("Partial pivoting threshold must be a number from 0 to 1");t=a(t,e,!1),e=s(e,t,r);return{L:e.L,U:e.U,p:e.pinv,q:t.q,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\np: "+this.p.toString()+(this.q?"\nq: "+this.q.toString():"")+"\n"}}}})}},function(e,t,r){"use strict";t.name="cs_sqr",t.path="sparse",t.factory=function(e,t,n){var i=n(r(325)),a=n(r(330)),o=n(r(331)),s=n(r(332)),u=n(r(333));return function(e,t,r){var n,c=t._ptr,p=t._size[1],m={};if(m.q=i(e,t),e&&!m.q)return null;if(r){r=e?a(t,null,m.q,0):t,e=(m.parent=o(r,1),s(m.parent,p));if(m.cp=u(r,m.parent,e,1),r&&m.parent&&m.cp&&function(e,t){var r=e._ptr,n=e._index,i=e._size,a=i[0],o=i[1];t.pinv=[],t.leftmost=[];for(var s,u,c,f,l,p=t.parent,m=t.pinv,h=t.leftmost,g=[],v=0,d=a,y=a+o,x=a+2*o,u=0;o>u;u++)g[d+u]=-1,g[y+u]=-1,g[x+u]=0;for(s=0;a>s;s++)h[s]=-1;for(u=o-1;u>=0;u--)for(f=r[u],l=r[u+1],c=f;l>c;c++)h[n[c]]=u;for(s=a-1;s>=0;s--)(m[s]=-1)!=(u=h[s])&&(0===g[x+u]++&&(g[y+u]=s),g[v+s]=g[d+u],g[d+u]=s);for(t.lnz=0,t.m2=a,u=0;o>u;u++)if(s=g[d+u],t.lnz++,!(--x[m[s=0>s?t.m2++:s]=u]<=0)){t.lnz+=g[x+u];var b=p[u];-1!=b&&(0===g[x+b]&&(g[y+b]=g[y+u]),g[v+g[y+u]]=g[d+b],g[d+b]=g[v+s],g[x+b]+=g[x+u])}for(s=0;a>s;s++)m[s]<0&&(m[s]=u++);return!0}(r,m))for(n=m.unz=0;n<p;n++)m.unz+=m.cp[n]}else m.unz=4*c[p]+p,m.lnz=m.unz;return m}}},function(e,t,r){"use strict";t.name="cs_amd",t.path="sparse",t.factory=function(e,t,n){function l(e,t,r,n,i){var a=c(t);if(1===e&&n===r)return s(t,a);if(2==e){for(var o=a._index,f=a._ptr,l=0,p=0;p<r;p++){var m=f[p];if(f[p]=l,!(f[p+1]-m>i))for(var h=f[p+1];m<h;m++)o[l++]=o[m]}f[r]=l,t=c(a)}return u(a,t)}function g(e,t){return e!=t}var i=n(r(326)),a=n(r(327)),o=n(r(328)),s=n(r(49)),u=n(r(83)),c=n(r(329)),h=function(e,t,r,n,i){if(e<2||e+t<0){for(var a=0;a<i;a++)0!==r[n+a]&&(r[n+a]=1);e=2}return e};return function(e,t){if(!t||e<=0||3<e)return null;var r=t._size,n=r[0],s=r[1],u=0,r=Math.max(16,10*Math.sqrt(s)),r=Math.min(s-2,r),e=l(e,t,n,s,r);a(e,g,null);for(var v,y,b,N,E,A,_,T,C,S,z,B=e._index,k=e._ptr,I=k[s],R=[],P=[],q=s+1,L=2*(s+1),F=3*(s+1),D=4*(s+1),$=5*(s+1),j=6*(s+1),G=7*(s+1),H=R,V=function(e,t,r,n,i,a,o,s,u,c,f,l){for(var p=0;e>p;p++)r[n+p]=t[p+1]-t[p];for(var m=r[n+e]=0;e>=m;m++)r[i+m]=-1,a[m]=-1,r[o+m]=-1,r[s+m]=-1,r[u+m]=1,r[c+m]=1,r[f+m]=0,r[l+m]=r[n+m];var g=h(0,0,r,c,e);return r[f+e]=-2,t[e]=-1,r[c+e]=0,g}(s,k,P,0,F,H,L,G,q,j,D,$),Z=function(e,t,r,n,a,o,s,u,c,f,l){for(var p=0,m=0;e>m;m++){var h=r[n+m];if(0===h)r[a+m]=-2,p++,t[m]=-1,r[o+m]=0;else if(h>s)r[u+m]=0,r[a+m]=-1,p++,t[m]=i(e),r[u+e]++;else{var g=r[c+h];-1!=g&&(f[g]=m),r[l+m]=r[c+h],r[c+h]=m}}return p}(s,k,P,$,D,j,r,q,F,H,L),Y=0;Z<s;){for(y=-1;Y<s&&-1==(y=P[F+Y]);Y++);-1!=P[L+y]&&(H[P[L+y]]=-1),P[F+Y]=P[L+y];for(var re,w,W=P[D+y],X=P[q+y],J=(Z+=X,0),Q=(P[q+y]=-X,k[y]),K=0===W?Q:I,ee=K,x=1;x<=W+1;x++){for(E=W<x?(N=Q,P[0+(w=y)]-W):(N=k[w=B[Q++]],P[0+w]),b=1;b<=E;b++)(M=P[q+(v=B[N++])])<=0||(J+=M,P[q+v]=-M,-1!=P[L+(B[ee++]=v)]&&(H[P[L+v]]=H[v]),-1!=H[v]?P[L+H[v]]=P[L+v]:P[F+P[$+v]]=P[L+v]);w!=y&&(k[w]=i(y),P[j+w]=0)}for(0!==W&&(I=ee),P[$+y]=J,k[y]=K,P[0+y]=ee-K,P[D+y]=-2,V=h(V,u,P,j,s),A=K;A<ee;A++)if(!((_=P[D+(v=B[A])])<=0))for(var M,te=V-(M=-P[q+v]),Q=k[v],O=k[v]+_-1;Q<=O;Q++)P[j+(w=B[Q])]>=V?P[j+w]-=M:0!==P[j+w]&&(P[j+w]=P[$+w]+te);for(A=K;A<ee;A++){for(T=(O=k[v=B[A]])+P[D+v]-1,z=S=0,Q=C=O;Q<=T;Q++)0!==P[j+(w=B[Q])]&&(0<(re=P[j+w]-V)?(z+=re,S+=B[C++]=w):(k[w]=i(y),P[j+w]=0));P[D+v]=C-O+1;var ne=C,ie=O+P[0+v];for(Q=1+T;Q<ie;Q++){var d,ae=P[q+(d=B[Q])];ae<=0||(z+=ae,S+=B[C++]=d)}0===z?(k[v]=i(y),J-=M=-P[q+v],X+=M,Z+=M,P[q+v]=0,P[D+v]=-1):(P[$+v]=Math.min(P[$+v],z),B[C]=B[ne],B[ne]=B[O],B[O]=y,P[0+v]=C-O+1,P[L+v]=P[G+(S=(S<0?-S:S)%s)],H[P[G+S]=v]=S)}for(P[$+y]=J,u=Math.max(u,J),V=h(V+u,u,P,j,s),A=K;A<ee;A++)if(!(0<=P[q+(v=B[A])]))for(v=P[G+(S=H[v])],P[G+S]=-1;-1!=v&&-1!=P[L+v];v=P[L+v],V++){for(E=P[0+v],_=P[D+v],Q=k[v]+1;Q<=k[v]+E-1;Q++)P[j+B[Q]]=V;var oe=v;for(d=P[L+v];-1!=d;){var se=P[0+d]===E&&P[D+d]===_;for(Q=k[d]+1;se&&Q<=k[d]+E-1;Q++)P[j+B[Q]]!=V&&(se=0);se?(k[d]=i(v),P[q+v]+=P[q+d],P[q+d]=0,P[D+d]=-1,d=P[L+d],P[L+oe]=d):d=P[L+(oe=d)]}}for(A=Q=K;A<ee;A++)(M=-P[q+(v=B[A])])<=0||(P[q+v]=M,z=P[$+v]+J-M,-1!=P[F+(z=Math.min(z,s-Z-M))]&&(H[P[F+z]]=v),P[L+v]=P[F+z],H[v]=-1,P[F+z]=v,Y=Math.min(Y,z),P[$+v]=z,B[Q++]=v);P[q+y]=X,0==(P[0+y]=Q-K)&&(k[y]=-1,P[j+y]=0),0!==W&&(I=Q)}for(v=0;v<s;v++)k[v]=i(k[v]);for(d=0;d<=s;d++)P[F+d]=-1;for(d=s;0<=d;d--)0<P[q+d]||(P[L+d]=P[F+k[d]],P[F+k[d]]=d);for(w=s;0<=w;w--)P[q+w]<=0||-1!=k[w]&&(P[L+w]=P[F+k[w]],P[F+k[w]]=w);for(v=y=0;v<=s;v++)-1==k[v]&&(y=o(v,y,P,F,L,R,j));return R.splice(R.length-1,1),R}}},function(e,t){"use strict";t.name="cs_flip",t.path="sparse",t.factory=function(){return function(e){return-e-2}}},function(e,t){"use strict";t.name="cs_fkeep",t.path="sparse",t.factory=function(){return function(e,t,r){for(var n=e._values,i=e._index,a=e._ptr,s=e._size[1],u=0,c=0;c<s;c++){var f=a[c];for(a[c]=u;f<a[c+1];f++)t(i[f],c,n?n[f]:1,r)&&(i[u]=i[f],n&&(n[u]=n[f]),u++)}return a[s]=u,i.splice(u,i.length-u),n&&n.splice(u,n.length-u),u}}},function(e,t){"use strict";t.name="cs_tdfs",t.path="sparse",t.factory=function(){return function(e,t,r,n,i,a,o){var s=0;for(r[o]=e;0<=s;){var u=r[o+s],c=r[n+u];-1==c?(s--,a[t++]=u):(r[n+u]=r[i+c],r[o+ ++s]=c)}return t}}},function(e,t,r){"use strict";var i=r(3).clone,a=r(23).format;t.name="transpose",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=e.DenseMatrix,f=e.SparseMatrix,l=o("transpose",{Array:function(e){return l(u(e)).valueOf()},Matrix:function(e){var t,r=e.size();switch(r.length){case 1:t=e.clone();break;case 2:var n=r[0],i=r[1];if(0===i)throw new RangeError("Cannot transpose a 2D matrix with no columns (size: "+a(r)+")");switch(e.storage()){case"dense":t=p(e,n,i);break;case"sparse":t=m(e,n,i)}break;default:throw new RangeError("Matrix must be a vector or two dimensional (size: "+a(this._size)+")")}return t},any:function(e){return i(e)}}),p=function(e,t,r){for(var a=e._data,o=[],s=0;s<r;s++)for(var n=o[s]=[],u=0;u<t;u++)n[u]=i(a[u][s]);return new c({data:o,size:[r,t],datatype:e._datatype})},m=function(e,t,r){for(var m,h,g,n=e._values,a=e._index,o=e._ptr,s=n?[]:void 0,u=[],c=[],l=[],p=0;p<t;p++)l[p]=0;for(m=0,h=a.length;m<h;m++)l[a[m]]++;for(var v=0,d=0;d<t;d++)c.push(v),v+=l[d],l[d]=c[d];for(c.push(v),g=0;g<r;g++)for(var y=o[g],x=o[g+1],b=y;b<x;b++){var w=l[a[b]]++;u[w]=g,n&&(s[w]=i(n[b]))}return new f({values:s,index:u,ptr:c,size:[r,t],datatype:e._datatype})};return l.toTex="\\left(${args[0]}\\right)"+s.operators.transpose,l}},function(e,t){"use strict";t.name="cs_permute",t.path="sparse",t.factory=function(e){var t=e.SparseMatrix;return function(e,r,n,i){for(var a=e._values,o=e._index,s=e._ptr,u=e._size,c=e._datatype,f=u[0],l=u[1],p=i&&e._values?[]:null,m=[],h=[],g=0,v=0;v<l;v++){h[v]=g;for(var d=n?n[v]:v,y=s[d],x=s[d+1],b=y;b<x;b++){var w=r?r[o[b]]:o[b];m[g]=w,p&&(p[g]=a[b]),g++}}return h[l]=g,new t({values:p,index:m,ptr:h,size:[f,l],datatype:c})}}},function(e,t){"use strict";t.name="cs_etree",t.path="sparse",t.factory=function(){return function(e,t){if(!e)return null;var n,i=e._index,a=e._ptr,e=e._size,s=e[0],u=e[1],c=[],f=[],p=u;if(t)for(r=0;r<s;r++)f[p+r]=-1;for(var m=0;m<u;m++){f[0+m]=c[m]=-1;for(var h=a[m],g=a[m+1],v=h;v<g;v++){for(var d=i[v],r=t?f[p+d]:d;-1!=r&&r<m;r=n)n=f[0+r],f[0+r]=m,-1==n&&(c[r]=m);t&&(f[p+d]=m)}}return c}}},function(e,t,r){"use strict";t.name="cs_post",t.path="sparse",t.factory=function(e,t,n){var i=n(r(328));return function(e,t){if(!e)return null;for(var n=0,a=[],o=[],u=t,c=2*t,r=0;r<t;r++)o[0+r]=-1;for(r=t-1;0<=r;r--)-1!=e[r]&&(o[u+r]=o[0+e[r]],o[0+e[r]]=r);for(r=0;r<t;r++)-1==e[r]&&(n=i(r,n,o,0,u,a,c));return a}}},function(e,t,r){"use strict";t.name="cs_counts",t.path="sparse",t.factory=function(e,t,n){var i=n(r(329)),a=n(r(334));return function(e,t,r,n){if(!e||!t||!r)return null;for(var s,c,f,l,p,m=e._size,h=m[0],g=m[1],v=4*g+(n?g+h+1:0),d=[],x=g,b=2*g,w=3*g,N=4*g,E=5*g+1,u=0;u<v;u++)d[u]=-1;var M=[],m=i(e),_=m._index,O=m._ptr;for(u=0;u<g;u++)for(M[s=r[u]]=-1==d[w+s]?1:0;-1!=s&&-1==d[w+s];s=t[s])d[w+s]=u;if(n){for(u=0;u<g;u++)d[r[u]]=u;for(o=0;o<h;o++){for(u=g,l=O[o],p=O[o+1],f=l;f<p;f++)u=Math.min(u,d[_[f]]);d[E+o]=d[N+u],d[N+u]=o}}for(o=0;o<g;o++)d[0+o]=o;for(u=0;u<g;u++){for(-1!=t[s=r[u]]&&M[t[s]]--,c=n?d[N+u]:s;-1!=c;c=n?d[E+c]:-1)for(f=O[c];f<O[c+1];f++){var o=_[f],T=a(o,s,d,w,x,b,0);1<=T.jleaf&&M[s]++,2==T.jleaf&&M[T.q]--}-1!=t[s]&&(d[0+s]=t[s])}for(s=0;s<g;s++)-1!=t[s]&&(M[t[s]]+=M[s]);return M}}},function(e,t){"use strict";t.name="cs_leaf",t.path="sparse",t.factory=function(){return function(e,t,r,n,i,a,o){var s,u,f,l=0;if(e<=t||r[n+t]<=r[i+e])return-1;if(r[i+e]=r[n+t],i=r[a+e],r[a+e]=t,-1===i)l=1,f=e;else{for(l=2,f=i;f!=r[o+f];f=r[o+f]);for(s=i;s!=f;s=u)u=r[o+s],r[o+s]=f}return{jleaf:l,q:f}}}},function(e,t,r){"use strict";t.name="cs_lu",t.path="sparse",t.factory=function(e,t,n){var i=n(r(85)),a=n(r(78)),o=n(r(83)),s=n(r(62)),u=n(r(336)),c=n(r(337)),f=e.SparseMatrix;return function(e,t,r){if(!e)return null;var n,p=e._size[1],m=100,h=100;t&&(n=t.q,m=t.lnz||m,h=t.unz||h);for(var d=[],y=[],x=[],b=new f({values:d,index:y,ptr:x,size:[p,p]}),w=[],N=[],E=[],t=new f({values:w,index:N,ptr:E,size:[p,p]}),A=[],_=[],O=[],g=0;g<p;g++)_[g]=0,A[g]=-1,x[g+1]=0;for(var m=0,h=0,T=0;T<p;T++){x[T]=m,E[T]=h;for(var k,C=n?n[T]:T,S=c(b,e,C,O,_,A,1),z=-1,B=-1,v=S;v<p;v++)A[g=O[v]]<0?(k=i(_[g]),s(k,B)&&(B=k,z=g)):(N[h]=A[g],w[h++]=_[g]);if(-1==z||B<=0)return null;var I=_[z=A[C]<0&&u(i(_[C]),o(B,r))?C:z];for(N[h]=T,w[h++]=I,A[z]=T,y[m]=z,d[m++]=1,v=S;v<p;v++)A[g=O[v]]<0&&(y[m]=g,d[m++]=a(_[g],I)),_[g]=0}for(x[p]=m,E[p]=h,v=0;v<m;v++)y[v]=A[y[v]];return d.splice(m,d.length-m),y.splice(m,y.length-m),w.splice(h,w.length-h),N.splice(h,N.length-h),{L:b,U:t,pinv:A}}}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="largerEq",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("largerEq",{"boolean, boolean":function(e,t){return t<=e},"number, number":function(e,r){return r<=e||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gte(t)},"Fraction, Fraction":function(e,t){return-1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return t<=e},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.largerEq+"${args[1]}\\right)",m}},function(e,t,r){"use strict";t.name="cs_spsolve",t.path="sparse",t.factory=function(e,t,n){var i=n(r(78)),a=n(r(83)),o=n(r(74)),s=n(r(338));return function(e,t,r,n,u,c,f){for(var p,m,h,g=e._values,v=e._index,d=e._ptr,x=e._size[1],b=t._values,w=t._index,N=t._ptr,e=s(e,t,r,n,c),l=e;l<x;l++)u[n[l]]=0;for(p=N[r],m=N[r+1],l=p;l<m;l++)u[w[l]]=b[l];for(var M=e;M<x;M++){var A=n[M],_=c?c[A]:A;if(!(_<0))for(p=d[_],m=d[_+1],u[A]=i(u[A],g[f?p:m-1]),l=f?p+1:p,h=f?m:m-1;l<h;l++){var O=v[l];u[O]=o(u[O],a(g[l],u[A]))}}return e}}},function(e,t,r){"use strict";t.name="cs_reach",t.path="sparse",t.factory=function(e,t,n){var i=n(r(339)),a=n(r(340)),o=n(r(341));return function(e,t,r,n,s){for(var l=e._ptr,p=e._size,m=t._index,t=t._ptr,g=p[1],v=g,p=t[r],f=t[r+1],u=p;u<f;u++){var d=m[u];a(l,d)||(v=i(d,e,v,n,s))}for(u=v;u<g;u++)o(l,n[u]);return v}}},function(e,t,r){"use strict";t.name="cs_dfs",t.path="sparse",t.factory=function(e,t,n){var i=n(r(340)),a=n(r(341)),o=n(r(342));return function(e,t,r,n,s){var u,l=t._index,p=t._ptr,h=t._size[1],g=0;for(n[0]=e;0<=g;){e=n[g];for(var v=s?s[e]:e,d=(i(p,e)||(a(p,e),n[h+g]=v<0?0:o(p[v])),1),c=n[h+g],f=v<0?0:o(p[v+1]);c<f;c++)if(u=l[c],!i(p,u)){n[h+g]=c,n[++g]=u,d=0;break}d&&(g--,n[--r]=e)}return r}}},function(e,t){"use strict";t.name="cs_marked",t.path="sparse",t.factory=function(){return function(e,t){return e[t]<0}}},function(e,t,r){"use strict";t.name="cs_mark",t.path="sparse",t.factory=function(e,t,n){var i=n(r(326));return function(e,t){e[t]=i(e[t])}}},function(e,t,r){"use strict";t.name="cs_unflip",t.path="sparse",t.factory=function(e,t,n){var i=n(r(326));return function(e){return e<0?i(e):e}}},function(e,t,r){"use strict";t.name="lsolve",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=n(r(77)),u=n(r(74)),c=n(r(47)),f=n(r(344)),l=e.DenseMatrix,n=i("lsolve",{"SparseMatrix, Array | Matrix":function(e,t){return h(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return m(e,t)},"Array, Array | Matrix":function(e,t){e=a(e);return m(e,t).valueOf()}}),m=function(e,t){for(var r=(t=f(e,t,!0))._data,n=e._size[0],i=e._size[1],a=[],p=e._data,m=0;m<i;m++){var g=r[m][0]||0;if(c(g,0))h=0;else{var v=p[m][m];if(c(v,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var h=o(g,v),d=m+1;d<n;d++)r[d]=[u(r[d][0]||0,s(h,p[d][m]))]}a[m]=[h]}return new l({data:a,size:[n,1]})},h=function(e,t){for(var r,i=(t=f(e,t,!0))._data,t=e._size[0],p=e._size[1],m=e._values,h=e._index,g=e._ptr,v=[],d=0;d<p;d++){var y=i[d][0]||0;if(c(y,0))v[d]=[0];else{for(var x=0,b=[],w=[],N=g[d+1],n=g[d];n<N;n++)(r=h[n])===d?x=m[n]:d<r&&(b.push(m[n]),w.push(r));if(c(x,0))throw new Error("Linear system cannot be solved since matrix is singular");var E=o(y,x);for(n=0,N=w.length;n<N;n++)i[r=w[n]]=[u(i[r][0]||0,s(E,b[n]))];v[d]=[E]}}return new l({data:v,size:[t,1]})};return n}},function(e,t,r){"use strict";var r=r(38),a=r.string,o=r.array,s=Array.isArray;t.factory=function(e){var t=e.DenseMatrix;return function(e,r,n){e=e.size();if(2!==e.length)throw new RangeError("Matrix must be two dimensional (size: "+a.format(e)+")");var f,l,p,u=e[0];if(u!==e[1])throw new RangeError("Matrix must be square (size: "+a.format(e)+")");if(r&&!0===r.isMatrix){e=r.size();if(1===e.length){if(e[0]!==u)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],p=r._data,l=0;l<u;l++)f[l]=[p[l]]}else{if(2!==e.length)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(e[0]!==u||1!==e[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(!0===r.isDenseMatrix){if(n){for(f=[],p=r._data,l=0;l<u;l++)f[l]=[p[l][0]];return new t({data:f,size:[u,1],datatype:r._datatype})}return r}for(f=[],l=0;l<u;l++)f[l]=[0];for(var h=r._values,g=r._index,e=r._ptr,d=e[1],y=e[0];y<d;y++)f[l=g[y]][0]=h[y]}return new t({data:f,size:[u,1],datatype:r._datatype})}if(s(r)){n=o.size(r);if(1===n.length){if(n[0]!==u)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],l=0;l<u;l++)f[l]=[r[l]]}else{if(2!==n.length)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(n[0]!==u||1!==n[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],l=0;l<u;l++)f[l]=[r[l][0]]}return new t({data:f,size:[u,1]})}}}},function(e,t,r){"use strict";var i=Array.isArray;t.name="lusolve",t.factory=function(e,t,n,a){function h(e){if(e&&!0===e.isMatrix)return e;if(i(e))return o(e);throw new TypeError("Invalid Matrix LU decomposition")}var o=n(r(50)),s=n(r(322)),u=n(r(323)),c=n(r(346)),f=n(r(344)),l=n(r(347)),p=n(r(343)),n=a("lusolve",{"Array, Array | Matrix":function(e,t){e=o(e);e=s(e);return g(e.L,e.U,e.p,null,t).valueOf()},"DenseMatrix, Array | Matrix":function(e,t){e=s(e);return g(e.L,e.U,e.p,null,t)},"SparseMatrix, Array | Matrix":function(e,t){e=s(e);return g(e.L,e.U,e.p,null,t)},"SparseMatrix, Array | Matrix, number, number":function(e,t,r,n){e=u(e,r,n);return g(e.L,e.U,e.p,e.q,t)},"Object, Array | Matrix":function(e,t){return g(e.L,e.U,e.p,e.q,t)}}),g=function(e,t,r,n,i){e=h(e),t=h(t),i=f(e,i,!1),r&&(i._data=c(r,i._data));r=p(e,i),e=l(t,r);return n&&(e._data=c(n,e._data)),e};return n}},function(e,t){"use strict";t.name="cs_ipvec",t.path="sparse",t.factory=function(){return function(e,t,r){var n,r=t.length,i=[];if(e)for(n=0;n<r;n++)i[e[n]]=t[n];else for(n=0;n<r;n++)i[n]=t[n];return i}}},function(e,t,r){"use strict";t.name="usolve",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=n(r(77)),u=n(r(74)),c=n(r(47)),f=n(r(344)),l=e.DenseMatrix,n=i("usolve",{"SparseMatrix, Array | Matrix":function(e,t){return h(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return m(e,t)},"Array, Array | Matrix":function(e,t){e=a(e);return m(e,t).valueOf()}}),m=function(e,t){for(var r=(t=f(e,t,!0))._data,t=e._size[0],i=e._size[1],a=[],p=e._data,m=i-1;0<=m;m--){var g=r[m][0]||0;if(c(g,0))h=0;else{var v=p[m][m];if(c(v,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var h=o(g,v),d=m-1;0<=d;d--)r[d]=[u(r[d][0]||0,s(h,p[d][m]))]}a[m]=[h]}return new l({data:a,size:[t,1]})},h=function(e,t){for(var r,i=(t=f(e,t,!0))._data,t=e._size[0],p=e._size[1],m=e._values,h=e._index,g=e._ptr,v=[],d=p-1;0<=d;d--){var y=i[d][0]||0;if(c(y,0))v[d]=[0];else{for(var E,x=0,b=[],w=[],N=g[d],n=g[d+1]-1;N<=n;n--)(r=h[n])===d?x=m[n]:r<d&&(b.push(m[n]),w.push(r));if(c(x,0))throw new Error("Linear system cannot be solved since matrix is singular");var M=o(y,x);for(n=0,E=w.length;n<E;n++)i[r=w[n]]=[u(i[r][0],s(M,b[n]))];v[d]=[M]}}return new l({data:v,size:[t,1]})};return n}},function(e,t,r){e.exports=[r(85),r(49),r(51),r(349),r(351),r(352),r(310),r(353),r(355),r(357),r(80),r(358),r(359),r(360),r(361),r(364),r(82),r(367),r(368),r(83),r(369),r(371),r(79),r(372),r(374),r(362),r(375),r(74),r(75),r(376),r(377)]},function(e,t,r){"use strict";var i=r(19);t.name="cbrt",t.factory=function(e,t,n,a){function o(e){var t,r;return 0===e?e:((r=e<0)&&(e=-e),t=isFinite(e)?(e/((t=Math.exp(Math.log(e)/3))*t)+2*t)/3:e,r?-t:t)}function s(r,n){var r=r.toPolar(),a=m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3)));return n?(n=[a,m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3+2*Math.PI/3))),m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3-2*Math.PI/3)))],"array"===t.matrix?n:p(n)):a}var f=n(r(75)),l=n(r(350)),p=n(r(50)),m=a.find(n(r(77)),["Complex,Complex"]),h=a.find(n(r(80)),["Complex"]),g=a("cbrt",{number:o,Complex:s,"Complex, boolean":s,BigNumber:function(e){var r,t;return e.isZero()?e:(t=(e=(r=e.isNegative())?e.neg():e).isFinite()?(t=e.ln().div(3).exp(),e.div(t.times(t)).plus(t.times(2)).div(3)):1/0,r?t.neg():t)},Unit:function(t){var n,i,r;return t.value&&t.value.isComplex?((r=t.clone()).value=1,(r=r.pow(1/3)).value=s(t.value)):(r=((n=l(t.value))&&(t.value=f(t.value)),i=t.value&&t.value.isBigNumber?new e.BigNumber(1).div(3):t.value&&t.value.isFraction?new e.Fraction(1,3):1/3,t.pow(i)),n&&(r.value=f(r.value))),r},"Array | Matrix":function(e){return i(e,g,!0)}});return g.toTex="\\sqrt[3]{${args[0]}}",g}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isNegative",t.factory=function(e,t,r,n){var a=n("isNegative",{number:function(e){return e<0},BigNumber:function(e){return e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return e.s<0&&0<e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";var i=r(19);t.name="ceil",t.factory=function(e,t,r,n){var a=n("ceil",{number:Math.ceil,Complex:function(t){return new e.Complex(Math.ceil(t.re),Math.ceil(t.im))},BigNumber:function(e){return e.ceil()},Fraction:function(e){return e.ceil()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\left\\lceil${args[0]}\\right\\rceil",a}},function(e,t,r){"use strict";var i=r(19);t.name="cube",t.factory=function(e,t,n,a){var o=a.find(n(r(77)),["Complex,Complex"]),s=a("cube",{number:function(e){return e*e*e},Complex:function(e){return o(o(e,e),e)},BigNumber:function(e){return e.times(e).times(e)},Fraction:function(e){return e.mul(e).mul(e)},"Array | Matrix":function(e){return i(e,s,!0)},Unit:function(e){return e.pow(3)}});return s.toTex="\\left(${args[0]}\\right)^3",s}},function(e,t,r){"use strict";t.name="dotDivide",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=r(29),u=n(r(354)),c=n(r(59)),f=n(r(60)),l=n(r(84)),p=n(r(61)),m=n(r(55)),h=n(r(56)),g=i("dotDivide",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?c(e,t,o,!1):m(e,t,o);return e},"Array, Array":function(e,t){return g(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return g(a(e),t)},"Matrix, Array":function(e,t){return g(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:h)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?p:h)(t,e,o,!0);return t},"Array, any":function(e,t){return h(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return h(a(t),e,o,!0).valueOf()}});return g.toTex="\\left(${args[0]}"+s.operators.dotDivide+"${args[1]}\\right)",g}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm02",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r,n){var u=e._data,c=e._size,e=e._datatype,l=t._values,p=t._index,m=t._ptr,h=t._size,t=t._datatype;if(c.length!==h.length)throw new i(c.length,h.length);if(c[0]!==h[0]||c[1]!==h[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+h+")");if(!l)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var v,h=c[0],y=c[1],x=o,b=0,w=r;"string"==typeof e&&e===t&&(x=a.find(o,[v=e,v]),b=a.convert(0,v),w=a.find(r,[v,v]));for(var N=[],E=[],M=[],A=0;A<y;A++){M[A]=E.length;for(var _=m[A],O=m[A+1],T=_;T<O;T++){var C=p[T],S=n?w(l[T],u[C][A]):w(u[C][A],l[T]);x(S,b)||(E.push(C),N.push(S))}}return M[y]=E.length,new s({values:N,index:E,ptr:M,size:[h,y],datatype:v})}}},function(e,t,r){"use strict";t.name="dotMultiply",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(77)),s=r(29),u=n(r(354)),c=n(r(356)),f=n(r(84)),l=n(r(55)),p=n(r(56)),m=i("dotMultiply",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?u(e,t,o,!1):l(e,t,o);return e},"Array, Array":function(e,t){return m(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return m(a(e),t)},"Matrix, Array":function(e,t){return m(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,o,!0);return t},"Array, any":function(e,t){return p(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return p(a(t),e,o,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+s.operators.dotMultiply+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm09",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var E,A,_,O,T=n&&p?[]:void 0,C=[],S=[],f=new s({values:T,index:C,ptr:S,size:[g,x],datatype:d}),B=T?[]:void 0,k=[],M=0;M<x;M++){S[M]=C.length;var R,I=M+1;if(B)for(_=h[M],O=h[M+1],A=_;A<O;A++)k[E=m[A]]=I,B[E]=p[A];for(_=c[M],O=c[M+1],A=_;A<O;A++)E=u[A],B?(R=k[E]===I?B[E]:w,b(R=N(n[A],R),w)||(C.push(E),T.push(R))):C.push(E)}return S[x]=C.length,f}}},function(e,t,r){"use strict";t.name="dotPow",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(79)),s=r(29),u=n(r(59)),c=n(r(60)),f=n(r(84)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=i("dotPow",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?u(e,t,o,!1):p(e,t,o);return e},"Array, Array":function(e,t){return h(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return h(a(e),t)},"Matrix, Array":function(e,t){return h(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?f:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(a(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(a(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.dotPow+"${args[1]}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="fix",t.factory=function(e,t,r,n){var a=n("fix",{number:function(e){return 0<e?Math.floor(e):Math.ceil(e)},Complex:function(t){return new e.Complex(0<t.re?Math.floor(t.re):Math.ceil(t.re),0<t.im?Math.floor(t.im):Math.ceil(t.im))},BigNumber:function(e){return e.isNegative()?e.ceil():e.floor()},Fraction:function(e){return e.s<0?e.ceil():e.floor()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\mathrm{${name}}\\left(${args}\\right)",a}},function(e,t,r){"use strict";var i=r(19);t.name="floor",t.factory=function(e,t,r,n){var a=n("floor",{number:Math.floor,Complex:function(t){return new e.Complex(Math.floor(t.re),Math.floor(t.im))},BigNumber:function(e){return e.floor()},Fraction:function(e){return e.floor()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\left\\lfloor${args[0]}\\right\\rfloor",a}},function(e,t,r){"use strict";function i(e,t){if(!a(e)||!a(t))throw new Error("Parameters in function gcd must be integer numbers");for(var r;0!=t;)r=e%t,e=t,t=r;return e<0?-e:e}var a=r(6).isInteger;t.name="gcd",t.factory=function(e,t,n,a){var s=n(r(50)),u=n(r(52)),c=n(r(53)),f=n(r(54)),l=n(r(55)),p=n(r(56)),m=a("gcd",{"number, number":i,"BigNumber, BigNumber":function(t,r){if(!t.isInt()||!r.isInt())throw new Error("Parameters in function gcd must be integer numbers");for(var n=new e.BigNumber(0);!r.isZero();){var i=t.mod(r);t=r,r=i}return t.lt(n)?t.neg():t},"Fraction, Fraction":function(e,t){return e.gcd(t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,m):u(t,e,m,!0):"sparse"===t.storage()?u(e,t,m,!1):l(e,t,m);return e},"Array, Array":function(e,t){return m(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return m(s(e),t)},"Matrix, Array":function(e,t){return m(e,s(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,m,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,m,!0);return t},"Array, number | BigNumber":function(e,t){return p(s(e),t,m,!1).valueOf()},"number | BigNumber, Array":function(e,t){return p(s(t),e,m,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,r){for(var n=m(e,t),i=0;i<r.length;i++)n=m(n,r[i]);return n}});return m.toTex="\\gcd\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(39).flatten;t.name="hypot",t.factory=function(e,t,n,a){var s=n(r(85)),u=n(r(51)),c=n(r(78)),f=n(r(77)),l=n(r(362)),p=n(r(58)),m=n(r(363)),h=a("hypot",{"... number | BigNumber":function(e){for(var t=0,r=0,n=0;n<e.length;n++){var i=s(e[n]);p(r,i)?(t=f(t,f(c(r,i),c(r,i))),t=u(t,1),r=i):t=u(t,m(i)?f(c(i,r),c(i,r)):i)}return f(r,l(t))},Array:function(e){return h.apply(h,i(e))},Matrix:function(e){return h.apply(h,i(e.toArray()))}});return h.toTex="\\hypot\\left(${args}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="sqrt",t.factory=function(e,t,r,n){function a(r){return 0<=r||t.predictable?Math.sqrt(r):o(new e.Complex(r,0))}function o(t){var i=Math.sqrt(t.re*t.re+t.im*t.im),r=0<=t.re?.5*Math.sqrt(2*(i+t.re)):Math.abs(t.im)/Math.sqrt(2*(i-t.re)),i=t.re<=0?.5*Math.sqrt(2*(i-t.re)):Math.abs(t.im)/Math.sqrt(2*(i+t.re));return 0<=t.im?new e.Complex(r,i):new e.Complex(r,-i)}var s=n("sqrt",{number:a,Complex:o,BigNumber:function(e){return!e.isNegative()||t.predictable?e.sqrt():a(e.toNumber())},"Array | Matrix":function(e){return i(e,s,!0)},Unit:function(e){return e.pow(.5)}});return s.toTex="\\sqrt{${args[0]}}",s}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isPositive",t.factory=function(e,t,r,n){var a=n("isPositive",{number:function(e){return 0<e},BigNumber:function(e){return!e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return 0<e.s&&0<e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";function i(e,t){if(!a(e)||!a(t))throw new Error("Parameters in function lcm must be integer numbers");if(0==e||0==t)return 0;for(var r,n=e*t;0!=t;)t=e%(r=t),e=r;return Math.abs(n/e)}var a=r(6).isInteger;t.name="lcm",t.factory=function(e,t,n,a){var s=n(r(50)),u=n(r(354)),c=n(r(365)),f=n(r(84)),l=n(r(55)),p=n(r(56)),m=a("lcm",{"number, number":i,"BigNumber, BigNumber":function(t,r){if(!t.isInt()||!r.isInt())throw new Error("Parameters in function lcm must be integer numbers");if(t.isZero()||r.isZero())return new e.BigNumber(0);for(var n=t.times(r);!r.isZero();){var i=r;r=t.mod(i),t=i}return n.div(t).abs()},"Fraction, Fraction":function(t,r){return 0===t.n&&0===r.n?new e.Fraction(0):t.mul(r).abs().div(t.gcd(r))},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,m):u(t,e,m,!0):"sparse"===t.storage()?u(e,t,m,!1):l(e,t,m);return e},"Array, Array":function(e,t){return m(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return m(s(e),t)},"Matrix, Array":function(e,t){return m(e,s(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,m,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,m,!0);return t},"Array, number | BigNumber":function(e,t){return p(s(e),t,m,!1).valueOf()},"number | BigNumber, Array":function(e,t){return p(s(t),e,m,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,r){for(var n=m(e,t),i=0;i<r.length;i++)n=m(n,r[i]);return n}});return m.toTex="\\mathrm{${name}}\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(366),a=r(41);t.name="algorithm06",t.factory=function(e,t,n,o){var s=n(r(47)),u=e.SparseMatrix;return function(e,t,r){var n=e._values,c=e._size,f=e._datatype,l=t._values,p=t._size,m=t._datatype;if(c.length!==p.length)throw new a(c.length,p.length);if(c[0]!==p[0]||c[1]!==p[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+p+")");var h,p=c[0],v=c[1],d=s,y=0,x=r;"string"==typeof f&&f===m&&(d=o.find(s,[h=f,h]),y=o.convert(0,h),x=o.find(r,[h,h]));for(var b=n&&l?[]:void 0,w=[],N=[],E=new u({values:b,index:w,ptr:N,size:[p,v],datatype:h}),M=b?[]:void 0,A=[],_=[],O=0;O<v;O++){N[O]=w.length;var T=O+1;if(i(e,O,A,M,_,T,E,x),i(t,O,A,M,_,T,E,x),M)for(var C=N[O];C<w.length;){var S=w[C];_[S]!==T||d(S=M[S],y)?w.splice(C,1):(b.push(S),C++)}else for(var B=N[O];B<w.length;)_[w[B]]!==T?w.splice(B,1):B++}return N[v]=w.length,E}}},function(e,t){"use strict";e.exports=function(e,t,r,n,i,a,o,s,u,c,f){var l,p,m,h,g=e._values,v=e._index,e=e._ptr,y=o._index;if(n)for(p=e[t],m=e[t+1],l=p;l<m;l++)r[h=v[l]]!==a?(r[h]=a,y.push(h),c?(n[h]=u?s(g[l],f):s(f,g[l]),i[h]=a):n[h]=g[l]):(n[h]=u?s(g[l],n[h]):s(n[h],g[l]),i[h]=a);else for(p=e[t],m=e[t+1],l=p;l<m;l++)r[h=v[l]]!==a?(r[h]=a,y.push(h)):i[h]=a}},function(e,t,r){"use strict";var i=r(19);t.name="log10",t.factory=function(e,t,r,n){function a(t){return new e.Complex(Math.log(Math.sqrt(t.re*t.re+t.im*t.im))/Math.LN10,Math.atan2(t.im,t.re)/Math.LN10)}var o=n("log10",{number:function(r){return 0<=r||t.predictable?Math.log(r)/Math.LN10:o(new e.Complex(r,0))},Complex:a,BigNumber:function(r){return!r.isNegative()||t.predictable?r.log():a(new e.Complex(r.toNumber(),0))},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\log_{10}\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";t.name="mod",t.factory=function(e,t,n,i){var o=n(r(50)),s=r(29),u=n(r(354)),c=n(r(59)),f=n(r(76)),l=n(r(84)),p=n(r(61)),m=n(r(55)),h=n(r(56)),g=i("mod",{"number, number":function(e,t){if(0<t)return e-t*Math.floor(e/t);if(0===t)return e;throw new Error("Cannot calculate mod for a negative divisor")},"BigNumber, BigNumber":function(e,t){return t.isZero()?e:e.mod(t)},"Fraction, Fraction":function(e,t){return e.mod(t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,g,!1):u(t,e,g,!0):"sparse"===t.storage()?c(e,t,g,!1):m(e,t,g);return e},"Array, Array":function(e,t){return g(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return g(o(e),t)},"Matrix, Array":function(e,t){return g(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:h)(e,t,g,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?p:h)(t,e,g,!0);return t},"Array, any":function(e,t){return h(o(e),t,g,!1).valueOf()},"any, Array":function(e,t){return h(o(t),e,g,!0).valueOf()}});return g.toTex="\\left(${args[0]}"+s.operators.mod+"${args[1]}\\right)",g}},function(e,t,r){"use strict";t.name="norm",t.factory=function(e,t,n,i){function a(e,t){var n,i,h,d,y,x,b,r=e.size();if(1==r.length){if(t===Number.POSITIVE_INFINITY||"inf"===t)return n=0,e.forEach(function(e){e=o(e);p(e,n)&&(n=e)},!0),n;if(t===Number.NEGATIVE_INFINITY||"-inf"===t)return e.forEach(function(e){e=o(e);i&&!m(e,i)||(i=e)},!0),i||0;if("fro"===t)return a(e,2);if("number"!=typeof t||isNaN(t))throw new Error("Unsupported parameter value");return l(t,0)?Number.POSITIVE_INFINITY:(h=0,e.forEach(function(e){h=s(u(o(e),t),h)},!0),u(h,1/t))}if(2==r.length){if(1===t)return d=[],y=0,e.forEach(function(e,t){t=t[1],e=s(d[t]||0,o(e));p(e,y)&&(y=e),d[t]=e},!0),y;if(t===Number.POSITIVE_INFINITY||"inf"===t)return x=[],b=0,e.forEach(function(e,t){t=t[0],e=s(x[t]||0,o(e));p(e,b)&&(b=e),x[t]=e},!0),b;if("fro"===t)return c(g(f(v(e),e)));if(2===t)throw new Error("Unsupported parameter value, missing implementation of matrix singular value decomposition");throw new Error("Unsupported parameter value")}}var o=n(r(85)),s=n(r(49)),u=n(r(79)),c=n(r(362)),f=n(r(83)),l=n(r(47)),p=n(r(62)),m=n(r(58)),h=n(r(50)),g=n(r(370)),v=n(r(329)),n=i.find(o,["Complex"]),y=i("norm",{number:Math.abs,Complex:n,BigNumber:function(e){return e.abs()},"boolean | null":function(e){return Math.abs(e)},Array:function(e){return a(h(e),2)},Matrix:function(e){return a(e,2)},"number | Complex | BigNumber | boolean | null, number | BigNumber | string":function(e){return y(e)},"Array, number | BigNumber | string":function(e,t){return a(h(e),t)},"Matrix, number | BigNumber | string":a});return y.toTex={1:"\\left\\|${args[0]}\\right\\|",2:"\\mathrm{${name}}\\left(${args}\\right)"},y}},function(e,t,r){"use strict";var i=r(3).clone,a=r(23).format;t.name="trace",t.factory=function(e,t,n,o){var s=n(r(50)),u=n(r(49)),c=o("trace",{Array:function(e){return c(s(e))},Matrix:function(e){var t;switch(e.storage()){case"dense":t=f(e);break;case"sparse":t=l(e)}return t},any:i}),f=function(e){var t=e._size,r=e._data;switch(t.length){case 1:if(1==t[0])return i(r[0]);throw new RangeError("Matrix must be square (size: "+a(t)+")");case 2:var n=t[0];if(n!==t[1])throw new RangeError("Matrix must be square (size: "+a(t)+")");for(var s=0,c=0;c<n;c++)s=u(s,r[c][c]);return s;default:throw new RangeError("Matrix must be two dimensional (size: "+a(t)+")")}},l=function(e){var t=e._values,r=e._index,n=e._ptr,e=e._size,o=e[0],s=e[1];if(o!==s)throw new RangeError("Matrix must be square (size: "+a(e)+")");var c=0;if(0<t.length)for(var f=0;f<s;f++)for(var l=n[f],p=n[f+1],m=l;m<p;m++){var h=r[m];if(h===f){c=u(c,t[m]);break}if(f<h)break}return c};return c.toTex="\\mathrm{tr}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";function i(e,t){var r=t<0;if(0===(t=r?-t:t))throw new Error("Root must be non-zero");if(e<0&&Math.abs(t)%2!=1)throw new Error("Root must be odd when a is negative.");return 0==e?0:isFinite(e)?(t=Math.pow(Math.abs(e),1/t),t=e<0?-t:t,r?1/t:t):r?0:e}function a(e,t){if(t<0)throw new Error("Root must be greater than zero");if(0===t)throw new Error("Root must be non-zero");if(t%1!=0)throw new Error("Root must be an integer");for(var r=e.toPolar(),n=[],i=Math.pow(r.r,1/t),a=0;a<t;a++)n.push({r:i,phi:(r.phi+2*Math.PI*a)/t});return n}t.name="nthRoot",t.factory=function(e,t,n,o){function s(t,r){var n=e.BigNumber.precision,i=e.BigNumber.constructor({precision:n+2}),a=new e.BigNumber(0),i=new i(1),s=r.isNegative();if((r=s?r.neg():r).isZero())throw new Error("Root must be non-zero");if(t.isNegative()&&!r.abs().mod(2).equals(1))throw new Error("Root must be odd when a is negative.");return t.isZero()?a:t.isFinite()?(r=t.abs().pow(i.div(r)),r=t.isNeg()?r.neg():r,new e.BigNumber((s?i.div(r):r).toPrecision(n))):s?a:t}var u=n(r(50)),c=n(r(52)),f=n(r(354)),l=n(r(365)),p=n(r(84)),m=n(r(55)),h=n(r(56)),g=o("nthRoot",{number:function(e){return i(e,2)},"number, number":i,BigNumber:function(t){return s(t,new e.BigNumber(2))},Complex:function(e){return a(e,2)},"Complex, number":a,"BigNumber, BigNumber":s,"Array | Matrix":function(e){return g(e,2)},"Matrix, Matrix":function(e,t){var r;if("sparse"===e.storage())if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=l(e,t,g)}else r=f(t,e,g,!0);else if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=c(e,t,g,!1)}else r=m(e,t,g);return r},"Array, Array":function(e,t){return g(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return g(u(e),t)},"Matrix, Array":function(e,t){return g(e,u(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?p:h)(e,t,g,!1);return e},"number | BigNumber, Matrix":function(e,t){var r;if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=p(t,e,g,!0)}else r=h(t,e,g,!0);return r},"Array, number | BigNumber":function(e,t){return g(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return g(e,u(t)).valueOf()}});return g.toTex="\\sqrt[${args[1]}]{${args[0]}}",g}},function(e,t,r){"use strict";function i(e,t){return parseFloat(o(e,t))}var a=r(6).isInteger,o=r(6).toFixed,s=r(19),u="Number of decimals in function round must be an integer";t.name="round",t.factory=function(e,t,n,o){var c=n(r(50)),f=n(r(47)),l=n(r(373)),p=n(r(84)),m=n(r(61)),h=n(r(56)),g=o("round",{number:Math.round,"number, number":function(e,t){if(!a(t))throw new TypeError(u);if(t<0||15<t)throw new Error("Number of decimals in function round must be in te range of 0-15");return i(e,t)},Complex:function(t){return new e.Complex(Math.round(t.re),Math.round(t.im))},"Complex, number":function(t,r){return new e.Complex(i(t.re,r),i(t.im,r))},"Complex, BigNumber":function(t,r){if(r.isInteger())return r=r.toNumber(),new e.Complex(i(t.re,r),i(t.im,r));throw new TypeError(u)},"number, BigNumber":function(t,r){if(r.isInteger())return new e.BigNumber(t).toDecimalPlaces(r.toNumber());throw new TypeError(u)},BigNumber:function(e){return e.toDecimalPlaces(0)},"BigNumber, BigNumber":function(e,t){if(t.isInteger())return e.toDecimalPlaces(t.toNumber());throw new TypeError(u)},Fraction:function(e){return e.round()},"Array | Matrix":function(e){return s(e,g,!0)},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?p:h)(e,t,g,!1);return e},"number | Complex | BigNumber, Matrix":function(e,t){return f(e,0)?l(t.size(),t.storage()):("sparse"===t.storage()?m:h)(t,e,g,!0)},"Array, number | BigNumber":function(e,t){return h(c(e),t,g,!1).valueOf()},"number | Complex | BigNumber, Array":function(e,t){return h(c(t),e,g,!0).valueOf()}});return g.toTex={1:"\\left\\lfloor${args[0]}\\right\\rceil",2:"\\mathrm{${name}}\\left(${args}\\right)"},g}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).resize;t.name="zeros",t.factory=function(e,t,n,o){function s(t,r){var i=function(e){var t=!1;return e.forEach(function(e,r,n){e&&!0===e.isBigNumber&&(t=!0,n[r]=e.toNumber())}),t}(t)?new e.BigNumber(0):0;return c(t),r?(r=f(r),0<t.length?r.resize(t,i):r):(r=[],0<t.length?a(r,t,i):r)}function c(e){e.forEach(function(e){if("number"!=typeof e||!i(e)||e<0)throw new Error("Parameters in function zeros must be positive integers")})}var f=n(r(50));return(n=o("zeros",{"":function(){return"array"===t.matrix?s([]):s([],"default")},"...number | BigNumber | string":function(e){var n;return"string"==typeof e[e.length-1]?(n=e.pop(),s(e,n)):"array"===t.matrix?s(e):s(e,"default")},Array:s,Matrix:function(e){var t=e.storage();return s(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6),a=r(19);t.name="sign",t.factory=function(e,t,r,n){var o=n("sign",{number:i.sign,Complex:function(t){var r=Math.sqrt(t.re*t.re+t.im*t.im);return new e.Complex(t.re/r,t.im/r)},BigNumber:function(t){return new e.BigNumber(t.cmp(0))},Fraction:function(t){return new e.Fraction(t.s)},"Array | Matrix":function(e){return a(e,o,!0)},Unit:function(e){return o(e.value)}});return o.toTex="\\mathrm{${name}}\\left(${args}\\right)",o}},function(e,t,r){"use strict";var i=r(19);t.name="square",t.factory=function(e,t,r,n){var a=n("square",{number:function(e){return e*e},Complex:function(t){return new e.Complex(t.re*t.re-t.im*t.im,t.re*t.im+t.im*t.re)},BigNumber:function(e){return e.times(e)},Fraction:function(e){return e.mul(e)},"Array | Matrix":function(e){return i(e,a,!0)},Unit:function(e){return e.pow(2)}});return a.toTex="\\left(${args[0]}\\right)^2",a}},function(e,t,r){"use strict";var i=r(19);t.name="unaryPlus",t.factory=function(e,t,n,a){var o=r(29),s=a("unaryPlus",{number:function(e){return e},Complex:function(e){return e.clone()},BigNumber:function(e){return e},Fraction:function(e){return e},Unit:function(e){return e.clone()},"Array | Matrix":function(e){return i(e,s,!0)},"boolean | string | null":function(r){return"bignumber"==t.number?new e.BigNumber(+r):+r}});return s.toTex=o.operators.unaryPlus+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="xgcd",t.factory=function(e,t,n,a){var u=n(r(50));return(n=a("xgcd",{"number, number":function(e,r){var n,a,o,p,s=0,c=1,f=1,l=0;if(!i(e)||!i(r))throw new Error("Parameters in function xgcd must be integer numbers");for(;r;)o=e%r,s=c-(a=Math.floor(e/r))*(n=s),c=n,f=l-a*(n=f),l=n,e=r,r=o;return p=e<0?[-e,-c,-l]:[e,e?c:0,l],"array"===t.matrix?p:u(p)},"BigNumber, BigNumber":function(r,n){var i,a,o,s=new e.BigNumber(0),c=new e.BigNumber(0),f=new e.BigNumber(1),l=new e.BigNumber(1),p=new e.BigNumber(0);if(!r.isInt()||!n.isInt())throw new Error("Parameters in function xgcd must be integer numbers");for(;!n.isZero();)a=r.div(n).floor(),o=r.mod(n),i=c,c=f.minus(a.times(c)),f=i,i=l,l=p.minus(a.times(l)),p=i,r=n,n=o;return s=r.lt(s)?[r.neg(),f.neg(),p.neg()]:[r,r.isZero()?0:f,p],"array"===t.matrix?s:u(s)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(379),r(383),r(384),r(386),r(388),r(391),r(393)]},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(380);t.name="bitAnd",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(354)),f=n(r(365)),l=n(r(84)),p=n(r(55)),m=n(r(56)),h=o("bitAnd",{"number, number":function(e,t){if(i(e)&&i(t))return e&t;throw new Error("Integers expected in function bitAnd")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h,!1):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitAnd+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitAnd");var r=e.constructor;if(e.isNaN()||t.isNaN())return new r(NaN);if(e.isZero()||t.eq(-1)||e.eq(t))return e;if(t.isZero()||e.eq(-1))return t;if(!e.isFinite()||!t.isFinite()){if(!e.isFinite()&&!t.isFinite())return e.isNegative()==t.isNegative()?e:new r(0);if(!e.isFinite())return t.isNegative()?e:e.isNegative()?new r(0):t;if(!t.isFinite())return e.isNegative()?t:t.isNegative()?new r(0):e}return n(e,t,function(e,t){return e&t})}},function(e,t,r){function n(e){for(var t=e.c,r=t[0]+"",n=1;n<t.length;++n){for(var i=t[n]+"",a=7-i.length;a--;)i="0"+i;r+=i}for(o=r.length-1;"0"==r.charAt(o);--o);var s=e.e,u=r.slice(0,o+1||1),e=u.length;if(0<s)if(++s>e)for(s-=e;s--;u+="0");else s<e&&(u=u.slice(0,s)+"."+u.slice(s));for(var f=[0],n=0;n<u.length;){for(var l=f.length;l--;f[l]*=10);f[0]+=u.charAt(n++)<<0;for(var o=0;o<f.length;++o)1<f[o]&&(null==f[o+1]&&(f[o+1]=0),f[o+1]+=f[o]>>1,f[o]&=1)}return f.reverse()}var i=r(382);e.exports=function(e,t,r){var l,p,s=e.constructor,u=+(e.s<0),c=+(t.s<0);if(u)for(var a=n(i(e)),f=0;f<a.length;++f)a[f]^=1;else a=n(e);if(c)for(var o=n(i(t)),f=0;f<o.length;++f)o[f]^=1;else o=n(t);var m=a.length<=o.length?(l=a,p=o,u):(l=o,p=a,c),h=l.length,g=p.length,v=1^r(u,c),d=new s(1^v),y=s.ONE,x=new s(2),e=s.precision;for(s.config({precision:1e9});0<h;)r(l[--h],p[--g])==v&&(d=d.plus(y)),y=y.times(x);for(;0<g;)r(m,p[--g])==v&&(d=d.plus(y)),y=y.times(x);return s.config({precision:e}),0==v&&(d.s=-d.s),d}},function(e,t){e.exports=function(e){if(e.isFinite()&&!e.isInteger())throw new Error("Integer expected in function bitNot");var t=e.constructor,r=t.precision;return t.config({precision:1e9}),(e=e.plus(t.ONE)).s=-e.s||null,t.config({precision:r}),e}},function(e,t,r){"use strict";var i=r(19),a=r(382),o=r(6).isInteger;t.name="bitNot",t.factory=function(e,t,n,s){var u=r(29),c=s("bitNot",{number:function(e){if(o(e))return~e;throw new Error("Integer expected in function bitNot")},BigNumber:a,"Array | Matrix":function(e){return i(e,c)}});return c.toTex=u.operators.bitNot+"\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(385);t.name="bitOr",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(52)),f=n(r(53)),l=n(r(54)),p=n(r(55)),m=n(r(56)),h=o("bitOr",{"number, number":function(e,t){if(i(e)&&i(t))return e|t;throw new Error("Integers expected in function bitOr")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitOr+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitOr");var r=e.constructor;return e.isNaN()||t.isNaN()?new r(NaN):(r=new r(-1),e.isZero()||t.eq(r)||e.eq(t)?t:t.isZero()||e.eq(r)?e:e.isFinite()&&t.isFinite()?n(e,t,function(e,t){return e|t}):!e.isFinite()&&!e.isNegative()&&t.isNegative()||e.isNegative()&&!t.isNegative()&&!t.isFinite()?r:e.isNegative()&&t.isNegative()?e.isFinite()?e:t:e.isFinite()?t:e)}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(387);t.name="bitXor",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(59)),f=n(r(60)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=o("bitXor",{"number, number":function(e,t){if(i(e)&&i(t))return e^t;throw new Error("Integers expected in function bitXor")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitXor+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381),i=r(382);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitXor");var a,r=e.constructor;return e.isNaN()||t.isNaN()?new r(NaN):e.isZero()?t:t.isZero()?e:e.eq(t)?new r(0):(a=new r(-1),e.eq(a)?i(t):t.eq(a)?i(e):e.isFinite()&&t.isFinite()?n(e,t,function(e,t){return e^t}):e.isFinite()||t.isFinite()?new r(e.isNegative()==t.isNegative()?1/0:-1/0):a)}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(389);t.name="leftShift",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(47)),f=n(r(373)),l=n(r(52)),p=n(r(354)),m=n(r(390)),h=n(r(54)),g=n(r(84)),v=n(r(55)),d=n(r(56)),y=o("leftShift",{"number, number":function(e,t){if(i(e)&&i(t))return e<<t;throw new Error("Integers expected in function leftShift")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?m(e,t,y,!1):p(t,e,y,!0):"sparse"===t.storage()?l(e,t,y,!1):v(e,t,y);return e},"Array, Array":function(e,t){return y(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return y(u(e),t)},"Matrix, Array":function(e,t){return y(e,u(t))},"Matrix, number | BigNumber":function(e,t){return c(t,0)?e.clone():("sparse"===e.storage()?g:d)(e,t,y,!1)},"number | BigNumber, Matrix":function(e,t){return c(e,0)?f(t.size(),t.storage()):("sparse"===t.storage()?h:d)(t,e,y,!0)},"Array, number | BigNumber":function(e,t){return y(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return y(e,u(t)).valueOf()}});return y.toTex="\\left(${args[0]}"+s.operators.leftShift+"${args[1]}\\right)",y}},function(e,t){e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function leftShift");var r=e.constructor;return e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero()?new r(NaN):e.isZero()||t.isZero()?e:e.isFinite()||t.isFinite()?t.lt(55)?e.times(Math.pow(2,t.toNumber())+""):e.times(new r(2).pow(t)):new r(NaN)}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm08",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");if(!n||!p)throw new Error("Cannot perform operation on Pattern Sparse Matrices");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var O=[],T=[],C=[],f=new s({values:O,index:T,ptr:C,size:[g,x],datatype:d}),z=[],B=[],k=0;k<x;k++){C[k]=T.length;for(var I=k+1,M=c[k],A=c[k+1],E=M;E<A;E++)B[_=u[E]]=I,z[_]=n[E],T.push(_);for(M=h[k],A=h[k+1],E=M;E<A;E++)B[_=m[E]]===I&&(z[_]=N(z[_],p[E]));for(E=C[k];E<T.length;){var _,R=z[_=T[E]];b(R,w)?T.splice(E,1):(O.push(R),E++)}}return C[x]=T.length,f}}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(392);t.name="rightArithShift",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(47)),f=n(r(373)),l=n(r(52)),p=n(r(354)),m=n(r(390)),h=n(r(54)),g=n(r(84)),v=n(r(55)),d=n(r(56)),y=o("rightArithShift",{"number, number":function(e,t){if(i(e)&&i(t))return e>>t;throw new Error("Integers expected in function rightArithShift")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?m(e,t,y,!1):p(t,e,y,!0):"sparse"===t.storage()?l(e,t,y,!1):v(e,t,y);return e},"Array, Array":function(e,t){return y(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return y(u(e),t)},"Matrix, Array":function(e,t){return y(e,u(t))},"Matrix, number | BigNumber":function(e,t){return c(t,0)?e.clone():("sparse"===e.storage()?g:d)(e,t,y,!1)},"number | BigNumber, Matrix":function(e,t){return c(e,0)?f(t.size(),t.storage()):("sparse"===t.storage()?h:d)(t,e,y,!0)},"Array, number | BigNumber":function(e,t){return y(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return y(e,u(t)).valueOf()}});return y.toTex="\\left(${args[0]}"+s.operators.rightArithShift+"${args[1]}\\right)",y}},function(e,t){e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function rightArithShift");var r=e.constructor;return e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero()?new r(NaN):e.isZero()||t.isZero()?e:t.isFinite()?(t.lt(55)?e.div(Math.pow(2,t.toNumber())+""):e.div(new r(2).pow(t))).floor():new r(e.isNegative()?-1:e.isFinite()?0:NaN)}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="rightLogShift",t.factory=function(e,t,n,a){var o=r(29),s=n(r(50)),u=n(r(47)),c=n(r(373)),f=n(r(52)),l=n(r(354)),p=n(r(390)),m=n(r(54)),h=n(r(84)),g=n(r(55)),v=n(r(56)),d=a("rightLogShift",{"number, number":function(e,t){if(i(e)&&i(t))return e>>>t;throw new Error("Integers expected in function rightLogShift")},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?p(e,t,d,!1):l(t,e,d,!0):"sparse"===t.storage()?f(e,t,d,!1):g(e,t,d);return e},"Array, Array":function(e,t){return d(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return d(s(e),t)},"Matrix, Array":function(e,t){return d(e,s(t))},"Matrix, number | BigNumber":function(e,t){return u(t,0)?e.clone():("sparse"===e.storage()?h:v)(e,t,d,!1)},"number | BigNumber, Matrix":function(e,t){return u(e,0)?c(t.size(),t.storage()):("sparse"===t.storage()?m:v)(t,e,d,!0)},"Array, number | BigNumber":function(e,t){return d(s(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return d(e,s(t)).valueOf()}});return d.toTex="\\left(${args[0]}"+o.operators.rightLogShift+"${args[1]}\\right)",d}},function(e,t,r){e.exports=[r(395),r(401),r(396),r(402)]},function(e,t,r){"use strict";t.name="bellNumbers",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(396)),s=n(r(350)),u=n(r(400));return(n=i("bellNumbers",{"number | BigNumber":function(e){if(!u(e)||s(e))throw new TypeError("Non-negative integer value expected in function bellNumbers");for(var t=0,r=0;r<=e;r++)t=a(t,o(e,r));return t}})).toTex="\\mathrm{B}_{${args[0]}}",n}},function(e,t,r){"use strict";t.name="stirlingS2",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(74)),s=n(r(83)),u=n(r(310)),c=n(r(79)),f=n(r(397)),l=n(r(399)),p=n(r(350)),m=n(r(400)),h=n(r(62));return(n=i("stirlingS2",{"number | BigNumber, number | BigNumber":function(e,t){if(!m(e)||p(e)||!m(t)||p(t))throw new TypeError("Non-negative integer value expected in function stirlingS2");if(h(t,e))throw new TypeError("k must be less than or equal to n in function stirlingS2");for(var r=f(t),n=0,i=0;i<=t;i++)var g=c(-1,o(t,i)),v=l(t,i),d=c(i,e),n=a(n,s(s(v,d),g));return u(n,r)}})).toTex="\\mathrm{S}\\left(${args[0]},${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(19);r(93),t.name="factorial",t.factory=function(e,t,n,a){var o=n(r(398)),n=r(29),u=a("factorial",{number:function(e){if(e<0)throw new Error("Value must be non-negative");return o(e+1)},BigNumber:function(e){if(e.isNegative())throw new Error("Value must be non-negative");return o(e.plus(1))},"Array | Matrix":function(e){return i(e,u)}});return u.toTex="\\left(${args[0]}\\right)"+n.operators.factorial,u}},function(e,t,r){"use strict";var i=r(19),a=r(6).isInteger,o=4.7421875,s=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3399464998481189e-20,4652362892704858e-20,-9837447530487956e-20,.0001580887032249125,-.00021026444172410488,.00021743961811521265,-.0001643181065367639,8441822398385275e-20,-26190838401581408e-21,36899182659531625e-22];t.name="gamma",t.factory=function(e,t,n,u){function c(r){if(r.isZero())return new e.BigNumber(1);for(var n=t.precision+(0|Math.log(r.toNumber())),a=new(e.BigNumber.constructor({precision:n}))(r),o=r.toNumber()-1;1<o;)a=a.times(o),o--;return new e.BigNumber(a.toPrecision(e.BigNumber.precision))}var f=n(r(83)),l=n(r(79)),p=u("gamma",{number:function(e){var u,c,f,l;if(a(e)){if(e<=0)return isFinite(e)?1/0:NaN;if(171<e)return 1/0;for(var n=e-2,i=e-1;1<n;)i*=n,n--;return i=0==i?1:i}if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*p(1-e));if(171.35<=e)return 1/0;if(85<e)return l=(f=(c=(u=e*e)*e)*e)*e,Math.sqrt(2*Math.PI/e)*Math.pow(e/Math.E,e)*(1+1/(12*e)+1/(288*u)-139/(51840*c)-571/(2488320*f)+163879/(209018880*l)+5246819/(75246796800*l*e));--e;for(var r=s[0],m=1;m<s.length;++m)r+=s[m]/(e+m);return u=e+o+.5,Math.sqrt(2*Math.PI)*Math.pow(u,e+.5)*Math.exp(-u)*r},Complex:function(t){if(0==t.im)return p(t.re);t=new e.Complex(t.re-1,t.im);for(var n=new e.Complex(s[0],0),i=1;i<s.length;++i){var a=t.re+i,u=a*a+t.im*t.im;0!=u?(n.re+=s[i]*a/u,n.im+=-(s[i]*t.im)/u):n.re=s[i]<0?-1/0:1/0}var r=new e.Complex(t.re+o+.5,t.im),c=Math.sqrt(2*Math.PI),m=(t.re+=.5,l(r,t)),c=(0==m.im?m.re*=c:(0!=m.re&&(m.re*=c),m.im*=c),Math.exp(-r.re));return r.re=c*Math.cos(-r.im),r.im=c*Math.sin(-r.im),f(f(m,r),n)},BigNumber:function(t){if(t.isInteger())return t.isNegative()||t.isZero()?new e.BigNumber(1/0):c(t.minus(1));if(t.isFinite())throw new Error("Integer BigNumber expected");return new e.BigNumber(t.isNegative()?NaN:1/0)},"Array | Matrix":function(e){return i(e,p)}});return p.toTex="\\Gamma\\left(${args[0]}\\right)",p}},function(e,t,r){"use strict";function i(e){return e.isInteger()&&e.gte(0)}var a=r(6).isInteger;t.name="combinations",t.factory=function(e,t,r,n){return(n=n("combinations",{"number, number":function(e,t){var r,n,i;if(!a(e)||e<0)throw new TypeError("Positive integer value expected in function combinations");if(!a(t)||t<0)throw new TypeError("Positive integer value expected in function combinations");if(e<t)throw new TypeError("k must be less than or equal to n");for(r=Math.max(t,e-t),i=n=1;i<=e-r;i++)n=n*(r+i)/i;return n},"BigNumber, BigNumber":function(t,r){var n,a,o,s,u=new e.BigNumber(1);if(!i(t)||!i(r))throw new TypeError("Positive integer value expected in function combinations");if(r.gt(t))throw new TypeError("k must be less than n in function combinations");for(n=t.minus(r),r.lt(n)&&(n=r),o=a=u,s=t.minus(n);o.lte(s);o=o.plus(1))a=a.times(n.plus(o)).dividedBy(o);return a}})).toTex="\\binom{${args[0]}}{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(19),a=r(6);t.name="isInteger",t.factory=function(e,t,r,n){var o=n("isInteger",{number:a.isInteger,BigNumber:function(e){return e.isInt()},Fraction:function(e){return 1===e.d&&isFinite(e.n)},"Array | Matrix":function(e){return i(e,o)}});return o}},function(e,t,r){"use strict";t.name="composition",t.factory=function(e,t,n,i){var a=n(r(399)),o=n(r(51)),s=n(r(363)),u=n(r(400)),c=n(r(62));return(n=i("composition",{"number | BigNumber, number | BigNumber":function(e,t){if(!(u(e)&&s(e)&&u(t)&&s(t)))throw new TypeError("Positive integer value expected in function composition");if(c(t,e))throw new TypeError("k must be less than or equal to n in function composition");return a(o(e,-1),o(t,-1))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="catalan",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(310)),s=n(r(83)),u=n(r(399)),c=n(r(350)),f=n(r(400));return(n=i("catalan",{"number | BigNumber":function(e){if(!f(e)||c(e))throw new TypeError("Non-negative integer value expected in function catalan");return o(u(s(e,2),e),a(e,1))}})).toTex="\\mathrm{C}_{${args[0]}}",n}},function(e,t,r){e.exports=[r(404),r(405),r(406),r(407)]},function(e,t,r){"use strict";var i=r(19);t.name="arg",t.factory=function(e,t,r,n){var a=n("arg",{number:function(e){return Math.atan2(0,e)},Complex:function(e){return Math.atan2(e.im,e.re)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\arg\\left(${args[0]}\\right)",a}},function(e,t,r){"use strict";var i=r(19);t.name="conj",t.factory=function(e,t,r,n){var a=n("conj",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(t){return new e.Complex(t.re,-t.im)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\left(${args[0]}\\right)^*",a}},function(e,t,r){"use strict";var i=r(19);t.name="im",t.factory=function(e,t,r,n){var a=n("im",{number:function(e){return 0},BigNumber:function(t){return new e.BigNumber(0)},Complex:function(e){return e.im},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\Im\\left\\lbrace${args[0]}\\right\\rbrace",a}},function(e,t,r){"use strict";var i=r(19);t.name="re",t.factory=function(e,t,r,n){var a=n("re",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(e){return e.re},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\Re\\left\\lbrace${args[0]}\\right\\rbrace",a}},function(e,t,r){e.exports=[r(409),r(410)]},function(e,t,r){"use strict";function i(e){return 2===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]}function a(e){return 3===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]&&"number"==typeof e[2]}t.name="intersect",t.factory=function(e,t,n,f){var l=n(r(50)),p=f("intersect",{"Array, Array, Array":function(e,t,r){if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(!a(t))throw new TypeError("Array with 3 numbers expected for second argument");if(function(e){return 4===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]&&"number"==typeof e[2]&&"number"==typeof e[3]}(r))return function(e,t,r,n,i,a,o,s,u,c){c=(c-e*o-t*s-r*u)/(n*o+i*s+a*u-e-t-r);return[e+c*(n-e),t+c*(i-t),r+c*(a-r)]}(e[0],e[1],e[2],t[0],t[1],t[2],r[0],r[1],r[2],r[3]);throw new TypeError("Array with 4 numbers expected as third argument")},"Array, Array, Array, Array":function(e,t,r,n){if(2===e.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(!i(t))throw new TypeError("Array with 2 numbers expected for second argument");if(!i(r))throw new TypeError("Array with 2 numbers expected for third argument");if(i(n))return function(e,t,r,n,i,a,o,s){var u=(e-i)*(o-i)+(t-a)*(s-a),c=(o-i)*(r-e)+(s-a)*(n-t),l=(o-i)*(o-i)+(s-a)*(s-a),m=(u*c-((e-i)*(r-e)+(t-a)*(n-t))*l)/(((r-e)*(r-e)+(n-t)*(n-t))*l-c*c),u=(u+m*c)/l,c=e+m*(r-e),l=t+m*(n-t),r=a+u*(s-a);return c===i+u*(o-i)&&l===r?[c,l]:null}(e[0],e[1],t[0],t[1],r[0],r[1],n[0],n[1]);throw new TypeError("Array with 2 numbers expected for fourth argument")}if(3!==e.length)throw new TypeError("Arrays with two or thee dimensional points expected");if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(!a(t))throw new TypeError("Array with 3 numbers expected for second argument");if(!a(r))throw new TypeError("Array with 3 numbers expected for third argument");if(a(n))return function(e,t,r,n,i,a,o,s,u,c,f,l){var p=(e-o)*(c-o)+(t-s)*(f-s)+(r-u)*(l-u),m=(c-o)*(n-e)+(f-s)*(i-t)+(l-u)*(a-r),g=(c-o)*(c-o)+(f-s)*(f-s)+(l-u)*(l-u),d=(p*m-((e-o)*(n-e)+(t-s)*(i-t)+(r-u)*(a-r))*g)/(((n-e)*(n-e)+(i-t)*(i-t)+(a-r)*(a-r))*g-m*m),p=(p+d*m)/g,m=e+d*(n-e),g=t+d*(i-t),n=r+d*(a-r),e=s+p*(f-s),i=u+p*(l-u);return m===o+p*(c-o)&&g===e&&n===i?[m,g,n]:null}(e[0],e[1],e[2],t[0],t[1],t[2],r[0],r[1],r[2],n[0],n[1],n[2]);throw new TypeError("Array with 3 numbers expected for fourth argument")},"Matrix, Matrix, Matrix":function(e,t,r){return l(p(e.valueOf(),t.valueOf(),r.valueOf()))},"Matrix, Matrix, Matrix, Matrix":function(e,t,r,n){return l(p(e.valueOf(),t.valueOf(),r.valueOf(),n.valueOf()))}});return p}},function(e,t,r){"use strict";function i(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]}function a(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]&&"number"==typeof e[2]}function o(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]&&"number"==typeof e[2]&&"number"==typeof e[3]&&"number"==typeof e[4]&&"number"==typeof e[5]}function s(e){for(var t=Object.keys(e),r=[],n=0;n<t.length;n++)r.push(e[t[n]]);return r}function c(e,t,r,n,i){return Math.abs(r*e+n*t+i)/Math.pow(r*r+n*n,.5)}function f(e,t,r,n,i,a,o,s,u){a=[(i-t)*u-(a-r)*s,(a-r)*o-(n-e)*u,(n-e)*s-(i-t)*o];return Math.pow(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],.5)/Math.pow(o*o+s*s+u*u,.5)}function l(e,t,r,n){n-=t,t=r-e;return Math.pow(n*n+t*t,.5)}function p(e,t,r,n,i,a){a-=r,r=i-t,i=n-e;return Math.pow(a*a+r*r+i*i,.5)}t.name="distance",t.factory=function(e,t,n,s){return n(r(50)),s("distance",{"Array, Array, Array":function(e,t,r){if(2!=e.length||2!=t.length||2!=r.length)throw new TypeError("Invalid Arguments: Try again");if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(!i(t))throw new TypeError("Array with 2 numbers expected for second argument");var a;if(i(r))return a=(r=(r[1]-r[0])/(t[1]-t[0]))*r*t[0],r=r*t[0]*-1,t=e[1],c(e[0],e[1],a,r,t);throw new TypeError("Array with 2 numbers expected for third argument")},"Object, Object, Object":function(e,t,r){if(2!=Object.keys(e).length||2!=Object.keys(t).length||2!=Object.keys(r).length)throw new TypeError("Invalid Arguments: Try again");if(!i(e))throw new TypeError("Values of pointX and pointY should be numbers");if(!i(t))throw new TypeError("Values of lineOnePtX and lineOnePtY should be numbers");if(!i(r))throw new TypeError("Values of lineTwoPtX and lineTwoPtY should be numbers");var a;if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("lineOnePtX")&&t.hasOwnProperty("lineOnePtY")&&r.hasOwnProperty("lineTwoPtX")&&r.hasOwnProperty("lineTwoPtY"))return a=(r=(r.lineTwoPtY-r.lineTwoPtX)/(t.lineOnePtY-t.lineOnePtX))*r*t.lineOnePtX,r=r*t.lineOnePtX*-1,t=e.pointX,c(e.pointX,e.pointY,a,r,t);throw new TypeError("Key names do not match")},"Array, Array":function(e,t){if(2==e.length&&3==t.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(a(t))return c(e[0],e[1],t[0],t[1],t[2])}else{if(3==e.length&&6==t.length){if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(o(t))return f(e[0],e[1],e[2],t[0],t[1],t[2],t[3],t[4],t[5]);throw new TypeError("Array with 6 numbers expected for second argument")}if(2==e.length&&2==t.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(i(t))return l(e[0],e[1],t[0],t[1]);throw new TypeError("Array with 2 numbers expected for second argument")}if(3!=e.length||3!=t.length)throw new TypeError("Invalid Arguments: Try again");if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(a(t))return p(e[0],e[1],e[2],t[0],t[1],t[2])}throw new TypeError("Array with 3 numbers expected for second argument")},"Object, Object":function(e,t){if(2==Object.keys(e).length&&3==Object.keys(t).length){if(!i(e))throw new TypeError("Values of pointX and pointY should be numbers");if(!a(t))throw new TypeError("Values of xCoeffLine, yCoeffLine and constant should be numbers");if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("xCoeffLine")&&t.hasOwnProperty("yCoeffLine")&&t.hasOwnProperty("yCoeffLine"))return c(e.pointX,e.pointY,t.xCoeffLine,t.yCoeffLine,t.constant)}else if(3==Object.keys(e).length&&6==Object.keys(t).length){if(!a(e))throw new TypeError("Values of pointX, pointY and pointZ should be numbers");if(!o(t))throw new TypeError("Values of x0, y0, z0, a, b and c should be numbers");if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("x0")&&t.hasOwnProperty("y0")&&t.hasOwnProperty("z0")&&t.hasOwnProperty("a")&&t.hasOwnProperty("b")&&t.hasOwnProperty("c"))return f(e.pointX,e.pointY,e.pointZ,t.x0,t.y0,t.z0,t.a,t.b,t.c)}else if(2==Object.keys(e).length&&2==Object.keys(t).length){if(!i(e))throw new TypeError("Values of pointOneX and pointOneY should be numbers");if(!i(t))throw new TypeError("Values of pointTwoX and pointTwoY should be numbers");if(e.hasOwnProperty("pointOneX")&&e.hasOwnProperty("pointOneY")&&t.hasOwnProperty("pointTwoX")&&t.hasOwnProperty("pointTwoY"))return l(e.pointOneX,e.pointOneY,t.pointTwoX,t.pointTwoY)}else{if(3!=Object.keys(e).length||3!=Object.keys(t).length)throw new TypeError("Invalid Arguments: Try again");if(!a(e))throw new TypeError("Values of pointOneX, pointOneY and pointOneZ should be numbers");if(!a(t))throw new TypeError("Values of pointTwoX, pointTwoY and pointTwoZ should be numbers");if(e.hasOwnProperty("pointOneX")&&e.hasOwnProperty("pointOneY")&&e.hasOwnProperty("pointOneZ")&&t.hasOwnProperty("pointTwoX")&&t.hasOwnProperty("pointTwoY")&&t.hasOwnProperty("pointTwoZ"))return p(e.pointOneX,e.pointOneY,e.pointOneZ,t.pointTwoX,t.pointTwoY,t.pointTwoZ)}throw new TypeError("Key names do not match")},Array:function(e){if(function(e){if(2==e[0].length&&"number"==typeof e[0][0]&&"number"==typeof e[0][1]){for(var t in e)if(2!=e[t].length||"number"!=typeof e[t][0]||"number"!=typeof e[t][1])return}else{if(3!=e[0].length||"number"!=typeof e[0][0]||"number"!=typeof e[0][1]||"number"!=typeof e[0][2])return;for(var t in e)if(3!=e[t].length||"number"!=typeof e[t][0]||"number"!=typeof e[t][1]||"number"!=typeof e[t][2])return}return 1}(e))return function(e){for(var t=[],r=0;r<e.length-1;r++)for(var n=r+1;n<e.length;n++)2==e[0].length?t.push(l(e[r][0],e[r][1],e[n][0],e[n][1])):3==e[0].length&&t.push(p(e[r][0],e[r][1],e[r][2],e[n][0],e[n][1],e[n][2]));return t}(e);throw new TypeError("Incorrect array format entered for pairwise distance calculation")}})}},function(e,t,r){e.exports=[r(412),r(413),r(415),r(416)]},function(e,t,r){"use strict";t.name="and",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(373)),u=n(r(413)),c=(n(r(414)),n(r(354))),f=n(r(365)),l=n(r(84)),p=n(r(55)),m=n(r(56)),h=i("and",{"number, number":function(e,t){return!(!e||!t)},"Complex, Complex":function(e,t){return!(0===e.re&&0===e.im||0===t.re&&0===t.im)},"BigNumber, BigNumber":function(e,t){return!(e.isZero()||t.isZero()||e.isNaN()||t.isNaN())},"Unit, Unit":function(e,t){return h(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h,!1):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, any":function(e,t){return u(t)?s(e.size(),e.storage()):("sparse"===e.storage()?l:m)(e,t,h,!1)},"any, Matrix":function(e,t){return u(e)?s(e.size(),e.storage()):("sparse"===t.storage()?l:m)(t,e,h,!0)},"Array, any":function(e,t){return h(o(e),t).valueOf()},"any, Array":function(e,t){return h(e,o(t)).valueOf()}});return h.toTex="\\left(${args[0]}"+a.operators.and+"${args[1]}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="not",t.factory=function(e,t,n,a){var o=r(29),s=a("not",{number:function(e){return!e},Complex:function(e){return 0===e.re&&0===e.im},BigNumber:function(e){return e.isZero()||e.isNaN()},Unit:function(e){return s(e.value)},"Array | Matrix":function(e){return i(e,s)}});return s.toTex=o.operators.not+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isZero",t.factory=function(e,t,r,n){var a=n("isZero",{number:function(e){return 0===e},BigNumber:function(e){return e.isZero()},Complex:function(e){return 0===e.re&&0===e.im},Fraction:function(e){return 1===e.d&&0===e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";t.name="or",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(59)),u=n(r(76)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=i("or",{"number, number":function(e,t){return!(!e&&!t)},"Complex, Complex":function(e,t){return 0!==e.re||0!==e.im||0!==t.re||0!==t.im},"BigNumber, BigNumber":function(e,t){return!e.isZero()&&!e.isNaN()||!t.isZero()&&!t.isNaN()},"Unit, Unit":function(e,t){return p(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\left(${args[0]}"+a.operators.or+"${args[1]}\\right)",p}},function(e,t,r){"use strict";t.name="xor",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=i("xor",{"number, number":function(e,t){return!!(!!e^!!t)},"Complex, Complex":function(e,t){return!!((0!==e.re||0!==e.im)^(0!==t.re||0!==t.im))},"BigNumber, BigNumber":function(e,t){return!!((!e.isZero()&&!e.isNaN())^(!t.isZero()&&!t.isNaN()))},"Unit, Unit":function(e,t){return p(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\left(${args[0]}"+a.operators.xor+"${args[1]}\\right)",p}},function(e,t,r){e.exports=[r(295),r(418),r(312),r(419),r(420),r(81),r(421),r(311),r(422),r(316),r(423),r(424),r(425),r(318),r(370),r(329),r(373)]},function(e,t,r){"use strict";var i=r(39).size;t.name="cross",t.factory=function(e,t,n,a){function o(e,t){var r=i(e),n=i(t);if(1!=r.length||1!=n.length||3!=r[0]||3!=n[0])throw new RangeError("Vectors with length 3 expected (Size A = ["+r.join(", ")+"], B = ["+n.join(", ")+"])");return[u(c(e[1],t[2]),c(e[2],t[1])),u(c(e[2],t[0]),c(e[0],t[2])),u(c(e[0],t[1]),c(e[1],t[0]))]}var s=n(r(50)),u=n(r(74)),c=n(r(83));return(n=a("cross",{"Matrix, Matrix":function(e,t){return s(o(e.toArray(),t.toArray()))},"Matrix, Array":function(e,t){return s(o(e.toArray(),t))},"Array, Matrix":function(e,t){return s(o(e,t.toArray()))},"Array, Array":o})).toTex="\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(39),a=r(3).clone,o=r(6).isInteger;t.name="diag",t.factory=function(e,t,n,s){function u(e,t,r,n){if(!o(t))throw new TypeError("Second parameter in function diag must be an integer");var i=0<t?t:0,a=t<0?-t:0;switch(r.length){case 1:return c(e,t,n,r[0],a,i);case 2:return f(e,t,n,r,a,i)}throw new RangeError("Matrix for function diag must be 2 dimensional")}function c(t,r,n,i,a,o){a=[i+a,i+o],i=e.Matrix.storage(n||"dense").diagonal(a,t,r);return null!==n?i:i.valueOf()}function f(e,t,r,n,i,o){if(e&&!0===e.isMatrix)return t=e.diagonal(t),null!==r?r!==t.storage()?l(t,r):t:t.valueOf();for(var u=Math.min(n[0]-i,n[1]-o),c=[],f=0;f<u;f++)c[f]=a(e[f+i][f+o]);return null!==r?l(c):c}var l=n(r(50));return(n=s("diag",{Array:function(e){return u(e,0,i.size(e),null)},"Array, number":function(e,t){return u(e,t,i.size(e),null)},"Array, BigNumber":function(e,t){return u(e,t.toNumber(),i.size(e),null)},"Array, string":function(e,t){return u(e,0,i.size(e),t)},"Array, number, string":function(e,t,r){return u(e,t,i.size(e),r)},"Array, BigNumber, string":function(e,t,r){return u(e,t.toNumber(),i.size(e),r)},Matrix:function(e){return u(e,0,e.size(),e.storage())},"Matrix, number":function(e,t){return u(e,t,e.size(),e.storage())},"Matrix, BigNumber":function(e,t){return u(e,t.toNumber(),e.size(),e.storage())},"Matrix, string":function(e,t){return u(e,0,e.size(),t)},"Matrix, number, string":function(e,t,r){return u(e,t,e.size(),r)},"Matrix, BigNumber, string":function(e,t,r){return u(e,t.toNumber(),e.size(),r)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(39).size;t.name="dot",t.factory=function(e,t,n,a){function o(e,t){var r=i(e),n=i(t),a=r[0];if(1!==r.length||1!==n.length)throw new RangeError("Vector expected");if(r[0]!=n[0])throw new RangeError("Vectors must have equal length ("+r[0]+" != "+n[0]+")");if(0==a)throw new RangeError("Cannot calculate the dot product of empty vectors");for(var o=0,c=0;c<a;c++)o=s(o,u(e[c],t[c]));return o}var s=n(r(49)),u=n(r(83));return(n=a("dot",{"Matrix, Matrix":function(e,t){return o(e.toArray(),t.toArray())},"Matrix, Array":function(e,t){return o(e.toArray(),t)},"Array, Matrix":function(e,t){return o(e,t.toArray())},"Array, Array":o})).toTex="\\left(${args[0]}\\cdot${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(3).clone,a=r(39).flatten;t.name="flatten",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("flatten",{Array:function(e){return a(i(e))},Matrix:function(e){e=a(i(e.toArray()));return s(e)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).resize;t.name="ones",t.factory=function(e,t,n,o){function s(t,r){var i=function(e){var t=!1;return e.forEach(function(e,r,n){e&&!0===e.isBigNumber&&(t=!0,n[r]=e.toNumber())}),t}(t)?new e.BigNumber(1):1;return c(t),r?(r=f(r),0<t.length?r.resize(t,i):r):(r=[],0<t.length?a(r,t,i):r)}function c(e){e.forEach(function(e){if("number"!=typeof e||!i(e)||e<0)throw new Error("Parameters in function ones must be positive integers")})}var f=n(r(50));return(n=o("ones",{"":function(){return"array"===t.matrix?s([]):s([],"default")},"...number | BigNumber | string":function(e){var n;return"string"==typeof e[e.length-1]?(n=e.pop(),s(e,n)):"array"===t.matrix?s(e):s(e,"default")},Array:s,Matrix:function(e){var t=e.storage();return s(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(41),a=r(11),o=r(6).isInteger,s=r(23).format,u=r(3).clone,c=r(39);t.name="resize",t.factory=function(e,t,n,f){function l(e,t,r){if(void 0!==r){if("string"!=typeof r||1!==r.length)throw new TypeError("Single character expected as defaultValue")}else r=" ";if(1!==t.length)throw new i(t.length,1);var n=t[0];if("number"!=typeof n||!o(n))throw new TypeError("Invalid size, must contain positive integers (size: "+s(t)+")");if(e.length>n)return e.substring(0,n);if(e.length<n){for(var a=e,u=0,c=n-e.length;u<c;u++)a+=r;return a}return e}function m(e,r,n){if(2!=arguments.length&&3!=arguments.length)throw new a("resize",arguments.length,2,3);if((r=r&&!0===r.isMatrix?r.valueOf():r).length&&r[0]&&!0===r[0].isBigNumber&&(r=r.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e})),e&&!0===e.isMatrix)return e.resize(r,n,!0);if("string"==typeof e)return l(e,r,n);var i=!Array.isArray(e)&&"array"!==t.matrix;if(0!=r.length)return Array.isArray(e)||(e=[e]),e=u(e),r=c.resize(e,r,n),i?p(r):r;for(;Array.isArray(e);)e=e[0];return u(e)}var p=n(r(50));return m.toTex="\\mathrm{${name}}\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(39);t.name="size",t.factory=function(e,t,n,a){var o=n(r(50));return(n=a("size",{Matrix:function(e){return o(e.size())},Array:i.size,string:function(e){return"array"===t.matrix?[e.length]:o([e.length])},"number | Complex | BigNumber | Unit | boolean | null":function(e){return"array"===t.matrix?[]:o([])}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3),a=r(39);t.name="squeeze",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("squeeze",{Array:function(e){return a.squeeze(i.clone(e))},Matrix:function(e){e=a.squeeze(e.toArray());return Array.isArray(e)?s(e):e},any:function(e){return i.clone(e)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(399),r(397),r(398),r(427),r(429),r(430),r(431),r(433),r(434)]},function(e,t,r){"use strict";t.name="kldivergence",t.factory=function(e,t,n,i){function a(e,t){var r=t.size().length,n=e.size().length;if(1<r)throw new Error("first object must be one dimensional");if(1<n)throw new Error("second object must be one dimensional");if(r!==n)throw new Error("Length of two vectors must be equal");if(0===u(e))throw new Error("Sum of elements in first object must be non zero");if(0===u(t))throw new Error("Sum of elements in second object must be non zero");r=s(e,u(e)),n=s(t,u(t)),e=u(c(r,l(f(r,n))));return p(e)?e:Number.NaN}var o=n(r(50)),s=n(r(310)),u=n(r(428)),c=n(r(83)),f=n(r(353)),l=n(r(82)),p=n(r(87));return i("kldivergence",{"Array, Array":function(e,t){return a(o(e),o(t))},"Matrix, Array":function(e,t){return a(e,o(t))},"Array, Matrix":function(e,t){return a(o(e),t)},"Matrix, Matrix":a})}},function(e,t,r){"use strict";var i=r(306);t.name="sum",t.factory=function(e,t,n,a){function o(r){var n=void 0;if(i(r,function(e){n=void 0===n?e:s(n,e)}),void 0===n)switch(t.number){case"number":return 0;case"bignumber":return new e.BigNumber(0);case"fraction":return new e.Fraction(0);default:return 0}return n}var s=n(r(51));return(n=a("sum",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(){throw new Error("sum(A, dim) is not yet supported")},"...":function(){return o(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(306);t.name="multinomial",t.factory=function(e,t,n,a){var o=n(r(49)),s=n(r(83)),u=n(r(310)),c=n(r(397)),f=n(r(400)),l=n(r(363));return a("multinomial",{"Array | Matrix":function(e){var t=0,r=1;return i(e,function(e){if(!f(e)||!l(e))throw new TypeError("Positive integer value expected in function multinomial");t=o(t,e),r=s(r,c(e))}),u(c(t),r)}})}},function(e,t,r){"use strict";function i(e){return e.isInteger()&&e.gte(0)}var a=r(6).isInteger;t.name="permutations",t.factory=function(e,t,n,o){return(o=o("permutations",{"number | BigNumber":n(r(397)),"number, number":function(e,t){var r,n;if(!a(e)||e<0)throw new TypeError("Positive integer value expected in function permutations");if(!a(t)||t<0)throw new TypeError("Positive integer value expected in function permutations");if(e<t)throw new TypeError("second argument k must be less than or equal to first argument n");for(n=e-t+(r=1);n<=e;n++)r*=n;return r},"BigNumber, BigNumber":function(t,r){var n,a;if(!i(t)||!i(r))throw new TypeError("Positive integer value expected in function permutations");if(r.gt(t))throw new TypeError("second argument k must be less than or equal to first argument n");for(n=new e.BigNumber(1),a=t.minus(r).plus(1);a.lte(t);a=a.plus(1))n=n.times(a);return n}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",o}},function(e,t,r){"use strict";t.name="pickRandom",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").pickRandom).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(11),a=r(304);t.name="distribution",t.factory=function(e,t,n,o){function s(e){var t;if(f.hasOwnProperty(e))return t=Array.prototype.slice.call(arguments,1),function(e){var r=function(t,r){return t+e()*(r-t)},n=function(t,r){return Math.floor(t+e()*(r-t))},o=function(e,t,r,n){var i,a,s=[];if(1<(e=e.slice(0)).length)for(a=0,i=e.shift();a<i;a++)s.push(o(e,t,r,n));else for(a=0,i=e.shift();a<i;a++)s.push(n(t,r));return s};return{random:function(e,t,n){var s,c,f;if(3<arguments.length)throw new i("random",arguments.length,0,3);return 1===arguments.length?a(e)?s=e:f=e:f=2===arguments.length?(a(e)?s=e:c=e,t):(s=e,c=t,n),void 0===f&&(f=1),void 0===c&&(c=0),void 0!==s?(e=o(s.valueOf(),c,f,r),s&&!0===s.isMatrix?u(e):e):r(c,f)},randomInt:function(e,t,r){var s,c,f;if(3<arguments.length||arguments.length<1)throw new i("randomInt",arguments.length,1,3);return 1===arguments.length?a(e)?s=e:f=e:f=2===arguments.length?(a(e)?s=e:c=e,t):(s=e,c=t,r),void 0===c&&(c=0),void 0!==s?(e=o(s.valueOf(),c,f,n),s&&!0===s.isMatrix?u(e):e):n(c,f)},pickRandom:function(e){if(1!==arguments.length)throw new i("pickRandom",arguments.length,1);if(e&&!0===e.isMatrix)e=e.valueOf();else if(!Array.isArray(e))throw new TypeError("Unsupported type of value in function pickRandom");if(1<c.size(e).length)throw new Error("Only one dimensional vectors supported");return e[Math.floor(Math.random()*e.length)]}}}(f[e].apply(this,t));throw new Error("Unknown distribution "+e)}var u=n(r(50)),c=r(39),f={uniform:function(){return Math.random},normal:function(){return function(){for(var e,t,r=-1;r<0||1<r;)e=Math.random(),t=Math.random(),r=1/6*Math.pow(-2*Math.log(e),.5)*Math.cos(2*Math.PI*t)+.5;return r}}};return s.toTex="\\mathrm{${name}}\\left(${args}\\right)",s}},function(e,t,r){"use strict";t.name="random",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").random).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="randomInt",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").randomInt).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(436),r(437),r(86),r(62),r(336),r(58),r(438),r(439)]},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="compare",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(76)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=a("compare",{"boolean, boolean":function(e,t){return e===t?0:t<e?1:-1},"number, number":function(e,r){return e===r||i(e,r,t.epsilon)?0:r<e?1:-1},"BigNumber, BigNumber":function(t,r){return new e.BigNumber(t.cmp(r))},"Fraction, Fraction":function(t,r){return new e.Fraction(t.compare(r))},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return p(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e===t?0:t<e?1:-1},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\mathrm{${name}}\\left(${args}\\right)",p}},function(e,t,r){"use strict";t.name="deepEqual",t.factory=function(e,t,n,i){var o=n(r(86));return(n=i("deepEqual",{"any, any":function(e,t){return function a(e,t){if(Array.isArray(e)){if(Array.isArray(t)){var r=e.length;if(r!==t.length)return!1;for(var n=0;n<r;n++)if(!a(e[n],t[n]))return!1;return!0}return!1}return!Array.isArray(t)&&o(e,t)}(e.valueOf(),t.valueOf())}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="smallerEq",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("smallerEq",{"boolean, boolean":function(e,t){return e<=t},"number, number":function(e,r){return e<=r||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lte(t)},"Fraction, Fraction":function(e,t){return 1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e<=t},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.smallerEq+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="unequal",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("unequal",{"any, any":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:h(e,t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,h):s(t,e,h,!0):"sparse"===t.storage()?s(e,t,h,!1):f(e,t,h);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,h,!0);return t},"Array, any":function(e,t){return l(o(e),t,h,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,h,!0).valueOf()}}),h=a("_unequal",{"boolean, boolean":function(e,t){return e!==t},"number, number":function(e,r){return!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return!e.eq(t)},"Fraction, Fraction":function(e,t){return 0!==e.compare(t)},"Complex, Complex":function(e,r){return!i(e.re,r.re,t.epsilon)||!i(e.im,r.im,t.epsilon)},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e!==t}});return m.toTex="\\left(${args[0]}"+n.operators.unequal+"${args[1]}\\right)",m}},function(e,t,r){e.exports=[r(305),r(309),r(441),r(314),r(443),r(444),r(445),r(446),r(428),r(447)]},function(e,t,r){"use strict";var i=r(39).flatten;t.name="median",t.factory=function(e,t,n,a){function o(e){var t=(e=i(e.valueOf())).length;if(0==t)throw new Error("Cannot calculate median of an empty array");if(t%2==0){for(var r=t/2-1,n=f(e,1+r),a=e[r],o=0;o<r;++o)0<c(e[o],a)&&(a=e[o]);return m(a,n)}n=f(e,(t-1)/2);return p(n)}var s=n(r(51)),u=n(r(78)),c=n(r(436)),f=n(r(442)),n=a("median",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("median(A, dim) is not yet supported")},"...":function(){return o(Array.prototype.slice.call(arguments))}}),p=a({"number | BigNumber | Unit":function(e){return e}}),m=a({"number | BigNumber | Unit, number | BigNumber | Unit":function(e,t){return u(s(e,t),2)}});return n.toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="partitionSelect",t.factory=function(e,t,n,a){function o(e,t){return-c(e,t)}function s(e,t,r){if(!i(t)||t<0)throw new Error("k must be a non-negative integer");if(e&&e.isMatrix){if(1<e.size().length)throw new Error("Only one dimensional matrices supported");return u(e.valueOf(),t,r)}return Array.isArray(e)?u(e,t,r):void 0}function u(e,t,r){if(t>=e.length)throw new Error("k out of bounds");for(var n=0,i=e.length-1;n<i;){for(var u,a=n,o=i,s=e[Math.floor(Math.random()*(i-n+1))+n];a<o;)0<=r(e[a],s)?(u=e[o],e[o]=e[a],e[a]=u,--o):++a;0<r(e[a],s)&&--a,t<=a?i=a:n=a+1}return e[t]}var c=n(r(436));return a("partitionSelect",{"Array | Matrix, number":function(e,t){return s(e,t,c)},"Array | Matrix, number, string":function(e,t,r){if("asc"===r)return s(e,t,c);if("desc"===r)return s(e,t,o);throw new Error('Compare string must be "asc" or "desc"')},"Array | Matrix, number, function":s})}},function(e,t,r){"use strict";var i=r(39).flatten;t.name="mode",t.factory=function(e,t,r,n){function a(e){if(0==(e=i(e.valueOf())).length)throw new Error("Cannot calculate mode of an empty array");var o,r={},n=[],a=0;for(o in e)e[o]in r||(r[e[o]]=0),r[e[o]]++,r[e[o]]==a?n.push(e[o]):r[e[o]]>a&&(a=r[e[o]],n=[e[o]]);return n}return n("mode",{"Array | Matrix":a,"...":function(){return a(Array.prototype.slice.call(arguments))}})}},function(e,t,r){"use strict";var i=r(306);t.name="prod",t.factory=function(e,t,n,a){function o(e){var t=void 0;if(i(e,function(e){t=void 0===t?e:s(t,e)}),void 0===t)throw new Error("Cannot calculate prod of an empty array");return t}var s=n(r(77));return(n=a("prod",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("prod(A, dim) is not yet supported")},"...":function(){return o(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(6).isNumber,o=r(39).flatten,s=r(304);t.name="quantileSeq",t.factory=function(e,t,n,u){function f(e,t,r){var s,c,n=o(e),e=n.length;if(0===e)throw new Error("Cannot calculate quantile of an empty sequence");if(a(t)){if(0===(u=(s=t*(e-1))%1))return c=r?n[s]:m(n,s),g(c),c;var d=Math.floor(s);if(r)f=n[d],v=n[d+1];else{v=m(n,d+1),f=n[d];for(var y=0;y<d;++y)0<h(n[y],f)&&(f=n[y])}return g(f),g(v),l(p(f,1-u),p(v,u))}if((s=t.times(e-1)).isInteger())return s=s.toNumber(),c=r?n[s]:m(n,s),g(c),c;var f,v,d=s.floor(),u=s.minus(d),x=d.toNumber();if(r)f=n[x],v=n[x+1];else{v=m(n,x+1),f=n[x];for(y=0;y<x;++y)0<h(n[y],f)&&(f=n[y])}g(f),g(v);t=u.constructor.ONE;return l(p(f,t.minus(u)),p(v,u))}var l=n(r(49)),p=n(r(83)),m=n(r(442)),h=n(r(436)),g=u({"number | BigNumber | Unit":function(e){return e}});return function(t,r,n){var u,c;if(arguments.length<2||3<arguments.length)throw new SyntaxError("Function quantileSeq requires two or three parameters");if(s(t)&&"boolean"==typeof(n=n||!1)){if(u=t.valueOf(),a(r)){if(r<0)throw new Error("N/prob must be non-negative");if(r<=1)return f(u,r,n);if(1<r){if(!i(r))throw new Error("N must be a positive integer");for(var l=r+1,o=new Array(r),p=0;p<r;)o[p]=f(u,++p/l,n);return o}}if(r&&r.isBigNumber){if(r.isNegative())throw new Error("N/prob must be non-negative");if(c=r.constructor.ONE,r.lte(c))return f(u,r,n);if(r.gt(c)){if(!r.isInteger())throw new Error("N must be a positive integer");var m=r.toNumber();if(4294967295<m)throw new Error("N must be less than or equal to 2^32-1, as that is the maximum length of an Array");l=new e.BigNumber(m+1);o=new Array(m);for(p=0;p<m;)o[p]=f(u,new e.BigNumber(++p).div(l),n);return o}}if(Array.isArray(r)){o=new Array(r.length);for(p=0;p<o.length;++p){var h=r[p];if(a(h)){if(h<0||1<h)throw new Error("Probability must be between 0 and 1, inclusive")}else{if(!h||!h.isBigNumber)throw new TypeError("Unexpected type of argument in function quantileSeq");if(c=h.constructor.ONE,h.isNegative()||h.gt(c))throw new Error("Probability must be between 0 and 1, inclusive")}o[p]=f(u,h,n)}return o}}throw new TypeError("Unexpected type of argument in function quantileSeq")}}},function(e,t,r){"use strict";t.name="std",t.factory=function(e,t,n,i){function a(e,t){if(0==e.length)throw new SyntaxError("Function std requires one or more parameters (0 provided)");return o(s.apply(null,arguments))}var o=n(r(362)),s=n(r(447));return(n=i("std",{"Array | Matrix":a,"Array | Matrix, string":a,"...":function(){return a(Array.prototype.slice.call(arguments))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i="unbiased",a=r(306);t.name="var",t.factory=function(e,t,n,o){function s(t,r){var n=0,i=0;if(0==t.length)throw new SyntaxError("Function var requires one or more parameters (0 provided)");if(a(t,function(e){n=u(n,e),i++}),0===i)throw new Error("Cannot calculate var of an empty array");var o=l(n,i),n=0;switch(a(t,function(e){e=c(e,o);n=u(n,f(e,e))}),r){case"uncorrected":return l(n,i);case"biased":return l(n,i+1);case"unbiased":var s=n&&!0===n.isBigNumber?new e.BigNumber(0):0;return 1==i?s:l(n,i-1);default:throw new Error('Unknown normalization "'+r+'". Choose "unbiased" (default), "uncorrected", or "biased".')}}var u=n(r(51)),c=n(r(74)),f=n(r(77)),l=n(r(78));return(n=o("variance",{"Array | Matrix":function(e){return s(e,i)},"Array | Matrix, string":s,"...":function(){return s(arguments,i)}})).toTex="\\mathrm{Var}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(449),r(459),r(461),r(463),r(466),r(468),r(470),r(471),r(467),r(469),r(462),r(472),r(465),r(474),r(475),r(478),r(480),r(482),r(483),r(484),r(485),r(486),r(477),r(487),r(488)]},function(e,t,r){"use strict";var i=r(19),a=r(450);t.name="acos",t.factory=function(e,t,n,o){function s(t){var r=new e.Complex(t.im*t.im-t.re*t.re+1,-2*t.re*t.im),r=u(r),r=new e.Complex(r.re-t.im,r.im+t.re),t=c(r);return new e.Complex(1.5707963267948966-t.im,t.re)}var u=o.find(n(r(362)),["Complex"]),c=o.find(n(r(82)),["Complex"]),f=o("acos",{number:function(r){return-1<=r&&r<=1||t.predictable?Math.acos(r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\cos^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){var n=r(93).pi,i=r(451);e.exports=function(e,t,r){if(r){if(e.abs().lt(t.ONE))throw new Error("asec() only has non-complex values for |x| >= 1.")}else if(e.abs().gt(t.ONE))throw new Error("acos() only has non-complex values for |x| <= 1.");var a;return e.eq(-1)?n(t):(a=t.precision,t.config({precision:a+4}),r&&(e=t.ONE.div(e)),r=i(t.ONE.minus(e.times(e)).sqrt().div(e.plus(t.ONE)),t).times(2),t.config({precision:a}),r.toDP(a-1))}},function(e,t,r){var n=r(93),i=r(452),a=r(94);e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);if(!r&&e.isZero()||r&&!e.isFinite())return new t(0);var o=t.precision;if(!r&&!e.isFinite()||r&&e.isZero())return(s=n.pi(t.constructor({precision:o+2})).div(2).toDP(o-1)).constructor=t,s.s=e.s,s;t.config({precision:o+4});var s,c,r=(e=r?t.ONE.div(e):e).abs();return r.lte(.875)?(((c=a(e)).constructor=t).config({precision:o}),c.toDP(t.precision-1)):r.gte(1.143)?((c=(s=n.pi(t.constructor({precision:o+4})).div(2)).minus(a(t.ONE.div(r)))).s=e.s,(c.constructor=t).config({precision:o}),c.toDP(t.precision-1)):(e=e.div(e.times(e).plus(1).sqrt()),t.config({precision:o}),i(e,t))}},function(e,t,r){var n=r(93).pi,i=r(453),a=r(454);e.exports=function o(e,t,r){if(e.isNaN())return new t(NaN);var s=t.precision,u=e.abs();if(r){if(u.lt(t.ONE))throw new Error("acsc() only has non-complex values for |x| >= 1.");t.config({precision:s+2}),e=t.ONE.div(e),t.config({precision:s}),u=e.abs()}else if(u.gt(t.ONE))throw new Error("asin() only has non-complex values for |x| <= 1.");return u.gt(.8)?(t.config({precision:s+4}),r=e.s,(e=n(t.constructor({precision:s+4})).div(2).minus(o(t.ONE.minus(e.times(e)).sqrt(),t))).s=r,(e.constructor=t).config({precision:s}),e.toDP(s-1)):((r=u.gt(.58))&&(t.config({precision:s+8}),e=e.div(new t(2).sqrt().times(t.ONE.minus(e.times(e)).sqrt().plus(t.ONE).sqrt())),t.config({precision:s})),u=s<=60||e.dp()<=Math.log(s)&&e.lt(.05)?i(e,s):a(e,t),r?u.times(2):u)}},function(e,t){e.exports=function(e,t){var r=e.constructor;r.config({precision:t+Math.log(t)|4});for(var n=new r(1),i=e,a=NaN,o=e.times(e),s=e,u=new r(n),c=new r(n),f=new r(n),l=3;!i.equals(a);l+=2)s=s.times(o),u=u.times(f),c=c.times(f.plus(n)),a=i,f=new r(l),i=i.plus(s.times(u).div(f.times(c)));return r.config({precision:t}),i.toDP(t-1)}},function(e,t,r){var n=r(455),i=r(458);e.exports=function(e,t){var r=t.precision,a=-(r+4),o=r+8-e.e,s=25-e.e,u=Math.max(1.442695*Math.log(r+2)|5,5),c=(t.config({precision:s}),0),f=new t(Math.asin(e.toNumber())+"");do{var l=n(f,t,1,!1),p=i(l),l=(l.isZero()||(l.s=f.s),l.minus(e).div(p)),f=f.minus(l),s=Math.min(2*s,o)}while(t.config({precision:s}),2*l.e>=a&&!l.isZero()&&++c<=u);if(c==u)throw new Error("asin() failed to converge to the requested accuracy.Try with a higher precision.");return t.config({precision:r}),f.toDP(r-1)}},function(e,t,r){var n=r(456),i=r(457);e.exports=function(e,t,r,a){if(e.isNaN()||!e.isFinite())return new t(NaN);var o=t.precision,e=new t(e),u=e.isNegative(),c=(u&&(e.s=-e.s),o+(0|Math.log(o))+3);if(t.config({precision:c}),(e=n(e,t.constructor({precision:c}),r))[0].constructor=t,e[1])return e=e[0],a&&e.isZero()&&(e=new t(1/0)),t.config({precision:o}),e;if(e=e[0],r){f=i(e.div(3125),r),t.config({precision:Math.min(c,o+15)});for(var l=new t(5),p=new t(16),m=new t(20),h=0;h<5;++h)var v=(g=f.times(f)).times(f),d=v.times(g),f=p.times(d).minus(m.times(v)).plus(l.times(f));u&&(f.s=-f.s)}else{var y,x=e.abs().lt(t.ONE)?(y=64,3):(y=256,4);f=i(e.div(y),r),t.config({precision:Math.min(c,o+8)});for(var b=new t(8);0<x;--x){var g,w=(g=f.times(f)).times(g);f=b.times(w.minus(g)).plus(t.ONE)}}return a&&(f=f.e<=-o?new t(1/0):t.ONE.div(f)),t.config({precision:o}),f.toDP(o-1)}},function(e,t,r){var n=r(93);e.exports=function(e,t,r){var o,i=n.pi(t.constructor({precision:t.precision+2})),a=n.tau(t);return e.abs().lte(i.toDP(e.dp()))?[e,!1]:0<e.dp()&&e.div(i.toDP(e.dp())).toNumber()%2==0||(o=e.mod(a),0<e.dp()&&o.toDP(e.dp(),1).isZero())?[new t(1^r),!0]:(o.gt(i)&&(r?(o=o.minus(i)).s=-o.s:o=a.minus(o)),o.constructor=e.constructor,[o,!1])}},function(e,t){e.exports=function(e,t){for(var r=e.constructor.ONE,n=e,i=NaN,a=e.times(e),o=t?n:n=r,s=r,u=!0,c=t;!n.equals(i);c+=2)o=o.times(a),s=s.times(c+1).times(c+2),i=n,n=(u=!u)?n.plus(o.div(s)):n.minus(o.div(s));return n}},function(e,t){e.exports=function(e){var t=e.constructor,r=t.precision,e=(t.config({precision:r+2}),t.ONE.minus(e.times(e)).sqrt());return t.config({precision:r}),e.toDP(r-1)}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="acosh",t.factory=function(e,t,n,o){function s(e){var t,e=u(e);return e.im<=0?(t=e.re,e.re=-e.im,e.im=t):(t=e.im,e.im=-e.re,e.re=t),e}var u=o.find(n(r(449)),["Complex"]),c=o("acosh",{number:function(r){return 1<=r||t.predictable?Math.log(Math.sqrt(r*r-1)+r):r<=-1?new e.Complex(Math.log(Math.sqrt(r*r-1)-r),Math.PI):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1,!1)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cosh^{-1}\\left(${args[0]}\\right)",c}},function(e,t){e.exports=function(e,t,r,n){if(e.isNaN())return new t(NaN);if(n&&e.isZero())return new t(1/0);if(!r)if(n){if(e.isNegative()||e.gt(t.ONE))throw new Error("asech() only has non-complex values for 0 <= x <= 1.")}else if(e.lt(t.ONE))throw new Error("acosh() only has non-complex values for x >= 1.");var i=t.precision,e=(t.config({precision:i+4}),new t(e)),n=(e.constructor=t,n&&(e=t.ONE.div(e)),r?e.times(e).plus(t.ONE):e.times(e).minus(t.ONE)),r=e.plus(n.sqrt()).ln();return t.config({precision:i}),new t(r.toPrecision(i))}},function(e,t,r){"use strict";var i=r(19),a=r(451),o=1.5707963267948966;t.name="acot",t.factory=function(e,t,n,s){var u=s.find(n(r(462)),["Complex"]),c=s("acot",{number:function(e){return e?Math.atan(1/e):o},Complex:function(t){var r;return 0==t.im?new e.Complex(t.re?Math.atan(1/t.re):o,0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))},BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cot^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(451);t.name="atan",t.factory=function(e,t,n,o){var s=o.find(n(r(82)),["Complex"]),u=o("atan",{number:function(e){return Math.atan(e)},Complex:function(t){if(0==t.re){if(1==t.im)return new e.Complex(0,1/0);if(-1==t.im)return new e.Complex(0,-1/0)}var r=t.re,t=t.im,i=r*r+(1-t)*(1-t),t=new e.Complex((1-t*t-r*r)/i,-2*r/i),r=s(t);return new e.Complex(-.5*r.im,.5*r.re)},BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,u,!0)}});return u.toTex="\\tan^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(464),o=1.5707963267948966;t.name="acoth",t.factory=function(e,t,n,s){function u(t){var r;return 0==t.re&&0==t.im?new e.Complex(0,o):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),c(t))}var c=s.find(n(r(465)),["Complex"]),f=s("acoth",{number:function(r){return 1<=r||r<=-1||t.predictable?isFinite(r)?(Math.log((r+1)/r)+Math.log(r/(r-1)))/2:0:0!==r?u(new e.Complex(r,0)):new e.Complex(0,o)},Complex:u,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\coth^{-1}\\left(${args[0]}\\right)",f}},function(e,t){e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);var n=e.abs();if(n.eq(t.ONE))return new t(e.isNegative()?-1/0:1/0);if(n.gt(t.ONE)){if(!r)throw new Error("atanh() only has non-complex values for |x| <= 1.")}else if(r)throw new Error("acoth() has complex values for |x| < 1.");return e.isZero()?new t(0):(n=t.precision,t.config({precision:n+4}),(e=new t(e)).constructor=t,r&&(e=t.ONE.div(e)),r=t.ONE.plus(e).div(t.ONE.minus(e)).ln().div(2),t.config({precision:n}),new t(r.toPrecision(n)))}},function(e,t,r){"use strict";var i=r(19),a=r(464);t.name="atanh",t.factory=function(e,t,r,n){function o(t){var r=1<t.re&&0==t.im,n=1-t.re,i=1+t.re,a=n*n+t.im*t.im,n=(t=0!=a?new e.Complex((i*n-t.im*t.im)/a,(t.im*n+i*t.im)/a):new e.Complex(-1!=t.re?t.re/0:0,0!=t.im?t.im/0:0)).re;return t.re=Math.log(Math.sqrt(t.re*t.re+t.im*t.im))/2,t.im=Math.atan2(t.im,n)/2,r&&(t.im=-t.im),t}var s=n("atanh",{number:function(r){return r<=1&&-1<=r||t.predictable?Math.log((1+r)/(1-r))/2:o(new e.Complex(r,0))},Complex:o,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,s,!0)}});return s.toTex="\\tanh^{-1}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(452);t.name="acsc",t.factory=function(e,t,n,s){function u(t){var r;return 0==t.re&&0==t.im?new e.Complex(1.5707963267948966,1/0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),c(t))}var c=s.find(n(r(467)),["Complex"]),f=s("acsc",{number:function(r){return r<=-1||1<=r||t.predictable?Math.asin(1/r):u(new e.Complex(r,0))},Complex:u,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\csc^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){"use strict";var i=r(19),a=r(452);t.name="asin",t.factory=function(e,t,n,o){function s(t){var r=t.re,t=t.im,i=new e.Complex(t*t-r*r+1,-2*r*t),i=u(i),t=new e.Complex(i.re-t,i.im+r),i=c(t);return new e.Complex(i.im,-i.re)}var u=o.find(n(r(362)),["Complex"]),c=o.find(n(r(82)),["Complex"]),f=o("asin",{number:function(r){return-1<=r&&r<=1||t.predictable?Math.asin(r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,f,!0)}});return f.toTex="\\sin^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="acsch",t.factory=function(e,t,n,o){var s=o.find(n(r(469)),["Complex"]),u=o("acsch",{number:function(e){return e=1/e,Math.log(e+Math.sqrt(e*e+1))},Complex:function(t){var r;return 0==t.im?(t=0!=t.re?Math.log(t.re+Math.sqrt(t.re*t.re+1)):1/0,new e.Complex(t,0)):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),s(t))},BigNumber:function(t){return a(t,e.BigNumber,!0,!0)},"Array | Matrix":function(e){return i(e,u)}});return u.toTex="\\mathrm{csch}^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="asinh",t.factory=function(e,t,n,o){var s=o.find(n(r(467)),["Complex"]),u=o("asinh",{number:function(e){return Math.log(Math.sqrt(e*e+1)+e)},Complex:function(e){var t=e.im,r=(e.im=-e.re,e.re=t,s(e));return e.re=-e.im,e.im=t,t=r.re,r.re=-r.im,r.im=t,r},BigNumber:function(t){return a(t,e.BigNumber,!0,!1)},"Array | Matrix":function(e){return i(e,u,!0)}});return u.toTex="\\sinh^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(450);t.name="asec",t.factory=function(e,t,n,o){function s(t){var r;return 0==t.re&&0==t.im?new e.Complex(0,1/0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))}var u=o.find(n(r(449)),["Complex"]),c=o("asec",{number:function(r){return r<=-1||1<=r||t.predictable?Math.acos(1/r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\sec^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="asech",t.factory=function(e,t,n,o){function s(t){var r;return 0==t.re&&0==t.im?new e.Complex(1/0,0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))}var u=o.find(n(r(459)),["Complex"]),c=o("asech",{number:function(r){var n;return r<=1&&-1<=r||t.predictable?(r=1/r,n=Math.sqrt(r*r-1),0<r||t.predictable?Math.log(n+r):new e.Complex(Math.log(n-r),Math.PI)):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\mathrm{sech}^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(473);t.name="atan2",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(354)),u=n(r(59)),c=n(r(356)),f=n(r(84)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=a("atan2",{"number, number":Math.atan2,"BigNumber, BigNumber":function(t,r){return i(t,r,e.BigNumber)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,h,!1):s(t,e,h,!0):"sparse"===t.storage()?u(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:m)(e,t,h,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, number | BigNumber":function(e,t){return m(o(e),t,h,!1).valueOf()},"number | BigNumber, Array":function(e,t){return m(o(t),e,h,!0).valueOf()}});return h.toTex="\\mathrm{atan2}\\left(${args}\\right)",h}},function(e,t,r){var n=r(93),i=r(451);e.exports=function(e,t,r){var a=r.precision;if(t.isZero())return e.isZero()?new r(NaN):((o=n.pi(r.constructor({precision:a+2})).div(2).toDP(a-1)).constructor=r,o.s=e.s,o);r.config({precision:a+2});var o=i(e.div(t),r,!1);return t.isNegative()&&(t=n.pi(r),o=e.isNegative()?o.minus(t):o.plus(t)),(o.constructor=r).config({precision:a}),o.toDP(a-1)}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="cos",t.factory=function(e,t,n,o){var s=o.find(n(r(475)),["number"]),u=o.find(n(r(477)),["number"]),c=o("cos",{number:Math.cos,Complex:function(t){return new e.Complex(Math.cos(t.re)*s(-t.im),Math.sin(t.re)*u(-t.im))},BigNumber:function(t){return a(t,e.BigNumber,0,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return c(t.value);throw new TypeError("Unit in function cos is no angle")},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cos\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";function i(e){return(Math.exp(e)+Math.exp(-e))/2}var a=r(19),o=r(476);t.name="cosh",t.factory=function(e,t,r,n){var s=n("cosh",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re);return new e.Complex(Math.cos(t.im)*(r+n)/2,Math.sin(t.im)*(r-n)/2)},BigNumber:function(t){return o(t,e.BigNumber,!1,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function cosh is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\cosh\\left(${args[0]}\\right)",s}},function(e,t){e.exports=function(e,t,r,n){var i,a;return e.isNaN()?new t(NaN):e.isFinite()?(i=t.precision,t.config({precision:i+4}),(a=new t(e)).constructor=t,a=a.exp(),a=r?a.minus(t.ONE.div(a)):a.plus(t.ONE.div(a)),a=n?new t(2).div(a):a.div(2),t.config({precision:i}),new t(a.toPrecision(i))):new t(n?0:r?e:1/0)}},function(e,t,r){"use strict";function i(e){return Math.abs(e)<1?e+e*e*e/6+e*e*e*e*e/120:(Math.exp(e)-Math.exp(-e))/2}var a=r(19),o=r(476);t.name="sinh",t.factory=function(e,t,r,n){var s=n("sinh",{number:i,Complex:function(t){var r=Math.cos(t.im),n=Math.sin(t.im),i=Math.exp(t.re),t=Math.exp(-t.re);return new e.Complex(r*(i-t)/2,n*(i+t)/2)},BigNumber:function(t){return o(t,e.BigNumber,!0,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function sinh is no angle")},"Array | Matrix":function(e){return a(e,s,!0)}});return s.toTex="\\sinh\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(479);t.name="cot",t.factory=function(e,t,r,n){var o=n("cot",{number:function(e){return 1/Math.tan(e)},Complex:function(t){var r=Math.exp(-4*t.im)-2*Math.exp(-2*t.im)*Math.cos(2*t.re)+1;return new e.Complex(2*Math.exp(-2*t.im)*Math.sin(2*t.re)/r,(Math.exp(-4*t.im)-1)/r)},BigNumber:function(t){return a(t,e.BigNumber,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function cot is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\cot\\left(${args[0]}\\right)",o}},function(e,t,r){var n=r(93),i=r(455),a=r(458),o=r(456);e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);var s=t.precision,c=(u=n.pi(t.constructor({precision:s+2}))).div(2).toDP(s-1),u=u.toDP(s-1),f=o(e,t,1)[0];if(f.abs().eq(u))return new t(1/0);t.config({precision:s+4});var l=i(f,t,1,!1),p=a(l),l=l.toDP(s),p=p.toDP(s),e=(f.eq(e)?f.gt(c)&&(p.s=-p.s):u.minus(f.abs()).gt(c)&&(p.s=-p.s),r?p.div(l):l.div(p));return t.config({precision:s}),new t(e.toPrecision(s))}},function(e,t,r){"use strict";function i(e){e=Math.exp(2*e);return(e+1)/(e-1)}var a=r(19),o=r(481);t.name="coth",t.factory=function(e,t,r,n){var s=n("coth",{number:i,Complex:function(t){var r=Math.exp(2*t.re),n=r*Math.cos(2*t.im),r=r*Math.sin(2*t.im),t=(n-1)*(n-1)+r*r;return new e.Complex(((1+n)*(n-1)+r*r)/t,-2*r/t)},BigNumber:function(t){return o(t,e.BigNumber,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function coth is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\coth\\left(${args[0]}\\right)",s}},function(e,t){e.exports=function(e,t,r){var n,i,o,s;return e.isNaN()?new t(NaN):e.isFinite()?(n=t.precision,t.config({precision:n+4}),(i=new t(e)).constructor=t,i=i.exp(),o=t.ONE.div(i),s=i.minus(o),s=r?i.plus(o).div(s):s.div(i.plus(o)),t.config({precision:n}),s.toDP(n-1)):new t(e.s)}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="csc",t.factory=function(e,t,r,n){var o=n("csc",{number:function(e){return 1/Math.sin(e)},Complex:function(t){var r=.25*(Math.exp(-2*t.im)+Math.exp(2*t.im))-.5*Math.cos(2*t.re);return new e.Complex(.5*Math.sin(t.re)*(Math.exp(-t.im)+Math.exp(t.im))/r,.5*Math.cos(t.re)*(Math.exp(-t.im)-Math.exp(t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,1,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function csc is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\csc\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){return 0==e?Number.POSITIVE_INFINITY:Math.abs(2/(Math.exp(e)-Math.exp(-e)))*s(e)}var a=r(19),o=r(476),s=r(6).sign;t.name="csch",t.factory=function(e,t,r,n){var s=n("csch",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re),i=Math.cos(t.im)*(r-n),t=Math.sin(t.im)*(r+n),r=i*i+t*t;return new e.Complex(2*i/r,-2*t/r)},BigNumber:function(t){return o(t,e.BigNumber,!0,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function csch is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\mathrm{csch}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="sec",t.factory=function(e,t,r,n){var o=n("sec",{number:function(e){return 1/Math.cos(e)},Complex:function(t){var r=.25*(Math.exp(-2*t.im)+Math.exp(2*t.im))+.5*Math.cos(2*t.re);return new e.Complex(.5*Math.cos(t.re)*(Math.exp(-t.im)+Math.exp(t.im))/r,.5*Math.sin(t.re)*(Math.exp(t.im)-Math.exp(-t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,0,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function sec is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\sec\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){return 2/(Math.exp(e)+Math.exp(-e))}var a=r(19),o=r(476);t.name="sech",t.factory=function(e,t,r,n){var s=n("sech",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re),i=Math.cos(t.im)*(r+n),t=Math.sin(t.im)*(r-n),r=i*i+t*t;return new e.Complex(2*i/r,-2*t/r)},BigNumber:function(t){return o(t,e.BigNumber,!1,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function sech is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\mathrm{sech}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="sin",t.factory=function(e,t,n,o){var s=o.find(n(r(475)),["number"]),u=o.find(n(r(477)),["number"]),c=o("sin",{number:Math.sin,Complex:function(t){return new e.Complex(Math.sin(t.re)*s(-t.im),Math.cos(t.re)*u(t.im))},BigNumber:function(t){return a(t,e.BigNumber,1,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return c(t.value);throw new TypeError("Unit in function sin is no angle")},"Array | Matrix":function(e){return i(e,c,!0)}});return c.toTex="\\sin\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(479);t.name="tan",t.factory=function(e,t,r,n){var o=n("tan",{number:Math.tan,Complex:function(t){var r=Math.exp(-4*t.im)+2*Math.exp(-2*t.im)*Math.cos(2*t.re)+1;return new e.Complex(2*Math.exp(-2*t.im)*Math.sin(2*t.re)/r,(1-Math.exp(-4*t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function tan is no angle")},"Array | Matrix":function(e){return i(e,o,!0)}});return o.toTex="\\tan\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){e=Math.exp(2*e);return(e-1)/(e+1)}var a=r(19),o=r(481);t.name="tanh",t.factory=function(e,t,r,n){var s=n("tanh",{number:i,Complex:function(t){var r=Math.exp(2*t.re),n=r*Math.cos(2*t.im),r=r*Math.sin(2*t.im),t=(1+n)*(1+n)+r*r;return new e.Complex(((n-1)*(1+n)+r*r)/t,2*r/t)},BigNumber:function(t){return o(t,e.BigNumber,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function tanh is no angle")},"Array | Matrix":function(e){return a(e,s,!0)}});return s.toTex="\\tanh\\left(${args[0]}\\right)",s}},function(e,t,r){e.exports=[r(490)]},function(e,t,r){"use strict";t.name="to",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(55)),u=n(r(56)),c=i("to",{"Unit, Unit | string":function(e,t){return e.to(t)},"Matrix, Matrix":function(e,t){return s(e,t,c)},"Array, Array":function(e,t){return c(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return c(o(e),t)},"Matrix, Array":function(e,t){return c(e,o(t))},"Matrix, any":function(e,t){return u(e,t,c,!1)},"any, Matrix":function(e,t){return u(t,e,c,!0)},"Array, any":function(e,t){return u(o(e),t,c,!1).valueOf()},"any, Array":function(e,t){return u(o(t),e,c,!0).valueOf()}});return c.toTex="\\left(${args[0]}"+a.operators.to+"${args[1]}\\right)",c}},function(e,t,r){e.exports=[r(492),r(297),r(88),r(400),r(350),r(87),r(363),r(414),r(302),r(442),r(493),r(494),r(89),r(299)]},function(e,t,r){"use strict";var i=r(3);t.name="clone",t.factory=function(e,t,r,n){return(n=n("clone",{any:i.clone})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";function i(e,t,r){return e.replace(/\$([\w\.]+)/g,function(e,n){for(var i=n.split("."),s=t[i.shift()];i.length&&void 0!==s;)var u=i.shift(),s=u?s[u]:s+".";return void 0!==s?a(s)?s:o(s,r):e})}var a=r(23).isString,o=r(23).format;t.name="print",t.factory=function(e,t,r,n){return(n=n("print",{"string, Object":i,"string, Object, number":i})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(39).size;t.name="sort",t.factory=function(e,t,n,a){function o(e){if("asc"===e)return f;if("desc"===e)return l;throw new Error('String "asc" or "desc" expected')}function s(e){if(1!==i(e).length)throw new Error("One dimensional array expected")}function u(e){if(1!==e.size().length)throw new Error("One dimensional matrix expected")}function l(e,t){return-f(e,t)}var c=n(r(50)),f=n(r(436));return(n=a("sort",{Array:function(e){return s(e),e.sort(f)},Matrix:function(e){return u(e),c(e.toArray().sort(f),e.storage())},"Array, function":function(e,t){return s(e),e.sort(t)},"Matrix, function":function(e,t){return u(e),c(e.toArray().sort(t),e.storage())},"Array, string":function(e,t){return s(e),e.sort(o(t))},"Matrix, string":function(e,t){return u(e),c(e.toArray().sort(o(t)),e.storage())}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(496)]},function(e,t){"use strict";t.name="reviver",t.path="json",t.factory=function(e,t,r,n){return function(t,r){var n=e[r&&r.mathjs];return n&&"function"==typeof n.fromJSON?n.fromJSON(r):r}}},function(e,t,r){"use strict";var n=r(11),i=r(41),a=r(42);e.exports=[{name:"ArgumentsError",path:"error",factory:function(){return n}},{name:"DimensionError",path:"error",factory:function(){return i}},{name:"IndexError",path:"error",factory:function(){return a}}]}],r={},t.m=e,t.c=r,t.p="",t(0);function t(n){var i;return(r[n]||(i=r[n]={exports:{},id:n,loaded:!1},e[n].call(i.exports,i,i.exports,t),i.loaded=!0,i)).exports}var e,r}),!function(){function n(n){return function(r,e,u,i){e=b(e,i,4);var o=!k(r)&&m.keys(r),a=(o||r).length,c=0<n?0:a-1;return arguments.length<3&&(u=r[o?o[c]:c],c+=n),function(t,r,e,u,i,o){for(;0<=i&&i<o;i+=n){var a=u?u[i]:i;e=r(e,t[a],a,t)}return e}(r,e,u,o,c,a)}}function t(n){return function(t,r,e){r=x(r,e);for(var u=O(t),i=0<n?0:u-1;0<=i&&i<u;i+=n)if(r(t[i],i,t))return i;return-1}}function r(n,t,r){return function(e,u,i){var o=0,a=O(e);if("number"==typeof i)0<n?o=0<=i?i:Math.max(i+a,o):a=0<=i?Math.min(i+1,a):i+a+1;else if(r&&i&&a)return e[i=r(e,u)]===u?i:-1;if(u!=u)return 0<=(i=t(l.call(e,o,a),m.isNaN))?i+o:-1;for(i=0<n?o:a-1;0<=i&&i<a;i+=n)if(e[i]===u)return i;return-1}}function e(n,t){var r=I.length,e=n.constructor,u=m.isFunction(e)&&e.prototype||a,i="constructor";for(m.has(n,i)&&!m.contains(t,i)&&t.push(i);r--;)(i=I[r])in n&&n[i]!==u[i]&&!m.contains(t,i)&&t.push(i)}function _(n,t){return function(r){var e=arguments.length;if(!(e<2||null==r))for(var u=1;u<e;u++)for(var i=arguments[u],o=n(i),a=o.length,c=0;c<a;c++){var f=o[c];t&&void 0!==r[f]||(r[f]=i[f])}return r}}function w(n){return function(t){return null==t?void 0:t[n]}}function F(n){return function(t,r,e){var u={};return r=x(r,e),m.each(t,function(e,i){i=r(e,i,t);n(u,e,i)}),u}}function E(n,t,r,e,u){return e instanceof t?(e=j(n.prototype),t=n.apply(e,u),m.isObject(t)?t:e):n.apply(r,u)}function R(n){function t(t){return n[t]}var r="(?:"+m.keys(n).join("|")+")",e=RegExp(r),u=RegExp(r,"g");return function(n){return e.test(n=null==n?"":""+n)?n.replace(u,t):n}}function L(n){return"\\"+z[n]}function P(n,t){return n._chain?m(t).chain():t}var u=this,i=u._,o=Array.prototype,a=Object.prototype,c=Function.prototype,f=o.push,l=o.slice,s=a.toString,p=a.hasOwnProperty,h=Array.isArray,v=Object.keys,g=c.bind,y=Object.create,d=function(){},m=function(n){return n instanceof m?n:this instanceof m?void(this._wrapped=n):new m(n)},b=("undefined"!=typeof exports?(exports="undefined"!=typeof module&&module.exports?module.exports=m:exports)._=m:u._=m,m.VERSION="1.8.3",function(n,t,r){if(void 0===t)return n;switch(null==r?3:r){case 1:return function(r){return n.call(t,r)};case 2:return function(r,e){return n.call(t,r,e)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)}}return function(){return n.apply(t,arguments)}}),x=function(n,t,r){return null==n?m.identity:m.isFunction(n)?b(n,t,r):m.isObject(n)?m.matcher(n):m.property(n)},j=(m.iteratee=function(n,t){return x(n,t,1/0)},function(n){if(!m.isObject(n))return{};if(y)return y(n);d.prototype=n;n=new d;return d.prototype=null,n}),A=Math.pow(2,53)-1,O=w("length"),k=function(n){n=O(n);return"number"==typeof n&&0<=n&&n<=A},S=(m.each=m.forEach=function(n,t,r){if(t=b(t,r),k(n))for(e=0,u=n.length;e<u;e++)t(n[e],e,n);else for(var i=m.keys(n),e=0,u=i.length;e<u;e++)t(n[i[e]],i[e],n);return n},m.map=m.collect=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=Array(u),o=0;o<u;o++){var a=e?e[o]:o;i[o]=t(n[a],a,n)}return i},m.reduce=m.foldl=m.inject=n(1),m.reduceRight=m.foldr=n(-1),m.find=m.detect=function(n,t,r){t=k(n)?m.findIndex(n,t,r):m.findKey(n,t,r);return void 0!==t&&-1!==t?n[t]:void 0},m.filter=m.select=function(n,t,r){var e=[];return t=x(t,r),m.each(n,function(n,r,u){t(n,r,u)&&e.push(n)}),e},m.reject=function(n,t,r){return m.filter(n,m.negate(x(t)),r)},m.every=m.all=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(!t(n[o],o,n))return!1}return!0},m.some=m.any=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(t(n[o],o,n))return!0}return!1},m.contains=m.includes=m.include=function(n,t,r,e){return k(n)||(n=m.values(n)),0<=m.indexOf(n,t,r="number"==typeof r&&!e?r:0)},m.invoke=function(n,t){var r=l.call(arguments,2),e=m.isFunction(t);return m.map(n,function(n){var u=e?t:n[t];return null==u?u:u.apply(n,r)})},m.pluck=function(n,t){return m.map(n,m.property(t))},m.where=function(n,t){return m.filter(n,m.matcher(t))},m.findWhere=function(n,t){return m.find(n,m.matcher(t))},m.max=function(n,t,r){var e,u,i=-1/0,o=-1/0;if(null==t&&null!=n)for(var a=0,c=(n=k(n)?n:m.values(n)).length;a<c;a++)e=n[a],i<e&&(i=e);else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(o<u||u===-1/0&&i===-1/0)&&(i=n,o=u)});return i},m.min=function(n,t,r){var e,u,i=1/0,o=1/0;if(null==t&&null!=n)for(var a=0,c=(n=k(n)?n:m.values(n)).length;a<c;a++)(e=n[a])<i&&(i=e);else t=x(t,r),m.each(n,function(n,r,e){((u=t(n,r,e))<o||1/0===u&&1/0===i)&&(i=n,o=u)});return i},m.shuffle=function(n){for(var t,r=k(n)?n:m.values(n),e=r.length,u=Array(e),i=0;i<e;i++)(t=m.random(0,i))!==i&&(u[i]=u[t]),u[t]=r[i];return u},m.sample=function(n,t,r){return null==t||r?(n=k(n)?n:m.values(n))[m.random(n.length-1)]:m.shuffle(n).slice(0,Math.max(0,t))},m.sortBy=function(n,t,r){return t=x(t,r),m.pluck(m.map(n,function(n,r,e){return{value:n,index:r,criteria:t(n,r,e)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(e<r||void 0===r)return 1;if(r<e||void 0===e)return-1}return n.index-t.index}),"value")},m.groupBy=F(function(n,t,r){m.has(n,r)?n[r].push(t):n[r]=[t]}),m.indexBy=F(function(n,t,r){n[r]=t}),m.countBy=F(function(n,t,r){m.has(n,r)?n[r]++:n[r]=1}),m.toArray=function(n){return n?m.isArray(n)?l.call(n):k(n)?m.map(n,m.identity):m.values(n):[]},m.size=function(n){return null==n?0:(k(n)?n:m.keys(n)).length},m.partition=function(n,t,r){t=x(t,r);var e=[],u=[];return m.each(n,function(n,r,i){(t(n,r,i)?e:u).push(n)}),[e,u]},m.first=m.head=m.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:m.initial(n,n.length-t)},m.initial=function(n,t,r){return l.call(n,0,Math.max(0,n.length-(null==t||r?1:t)))},m.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:m.rest(n,Math.max(0,n.length-t))},m.rest=m.tail=m.drop=function(n,t,r){return l.call(n,null==t||r?1:t)},m.compact=function(n){return m.filter(n,m.identity)},function(n,t,r,e){for(var u=[],i=0,o=e||0,a=O(n);o<a;o++){var c=n[o];if(k(c)&&(m.isArray(c)||m.isArguments(c))){var f=0,l=(c=t?c:S(c,t,r)).length;for(u.length+=l;f<l;)u[i++]=c[f++]}else r||(u[i++]=c)}return u}),M=(m.flatten=function(n,t){return S(n,t,!1)},m.without=function(n){return m.difference(n,l.call(arguments,1))},m.uniq=m.unique=function(n,t,r,e){m.isBoolean(t)||(e=r,r=t,t=!1),null!=r&&(r=x(r,e));for(var u=[],i=[],o=0,a=O(n);o<a;o++){var c=n[o],f=r?r(c,o,n):c;t?(o&&i===f||u.push(c),i=f):r?m.contains(i,f)||(i.push(f),u.push(c)):m.contains(u,c)||u.push(c)}return u},m.union=function(){return m.uniq(S(arguments,!0,!0))},m.intersection=function(n){for(var t=[],r=arguments.length,e=0,u=O(n);e<u;e++){var i=n[e];if(!m.contains(t,i)){for(var o=1;o<r&&m.contains(arguments[o],i);o++);o===r&&t.push(i)}}return t},m.difference=function(n){var t=S(arguments,!0,!0,1);return m.filter(n,function(n){return!m.contains(t,n)})},m.zip=function(){return m.unzip(arguments)},m.unzip=function(n){for(var t=n&&m.max(n,O).length||0,r=Array(t),e=0;e<t;e++)r[e]=m.pluck(n,e);return r},m.object=function(n,t){for(var r={},e=0,u=O(n);e<u;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},m.findIndex=t(1),m.findLastIndex=t(-1),m.sortedIndex=function(n,t,r,e){for(var u=(r=x(r,e,1))(t),i=0,o=O(n);i<o;){var a=Math.floor((i+o)/2);r(n[a])<u?i=a+1:o=a}return i},m.indexOf=r(1,m.findIndex,m.sortedIndex),m.lastIndexOf=r(-1,m.findLastIndex),m.range=function(n,t,r){null==t&&(t=n||0,n=0),r=r||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=Array(e),i=0;i<e;i++,n+=r)u[i]=n;return u},m.bind=function(n,t){if(g&&n.bind===g)return g.apply(n,l.call(arguments,1));var r,e;if(m.isFunction(n))return r=l.call(arguments,2),e=function(){return E(n,e,t,this,r.concat(l.call(arguments)))};throw new TypeError("Bind must be called on a function")},m.partial=function(n){function r(){for(var e=0,u=t.length,i=Array(u),o=0;o<u;o++)i[o]=t[o]===m?arguments[e++]:t[o];for(;e<arguments.length;)i.push(arguments[e++]);return E(n,r,this,this,i)}var t=l.call(arguments,1);return r},m.bindAll=function(n){var t,r,e=arguments.length;if(e<=1)throw new Error("bindAll must be passed function names");for(t=1;t<e;t++)n[r=arguments[t]]=m.bind(n[r],n);return n},m.memoize=function(n,t){function r(e){var u=r.cache,i=""+(t?t.apply(this,arguments):e);return m.has(u,i)||(u[i]=n.apply(this,arguments)),u[i]}return r.cache={},r},m.delay=function(n,t){var r=l.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},m.defer=m.partial(m.delay,m,1),m.throttle=function(n,t,r){function c(){a=!1===r.leading?0:m.now(),o=null,i=n.apply(e,u),o||(e=u=null)}var e,u,i,o=null,a=0;r=r||{};return function(){var f=m.now(),l=(a||!1!==r.leading||(a=f),t-(f-a));return e=this,u=arguments,l<=0||t<l?(o&&(clearTimeout(o),o=null),a=f,i=n.apply(e,u),o||(e=u=null)):o||!1===r.trailing||(o=setTimeout(c,l)),i}},m.debounce=function(n,t,r){function c(){var f=m.now()-o;f<t&&0<=f?e=setTimeout(c,t-f):(e=null,r||(a=n.apply(i,u),e)||(i=u=null))}var e,u,i,o,a;return function(){i=this,u=arguments,o=m.now();var f=r&&!e;return e=e||setTimeout(c,t),f&&(a=n.apply(i,u),i=u=null),a}},m.wrap=function(n,t){return m.partial(t,n)},m.negate=function(n){return function(){return!n.apply(this,arguments)}},m.compose=function(){var n=arguments,t=n.length-1;return function(){for(var r=t,e=n[t].apply(this,arguments);r--;)e=n[r].call(this,e);return e}},m.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},m.before=function(n,t){var r;return function(){return 0<--n&&(r=t.apply(this,arguments)),n<=1&&(t=null),r}},m.once=m.partial(m.before,2),!{toString:null}.propertyIsEnumerable("toString")),I=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],N=(m.keys=function(n){if(!m.isObject(n))return[];if(v)return v(n);var r,t=[];for(r in n)m.has(n,r)&&t.push(r);return M&&e(n,t),t},m.allKeys=function(n){if(!m.isObject(n))return[];var r,t=[];for(r in n)t.push(r);return M&&e(n,t),t},m.values=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;u<r;u++)e[u]=n[t[u]];return e},m.mapObject=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=u.length,o={},a=0;a<i;a++)o[e=u[a]]=t(n[e],e,n);return o},m.pairs=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;u<r;u++)e[u]=[t[u],n[t[u]]];return e},m.invert=function(n){for(var t={},r=m.keys(n),e=0,u=r.length;e<u;e++)t[n[r[e]]]=r[e];return t},m.functions=m.methods=function(n){var r,t=[];for(r in n)m.isFunction(n[r])&&t.push(r);return t.sort()},m.extend=_(m.allKeys),m.extendOwn=m.assign=_(m.keys),m.findKey=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=0,o=u.length;i<o;i++)if(t(n[e=u[i]],e,n))return e},m.pick=function(n,t,r){var e,u,i={},o=n;if(null!=o){m.isFunction(t)?(u=m.allKeys(o),e=b(t,r)):(u=S(arguments,!1,!1,1),e=function(n,t,r){return t in r},o=Object(o));for(var a=0,c=u.length;a<c;a++){var f=u[a],l=o[f];e(l,f,o)&&(i[f]=l)}}return i},m.omit=function(n,t,r){var e;return t=m.isFunction(t)?m.negate(t):(e=m.map(S(arguments,!1,!1,1),String),function(n,t){return!m.contains(e,t)}),m.pick(n,t,r)},m.defaults=_(m.allKeys,!0),m.create=function(n,t){n=j(n);return t&&m.extendOwn(n,t),n},m.clone=function(n){return m.isObject(n)?m.isArray(n)?n.slice():m.extend({},n):n},m.tap=function(n,t){return t(n),n},m.isMatch=function(n,t){var r=m.keys(t),e=r.length;if(null==n)return!e;for(var u=Object(n),i=0;i<e;i++){var o=r[i];if(t[o]!==u[o]||!(o in u))return!1}return!0},function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof m&&(n=n._wrapped),t instanceof m&&(t=t._wrapped);var u=s.call(n);if(u!==s.call(t))return!1;switch(u){case"[object RegExp]":case"[object String]":return""+n==""+t;case"[object Number]":return+n!=+n?+t!=+t:0==+n?1/+n==1/t:+n==+t;case"[object Date]":case"[object Boolean]":return+n==+t}u="[object Array]"===u;if(!u){if("object"!=typeof n||"object"!=typeof t)return!1;var o=n.constructor,a=t.constructor;if(o!==a&&!(m.isFunction(o)&&o instanceof o&&m.isFunction(a)&&a instanceof a)&&"constructor"in n&&"constructor"in t)return!1}e=e||[];for(var c=(r=r||[]).length;c--;)if(r[c]===n)return e[c]===t;if(r.push(n),e.push(t),u){if((c=n.length)!==t.length)return!1;for(;c--;)if(!N(n[c],t[c],r,e))return!1}else{var f,l=m.keys(n),c=l.length;if(m.keys(t).length!==c)return!1;for(;c--;)if(f=l[c],!m.has(t,f)||!N(n[f],t[f],r,e))return!1}return r.pop(),e.pop(),!0}),c=(m.isEqual=function(n,t){return N(n,t)},m.isEmpty=function(n){return null==n||(k(n)&&(m.isArray(n)||m.isString(n)||m.isArguments(n))?0===n.length:0===m.keys(n).length)},m.isElement=function(n){return!(!n||1!==n.nodeType)},m.isArray=h||function(n){return"[object Array]"===s.call(n)},m.isObject=function(n){var t=typeof n;return"function"==t||"object"==t&&!!n},m.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(n){m["is"+n]=function(t){return s.call(t)==="[object "+n+"]"}}),m.isArguments(arguments)||(m.isArguments=function(n){return m.has(n,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(m.isFunction=function(n){return"function"==typeof n||!1}),m.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},m.isNaN=function(n){return m.isNumber(n)&&n!==+n},m.isBoolean=function(n){return!0===n||!1===n||"[object Boolean]"===s.call(n)},m.isNull=function(n){return null===n},m.isUndefined=function(n){return void 0===n},m.has=function(n,t){return null!=n&&p.call(n,t)},m.noConflict=function(){return u._=i,this},m.identity=function(n){return n},m.constant=function(n){return function(){return n}},m.noop=function(){},m.property=w,m.propertyOf=function(n){return null==n?function(){}:function(t){return n[t]}},m.matcher=m.matches=function(n){return n=m.extendOwn({},n),function(t){return m.isMatch(t,n)}},m.times=function(n,t,r){var e=Array(Math.max(0,n));t=b(t,r,1);for(var u=0;u<n;u++)e[u]=t(u);return e},m.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},m.now=Date.now||function(){return(new Date).getTime()},{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"}),h=m.invert(c),q=(m.escape=R(c),m.unescape=R(h),m.result=function(n,t,r){t=null==n?void 0:n[t];return m.isFunction(t=void 0===t?r:t)?t.call(n):t},0),K=(m.uniqueId=function(n){var t=++q+"";return n?n+t:t},m.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g},/(.)^/),z={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\u2028|\u2029/g;m.template=function(n,t,r){t=m.defaults({},t=!t&&r?r:t,m.templateSettings);var r=RegExp([(t.escape||K).source,(t.interpolate||K).source,(t.evaluate||K).source].join("|")+"|$","g"),u=0,i="__p+='";n.replace(r,function(t,r,e,o,a){return i+=n.slice(u,a).replace(D,L),u=a+t.length,r?i+="'+\n((__t=("+r+"))==null?'':_underscore.escape(__t))+\n'":e?i+="'+\n((__t=("+e+"))==null?'':__t)+\n'":o&&(i+="';\n"+o+"\n__p+='"),t}),i+="';\n",i="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+(i=t.variable?i:"with(obj||{}){\n"+i+"}\n")+"return __p;\n";try{var o=new Function(t.variable||"obj","_",i)}catch(a){throw a.source=i,a}function c(n){return o.call(this,n,m)}r=t.variable||"obj";return c.source="function("+r+"){\n"+i+"}",c},m.chain=function(n){n=m(n);return n._chain=!0,n};m.mixin=function(n){m.each(m.functions(n),function(t){var r=m[t]=n[t];m.prototype[t]=function(){var n=[this._wrapped];return f.apply(n,arguments),P(this,r.apply(m,n))}})},m.mixin(m),m.each(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=o[n];m.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!==n&&"splice"!==n||0!==r.length||delete r[0],P(this,r)}}),m.each(["concat","join","slice"],function(n){var t=o[n];m.prototype[n]=function(){return P(this,t.apply(this._wrapped,arguments))}}),m.prototype.value=function(){return this._wrapped},m.prototype.valueOf=m.prototype.toJSON=m.prototype.value,m.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return m})}.call(this);var VBacktest=(()=>{var _scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(moduleArg={}){var Module=moduleArg,readyPromiseResolve,readyPromiseReject,Std=(Module.ready=new Promise((resolve,reject)=>{readyPromiseResolve=resolve,readyPromiseReject=reject}),{_skip:function(arr,period){for(var j=0,k=0;j<arr.length&&(isNaN(arr[j])||k++,k!=period);j++);return j},_sum:function(arr,num){for(var sum=0,i=0;i<num;i++)isNaN(arr[i])||(sum+=arr[i]);return sum},_avg:function(arr,num){for(var n=0,sum=0,i=0;i<num;i++)isNaN(arr[i])||(sum+=arr[i],n++);return sum/n},_zeros:function(len){for(var n=[],i=0;i<len;i++)n.push(0);return n},_set:function(arr,start,end,value){for(var e=Math.min(arr.length,end),i=start;i<e;i++)arr[i]=value},_diff:function(a,b){for(var d=[],i=0;i<b.length;i++)isNaN(a[i])||isNaN(b[i])?d.push(NaN):d.push(a[i]-b[i]);return d},_move_diff:function(a){for(var d=[],i=1;i<a.length;i++)d.push(a[i]-a[i-1]);return d},_sma:function(S,period){var R=Std._zeros(S.length),j=Std._skip(S,period);if(Std._set(R,0,j,NaN),j<S.length)for(var sum=0,i=j;i<S.length;i++)i==j?sum=Std._sum(S,i+1):sum+=S[i]-S[i-period],R[i]=sum/period;return R},_smma:function(S,period){var R=Std._zeros(S.length),j=Std._skip(S,period);if(Std._set(R,0,j,NaN),j<S.length){R[j]=Std._avg(S,j+1);for(var i=j+1;i<S.length;i++)R[i]=(R[i-1]*(period-1)+S[i])/period}return R},_ema:function(S,period){var R=Std._zeros(S.length),multiplier=2/(period+1),period=Std._skip(S,period);if(Std._set(R,0,period,NaN),period<S.length){R[period]=Std._avg(S,period+1);for(var i=period+1;i<S.length;i++)R[i]=(S[i]-R[i-1])*multiplier+R[i-1]}return R},_cmp:function(arr,start,end,cmpFunc){for(var v=arr[start],i=start;i<end;i++)v=cmpFunc(arr[i],v);return v},_filt:function(records,n,attr,iv,cmpFunc){if(records.length<2)return NaN;for(var v=iv,pos=0!==n?records.length-Math.min(records.length-1,n)-1:0,i=records.length-2;pos<=i;i--)v=cmpFunc(v,void 0!==attr?records[i][attr]:records[i]);return v},_ticks:function(records){if(0===records.length)return[];var ticks=[];if(void 0!==records[0].Close)for(var i=0;i<records.length;i++)ticks.push(records[i].Close);else ticks=records;return ticks}});function TAInstance(logPtr){var self={_log:logPtr="function"!=typeof logPtr?function(){}:logPtr,Highest:function(records,n,attr){return Std._filt(records,n,attr,Number.MIN_VALUE,Math.max)},Lowest:function(records,n,attr){return Std._filt(records,n,attr,Number.MAX_VALUE,Math.min)},MA:function(records,period){return self._log("MA",period=void 0===period?9:period),Std._sma(Std._ticks(records),period)},SMA:function(records,period){return self._log("SMA",period=void 0===period?9:period),Std._sma(Std._ticks(records),period)},EMA:function(records,period){return self._log("EMA",period=void 0===period?9:period),Std._ema(Std._ticks(records),period)},MACD:function(records,fastEMA,slowEMA,signalEMA){self._log("MACD",fastEMA=void 0===fastEMA?12:fastEMA,slowEMA=void 0===slowEMA?26:slowEMA,signalEMA=void 0===signalEMA?9:signalEMA);records=Std._ticks(records),slowEMA=Std._ema(records,slowEMA),records=Std._ema(records,fastEMA),fastEMA=Std._diff(records,slowEMA),records=Std._ema(fastEMA,signalEMA);return[fastEMA,records,Std._diff(fastEMA,records)]},BOLL:function(records,period,multiplier){self._log("BOLL",period=void 0===period?20:period,multiplier=void 0===multiplier?2:multiplier);for(var S=Std._ticks(records),j=period-1;j<S.length&&isNaN(S[j]);j++);for(var UP=Std._zeros(S.length),MB=Std._zeros(S.length),DN=Std._zeros(S.length),sum=(Std._set(UP,0,j,NaN),Std._set(MB,0,j,NaN),Std._set(DN,0,j,NaN),0),i=j;i<S.length;i++){if(i==j)for(var k=0;k<period;k++)sum+=S[k];else sum=sum+S[i]-S[i-period];for(var ma=sum/period,d=0,m=i+1-period;m<=i;m++)d+=(S[m]-ma)*(S[m]-ma);var stdev=Math.sqrt(d/period),dn=ma-multiplier*stdev;UP[i]=ma+multiplier*stdev,MB[i]=ma,DN[i]=dn}return[UP,MB,DN]},KDJ:function(records,n,k,d){self._log("KDJ",n=void 0===n?9:n,k=void 0===k?3:k,d=void 0===d?3:d);for(var RSV=Std._zeros(records.length),K=(Std._set(RSV,0,n-1,NaN),Std._zeros(records.length)),D=Std._zeros(records.length),J=Std._zeros(records.length),hs=Std._zeros(records.length),ls=Std._zeros(records.length),j=0;j<records.length;j++)hs[j]=records[j].High,ls[j]=records[j].Low;for(var c,h,l,i=0;i<records.length;i++)n-1<=i?(c=records[i].Close,h=Std._cmp(hs,i-(n-1),i+1,Math.max),l=Std._cmp(ls,i-(n-1),i+1,Math.min),RSV[i]=h!=l?(c-l)/(h-l)*100:100,K[i]=(+RSV[i]+(k-1)*K[i-1])/k,D[i]=(+K[i]+(d-1)*D[i-1])/d):(K[i]=D[i]=50,RSV[i]=0),J[i]=3*K[i]-2*D[i];for(var m=0;m<n-1;m++)K[m]=D[m]=J[m]=NaN;return[K,D,J]},RSI:function(records,period){self._log("RSI",period=void 0===period?14:period);var n=period,rsi=Std._zeros(records.length);if(Std._set(rsi,0,rsi.length,NaN),!(records.length<n)){for(var ticks=Std._ticks(records),deltas=Std._move_diff(ticks),seed=deltas.slice(0,n),up=0,down=0,i=0;i<seed.length;i++)0<=seed[i]?up+=seed[i]:down+=seed[i];up/=n;var delta,down=-down/n,upval=(rsi[n]=100-100/(1+(0!=down?up/down:0)),0),downval=0;for(i=n+1;i<ticks.length;i++)downval=0<(delta=deltas[i-1])?(upval=delta,0):(upval=0,-delta),rsi[i]=100-100/(1+(up=(up*(n-1)+upval)/n)/(down=(down*(n-1)+downval)/n))}return rsi},OBV:function(records){if(self._log("OBV"),0===records.length)return[];if(void 0===records[0].Close)throw"argument must KLine";for(var R=[],i=0;i<records.length;i++)0===i?R[i]=records[i].Volume:records[i].Close>=records[i-1].Close?R[i]=R[i-1]+records[i].Volume:R[i]=R[i-1]-records[i].Volume;return R},ATR:function(records,period){if(self._log("ATR",period=void 0===period?14:period),0===records.length)return[];if(void 0===records[0].Close)throw"argument must KLine";for(var R=Std._zeros(records.length),sum=0,n=0,i=0;i<records.length;i++){var TR=0;sum+=TR=0==i?records[i].High-records[i].Low:Math.max(records[i].High-records[i].Low,Math.abs(records[i].High-records[i-1].Close),Math.abs(records[i-1].Close-records[i].Low)),R[i]=n=i<period?sum/(i+1):((period-1)*n+TR)/period}return R},Alligator:function(records,jawLength,teethLength,lipsLength){self._log("Alligator",jawLength=void 0===jawLength?13:jawLength,teethLength=void 0===teethLength?8:teethLength,lipsLength=void 0===lipsLength?5:lipsLength);for(var ticks=[],i=0;i<records.length;i++)ticks.push((records[i].High+records[i].Low)/2);return[[NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN].concat(Std._smma(ticks,jawLength)),[NaN,NaN,NaN,NaN,NaN].concat(Std._smma(ticks,teethLength)),[NaN,NaN,NaN].concat(Std._smma(ticks,lipsLength))]},CMF:function(records,periods){self._log("CMF",periods=periods||20);for(var ret=[],sumD=0,sumV=0,arrD=[],arrV=[],i=0;i<records.length;i++){var d=records[i].High==records[i].Low?0:(2*records[i].Close-records[i].Low-records[i].High)/(records[i].High-records[i].Low)*records[i].Volume;arrD.push(d),arrV.push(records[i].Volume),sumD+=d,sumV+=records[i].Volume,periods<=i&&(sumD-=arrD.shift(),sumV-=arrV.shift()),ret.push(sumD/sumV)}return ret}};return self}var TA=TAInstance();function init_pako(){"use strict";function zswap32(q){return(q>>>24&255)+(q>>>8&65280)+((65280&q)<<8)+((255&q)<<24)}var exports={},adler32_1=function(adler,buf,len,pos){for(var s1=65535&adler|0,s2=adler>>>16&65535|0,n=0;0!==len;){for(len-=n=2e3<len?2e3:len;s2=s2+(s1=s1+buf[pos++]|0)|0,--n;);s1%=65521,s2%=65521}return s1|s2<<16|0},crcTable=new Uint32Array(function(){for(var table=[],n=0;n<256;n++){for(var c=n,k=0;k<8;k++)c=1&c?3988292384^c>>>1:c>>>1;table[n]=c}return table}()),crc32_1=function(crc,buf,len,pos){var t=crcTable,end=pos+len;crc^=-1;for(var i=pos;i<end;i++)crc=crc>>>8^t[255&(crc^buf[i])];return-1^crc},BAD$1=16209,TYPE$1=16191,lbase=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),lext=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dbase=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),dext=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),inftrees=function(type,lens,lens_index,codes,table,table_index,work,opts){for(var incr,fill,low,mask,next,match,here_bits,here_op,here_val,bits=opts.bits,len=0,sym=0,min=0,max=0,root=0,curr=0,drop=0,left=0,used=0,huff=0,base=null,count=new Uint16Array(16),offs=new Uint16Array(16),extra=null,len=0;len<=15;len++)count[len]=0;for(sym=0;sym<codes;sym++)count[lens[lens_index+sym]]++;for(root=bits,max=15;1<=max&&0===count[max];max--);if(max<root&&(root=max),0===max)table[table_index++]=20971520,table[table_index++]=20971520,opts.bits=1;else{for(min=1;min<max&&0===count[min];min++);for(root<min&&(root=min),len=left=1;len<=15;len++)if((left=(left<<=1)-count[len])<0)return-1;if(0<left&&(0===type||1!==max))return-1;for(offs[1]=0,len=1;len<15;len++)offs[len+1]=offs[len]+count[len];for(sym=0;sym<codes;sym++)0!==lens[lens_index+sym]&&(work[offs[lens[lens_index+sym]]++]=sym);if(match=0===type?(base=extra=work,20):1===type?(base=lbase,extra=lext,257):(base=dbase,extra=dext,0),len=min,next=table_index,drop=sym=huff=0,low=-1,mask=(used=1<<(curr=root))-1,1===type&&852<used||2===type&&592<used)return 1;for(;;){for(here_val=work[sym]+1<match?(here_op=0,work[sym]):work[sym]>=match?(here_op=extra[work[sym]-match],base[work[sym]-match]):(here_op=96,0),incr=1<<(here_bits=len-drop),min=fill=1<<curr;table[next+(huff>>drop)+(fill-=incr)]=here_bits<<24|here_op<<16|here_val|0,0!==fill;);for(incr=1<<len-1;huff&incr;)incr>>=1;if(huff=0!==incr?(huff&incr-1)+incr:0,sym++,0==--count[len]){if(len===max)break;len=lens[lens_index+work[sym]]}if(root<len&&(huff&mask)!==low){for(next+=min,left=1<<(curr=len-(drop=0===drop?root:drop));curr+drop<max&&!((left-=count[curr+drop])<=0);)curr++,left<<=1;if(used+=1<<curr,1===type&&852<used||2===type&&592<used)return 1;table[low=huff&mask]=root<<24|curr<<16|next-table_index|0}}0!==huff&&(table[next+huff]=len-drop<<24|64<<16|0),opts.bits=root}return 0},constants$1={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8},LENS=1,DISTS=2,Z_FINISH$1=constants$1.Z_FINISH,Z_BLOCK=constants$1.Z_BLOCK,Z_TREES=constants$1.Z_TREES,Z_OK$1=constants$1.Z_OK,Z_STREAM_END$1=constants$1.Z_STREAM_END,Z_NEED_DICT$1=constants$1.Z_NEED_DICT,Z_STREAM_ERROR$1=constants$1.Z_STREAM_ERROR,Z_DATA_ERROR$1=constants$1.Z_DATA_ERROR,Z_MEM_ERROR$1=constants$1.Z_MEM_ERROR,Z_BUF_ERROR=constants$1.Z_BUF_ERROR,Z_DEFLATED=constants$1.Z_DEFLATED,HEAD=16180,BAD=16209,SYNC=16211,ENOUGH_LENS=852,ENOUGH_DISTS=592;function InflateState(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function inflateResetKeep(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:(state=strm.state,strm.total_in=strm.total_out=state.total=0,strm.msg="",state.wrap&&(strm.adler=1&state.wrap),state.mode=HEAD,state.last=0,state.havedict=0,state.flags=-1,state.dmax=32768,state.head=null,state.hold=0,state.bits=0,state.lencode=state.lendyn=new Int32Array(ENOUGH_LENS),state.distcode=state.distdyn=new Int32Array(ENOUGH_DISTS),state.sane=1,state.back=-1,Z_OK$1)}function inflateReset(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:((state=strm.state).wsize=0,state.whave=0,state.wnext=0,inflateResetKeep(strm))}function inflateInit2(strm,windowBits){var state;return strm?(state=new InflateState,(strm.state=state).strm=strm,state.window=null,state.mode=HEAD,(state=inflateReset2(strm,windowBits))!==Z_OK$1&&(strm.state=null),state):Z_STREAM_ERROR$1}function updatewindow(strm,src,end,copy){var dist;return null===(strm=strm.state).window&&(strm.wsize=1<<strm.wbits,strm.wnext=0,strm.whave=0,strm.window=new Uint8Array(strm.wsize)),copy>=strm.wsize?(strm.window.set(src.subarray(end-strm.wsize,end),0),strm.wnext=0,strm.whave=strm.wsize):(copy<(dist=strm.wsize-strm.wnext)&&(dist=copy),strm.window.set(src.subarray(end-copy,end-copy+dist),strm.wnext),(copy-=dist)?(strm.window.set(src.subarray(end-copy,end),0),strm.wnext=copy,strm.whave=strm.wsize):(strm.wnext+=dist,strm.wnext===strm.wsize&&(strm.wnext=0),strm.whave<strm.wsize&&(strm.whave+=dist))),0}var lenfix,distfix,inflateStateCheck=function(strm){var state;return!strm||!(state=strm.state)||state.strm!==strm||state.mode<HEAD||state.mode>SYNC?1:0},inflateReset2=function(strm,windowBits){var wrap,state;return inflateStateCheck(strm)||(state=strm.state,windowBits<0?(wrap=0,windowBits=-windowBits):(wrap=5+(windowBits>>4),windowBits<48&&(windowBits&=15)),windowBits&&(windowBits<8||15<windowBits))?Z_STREAM_ERROR$1:(null!==state.window&&state.wbits!==windowBits&&(state.window=null),state.wrap=wrap,state.wbits=windowBits,inflateReset(strm))},virgin=!0,inflate_1$1={inflateReset:inflateReset,inflateReset2:inflateReset2,inflateResetKeep:inflateResetKeep,inflateInit:function(strm){return inflateInit2(strm,15)},inflateInit2:inflateInit2,inflate:function(strm,flush){var state,input,output,next,put,have,left,hold,bits,_in,_out,copy,from,from_source,here_bits,here_op,here_val,last_bits,last_op,last_val,len,ret,opts,n,here=0,hbuf=new Uint8Array(4),order=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(inflateStateCheck(strm)||!strm.output||!strm.input&&0!==strm.avail_in)return Z_STREAM_ERROR$1;16191===(state=strm.state).mode&&(state.mode=16192),put=strm.next_out,output=strm.output,left=strm.avail_out,next=strm.next_in,input=strm.input,have=strm.avail_in,hold=state.hold,bits=state.bits,_in=have,_out=left,ret=Z_OK$1;inf_leave:for(;;)switch(state.mode){case HEAD:if(0===state.wrap)state.mode=16192;else{for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}2&state.wrap&&35615===hold?(0===state.wbits&&(state.wbits=15),hbuf[state.check=0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0),bits=hold=0,state.mode=16181):(state.head&&(state.head.done=!1),!(1&state.wrap)||(((255&hold)<<8)+(hold>>8))%31?(strm.msg="incorrect header check",state.mode=BAD):(15&hold)!==Z_DEFLATED?(strm.msg="unknown compression method",state.mode=BAD):(bits-=4,len=8+(15&(hold>>>=4)),0===state.wbits&&(state.wbits=len),15<len||len>state.wbits?(strm.msg="invalid window size",state.mode=BAD):(state.dmax=1<<state.wbits,state.flags=0,strm.adler=state.check=1,state.mode=512&hold?16189:16191,bits=hold=0)))}break;case 16181:for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(state.flags=hold,(255&state.flags)!==Z_DEFLATED){strm.msg="unknown compression method",state.mode=BAD;break}if(57344&state.flags){strm.msg="unknown header flags set",state.mode=BAD;break}state.head&&(state.head.text=hold>>8&1),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0,state.mode=16182;case 16182:for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.head&&(state.head.time=hold),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,hbuf[2]=hold>>>16&255,hbuf[3]=hold>>>24&255,state.check=crc32_1(state.check,hbuf,4,0)),bits=hold=0,state.mode=16183;case 16183:for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.head&&(state.head.xflags=255&hold,state.head.os=hold>>8),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0,state.mode=16184;case 16184:if(1024&state.flags){for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.length=hold,state.head&&(state.head.extra_len=hold),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0}else state.head&&(state.head.extra=null);state.mode=16185;case 16185:if(1024&state.flags&&((copy=have<(copy=state.length)?have:copy)&&(state.head&&(len=state.head.extra_len-state.length,state.head.extra||(state.head.extra=new Uint8Array(state.head.extra_len)),state.head.extra.set(input.subarray(next,next+copy),len)),512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,state.length-=copy),state.length))break inf_leave;state.length=0,state.mode=16186;case 16186:if(2048&state.flags){if(0===have)break inf_leave;for(copy=0;len=input[next+copy++],state.head&&len&&state.length<65536&&(state.head.name+=String.fromCharCode(len)),len&&copy<have;);if(512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,len)break inf_leave}else state.head&&(state.head.name=null);state.length=0,state.mode=16187;case 16187:if(4096&state.flags){if(0===have)break inf_leave;for(copy=0;len=input[next+copy++],state.head&&len&&state.length<65536&&(state.head.comment+=String.fromCharCode(len)),len&&copy<have;);if(512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,len)break inf_leave}else state.head&&(state.head.comment=null);state.mode=16188;case 16188:if(512&state.flags){for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(4&state.wrap&&hold!==(65535&state.check)){strm.msg="header crc mismatch",state.mode=BAD;break}bits=hold=0}state.head&&(state.head.hcrc=state.flags>>9&1,state.head.done=!0),strm.adler=state.check=0,state.mode=16191;break;case 16189:for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}strm.adler=state.check=zswap32(hold),bits=hold=0,state.mode=16190;case 16190:if(0===state.havedict)return strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,Z_NEED_DICT$1;strm.adler=state.check=1,state.mode=16191;case 16191:if(flush===Z_BLOCK||flush===Z_TREES)break inf_leave;case 16192:if(state.last)hold>>>=7&bits,bits-=7&bits,state.mode=16206;else{for(;bits<3;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}switch(state.last=1&hold,--bits,3&(hold>>>=1)){case 0:state.mode=16193;break;case 1:if(!function(state){if(virgin){lenfix=new Int32Array(512),distfix=new Int32Array(32);for(var sym=0;sym<144;)state.lens[sym++]=8;for(;sym<256;)state.lens[sym++]=9;for(;sym<280;)state.lens[sym++]=7;for(;sym<288;)state.lens[sym++]=8;for(inftrees(LENS,state.lens,0,288,lenfix,0,state.work,{bits:9}),sym=0;sym<32;)state.lens[sym++]=5;inftrees(DISTS,state.lens,0,32,distfix,0,state.work,{bits:5}),virgin=!1}state.lencode=lenfix,state.lenbits=9,state.distcode=distfix,state.distbits=5}(state),state.mode=16199,flush!==Z_TREES)break;hold>>>=2,bits-=2;break inf_leave;case 2:state.mode=16196;break;case 3:strm.msg="invalid block type",state.mode=BAD}hold>>>=2,bits-=2}break;case 16193:for(hold>>>=7&bits,bits-=7&bits;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if((65535&hold)!=(hold>>>16^65535)){strm.msg="invalid stored block lengths",state.mode=BAD;break}if(state.length=65535&hold,bits=hold=0,state.mode=16194,flush===Z_TREES)break inf_leave;case 16194:state.mode=16195;case 16195:if(copy=state.length){if(0===(copy=left<(copy=have<copy?have:copy)?left:copy))break inf_leave;output.set(input.subarray(next,next+copy),put),have-=copy,next+=copy,left-=copy,put+=copy,state.length-=copy}else state.mode=16191;break;case 16196:for(;bits<14;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(state.nlen=257+(31&hold),hold>>>=5,bits-=5,state.ndist=1+(31&hold),hold>>>=5,bits-=5,state.ncode=4+(15&hold),hold>>>=4,bits-=4,286<state.nlen||30<state.ndist){strm.msg="too many length or distance symbols",state.mode=BAD;break}state.have=0,state.mode=16197;case 16197:for(;state.have<state.ncode;){for(;bits<3;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.lens[order[state.have++]]=7&hold,hold>>>=3,bits-=3}for(;state.have<19;)state.lens[order[state.have++]]=0;if(state.lencode=state.lendyn,state.lenbits=7,opts={bits:state.lenbits},ret=inftrees(0,state.lens,0,19,state.lencode,0,state.work,opts),state.lenbits=opts.bits,ret){strm.msg="invalid code lengths set",state.mode=BAD;break}state.have=0,state.mode=16198;case 16198:for(;state.have<state.nlen+state.ndist;){for(;here_op=(here=state.lencode[hold&(1<<state.lenbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(here_val<16)hold>>>=here_bits,bits-=here_bits,state.lens[state.have++]=here_val;else{if(16===here_val){for(n=here_bits+2;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(hold>>>=here_bits,bits-=here_bits,0===state.have){strm.msg="invalid bit length repeat",state.mode=BAD;break}len=state.lens[state.have-1],copy=3+(3&hold),hold>>>=2,bits-=2}else if(17===here_val){for(n=here_bits+3;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}len=0,copy=3+(7&(hold>>>=here_bits)),hold>>>=3,bits=bits-here_bits-3}else{for(n=here_bits+7;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}len=0,copy=11+(127&(hold>>>=here_bits)),hold>>>=7,bits=bits-here_bits-7}if(state.have+copy>state.nlen+state.ndist){strm.msg="invalid bit length repeat",state.mode=BAD;break}for(;copy--;)state.lens[state.have++]=len}}if(state.mode===BAD)break;if(0===state.lens[256]){strm.msg="invalid code -- missing end-of-block",state.mode=BAD;break}if(state.lenbits=9,opts={bits:state.lenbits},ret=inftrees(LENS,state.lens,0,state.nlen,state.lencode,0,state.work,opts),state.lenbits=opts.bits,ret){strm.msg="invalid literal/lengths set",state.mode=BAD;break}if(state.distbits=6,state.distcode=state.distdyn,opts={bits:state.distbits},ret=inftrees(DISTS,state.lens,state.nlen,state.ndist,state.distcode,0,state.work,opts),state.distbits=opts.bits,ret){strm.msg="invalid distances set",state.mode=BAD;break}if(state.mode=16199,flush===Z_TREES)break inf_leave;case 16199:state.mode=16200;case 16200:if(6<=have&&258<=left){strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,!function(strm,start){var here,op,len,dist,from,from_source,state=strm.state,_in=strm.next_in,input=strm.input,last=_in+(strm.avail_in-5),_out=strm.next_out,output=strm.output,beg=_out-(start-strm.avail_out),end=_out+(strm.avail_out-257),dmax=state.dmax,wsize=state.wsize,whave=state.whave,wnext=state.wnext,s_window=state.window,hold=state.hold,bits=state.bits,lcode=state.lencode,dcode=state.distcode,lmask=(1<<state.lenbits)-1,dmask=(1<<state.distbits)-1;top:do{for(bits<15&&(hold+=input[_in++]<<bits,bits+=8,hold+=input[_in++]<<bits,bits+=8),here=lcode[hold&lmask];;){if(hold>>>=op=here>>>24,bits-=op,0===(op=here>>>16&255))output[_out++]=65535&here;else{if(!(16&op)){if(0==(64&op)){here=lcode[(65535&here)+(hold&(1<<op)-1)];continue}if(32&op){state.mode=TYPE$1;break top}strm.msg="invalid literal/length code",state.mode=BAD$1;break top}for(len=65535&here,(op&=15)&&(bits<op&&(hold+=input[_in++]<<bits,bits+=8),len+=hold&(1<<op)-1,hold>>>=op,bits-=op),bits<15&&(hold+=input[_in++]<<bits,bits+=8,hold+=input[_in++]<<bits,bits+=8),here=dcode[hold&dmask];;){if(hold>>>=op=here>>>24,bits-=op,!(16&(op=here>>>16&255))){if(0==(64&op)){here=dcode[(65535&here)+(hold&(1<<op)-1)];continue}strm.msg="invalid distance code",state.mode=BAD$1;break top}if(dist=65535&here,bits<(op&=15)&&(hold+=input[_in++]<<bits,(bits+=8)<op)&&(hold+=input[_in++]<<bits,bits+=8),dmax<(dist+=hold&(1<<op)-1)){strm.msg="invalid distance too far back",state.mode=BAD$1;break top}if(hold>>>=op,bits-=op,(op=_out-beg)<dist){if(whave<(op=dist-op)&&state.sane){strm.msg="invalid distance too far back",state.mode=BAD$1;break top}if(from_source=s_window,(from=0)===wnext){if(from+=wsize-op,op<len){for(len-=op;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}}else if(wnext<op){if(from+=wsize+wnext-op,(op-=wnext)<len){for(len-=op;output[_out++]=s_window[from++],--op;);if(from=0,wnext<len){for(len-=op=wnext;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}}}else if(from+=wnext-op,op<len){for(len-=op;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}for(;2<len;)output[_out++]=from_source[from++],output[_out++]=from_source[from++],output[_out++]=from_source[from++],len-=3;len&&(output[_out++]=from_source[from++],1<len)&&(output[_out++]=from_source[from++])}else{for(from=_out-dist;output[_out++]=output[from++],output[_out++]=output[from++],output[_out++]=output[from++],2<(len-=3););len&&(output[_out++]=output[from++],1<len)&&(output[_out++]=output[from++])}break}}break}}while(_in<last&&_out<end);hold&=(1<<(bits-=(len=bits>>3)<<3))-1,strm.next_in=_in-=len,strm.next_out=_out,strm.avail_in=_in<last?last-_in+5:5-(_in-last),strm.avail_out=_out<end?end-_out+257:257-(_out-end),state.hold=hold,state.bits=bits}(strm,_out),put=strm.next_out,output=strm.output,left=strm.avail_out,next=strm.next_in,input=strm.input,have=strm.avail_in,hold=state.hold,bits=state.bits,16191===state.mode&&(state.back=-1);break}for(state.back=0;here_op=(here=state.lencode[hold&(1<<state.lenbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(here_op&&0==(240&here_op)){for(last_bits=here_bits,last_op=here_op,last_val=here_val;here_op=(here=state.lencode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)])>>>16&255,here_val=65535&here,!(last_bits+(here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}hold>>>=last_bits,bits-=last_bits,state.back+=last_bits}if(hold>>>=here_bits,bits-=here_bits,state.back+=here_bits,state.length=here_val,0===here_op){state.mode=16205;break}if(32&here_op){state.back=-1,state.mode=16191;break}if(64&here_op){strm.msg="invalid literal/length code",state.mode=BAD;break}state.extra=15&here_op,state.mode=16201;case 16201:if(state.extra){for(n=state.extra;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.length+=hold&(1<<state.extra)-1,hold>>>=state.extra,bits-=state.extra,state.back+=state.extra}state.was=state.length,state.mode=16202;case 16202:for(;here_op=(here=state.distcode[hold&(1<<state.distbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(0==(240&here_op)){for(last_bits=here_bits,last_op=here_op,last_val=here_val;here_op=(here=state.distcode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)])>>>16&255,here_val=65535&here,!(last_bits+(here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}hold>>>=last_bits,bits-=last_bits,state.back+=last_bits}if(hold>>>=here_bits,bits-=here_bits,state.back+=here_bits,64&here_op){strm.msg="invalid distance code",state.mode=BAD;break}state.offset=here_val,state.extra=15&here_op,state.mode=16203;case 16203:if(state.extra){for(n=state.extra;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.offset+=hold&(1<<state.extra)-1,hold>>>=state.extra,bits-=state.extra,state.back+=state.extra}if(state.offset>state.dmax){strm.msg="invalid distance too far back",state.mode=BAD;break}state.mode=16204;case 16204:if(0===left)break inf_leave;if(state.offset>(copy=_out-left)){if((copy=state.offset-copy)>state.whave&&state.sane){strm.msg="invalid distance too far back",state.mode=BAD;break}from=copy>state.wnext?(copy-=state.wnext,state.wsize-copy):state.wnext-copy,copy>state.length&&(copy=state.length),from_source=state.window}else from_source=output,from=put-state.offset,copy=state.length;for(left-=copy=left<copy?left:copy,state.length-=copy;output[put++]=from_source[from++],--copy;);0===state.length&&(state.mode=16200);break;case 16205:if(0===left)break inf_leave;output[put++]=state.length,left--,state.mode=16200;break;case 16206:if(state.wrap){for(;bits<32;){if(0===have)break inf_leave;have--,hold|=input[next++]<<bits,bits+=8}if(_out-=left,strm.total_out+=_out,state.total+=_out,4&state.wrap&&_out&&(strm.adler=state.check=(state.flags?crc32_1:adler32_1)(state.check,output,_out,put-_out)),_out=left,4&state.wrap&&(state.flags?hold:zswap32(hold))!==state.check){strm.msg="incorrect data check",state.mode=BAD;break}bits=hold=0}state.mode=16207;case 16207:if(state.wrap&&state.flags){for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(4&state.wrap&&hold!==(4294967295&state.total)){strm.msg="incorrect length check",state.mode=BAD;break}bits=hold=0}state.mode=16208;case 16208:ret=Z_STREAM_END$1;break inf_leave;case BAD:ret=Z_DATA_ERROR$1;break inf_leave;case 16210:return Z_MEM_ERROR$1;default:return Z_STREAM_ERROR$1}return strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,(state.wsize||_out!==strm.avail_out&&state.mode<BAD&&(state.mode<16206||flush!==Z_FINISH$1))&&updatewindow(strm,strm.output,strm.next_out,_out-strm.avail_out),_in-=strm.avail_in,_out-=strm.avail_out,strm.total_in+=_in,strm.total_out+=_out,state.total+=_out,4&state.wrap&&_out&&(strm.adler=state.check=(state.flags?crc32_1:adler32_1)(state.check,output,_out,strm.next_out-_out)),strm.data_type=state.bits+(state.last?64:0)+(16191===state.mode?128:0)+(16199===state.mode||16194===state.mode?256:0),ret=(0==_in&&0===_out||flush===Z_FINISH$1)&&ret===Z_OK$1?Z_BUF_ERROR:ret},inflateEnd:function(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:((state=strm.state).window&&(state.window=null),strm.state=null,Z_OK$1)},inflateGetHeader:function(strm,head){return inflateStateCheck(strm)||0==(2&(strm=strm.state).wrap)?Z_STREAM_ERROR$1:((strm.head=head).done=!1,Z_OK$1)},inflateSetDictionary:function(strm,dictionary){var state,dictLength=dictionary.length;return inflateStateCheck(strm)||0!==(state=strm.state).wrap&&16190!==state.mode?Z_STREAM_ERROR$1:16190===state.mode&&adler32_1(1,dictionary,dictLength,0)!==state.check?Z_DATA_ERROR$1:updatewindow(strm,dictionary,dictLength,dictLength)?(state.mode=16210,Z_MEM_ERROR$1):(state.havedict=1,Z_OK$1)},inflateInfo:"pako inflate (from Nodeca project)"};function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}var common_assign=function(obj){for(var sources=Array.prototype.slice.call(arguments,1);sources.length;){var source=sources.shift();if(source){if("object"!==_typeof(source))throw new TypeError(source+"must be non-object");for(var p in source)!function(obj,key){return Object.prototype.hasOwnProperty.call(obj,key)}(source,p)||(obj[p]=source[p])}}return obj},common_flattenChunks=function(chunks){for(var len=0,i=0,l=chunks.length;i<l;i++)len+=chunks[i].length;for(var result=new Uint8Array(len),_i=0,pos=0,_l=chunks.length;_i<_l;_i++){var chunk=chunks[_i];result.set(chunk,pos),pos+=chunk.length}return result},STR_APPLY_UIA_OK=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(__){STR_APPLY_UIA_OK=!1}for(var _utf8len=new Uint8Array(256),q=0;q<256;q++)_utf8len[q]=252<=q?6:248<=q?5:240<=q?4:224<=q?3:192<=q?2:1;_utf8len[254]=_utf8len[254]=1;var strings_string2buf=function(str){if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(str);for(var buf,c,c2,i,str_len=str.length,buf_len=0,m_pos=0;m_pos<str_len;m_pos++)55296==(64512&(c=str.charCodeAt(m_pos)))&&m_pos+1<str_len&&56320==(64512&(c2=str.charCodeAt(m_pos+1)))&&(c=65536+(c-55296<<10)+(c2-56320),m_pos++),buf_len+=c<128?1:c<2048?2:c<65536?3:4;for(buf=new Uint8Array(buf_len),m_pos=i=0;i<buf_len;m_pos++)55296==(64512&(c=str.charCodeAt(m_pos)))&&m_pos+1<str_len&&56320==(64512&(c2=str.charCodeAt(m_pos+1)))&&(c=65536+(c-55296<<10)+(c2-56320),m_pos++),c<128?buf[i++]=c:(c<2048?buf[i++]=192|c>>>6:(c<65536?buf[i++]=224|c>>>12:(buf[i++]=240|c>>>18,buf[i++]=128|c>>>12&63),buf[i++]=128|c>>>6&63),buf[i++]=128|63&c);return buf},strings_buf2string=function(buf,max){var len=max||buf.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(buf.subarray(0,max));for(var utf16buf=new Array(2*len),out=0,i=0;i<len;){var c=buf[i++];if(c<128)utf16buf[out++]=c;else{var c_len=_utf8len[c];if(4<c_len)utf16buf[out++]=65533,i+=c_len-1;else{for(c&=2===c_len?31:3===c_len?15:7;1<c_len&&i<len;)c=c<<6|63&buf[i++],c_len--;1<c_len?utf16buf[out++]=65533:c<65536?utf16buf[out++]=c:(c-=65536,utf16buf[out++]=55296|c>>10&1023,utf16buf[out++]=56320|1023&c)}}}return function(buf,len){if(len<65534&&buf.subarray&&STR_APPLY_UIA_OK)return String.fromCharCode.apply(null,buf.length===len?buf:buf.subarray(0,len));for(var result="",i=0;i<len;i++)result+=String.fromCharCode(buf[i]);return result}(utf16buf,out)},strings_utf8border=function(buf,max){for(var pos=(max=(max=max||buf.length)>buf.length?buf.length:max)-1;0<=pos&&128==(192&buf[pos]);)pos--;return!(pos<0)&&0!==pos&&pos+_utf8len[buf[pos]]>max?pos:max},messages={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"};var zstream=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};var gzheader=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1},toString=Object.prototype.toString,Z_NO_FLUSH=constants$1.Z_NO_FLUSH,Z_FINISH=constants$1.Z_FINISH,Z_OK=constants$1.Z_OK,Z_STREAM_END=constants$1.Z_STREAM_END,Z_NEED_DICT=constants$1.Z_NEED_DICT,Z_STREAM_ERROR=constants$1.Z_STREAM_ERROR,Z_DATA_ERROR=constants$1.Z_DATA_ERROR,Z_MEM_ERROR=constants$1.Z_MEM_ERROR;function Inflate(options){this.options=common_assign({chunkSize:65536,windowBits:15,to:""},options||{});var opt=this.options,options=(opt.raw&&0<=opt.windowBits&&opt.windowBits<16&&(opt.windowBits=-opt.windowBits,0===opt.windowBits)&&(opt.windowBits=-15),!(0<=opt.windowBits&&opt.windowBits<16)||options&&options.windowBits||(opt.windowBits+=32),15<opt.windowBits&&opt.windowBits<48&&0==(15&opt.windowBits)&&(opt.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0,inflate_1$1.inflateInit2(this.strm,opt.windowBits));if(options!==Z_OK)throw new Error(messages[options]);if(this.header=new gzheader,inflate_1$1.inflateGetHeader(this.strm,this.header),opt.dictionary&&("string"==typeof opt.dictionary?opt.dictionary=strings_string2buf(opt.dictionary):"[object ArrayBuffer]"===toString.call(opt.dictionary)&&(opt.dictionary=new Uint8Array(opt.dictionary)),opt.raw)&&(options=inflate_1$1.inflateSetDictionary(this.strm,opt.dictionary))!==Z_OK)throw new Error(messages[options])}function inflate(input,options){options=new Inflate(options);if(options.push(input),options.err)throw options.msg||messages[options.err];return options.result}Inflate.prototype.push=function(data,flush_mode){var status,_flush_mode,strm=this.strm,chunkSize=this.options.chunkSize,dictionary=this.options.dictionary;if(this.ended)return!1;for(_flush_mode=flush_mode===~~flush_mode?flush_mode:!0===flush_mode?Z_FINISH:Z_NO_FLUSH,"[object ArrayBuffer]"===toString.call(data)?strm.input=new Uint8Array(data):strm.input=data,strm.next_in=0,strm.avail_in=strm.input.length;;){for(0===strm.avail_out&&(strm.output=new Uint8Array(chunkSize),strm.next_out=0,strm.avail_out=chunkSize),(status=inflate_1$1.inflate(strm,_flush_mode))===Z_NEED_DICT&&dictionary&&((status=inflate_1$1.inflateSetDictionary(strm,dictionary))===Z_OK?status=inflate_1$1.inflate(strm,_flush_mode):status===Z_DATA_ERROR&&(status=Z_NEED_DICT));0<strm.avail_in&&status===Z_STREAM_END&&0<strm.state.wrap&&0!==data[strm.next_in];)inflate_1$1.inflateReset(strm),status=inflate_1$1.inflate(strm,_flush_mode);switch(status){case Z_STREAM_ERROR:case Z_DATA_ERROR:case Z_NEED_DICT:case Z_MEM_ERROR:return this.onEnd(status),!(this.ended=!0)}var next_out_utf8,tail,utf8str,last_avail_out=strm.avail_out;if(!strm.next_out||0!==strm.avail_out&&status!==Z_STREAM_END||("string"===this.options.to?(next_out_utf8=strings_utf8border(strm.output,strm.next_out),tail=strm.next_out-next_out_utf8,utf8str=strings_buf2string(strm.output,next_out_utf8),strm.next_out=tail,strm.avail_out=chunkSize-tail,tail&&strm.output.set(strm.output.subarray(next_out_utf8,next_out_utf8+tail),0),this.onData(utf8str)):this.onData(strm.output.length===strm.next_out?strm.output:strm.output.subarray(0,strm.next_out))),status!==Z_OK||0!==last_avail_out){if(status===Z_STREAM_END)return status=inflate_1$1.inflateEnd(this.strm),this.onEnd(status),this.ended=!0;if(0===strm.avail_in)break}}return!0},Inflate.prototype.onData=function(chunk){this.chunks.push(chunk)},Inflate.prototype.onEnd=function(status){status===Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=common_flattenChunks(this.chunks)),this.chunks=[],this.err=status,this.msg=this.strm.msg};function inflateRaw_1(input,options){return(options=options||{}).raw=!0,inflate(input,options)}var inflate_2=inflate,ungzip=inflate,inflate_1={Inflate:Inflate,inflate:inflate_2,inflateRaw:inflateRaw_1,ungzip:ungzip,constants:constants$1};return exports.Inflate=Inflate,exports.constants=constants$1,exports.default=inflate_1,exports.inflate=inflate_2,exports.inflateRaw=inflateRaw_1,exports.ungzip=ungzip,exports}void 0!==Module&&(Module.TA=TA);var browserFix=browserFix||{},wasmString;function inflateBase64(base64){var binaryString=function(string){var b64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",string=String(string).replace(/[\t\n\f\r ]+/g,"");string+="==".slice(2-(3&string.length));for(var bitmap,r1,r2,result="",i=0;i<string.length;)bitmap=b64.indexOf(string.charAt(i++))<<18|b64.indexOf(string.charAt(i++))<<12|(r1=b64.indexOf(string.charAt(i++)))<<6|(r2=b64.indexOf(string.charAt(i++))),result+=64===r1?String.fromCharCode(bitmap>>16&255):64===r2?String.fromCharCode(bitmap>>16&255,bitmap>>8&255):String.fromCharCode(bitmap>>16&255,bitmap>>8&255,255&bitmap);return result}(base64),length=binaryString.length,bytes=new Uint8Array(length);for(let i=0;i<length;i++)bytes[i]=binaryString.charCodeAt(i);return init_pako().inflate(bytes)}browserFix.sliceTypedArray=function(array,sliceBegin,sliceEnd){var bpe=array.BYTES_PER_ELEMENT,boff=array.byteOffset,len=array.length;return(sliceBegin=0|sliceBegin||0)<0&&(sliceBegin+=len),(sliceEnd=void 0===sliceEnd?len:0|sliceEnd)<0&&(sliceEnd+=len),new array.constructor(array.buffer.slice(boff+bpe*sliceBegin,boff+bpe*sliceEnd))},void 0===Uint8Array.prototype.slice&&(console.warn("The TypedArray.slice method is not supported in this browser. This may impair performance. "),Uint16Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Int16Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Uint8Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Int8Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)}),void 0!==Module&&(wasmString="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",100<wasmString.length)&&(Module.wasmBinary=inflateBase64(wasmString),Module.__haswasmBinary__=!0),"undefined"!=typeof __ctx&&void 0!==__ctx.INITIAL_MEMORY&&(Module.INITIAL_MEMORY=__ctx.INITIAL_MEMORY),"undefined"==typeof print&&(print=console.log);var JSHttpGet=null,crypto,fs,os,process,CLUSTER_IP,CLUSTER_DOMAIN,JSHttpGet;function md5(text){return crypto.createHash("md5").update(text).digest("hex")}JSHttpGet="undefined"!=typeof self&&void 0!==self.onmessage?function(path){var r=XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");return r.open("GET","https://www.fmz.com"+path,!1),r.send(null),r.responseText}:(crypto=require("crypto"),fs=require("fs"),os=require("os"),process=require("process"),CLUSTER_IP=process.env.CLUSTER_IP||"q.fmz.com",CLUSTER_DOMAIN=process.env.CLUSTER_DOMAIN||"q.fmz.com",function(url){var tmpCache=os.tmpdir()+"/cache",tmpCache=(fs.existsSync(tmpCache)||fs.mkdirSync(tmpCache),tmpCache+"/botvs_kline_"+md5(url="http://"+CLUSTER_IP+url));return fs.existsSync(tmpCache)?fs.readFileSync(tmpCache,"utf-8"):((url=require("sync-request")("GET",url,{headers:{Host:CLUSTER_DOMAIN}}).getBody("utf8"))&&-1!==url.indexOf(",")&&fs.writeFileSync(tmpCache,url,"utf-8"),url)});var moduleOverrides=Object.assign({},Module),arguments_=[],thisProgram="./this.program",quit_=(status,toThrow)=>{throw toThrow},ENVIRONMENT_IS_WEB="object"==typeof window,ENVIRONMENT_IS_WORKER="function"==typeof importScripts,ENVIRONMENT_IS_NODE="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,scriptDirectory="",read_,readAsync,readBinary,setWindowTitle,fs,nodePath,scriptDirectory,read_,readBinary,readAsync;function locateFile(path){return Module.locateFile?Module.locateFile(path,scriptDirectory):scriptDirectory+path}ENVIRONMENT_IS_NODE?(fs=require("fs"),nodePath=require("path"),scriptDirectory=ENVIRONMENT_IS_WORKER?nodePath.dirname(scriptDirectory)+"/":__dirname+"/",read_=(filename,binary)=>(filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename),fs.readFileSync(filename,binary?void 0:"utf8")),readBinary=filename=>{filename=read_(filename,!0);return filename=filename.buffer?filename:new Uint8Array(filename)},readAsync=(filename,onload,onerror,binary=!0)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename),fs.readFile(filename,binary?void 0:"utf8",(err,data)=>{err?onerror(err):onload(binary?data.buffer:data)})},!Module.thisProgram&&1<process.argv.length&&(thisProgram=process.argv[1].replace(/\\/g,"/")),arguments_=process.argv.slice(2),quit_=(status,toThrow)=>{throw process.exitCode=status,toThrow},Module.inspect=()=>"[Emscripten Module object]"):(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&(ENVIRONMENT_IS_WORKER?scriptDirectory=self.location.href:"undefined"!=typeof document&&document.currentScript&&(scriptDirectory=document.currentScript.src),_scriptDir&&(scriptDirectory=_scriptDir),scriptDirectory=0!==scriptDirectory.indexOf("blob:")?scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1):"",read_=url=>{var xhr=new XMLHttpRequest;return xhr.open("GET",url,!1),xhr.send(null),xhr.responseText},ENVIRONMENT_IS_WORKER&&(readBinary=url=>{var xhr=new XMLHttpRequest;return xhr.open("GET",url,!1),xhr.responseType="arraybuffer",xhr.send(null),new Uint8Array(xhr.response)}),readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,!0),xhr.responseType="arraybuffer",xhr.onload=()=>{200==xhr.status||0==xhr.status&&xhr.response?onload(xhr.response):onerror()},xhr.onerror=onerror,xhr.send(null)},setWindowTitle=title=>document.title=title);var out=Module.print||console.log.bind(console),err=Module.printErr||console.error.bind(console),wasmBinary,noExitRuntime=(Object.assign(Module,moduleOverrides),moduleOverrides=null,Module.arguments&&(arguments_=Module.arguments),Module.thisProgram&&(thisProgram=Module.thisProgram),Module.quit&&(quit_=Module.quit),Module.wasmBinary&&(wasmBinary=Module.wasmBinary),Module.noExitRuntime||!0),wasmMemory,wasmExports,ABORT=("object"!=typeof WebAssembly&&abort("no native wasm support detected"),!1),EXITSTATUS,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function assert(condition,text){condition||abort(text)}function updateMemoryViews(){var b=wasmMemory.buffer;Module.HEAP8=HEAP8=new Int8Array(b),Module.HEAP16=HEAP16=new Int16Array(b),Module.HEAP32=HEAP32=new Int32Array(b),Module.HEAPU8=HEAPU8=new Uint8Array(b),Module.HEAPU16=HEAPU16=new Uint16Array(b),Module.HEAPU32=HEAPU32=new Uint32Array(b),Module.HEAPF32=HEAPF32=new Float32Array(b),Module.HEAPF64=HEAPF64=new Float64Array(b)}var INITIAL_MEMORY=Module.INITIAL_MEMORY||314572800,wasmTable,__ATPRERUN__=(assert(5242880<=INITIAL_MEMORY,"INITIAL_MEMORY should be larger than STACK_SIZE, was "+INITIAL_MEMORY+"! (STACK_SIZE=5242880)"),wasmMemory=Module.wasmMemory||new WebAssembly.Memory({initial:INITIAL_MEMORY/65536,maximum:65536}),updateMemoryViews(),INITIAL_MEMORY=wasmMemory.buffer.byteLength,[]),__ATINIT__=[],__ATPOSTRUN__=[],runtimeInitialized=!1;function preRun(){if(Module.preRun)for("function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);Module.preRun.length;)addOnPreRun(Module.preRun.shift());callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=!0,Module.noFSInit||FS.init.initialized||FS.init(),FS.ignorePermissions=!1,TTY.init(),callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module.postRun)for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);Module.postRun.length;)addOnPostRun(Module.postRun.shift());callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0,runDependencyWatcher=null,dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies)}function removeRunDependency(id){var callback;runDependencies--,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies),0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),dependenciesFulfilled)&&(callback=dependenciesFulfilled,dependenciesFulfilled=null,callback())}function abort(what){Module.onAbort&&Module.onAbort(what),err(what="Aborted("+what+")"),ABORT=!0,EXITSTATUS=1,what+=". Build with -sASSERTIONS for more info.";what=new WebAssembly.RuntimeError(what);throw readyPromiseReject(what),what}var dataURIPrefix="data:application/octet-stream;base64,",wasmBinaryFile,tempDouble,tempI64;function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith("file://")}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary)return new Uint8Array(wasmBinary);if(readBinary)return readBinary(file);throw"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)"}function instantiateSync(file,info){file=getBinarySync(file),file=new WebAssembly.Module(file);return[new WebAssembly.Instance(file,info),file]}function createWasm(){var info={a:wasmImports};function receiveInstance(instance,module){instance=applySignatureConversions(instance.exports);return wasmTable=(wasmExports=instance).S,addOnInit(wasmExports.O),removeRunDependency("wasm-instantiate"),instance}if(addRunDependency("wasm-instantiate"),Module.instantiateWasm)try{return Module.instantiateWasm(info,receiveInstance)}catch(e){err("Module.instantiateWasm callback failed with error: "+e),readyPromiseReject(e)}return receiveInstance(instantiateSync(wasmBinaryFile,info)[0])}wasmBinaryFile="sandbox_cpp_wasm.wasm",isDataURI(wasmBinaryFile)||(wasmBinaryFile=locateFile(wasmBinaryFile));var callRuntimeCallbacks=callbacks=>{for(;0<callbacks.length;)callbacks.shift()(Module)};function getValue(ptr,type="i8"){switch(type=type.endsWith("*")?"*":type){case"i1":case"i8":return HEAP8[ptr>>>0];case"i16":return HEAP16[ptr>>>1];case"i32":return HEAP32[ptr>>>2];case"i64":abort("to do getValue(i64) use WASM_BIGINT");case"float":return HEAPF32[ptr>>>2];case"double":return HEAPF64[ptr>>>3];case"*":return HEAPU32[ptr>>>2];default:abort("invalid type for getValue: "+type)}}function setValue(ptr,value,type="i8"){switch(type=type.endsWith("*")?"*":type){case"i1":case"i8":HEAP8[ptr>>>0]=value;break;case"i16":HEAP16[ptr>>>1]=value;break;case"i32":HEAP32[ptr>>>2]=value;break;case"i64":abort("to do setValue(i64) use WASM_BIGINT");case"float":HEAPF32[ptr>>>2]=value;break;case"double":HEAPF64[ptr>>>3]=value;break;case"*":HEAPU32[ptr>>>2]=value;break;default:abort("invalid type for setValue: "+type)}}function convertI32PairToI53Checked(lo,hi){return hi+2097152>>>0<4194305-!!lo?(lo>>>0)+4294967296*hi:NaN}var UTF8Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{for(var endIdx=(idx>>>=0)+maxBytesToRead,endPtr=idx;heapOrArray[endPtr]&&!(endIdx<=endPtr);)++endPtr;if(16<endPtr-idx&&heapOrArray.buffer&&UTF8Decoder)return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr));for(var str="";idx<endPtr;){var u2,u1,u0=heapOrArray[idx++];128&u0?(u1=63&heapOrArray[idx++],192==(224&u0)?str+=String.fromCharCode((31&u0)<<6|u1):(u2=63&heapOrArray[idx++],(u0=224==(240&u0)?(15&u0)<<12|u1<<6|u2:(7&u0)<<18|u1<<12|u2<<6|63&heapOrArray[idx++])<65536?str+=String.fromCharCode(u0):(u1=u0-65536,str+=String.fromCharCode(55296|u1>>10,56320|1023&u1)))):str+=String.fromCharCode(u0)}return str},UTF8ToString=(ptr,maxBytesToRead)=>(ptr>>>=0)?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):"";function ___assert_fail(condition,filename,line,func){filename>>>=0,func>>>=0,abort(`Assertion failed: ${UTF8ToString(condition>>>=0)}, at: `+[filename?UTF8ToString(filename):"unknown filename",line,func?UTF8ToString(func):"unknown function"])}function ExceptionInfo(excPtr){this.excPtr=excPtr,this.ptr=excPtr-24,this.set_type=function(type){HEAPU32[this.ptr+4>>>2]=type},this.get_type=function(){return HEAPU32[this.ptr+4>>>2]},this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>>2]=destructor},this.get_destructor=function(){return HEAPU32[this.ptr+8>>>2]},this.set_caught=function(caught){HEAP8[this.ptr+12>>>0]=caught=caught?1:0},this.get_caught=function(){return 0!=HEAP8[this.ptr+12>>>0]},this.set_rethrown=function(rethrown){HEAP8[this.ptr+13>>>0]=rethrown=rethrown?1:0},this.get_rethrown=function(){return 0!=HEAP8[this.ptr+13>>>0]},this.init=function(type,destructor){this.set_adjusted_ptr(0),this.set_type(type),this.set_destructor(destructor)},this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>>2]=adjustedPtr},this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>>2]},this.get_exception_ptr=function(){var adjusted;return ___cxa_is_pointer_type(this.get_type())?HEAPU32[this.excPtr>>>2]:0!==(adjusted=this.get_adjusted_ptr())?adjusted:this.excPtr}}var exceptionLast=0,uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){throw type>>>=0,destructor>>>=0,new ExceptionInfo(ptr>>>=0).init(type,destructor),uncaughtExceptionCount++,ptr}var structRegistrations={};function runDestructors(destructors){for(;destructors.length;){var ptr=destructors.pop();destructors.pop()(ptr)}}function simpleReadValueFromPointer(pointer){return this.fromWireType(HEAP32[pointer>>>2])}var awaitingDependencies={},registeredTypes={},typeDependencies={},InternalError=void 0;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);myTypeConverters.length!==myTypes.length&&throwInternalError("Mismatched type converter count");for(var i=0;i<myTypes.length;++i)registerType(myTypes[i],myTypeConverters[i])}myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});var typeConverters=new Array(dependentTypes.length),unregisteredTypes=[],registered=0;dependentTypes.forEach((dt,i)=>{registeredTypes.hasOwnProperty(dt)?typeConverters[i]=registeredTypes[dt]:(unregisteredTypes.push(dt),awaitingDependencies.hasOwnProperty(dt)||(awaitingDependencies[dt]=[]),awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt],++registered===unregisteredTypes.length&&onComplete(typeConverters)}))}),0===unregisteredTypes.length&&onComplete(typeConverters)}var __embind_finalize_value_object=function(structType){var reg=structRegistrations[structType>>>=0],rawConstructor=(delete structRegistrations[structType],reg.rawConstructor),rawDestructor=reg.rawDestructor,fieldRecords=reg.fields;whenDependentTypesAreResolved([structType],fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType)),fieldTypes=>{var fields={};return fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName,getterReturnType=fieldTypes[i],getter=field.getter,getterContext=field.getterContext,setterArgumentType=fieldTypes[i+fieldRecords.length],setter=field.setter,setterContext=field.setterContext;fields[fieldName]={read:ptr=>getterReturnType.fromWireType(getter(getterContext,ptr)),write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType.toWireType(destructors,o)),runDestructors(destructors)}}}),[{name:reg.name,fromWireType:function(ptr){var i,rv={};for(i in fields)rv[i]=fields[i].read(ptr);return rawDestructor(ptr),rv},toWireType:function(destructors,o){for(var fieldName in fields)if(!(fieldName in o))throw new TypeError(`Missing field: "${fieldName}"`);var ptr=rawConstructor();for(fieldName in fields)fields[fieldName].write(ptr,o[fieldName]);return null!==destructors&&destructors.push(rawDestructor,ptr),ptr},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:rawDestructor}]})};function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+size)}}function embind_init_charCodes(){for(var codes=new Array(256),i=0;i<256;++i)codes[i]=String.fromCharCode(i);embind_charCodes=codes}var embind_charCodes=void 0;function readLatin1String(ptr){for(var ret="",c=ptr;HEAPU8[c>>>0];)ret+=embind_charCodes[HEAPU8[c++>>>0]];return ret}var BindingError=void 0;function throwBindingError(message){throw new BindingError(message)}function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(rawType||throwBindingError(`type "${name}" must have a positive integer typeid pointer`),registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations)return;throwBindingError(`Cannot register type '${name}' twice`)}registeredTypes[rawType]=registeredInstance,delete typeDependencies[rawType],awaitingDependencies.hasOwnProperty(rawType)&&(options=awaitingDependencies[rawType],delete awaitingDependencies[rawType],options.forEach(cb=>cb()))}function registerType(rawType,registeredInstance,options={}){if(!("argPackAdvance"in registeredInstance))throw new TypeError("registerType registeredInstance requires argPackAdvance");sharedRegisterType(rawType,registeredInstance,options)}function __embind_register_bool(rawType,name,size,trueValue,falseValue){rawType>>>=0,name>>>=0;var shift=getShiftFromSize(size>>>=0);registerType(rawType,{name:name=readLatin1String(name),fromWireType:function(wt){return!!wt},toWireType:function(destructors,o){return o?trueValue:falseValue},argPackAdvance:8,readValueFromPointer:function(pointer){var heap;if(1===size)heap=HEAP8;else if(2===size)heap=HEAP16;else{if(4!==size)throw new TypeError("Unknown boolean type size: "+name);heap=HEAP32}return this.fromWireType(heap[pointer>>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle))return!1;if(!(other instanceof ClassHandle))return!1;for(var leftClass=this.$$.ptrType.registeredClass,left=this.$$.ptr,rightClass=other.$$.ptrType.registeredClass,right=other.$$.ptr;leftClass.baseClass;)left=leftClass.upcast(left),leftClass=leftClass.baseClass;for(;rightClass.baseClass;)right=rightClass.upcast(right),rightClass=rightClass.baseClass;return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){throwBindingError(obj.$$.ptrType.registeredClass.name+" instance already deleted")}var finalizationRegistry=!1;function detachFinalizer(handle){}function runDestructor($$){$$.smartPtr?$$.smartPtrType.rawDestructor($$.smartPtr):$$.ptrType.registeredClass.rawDestructor($$.ptr)}function releaseClassHandle($$){--$$.count.value,0===$$.count.value&&runDestructor($$)}function downcastPointer(ptr,ptrClass,desiredClass){return ptrClass===desiredClass?ptr:void 0===desiredClass.baseClass||null===(ptr=downcastPointer(ptr,ptrClass,desiredClass.baseClass))?null:desiredClass.downcast(ptr)}var registeredPointers={};function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var k,rv=[];for(k in registeredInstances)registeredInstances.hasOwnProperty(k)&&rv.push(registeredInstances[k]);return rv}var deletionQueue=[];function flushPendingDeletes(){for(;deletionQueue.length;){var obj=deletionQueue.pop();obj.$$.deleteScheduled=!1,obj.delete()}}var delayFunction=void 0;function setDelayFunction(fn){delayFunction=fn,deletionQueue.length&&delayFunction&&delayFunction(flushPendingDeletes)}function init_embind(){Module.getInheritedInstanceCount=getInheritedInstanceCount,Module.getLiveInheritedInstances=getLiveInheritedInstances,Module.flushPendingDeletes=flushPendingDeletes,Module.setDelayFunction=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){for(void 0===ptr&&throwBindingError("ptr should not be undefined");class_.baseClass;)ptr=class_.upcast(ptr),class_=class_.baseClass;return ptr}function getInheritedInstance(class_,ptr){return ptr=getBasestPointer(class_,ptr),registeredInstances[ptr]}function makeClassHandle(prototype,record){return record.ptrType&&record.ptr||throwInternalError("makeClassHandle requires ptr and ptrType"),!!record.smartPtrType!=!!record.smartPtr&&throwInternalError("Both smartPtrType and smartPtr must be specified"),record.count={value:1},attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var registeredInstance,dp,rawPointer=this.getPointee(ptr);return rawPointer?void 0!==(registeredInstance=getInheritedInstance(this.registeredClass,rawPointer))?0===registeredInstance.$$.count.value?(registeredInstance.$$.ptr=rawPointer,registeredInstance.$$.smartPtr=ptr,registeredInstance.clone()):(registeredInstance=registeredInstance.clone(),this.destructor(ptr),registeredInstance):(registeredInstance=this.registeredClass.getActualType(rawPointer),!(registeredInstance=registeredPointers[registeredInstance])||(registeredInstance=this.isConst?registeredInstance.constPointerType:registeredInstance.pointerType,null===(dp=downcastPointer(rawPointer,this.registeredClass,registeredInstance.registeredClass)))?makeDefaultHandle.call(this):this.isSmartPointer?makeClassHandle(registeredInstance.registeredClass.instancePrototype,{ptrType:registeredInstance,ptr:dp,smartPtrType:this,smartPtr:ptr}):makeClassHandle(registeredInstance.registeredClass.instancePrototype,{ptrType:registeredInstance,ptr:dp})):(this.destructor(ptr),null);function makeDefaultHandle(){return this.isSmartPointer?makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr}):makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var attachFinalizer=function(handle){return"undefined"==typeof FinalizationRegistry?(attachFinalizer=handle=>handle,handle):(finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)}),detachFinalizer=handle=>finalizationRegistry.unregister(handle),(attachFinalizer=handle=>{var $$=handle.$$;return!!$$.smartPtr&&finalizationRegistry.register(handle,{$$:$$},handle),handle})(handle))};function ClassHandle_clone(){var clone;return this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.preservePointerOnDelete?(this.$$.count.value+=1,this):((clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}))).$$.count.value+=1,clone.$$.deleteScheduled=!1,clone)}function ClassHandle_delete(){this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&throwBindingError("Object already scheduled for deletion"),detachFinalizer(this),releaseClassHandle(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){return this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&throwBindingError("Object already scheduled for deletion"),deletionQueue.push(this),1===deletionQueue.length&&delayFunction&&delayFunction(flushPendingDeletes),this.$$.deleteScheduled=!0,this}function init_ClassHandle(){ClassHandle.prototype.isAliasOf=ClassHandle_isAliasOf,ClassHandle.prototype.clone=ClassHandle_clone,ClassHandle.prototype.delete=ClassHandle_delete,ClassHandle.prototype.isDeleted=ClassHandle_isDeleted,ClassHandle.prototype.deleteLater=ClassHandle_deleteLater}function ClassHandle(){}var char_0=48,char_9=57;function makeLegalFunctionName(name){var f;return void 0===name?"_unknown":(f=(name=name.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0),char_0<=f&&f<=char_9?"_"+name:name)}function createNamedFunction(name,body){return{[name=makeLegalFunctionName(name)]:function(){return body.apply(this,arguments)}}[name]}function ensureOverloadTable(proto,methodName,humanName){var prevFunc;void 0===proto[methodName].overloadTable&&(prevFunc=proto[methodName],proto[methodName]=function(){return proto[methodName].overloadTable.hasOwnProperty(arguments.length)||throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${arguments.length}) - expects one of (${proto[methodName].overloadTable})!`),proto[methodName].overloadTable[arguments.length].apply(this,arguments)},proto[methodName].overloadTable=[],proto[methodName].overloadTable[prevFunc.argCount]=prevFunc)}function exposePublicSymbol(name,value,numArguments){Module.hasOwnProperty(name)?((void 0===numArguments||void 0!==Module[name].overloadTable&&void 0!==Module[name].overloadTable[numArguments])&&throwBindingError(`Cannot register public name '${name}' twice`),ensureOverloadTable(Module,name,name),Module.hasOwnProperty(numArguments)&&throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`),Module[name].overloadTable[numArguments]=value):(Module[name]=value,void 0!==numArguments&&(Module[name].numArguments=numArguments))}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name,this.constructor=constructor,this.instancePrototype=instancePrototype,this.rawDestructor=rawDestructor,this.baseClass=baseClass,this.getActualType=getActualType,this.upcast=upcast,this.downcast=downcast,this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){for(;ptrClass!==desiredClass;)ptrClass.upcast||throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of `+ptrClass.name),ptr=ptrClass.upcast(ptr),ptrClass=ptrClass.baseClass;return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name);var handleClass=handle.$$.ptrType.registeredClass;return upcastPointer(handle.$$.ptr,handleClass,this.registeredClass)}function genericPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),this.isSmartPointer?(ptr=this.rawConstructor(),null!==destructors&&destructors.push(this.rawDestructor,ptr),ptr):0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&handle.$$.ptrType.isConst&&throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType||handle.$$.ptrType).name} to parameter type `+this.name);var clonedHandle,ptr,handleClass=handle.$$.ptrType.registeredClass;if(ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass),this.isSmartPointer)switch(void 0===handle.$$.smartPtr&&throwBindingError("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:handle.$$.smartPtrType===this?ptr=handle.$$.smartPtr:throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType||handle.$$.ptrType).name} to parameter type `+this.name);break;case 1:ptr=handle.$$.smartPtr;break;case 2:handle.$$.smartPtrType===this?ptr=handle.$$.smartPtr:(clonedHandle=handle.clone(),ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle.delete()})),null!==destructors&&destructors.push(this.rawDestructor,ptr));break;default:throwBindingError("Unsupporting sharing policy")}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name),handle.$$.ptrType.isConst&&throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type `+this.name);var handleClass=handle.$$.ptrType.registeredClass;return upcastPointer(handle.$$.ptr,handleClass,this.registeredClass)}function RegisteredPointer_getPointee(ptr){return ptr=this.rawGetPointee?this.rawGetPointee(ptr):ptr}function RegisteredPointer_destructor(ptr){this.rawDestructor&&this.rawDestructor(ptr)}function RegisteredPointer_deleteObject(handle){null!==handle&&handle.delete()}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee,RegisteredPointer.prototype.destructor=RegisteredPointer_destructor,RegisteredPointer.prototype.argPackAdvance=8,RegisteredPointer.prototype.readValueFromPointer=simpleReadValueFromPointer,RegisteredPointer.prototype.deleteObject=RegisteredPointer_deleteObject,RegisteredPointer.prototype.fromWireType=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name,this.registeredClass=registeredClass,this.isReference=isReference,this.isConst=isConst,this.isSmartPointer=isSmartPointer,this.pointeeType=pointeeType,this.sharingPolicy=sharingPolicy,this.rawGetPointee=rawGetPointee,this.rawConstructor=rawConstructor,this.rawShare=rawShare,this.rawDestructor=rawDestructor,isSmartPointer||void 0!==registeredClass.baseClass?this.toWireType=genericPointerToWireType:(this.toWireType=isConst?constNoSmartPtrRawPointerToWireType:nonConstNoSmartPtrRawPointerToWireType,this.destructorFunction=null)}function replacePublicSymbol(name,value,numArguments){Module.hasOwnProperty(name)||throwInternalError("Replacing nonexistant public symbol"),void 0!==Module[name].overloadTable&&void 0!==numArguments?Module[name].overloadTable[numArguments]=value:(Module[name]=value,Module[name].argCount=numArguments)}var dynCallLegacy=(sig,ptr,args)=>{sig=Module["dynCall_"+sig];return args&&args.length?sig.apply(null,[ptr].concat(args)):sig.call(null,ptr)},wasmTableMirror=[],getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];return func||(funcPtr>=wasmTableMirror.length&&(wasmTableMirror.length=funcPtr+1),wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)),func},dynCall=(sig,ptr,args)=>{return sig.includes("j")?dynCallLegacy(sig,ptr,args):getWasmTableEntry(ptr).apply(null,args)},getDynCaller=(sig,ptr)=>{var argCache=[];return function(){return argCache.length=0,Object.assign(argCache,arguments),dynCall(sig,ptr,argCache)}};function embind__requireFunction(signature,rawFunction){var fp=(signature=readLatin1String(signature)).includes("j")?getDynCaller(signature,rawFunction):getWasmTableEntry(rawFunction);return"function"!=typeof fp&&throwBindingError(`unknown function pointer with signature ${signature}: `+rawFunction),fp}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName,this.message=message;message=new Error(message).stack;void 0!==message&&(this.stack=this.toString()+"\n"+message.replace(/^Error(:[^\n]*)?\n/,""))});return errorClass.prototype=Object.create(baseErrorType.prototype),(errorClass.prototype.constructor=errorClass).prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},errorClass}var UnboundTypeError=void 0;function getTypeName(type){var type=___getTypeName(type),rv=readLatin1String(type);return _free(type),rv}function throwUnboundTypeError(message,types){var unboundTypes=[],seen={};throw types.forEach(function visit(type){seen[type]||registeredTypes[type]||(typeDependencies[type]?typeDependencies[type].forEach(visit):(unboundTypes.push(type),seen[type]=!0))}),new UnboundTypeError(message+": "+unboundTypes.map(getTypeName).join([", "]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){rawType>>>=0,rawPointerType>>>=0,rawConstPointerType>>>=0,baseClassRawType>>>=0,getActualTypeSignature>>>=0,getActualType>>>=0,upcastSignature>>>=0,upcast>>>=0,downcastSignature>>>=0,downcast>>>=0,destructorSignature>>>=0,rawDestructor>>>=0,name=readLatin1String(name>>>=0),getActualType=embind__requireFunction(getActualTypeSignature,getActualType),upcast=upcast&&embind__requireFunction(upcastSignature,upcast),downcast=downcast&&embind__requireFunction(downcastSignature,downcast),rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(`Cannot construct ${name} due to unbound types`,[baseClassRawType])}),whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0],base=baseClassRawType?(baseClass=base.registeredClass).instancePrototype:ClassHandle.prototype;var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype)throw new BindingError("Use 'new' to construct "+name);if(void 0===registeredClass.constructor_body)throw new BindingError(name+" has no accessible constructor");var body=registeredClass.constructor_body[arguments.length];if(void 0===body)throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`);return body.apply(this,arguments)}),instancePrototype=Object.create(base,{constructor:{value:constructor}}),registeredClass=(constructor.prototype=instancePrototype,new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast)),base=(registeredClass.baseClass&&(void 0===registeredClass.baseClass.__derivedClasses&&(registeredClass.baseClass.__derivedClasses=[]),registeredClass.baseClass.__derivedClasses.push(registeredClass)),new RegisteredPointer(name,registeredClass,!0,!1,!1)),baseClass=new RegisteredPointer(name+"*",registeredClass,!1,!1,!1),constPointerConverter=new RegisteredPointer(name+" const*",registeredClass,!1,!0,!1);return registeredPointers[rawType]={pointerType:baseClass,constPointerType:constPointerConverter},replacePublicSymbol(legalFunctionName,constructor),[base,baseClass,constPointerConverter]})}function heap32VectorToArray(count,firstElement){for(var array=[],i=0;i<count;i++)array.push(HEAPU32[firstElement+4*i>>>2]);return array}function newFunc(constructor,argumentList){var dummy;if(constructor instanceof Function)return(dummy=createNamedFunction(constructor.name||"unknownFunctionName",function(){})).prototype=constructor.prototype,dummy=new dummy,(argumentList=constructor.apply(dummy,argumentList))instanceof Object?argumentList:dummy;throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`)}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){for(var argCount=argTypes.length,isClassMethodFunc=(argCount<2&&throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!"),null!==argTypes[1]&&null!==classType),needsDestructorStack=!1,i=1;i<argTypes.length;++i)if(null!==argTypes[i]&&void 0===argTypes[i].destructorFunction){needsDestructorStack=!0;break}for(var returns="void"!==argTypes[0].name,argsList="",argsListWired="",i=0;i<argCount-2;++i)argsList+=(0!==i?", ":"")+"arg"+i,argsListWired+=(0!==i?", ":"")+"arg"+i+"Wired";var invokerFnBody=`
        return function ${makeLegalFunctionName(humanName)}(${argsList}) {
        if (arguments.length !== ${argCount-2}) {
          throwBindingError('function ${humanName} called with ${arguments.length} arguments, expected ${argCount-2} args!');
        }`,dtorStack=(needsDestructorStack&&(invokerFnBody+="var destructors = [];\n"),needsDestructorStack?"destructors":"null"),args1=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];isClassMethodFunc&&(invokerFnBody+="var thisWired = classParam.toWireType("+dtorStack+", this);\n");for(i=0;i<argCount-2;++i)invokerFnBody+="var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n",args1.push("argType"+i),args2.push(argTypes[i+2]);if(invokerFnBody+=(returns||isAsync?"var rv = ":"")+"invoker(fn"+(0<(argsListWired=isClassMethodFunc?"thisWired"+(0<argsListWired.length?", ":"")+argsListWired:argsListWired).length?", ":"")+argsListWired+");\n",needsDestructorStack)invokerFnBody+="runDestructors(destructors);\n";else for(i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=1===i?"thisWired":"arg"+(i-2)+"Wired";null!==argTypes[i].destructorFunction&&(invokerFnBody+=paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n",args1.push(paramName+"_dtor"),args2.push(argTypes[i].destructorFunction))}return returns&&(invokerFnBody+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),args1.push(invokerFnBody+="}\n"),newFunc(Function,args1).apply(null,args2)}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){rawClassType>>>=0,invokerSignature>>>=0,invoker>>>=0,rawConstructor>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);invoker=embind__requireFunction(invokerSignature,invoker),whenDependentTypesAreResolved([],[rawClassType],function(classType){var humanName="constructor "+(classType=classType[0]).name;if(void 0===classType.registeredClass.constructor_body&&(classType.registeredClass.constructor_body=[]),void 0!==classType.registeredClass.constructor_body[argCount-1])throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`,rawArgTypes)},whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){return argTypes.splice(1,0,null),classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor),[]}),[]})}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual,isAsync){rawClassType>>>=0,methodName>>>=0,invokerSignature>>>=0,rawInvoker>>>=0,context>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);methodName=readLatin1String(methodName),rawInvoker=embind__requireFunction(invokerSignature,rawInvoker),whenDependentTypesAreResolved([],[rawClassType],function(classType){var humanName=(classType=classType[0]).name+"."+methodName;function unboundTypesHandler(){throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`,rawArgTypes)}methodName.startsWith("@@")&&(methodName=Symbol[methodName.substring(2)]),isPureVirtual&&classType.registeredClass.pureVirtualFunctions.push(methodName);var proto=classType.registeredClass.instancePrototype,method=proto[methodName];return void 0===method||void 0===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2?(unboundTypesHandler.argCount=argCount-2,unboundTypesHandler.className=classType.name,proto[methodName]=unboundTypesHandler):(ensureOverloadTable(proto,methodName,humanName),proto[methodName].overloadTable[argCount-2]=unboundTypesHandler),whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context,isAsync);return void 0===proto[methodName].overloadTable?(argTypes.argCount=argCount-2,proto[methodName]=argTypes):proto[methodName].overloadTable[argCount-2]=argTypes,[]}),[]})}function handleAllocatorInit(){Object.assign(HandleAllocator.prototype,{get(id){return this.allocated[id]},has(id){return void 0!==this.allocated[id]},allocate(handle){var id=this.freelist.pop()||this.allocated.length;return this.allocated[id]=handle,id},free(id){this.allocated[id]=void 0,this.freelist.push(id)}})}function HandleAllocator(){this.allocated=[void 0],this.freelist=[]}var emval_handles=new HandleAllocator;function __emval_decref(handle){(handle>>>=0)>=emval_handles.reserved&&0==--emval_handles.get(handle).refcount&&emval_handles.free(handle)}function count_emval_handles(){for(var count=0,i=emval_handles.reserved;i<emval_handles.allocated.length;++i)void 0!==emval_handles.allocated[i]&&++count;return count}function init_emval(){emval_handles.allocated.push({value:void 0},{value:null},{value:!0},{value:!1}),emval_handles.reserved=emval_handles.allocated.length,Module.count_emval_handles=count_emval_handles}var Emval={toValue:handle=>(handle||throwBindingError("Cannot use deleted val. handle = "+handle),emval_handles.get(handle).value),toHandle:value=>{switch(value){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return emval_handles.allocate({refcount:1,value:value})}}};function __embind_register_emval(rawType,name){registerType(rawType>>>=0,{name:name=readLatin1String(name>>>=0),fromWireType:function(handle){var rv=Emval.toValue(handle);return __emval_decref(handle),rv},toWireType:function(destructors,value){return Emval.toHandle(value)},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:null})}function embindRepr(v){var t;return null===v?"null":"object"==(t=typeof v)||"array"==t||"function"==t?v.toString():""+v}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this.fromWireType(HEAPF32[pointer>>>2])};case 3:return function(pointer){return this.fromWireType(HEAPF64[pointer>>>3])};default:throw new TypeError("Unknown float type: "+name)}}function __embind_register_float(rawType,name,size){rawType>>>=0,name>>>=0;size=getShiftFromSize(size>>>=0);registerType(rawType,{name:name=readLatin1String(name),fromWireType:function(value){return value},toWireType:function(destructors,value){return value},argPackAdvance:8,readValueFromPointer:floatReadValueFromPointer(name,size),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync){name>>>=0,signature>>>=0,rawInvoker>>>=0,fn>>>=0;var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);name=readLatin1String(name),rawInvoker=embind__requireFunction(signature,rawInvoker),exposePublicSymbol(name,function(){throwUnboundTypeError(`Cannot call ${name} due to unbound types`,argTypes)},argCount-1),whenDependentTypesAreResolved([],argTypes,function(argTypes){argTypes=[argTypes[0],null].concat(argTypes.slice(1));return replacePublicSymbol(name,craftInvokerFunction(name,argTypes,null,rawInvoker,fn,isAsync),argCount-1),[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function(pointer){return HEAP8[pointer>>>0]}:function(pointer){return HEAPU8[pointer>>>0]};case 1:return signed?function(pointer){return HEAP16[pointer>>>1]}:function(pointer){return HEAPU16[pointer>>>1]};case 2:return signed?function(pointer){return HEAP32[pointer>>>2]}:function(pointer){return HEAPU32[pointer>>>2]};default:throw new TypeError("Unknown integer type: "+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){primitiveType>>>=0,size>>>=0,name=readLatin1String(name>>>=0),-1===maxRange&&(maxRange=4294967295);var bitshift,maxRange=getShiftFromSize(size),fromWireType=value=>value,size=(0===minRange&&(bitshift=32-8*size,fromWireType=value=>value<<bitshift>>>bitshift),name.includes("unsigned")),size=size?function(destructors,value){return this.name,value>>>0}:function(destructors,value){return this.name,value};registerType(primitiveType,{name:name,fromWireType:fromWireType,toWireType:size,argPackAdvance:8,readValueFromPointer:integerReadValueFromPointer(name,maxRange,0!==minRange),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){rawType>>>=0,name>>>=0;var TA=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][dataTypeIndex];function decodeMemoryView(handle){var heap=HEAPU32,size=heap[(handle>>=2)>>>0],handle=heap[handle+1>>>0];return new TA(heap.buffer,handle,size)}registerType(rawType,{name:name=readLatin1String(name),fromWireType:decodeMemoryView,argPackAdvance:8,readValueFromPointer:decodeMemoryView},{ignoreDuplicateRegistrations:!0})}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(0<maxBytesToWrite))return 0;for(var startIdx=outIdx>>>=0,endIdx=outIdx+maxBytesToWrite-1,i=0;i<str.length;++i){var u=str.charCodeAt(i);if((u=55296<=u&&u<=57343?65536+((1023&u)<<10)|1023&str.charCodeAt(++i):u)<=127){if(endIdx<=outIdx)break;heap[outIdx++>>>0]=u}else{if(u<=2047){if(endIdx<=outIdx+1)break;heap[outIdx++>>>0]=192|u>>6}else{if(u<=65535){if(endIdx<=outIdx+2)break;heap[outIdx++>>>0]=224|u>>12}else{if(endIdx<=outIdx+3)break;heap[outIdx++>>>0]=240|u>>18,heap[outIdx++>>>0]=128|u>>12&63}heap[outIdx++>>>0]=128|u>>6&63}heap[outIdx++>>>0]=128|63&u}}return heap[outIdx>>>0]=0,outIdx-startIdx},stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite),lengthBytesUTF8=str=>{for(var len=0,i=0;i<str.length;++i){var c=str.charCodeAt(i);c<=127?len++:c<=2047?len+=2:55296<=c&&c<=57343?(len+=4,++i):len+=3}return len};function __embind_register_std_string(rawType,name){rawType>>>=0;var stdStringIsUTF8="std::string"===(name=readLatin1String(name>>>=0));registerType(rawType,{name:name,fromWireType:function(value){var length=HEAPU32[value>>>2],payload=value+4;if(stdStringIsUTF8)for(var decodeStartPtr=payload,i=0;i<=length;++i){var stringSegment,str,currentBytePtr=payload+i;i!=length&&0!=HEAPU8[currentBytePtr>>>0]||(stringSegment=UTF8ToString(decodeStartPtr,currentBytePtr-decodeStartPtr),str=void 0===str?stringSegment:str+String.fromCharCode(0)+stringSegment,decodeStartPtr=currentBytePtr+1)}else{for(var a=new Array(length),i=0;i<length;++i)a[i]=String.fromCharCode(HEAPU8[payload+i>>>0]);str=a.join("")}return _free(value),str},toWireType:function(destructors,value){var length,valueIsOfTypeString="string"==typeof(value=value instanceof ArrayBuffer?new Uint8Array(value):value),base=(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array||throwBindingError("Cannot pass non-string to std::string"),length=stdStringIsUTF8&&valueIsOfTypeString?lengthBytesUTF8(value):value.length,_malloc(4+length+1)),ptr=base+4;if(HEAPU32[base>>>2]=length,stdStringIsUTF8&&valueIsOfTypeString)stringToUTF8(value,ptr,length+1);else if(valueIsOfTypeString)for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);255<charCode&&(_free(ptr),throwBindingError("String has UTF-16 code units that do not fit in 8 bits")),HEAPU8[ptr+i>>>0]=charCode}else for(i=0;i<length;++i)HEAPU8[ptr+i>>>0]=value[i];return null!==destructors&&destructors.push(_free,base),base},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0,UTF16ToString=(ptr,maxBytesToRead)=>{for(var endPtr,idx=ptr>>1,maxIdx=idx+maxBytesToRead/2;!(maxIdx<=idx)&&HEAPU16[idx>>>0];)++idx;if(32<(endPtr=idx<<1)-ptr&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr>>>0,endPtr>>>0));for(var str="",i=0;!(maxBytesToRead/2<=i);++i){var codeUnit=HEAP16[ptr+2*i>>>1];if(0==codeUnit)break;str+=String.fromCharCode(codeUnit)}return str},stringToUTF16=(str,outPtr,maxBytesToWrite)=>{if((maxBytesToWrite=void 0===maxBytesToWrite?2147483647:maxBytesToWrite)<2)return 0;for(var startPtr=outPtr,numCharsToWrite=(maxBytesToWrite-=2)<2*str.length?maxBytesToWrite/2:str.length,i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>>1]=codeUnit,outPtr+=2}return HEAP16[outPtr>>>1]=0,outPtr-startPtr},lengthBytesUTF16=str=>2*str.length,UTF32ToString=(ptr,maxBytesToRead)=>{for(var i=0,str="";!(maxBytesToRead/4<=i);){var ch,utf32=HEAP32[ptr+4*i>>>2];if(0==utf32)break;++i,65536<=utf32?(ch=utf32-65536,str+=String.fromCharCode(55296|ch>>10,56320|1023&ch)):str+=String.fromCharCode(utf32)}return str},stringToUTF32=(str,outPtr,maxBytesToWrite)=>{if((maxBytesToWrite=void 0===maxBytesToWrite?2147483647:maxBytesToWrite)<4)return 0;for(var startPtr=outPtr>>>=0,endPtr=startPtr+maxBytesToWrite-4,i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(55296<=codeUnit&&codeUnit<=57343&&(codeUnit=65536+((1023&codeUnit)<<10)|1023&str.charCodeAt(++i)),HEAP32[outPtr>>>2]=codeUnit,endPtr<(outPtr+=4)+4)break}return HEAP32[outPtr>>>2]=0,outPtr-startPtr},lengthBytesUTF32=str=>{for(var len=0,i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);55296<=codeUnit&&codeUnit<=57343&&++i,len+=4}return len},__embind_register_std_wstring=function(rawType,charSize,name){var decodeString,encodeString,getHeap,lengthBytesUTF,shift;rawType>>>=0,charSize>>>=0,name=readLatin1String(name>>>=0),2===charSize?(decodeString=UTF16ToString,encodeString=stringToUTF16,lengthBytesUTF=lengthBytesUTF16,getHeap=()=>HEAPU16,shift=1):4===charSize&&(decodeString=UTF32ToString,encodeString=stringToUTF32,lengthBytesUTF=lengthBytesUTF32,getHeap=()=>HEAPU32,shift=2),registerType(rawType,{name:name,fromWireType:function(value){for(var length=HEAPU32[value>>>2],HEAP=getHeap(),decodeStartPtr=value+4,i=0;i<=length;++i){var stringSegment,str,currentBytePtr=value+4+i*charSize;i!=length&&0!=HEAP[currentBytePtr>>>shift]||(stringSegment=decodeString(decodeStartPtr,currentBytePtr-decodeStartPtr),str=void 0===str?stringSegment:str+String.fromCharCode(0)+stringSegment,decodeStartPtr=currentBytePtr+charSize)}return _free(value),str},toWireType:function(destructors,value){"string"!=typeof value&&throwBindingError("Cannot pass non-string to C++ string type "+name);var length=lengthBytesUTF(value),ptr=_malloc(4+length+charSize);return HEAPU32[ptr>>>2]=length>>shift,encodeString(value,ptr+4,length+charSize),null!==destructors&&destructors.push(_free,ptr),ptr},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})};function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){constructorSignature>>>=0,rawConstructor>>>=0,destructorSignature>>>=0,rawDestructor>>>=0,structRegistrations[rawType>>>=0]={name:readLatin1String(name>>>=0),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){getterReturnType>>>=0,getterSignature>>>=0,getter>>>=0,getterContext>>>=0,setterArgumentType>>>=0,setterSignature>>>=0,setter>>>=0,setterContext>>>=0,structRegistrations[structType>>>=0].fields.push({fieldName:readLatin1String(fieldName>>>=0),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){registerType(rawType>>>=0,{isVoid:!0,name:name=readLatin1String(name>>>=0),argPackAdvance:0,fromWireType:function(){},toWireType:function(destructors,o){}})}function __emval_incref(handle){4<(handle>>>=0)&&(emval_handles.get(handle).refcount+=1)}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];return void 0===symbol?readLatin1String(address):symbol}function __emval_new_cstring(v){return Emval.toHandle(getStringOrSymbol(v>>>=0))}function __emval_new_object(){return Emval.toHandle({})}function __emval_set_property(handle,key,value){key>>>=0,value>>>=0,handle=Emval.toValue(handle>>>=0),key=Emval.toValue(key),value=Emval.toValue(value),handle[key]=value}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];return void 0===impl&&throwBindingError(humanName+" has unknown type "+getTypeName(rawType)),impl}function __emval_take_value(type,arg){arg>>>=0;type=(type=requireRegisteredType(type>>>=0,"_emval_take_value")).readValueFromPointer(arg);return Emval.toHandle(type)}var isLeapYear=year=>year%4==0&&(year%100!=0||year%400==0),MONTH_DAYS_LEAP_CUMULATIVE=[0,31,60,91,121,152,182,213,244,274,305,335],MONTH_DAYS_REGULAR_CUMULATIVE=[0,31,59,90,120,151,181,212,243,273,304,334],ydayFromDate=date=>{return(isLeapYear(date.getFullYear())?MONTH_DAYS_LEAP_CUMULATIVE:MONTH_DAYS_REGULAR_CUMULATIVE)[date.getMonth()]+date.getDate()-1};function __localtime_js(time_low,time_high,tmPtr){var time_low=convertI32PairToI53Checked(time_low,time_high),time_high=(tmPtr>>>=0,new Date(1e3*time_low)),time_low=(HEAP32[tmPtr>>>2]=time_high.getSeconds(),HEAP32[tmPtr+4>>>2]=time_high.getMinutes(),HEAP32[tmPtr+8>>>2]=time_high.getHours(),HEAP32[tmPtr+12>>>2]=time_high.getDate(),HEAP32[tmPtr+16>>>2]=time_high.getMonth(),HEAP32[tmPtr+20>>>2]=time_high.getFullYear()-1900,HEAP32[tmPtr+24>>>2]=time_high.getDay(),0|ydayFromDate(time_high)),time_low=(HEAP32[tmPtr+28>>>2]=time_low,HEAP32[tmPtr+36>>>2]=-60*time_high.getTimezoneOffset(),new Date(time_high.getFullYear(),0,1)),summerOffset=new Date(time_high.getFullYear(),6,1).getTimezoneOffset(),time_low=time_low.getTimezoneOffset(),time_high=0|(summerOffset!=time_low&&time_high.getTimezoneOffset()==Math.min(time_low,summerOffset));HEAP32[tmPtr+32>>>2]=time_high}var stringToNewUTF8=str=>{var size=lengthBytesUTF8(str)+1,ret=_malloc(size);return ret&&stringToUTF8(str,ret,size),ret};function __tzset_js(timezone,daylight,tzname){timezone>>>=0,daylight>>>=0,tzname>>>=0;var currentYear=(new Date).getFullYear(),winter=new Date(currentYear,0,1),currentYear=new Date(currentYear,6,1),winterOffset=winter.getTimezoneOffset(),summerOffset=currentYear.getTimezoneOffset(),stdTimezoneOffset=Math.max(winterOffset,summerOffset);function extractZone(date){date=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return date?date[1]:"GMT"}HEAPU32[timezone>>>2]=60*stdTimezoneOffset,HEAP32[daylight>>>2]=Number(winterOffset!=summerOffset);timezone=extractZone(winter),stdTimezoneOffset=extractZone(currentYear),daylight=stringToNewUTF8(timezone),winter=stringToNewUTF8(stdTimezoneOffset);summerOffset<winterOffset?(HEAPU32[tzname>>>2]=daylight,HEAPU32[tzname+4>>>2]=winter):(HEAPU32[tzname>>>2]=winter,HEAPU32[tzname+4>>>2]=daylight)}var _abort=()=>{abort("")};function _emscripten_date_now(){return Date.now()}function _emscripten_memcpy_big(dest,src,num){return HEAPU8.copyWithin((dest>>>=0)>>>0,(src>>>=0)>>>0,src+(num>>>=0)>>>0)}var getHeapMax=()=>4294901760,growMemory=size=>{size=size-wasmMemory.buffer.byteLength+65535>>>16;try{return wasmMemory.grow(size),updateMemoryViews(),1}catch(e){}};function _emscripten_resize_heap(requestedSize){requestedSize>>>=0;var oldSize=HEAPU8.length,maxHeapSize=getHeapMax();if(!(maxHeapSize<requestedSize))for(var multiple,cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown),overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296),overGrownHeapSize=Math.min(maxHeapSize,(overGrownHeapSize=Math.max(requestedSize,overGrownHeapSize))+((multiple=65536)-overGrownHeapSize%multiple)%multiple);if(growMemory(overGrownHeapSize))return!0}return!1}function _emscripten_run_script(ptr){ptr>>>=0,eval(UTF8ToString(ptr))}var ENV={},getExecutableName=()=>thisProgram||"./this.program",getEnvStrings=()=>{if(!getEnvStrings.strings){var env={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:getExecutableName()};for(x in ENV)void 0===ENV[x]?delete env[x]:env[x]=ENV[x];var x,strings=[];for(x in env)strings.push(x+"="+env[x]);getEnvStrings.strings=strings}return getEnvStrings.strings},stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i)HEAP8[buffer++>>>0]=str.charCodeAt(i);HEAP8[buffer>>>0]=0},PATH={isAbs:path=>"/"===path.charAt(0),splitPath:filename=>{return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{for(var up=0,i=parts.length-1;0<=i;i--){var last=parts[i];"."===last?parts.splice(i,1):".."===last?(parts.splice(i,1),up++):up&&(parts.splice(i,1),up--)}if(allowAboveRoot)for(;up;up--)parts.unshift("..");return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash="/"===path.substr(-1);return(path=(path=PATH.normalizeArray(path.split("/").filter(p=>!!p),!isAbsolute).join("/"))||isAbsolute?path:".")&&trailingSlash&&(path+="/"),(isAbsolute?"/":"")+path},dirname:path=>{var path=PATH.splitPath(path),root=path[0],path=path[1];return root||path?root+(path=path&&path.substr(0,path.length-1)):"."},basename:path=>{var lastSlash;return"/"===path?"/":-1===(lastSlash=(path=(path=PATH.normalize(path)).replace(/\/$/,"")).lastIndexOf("/"))?path:path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join("/"))},join2:(l,r)=>PATH.normalize(l+"/"+r)},initRandomFill=()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return view=>crypto.getRandomValues(view);if(ENVIRONMENT_IS_NODE)try{var randomBytes,crypto_module=require("crypto");return crypto_module.randomFillSync?view=>crypto_module.randomFillSync(view):(randomBytes=crypto_module.randomBytes,view=>(view.set(randomBytes(view.byteLength)),view))}catch(e){}abort("initRandomDevice")},randomFill=view=>(randomFill=initRandomFill())(view),PATH_FS={resolve:function(){for(var resolvedPath="",resolvedAbsolute=!1,i=arguments.length-1;-1<=i&&!resolvedAbsolute;i--){var path=0<=i?arguments[i]:FS.cwd();if("string"!=typeof path)throw new TypeError("Arguments to path.resolve must be strings");if(!path)return"";resolvedPath=path+"/"+resolvedPath,resolvedAbsolute=PATH.isAbs(path)}return(resolvedAbsolute?"/":"")+(resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(p=>!!p),!resolvedAbsolute).join("/"))||"."},relative:(from,to)=>{function trim(arr){for(var start=0;start<arr.length&&""===arr[start];start++);for(var end=arr.length-1;0<=end&&""===arr[end];end--);return end<start?[]:arr.slice(start,end-start+1)}from=PATH_FS.resolve(from).substr(1),to=PATH_FS.resolve(to).substr(1);for(var fromParts=trim(from.split("/")),toParts=trim(to.split("/")),length=Math.min(fromParts.length,toParts.length),samePartsLength=length,i=0;i<length;i++)if(fromParts[i]!==toParts[i]){samePartsLength=i;break}for(var outputParts=[],i=samePartsLength;i<fromParts.length;i++)outputParts.push("..");return(outputParts=outputParts.concat(toParts.slice(samePartsLength))).join("/")}},FS_stdin_getChar_buffer=[];function intArrayFromString(stringy,dontAddNull,length){length=0<length?length:lengthBytesUTF8(stringy)+1,length=new Array(length),stringy=stringToUTF8Array(stringy,length,0,length.length);return dontAddNull&&(length.length=stringy),length}var FS_stdin_getChar=()=>{if(!FS_stdin_getChar_buffer.length){var result=null;if(ENVIRONMENT_IS_NODE){var buf=Buffer.alloc(256),bytesRead=0,fd=process.stdin.fd;try{bytesRead=fs.readSync(fd,buf,0,256,-1)}catch(e){if(!e.toString().includes("EOF"))throw e;bytesRead=0}result=0<bytesRead?buf.slice(0,bytesRead).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(result=window.prompt("Input: "))&&(result+="\n"):"function"==typeof readline&&null!==(result=readline())&&(result+="\n");if(!result)return null;FS_stdin_getChar_buffer=intArrayFromString(result,!0)}return FS_stdin_getChar_buffer.shift()},TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops},FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty)throw new FS.ErrnoError(43);stream.tty=tty,stream.seekable=!1},close:function(stream){stream.tty.ops.fsync(stream.tty)},fsync:function(stream){stream.tty.ops.fsync(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char)throw new FS.ErrnoError(60);for(var result,bytesRead=0,i=0;i<length;i++){try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(void 0===result&&0===bytesRead)throw new FS.ErrnoError(6);if(null==result)break;bytesRead++,buffer[offset+i]=result}return bytesRead&&(stream.node.timestamp=Date.now()),bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char)throw new FS.ErrnoError(60);try{for(var i=0;i<length;i++)stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}return length&&(stream.node.timestamp=Date.now()),i}},default_tty_ops:{get_char:function(tty){return FS_stdin_getChar()},put_char:function(tty,val){null===val||10===val?(out(UTF8ArrayToString(tty.output,0)),tty.output=[]):0!=val&&tty.output.push(val)},fsync:function(tty){tty.output&&0<tty.output.length&&(out(UTF8ArrayToString(tty.output,0)),tty.output=[])},ioctl_tcgets:function(tty){return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ioctl_tcsets:function(tty,optional_actions,data){return 0},ioctl_tiocgwinsz:function(tty){return[24,80]}},default_tty1_ops:{put_char:function(tty,val){null===val||10===val?(err(UTF8ArrayToString(tty.output,0)),tty.output=[]):0!=val&&tty.output.push(val)},fsync:function(tty){tty.output&&0<tty.output.length&&(err(UTF8ArrayToString(tty.output,0)),tty.output=[])}}},mmapAlloc=size=>{abort()},MEMFS={ops_table:null,mount(mount){return MEMFS.createNode(null,"/",16895,0)},createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode))throw new FS.ErrnoError(63);MEMFS.ops_table||(MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}});mode=FS.createNode(parent,name,mode,dev);return FS.isDir(mode.mode)?(mode.node_ops=MEMFS.ops_table.dir.node,mode.stream_ops=MEMFS.ops_table.dir.stream,mode.contents={}):FS.isFile(mode.mode)?(mode.node_ops=MEMFS.ops_table.file.node,mode.stream_ops=MEMFS.ops_table.file.stream,mode.usedBytes=0,mode.contents=null):FS.isLink(mode.mode)?(mode.node_ops=MEMFS.ops_table.link.node,mode.stream_ops=MEMFS.ops_table.link.stream):FS.isChrdev(mode.mode)&&(mode.node_ops=MEMFS.ops_table.chrdev.node,mode.stream_ops=MEMFS.ops_table.chrdev.stream),mode.timestamp=Date.now(),parent&&(parent.contents[name]=mode,parent.timestamp=mode.timestamp),mode},getFileDataAsTypedArray(node){return node.contents?node.contents.subarray?node.contents.subarray(0,node.usedBytes):new Uint8Array(node.contents):new Uint8Array(0)},expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;newCapacity<=prevCapacity||(newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<1048576?2:1.125)>>>0),0!=prevCapacity&&(newCapacity=Math.max(newCapacity,256)),prevCapacity=node.contents,node.contents=new Uint8Array(newCapacity),0<node.usedBytes&&node.contents.set(prevCapacity.subarray(0,node.usedBytes),0))},resizeFileStorage(node,newSize){var oldContents;node.usedBytes!=newSize&&(0==newSize?(node.contents=null,node.usedBytes=0):(oldContents=node.contents,node.contents=new Uint8Array(newSize),oldContents&&node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes))),node.usedBytes=newSize))},node_ops:{getattr(node){var attr={};return attr.dev=FS.isChrdev(node.mode)?node.id:1,attr.ino=node.id,attr.mode=node.mode,attr.nlink=1,attr.uid=0,attr.gid=0,attr.rdev=node.rdev,FS.isDir(node.mode)?attr.size=4096:FS.isFile(node.mode)?attr.size=node.usedBytes:FS.isLink(node.mode)?attr.size=node.link.length:attr.size=0,attr.atime=new Date(node.timestamp),attr.mtime=new Date(node.timestamp),attr.ctime=new Date(node.timestamp),attr.blksize=4096,attr.blocks=Math.ceil(attr.size/attr.blksize),attr},setattr(node,attr){void 0!==attr.mode&&(node.mode=attr.mode),void 0!==attr.timestamp&&(node.timestamp=attr.timestamp),void 0!==attr.size&&MEMFS.resizeFileStorage(node,attr.size)},lookup(parent,name){throw FS.genericErrors[44]},mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node)for(var i in new_node.contents)throw new FS.ErrnoError(55)}delete old_node.parent.contents[old_node.name],old_node.parent.timestamp=Date.now(),old_node.name=new_name,new_dir.contents[new_name]=old_node,new_dir.timestamp=old_node.parent.timestamp,old_node.parent=new_dir},unlink(parent,name){delete parent.contents[name],parent.timestamp=Date.now()},rmdir(parent,name){for(var i in FS.lookupNode(parent,name).contents)throw new FS.ErrnoError(55);delete parent.contents[name],parent.timestamp=Date.now()},readdir(node){var key,entries=[".",".."];for(key in node.contents)node.contents.hasOwnProperty(key)&&entries.push(key);return entries},symlink(parent,newname,oldpath){parent=MEMFS.createNode(parent,newname,41471,0);return parent.link=oldpath,parent},readlink(node){if(FS.isLink(node.mode))return node.link;throw new FS.ErrnoError(28)}},stream_ops:{read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(8<size&&contents.subarray)buffer.set(contents.subarray(position,position+size),offset);else for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i];return size},write(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer&&(canOwn=!1),!length)return 0;var node=stream.node;if(node.timestamp=Date.now(),buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn)return node.contents=buffer.subarray(offset,offset+length),node.usedBytes=length;if(0===node.usedBytes&&0===position)return node.contents=buffer.slice(offset,offset+length),node.usedBytes=length;if(position+length<=node.usedBytes)return node.contents.set(buffer.subarray(offset,offset+length),position),length}if(MEMFS.expandFileStorage(node,position+length),node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else for(var i=0;i<length;i++)node.contents[position+i]=buffer[offset+i];return node.usedBytes=Math.max(node.usedBytes,position+length),length},llseek(stream,offset,whence){if(1===whence?offset+=stream.position:2===whence&&FS.isFile(stream.node.mode)&&(offset+=stream.node.usedBytes),offset<0)throw new FS.ErrnoError(28);return offset},allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length),stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode))throw new FS.ErrnoError(43);var ptr,allocated,stream=stream.node.contents;if(2&flags||stream.buffer!==HEAP8.buffer){if((0<position||position+length<stream.length)&&(stream=stream.subarray?stream.subarray(position,position+length):Array.prototype.slice.call(stream,position,position+length)),allocated=!0,!(ptr=mmapAlloc(length)))throw new FS.ErrnoError(48);HEAP8.set(stream,ptr>>>0)}else allocated=!1,ptr=stream.byteOffset;return{ptr:ptr,allocated:allocated}},msync(stream,buffer,offset,length,mmapFlags){return MEMFS.stream_ops.write(stream,buffer,0,length,offset,!1),0}}},asyncLoad=(url,onload,onerror,noRunDep)=>{var dep=noRunDep?"":getUniqueRunDependency("al "+url);readAsync(url,arrayBuffer=>{assert(arrayBuffer,`Loading data file "${url}" failed (no arrayBuffer).`),onload(new Uint8Array(arrayBuffer)),dep&&removeRunDependency(dep)},event=>{if(!onerror)throw`Loading data file "${url}" failed.`;onerror()}),dep&&addRunDependency(dep)},preloadPlugins=Module.preloadPlugins||[];function FS_handledByPreloadPlugin(byteArray,fullname,finish,onerror){"undefined"!=typeof Browser&&Browser.init();var handled=!1;return preloadPlugins.forEach(function(plugin){handled||plugin.canHandle(fullname)&&(plugin.handle(byteArray,fullname,finish,onerror),handled=!0)}),handled}function FS_createPreloadedFile(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent,dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){preFinish&&preFinish(),dontCreateFile||FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn),onload&&onload(),removeRunDependency(dep)}FS_handledByPreloadPlugin(byteArray,fullname,finish,()=>{onerror&&onerror(),removeRunDependency(dep)})||finish(byteArray)}addRunDependency(dep),"string"==typeof url?asyncLoad(url,byteArray=>processData(byteArray),onerror):processData(url)}function FS_modeStringToFlags(str){var flags={r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090}[str];if(void 0===flags)throw new Error("Unknown file open mode: "+str);return flags}function FS_getMode(canRead,canWrite){var mode=0;return canRead&&(mode|=365),canWrite&&(mode|=146),mode}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path,opts={})=>{if(!(path=PATH_FS.resolve(path)))return{path:"",node:null};if(8<(opts=Object.assign({follow_mount:!0,recurse_count:0},opts)).recurse_count)throw new FS.ErrnoError(32);for(var parts=path.split("/").filter(p=>!!p),current=FS.root,current_path="/",i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent)break;if(current=FS.lookupNode(current,parts[i]),current_path=PATH.join2(current_path,parts[i]),!FS.isMountpoint(current)||islast&&!opts.follow_mount||(current=current.mounted.root),!islast||opts.follow)for(var count=0;FS.isLink(current.mode);){var link=FS.readlink(current_path),current_path=PATH_FS.resolve(PATH.dirname(current_path),link),current=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1}).node;if(40<count++)throw new FS.ErrnoError(32)}}return{path:current_path,node:current}},getPath:node=>{for(var path,mount;;){if(FS.isRoot(node))return mount=node.mount.mountpoint,path?"/"!==mount[mount.length-1]?mount+"/"+path:mount+path:mount;path=path?node.name+"/"+path:node.name,node=node.parent}},hashName:(parentid,name)=>{for(var hash=0,i=0;i<name.length;i++)hash=(hash<<5)-hash+name.charCodeAt(i)|0;return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:node=>{var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash],FS.nameTable[hash]=node},hashRemoveNode:node=>{var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node)FS.nameTable[hash]=node.name_next;else for(var current=FS.nameTable[hash];current;){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}},lookupNode:(parent,name)=>{var errCode=FS.mayLookup(parent);if(errCode)throw new FS.ErrnoError(errCode,parent);for(var errCode=FS.hashName(parent.id,name),node=FS.nameTable[errCode];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name)return node}return FS.lookup(parent,name)},createNode:(parent,name,mode,rdev)=>{parent=new FS.FSNode(parent,name,mode,rdev);return FS.hashAddNode(parent),parent},destroyNode:node=>{FS.hashRemoveNode(node)},isRoot:node=>node===node.parent,isMountpoint:node=>!!node.mounted,isFile:mode=>32768==(61440&mode),isDir:mode=>16384==(61440&mode),isLink:mode=>40960==(61440&mode),isChrdev:mode=>8192==(61440&mode),isBlkdev:mode=>24576==(61440&mode),isFIFO:mode=>4096==(61440&mode),isSocket:mode=>49152==(49152&mode),flagsToPermissionString:flag=>{var perms=["r","w","rw"][3&flag];return 512&flag&&(perms+="w"),perms},nodePermissions:(node,perms)=>FS.ignorePermissions||(!perms.includes("r")||292&node.mode)&&(!perms.includes("w")||146&node.mode)&&(!perms.includes("x")||73&node.mode)?0:2,mayLookup:dir=>{var errCode=FS.nodePermissions(dir,"x");return errCode||(dir.node_ops.lookup?0:2)},mayCreate:(dir,name)=>{try{FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete:(dir,name,isdir)=>{var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}name=FS.nodePermissions(dir,"wx");if(name)return name;if(isdir){if(!FS.isDir(node.mode))return 54;if(FS.isRoot(node)||FS.getPath(node)===FS.cwd())return 10}else if(FS.isDir(node.mode))return 31;return 0},mayOpen:(node,flags)=>node?FS.isLink(node.mode)?32:FS.isDir(node.mode)&&("r"!==FS.flagsToPermissionString(flags)||512&flags)?31:FS.nodePermissions(node,FS.flagsToPermissionString(flags)):44,MAX_OPEN_FDS:4096,nextfd:()=>{for(var fd=0;fd<=FS.MAX_OPEN_FDS;fd++)if(!FS.streams[fd])return fd;throw new FS.ErrnoError(33)},getStreamChecked:fd=>{fd=FS.getStream(fd);if(fd)return fd;throw new FS.ErrnoError(8)},getStream:fd=>FS.streams[fd],createStream:(stream,fd=-1)=>(FS.FSStream||(FS.FSStream=function(){this.shared={}},FS.FSStream.prototype={},Object.defineProperties(FS.FSStream.prototype,{object:{get(){return this.node},set(val){this.node=val}},isRead:{get(){return 1!=(2097155&this.flags)}},isWrite:{get(){return 0!=(2097155&this.flags)}},isAppend:{get(){return 1024&this.flags}},flags:{get(){return this.shared.flags},set(val){this.shared.flags=val}},position:{get(){return this.shared.position},set(val){this.shared.position=val}}})),stream=Object.assign(new FS.FSStream,stream),-1==fd&&(fd=FS.nextfd()),stream.fd=fd,FS.streams[fd]=stream),closeStream:fd=>{FS.streams[fd]=null},chrdev_stream_ops:{open:stream=>{var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops,stream.stream_ops.open&&stream.stream_ops.open(stream)},llseek:()=>{throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>255&dev,makedev:(ma,mi)=>ma<<8|mi,registerDevice:(dev,ops)=>{FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts:mount=>{for(var mounts=[],check=[mount];check.length;){var m=check.pop();mounts.push(m),check.push.apply(check,m.mounts)}return mounts},syncfs:(populate,callback)=>{"function"==typeof populate&&(callback=populate,populate=!1),FS.syncFSRequests++,1<FS.syncFSRequests&&err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);var mounts=FS.getMounts(FS.root.mount),completed=0;function doCallback(errCode){return FS.syncFSRequests--,callback(errCode)}function done(errCode){if(errCode)return done.errored?void 0:(done.errored=!0,doCallback(errCode));++completed>=mounts.length&&doCallback(null)}mounts.forEach(mount=>{if(!mount.type.syncfs)return done(null);mount.type.syncfs(mount,populate,done)})},mount:(type,opts,mountpoint)=>{var node,root="/"===mountpoint,pseudo=!mountpoint;if(root&&FS.root)throw new FS.ErrnoError(10);if(!root&&!pseudo){pseudo=FS.lookupPath(mountpoint,{follow_mount:!1});if(mountpoint=pseudo.path,node=pseudo.node,FS.isMountpoint(node))throw new FS.ErrnoError(10);if(!FS.isDir(node.mode))throw new FS.ErrnoError(54)}pseudo={type:type,opts:opts,mountpoint:mountpoint,mounts:[]},opts=type.mount(pseudo);return(opts.mount=pseudo).root=opts,root?FS.root=opts:node&&(node.mounted=pseudo,node.mount)&&node.mount.mounts.push(pseudo),opts},unmount:mountpoint=>{mountpoint=FS.lookupPath(mountpoint,{follow_mount:!1});if(!FS.isMountpoint(mountpoint.node))throw new FS.ErrnoError(28);var mountpoint=mountpoint.node,mount=mountpoint.mounted,mounts=FS.getMounts(mount),mount=(Object.keys(FS.nameTable).forEach(hash=>{for(var current=FS.nameTable[hash];current;){var next=current.name_next;mounts.includes(current.mount)&&FS.destroyNode(current),current=next}}),mountpoint.mounted=null,mountpoint.mount.mounts.indexOf(mount));mountpoint.mount.mounts.splice(mount,1)},lookup:(parent,name)=>parent.node_ops.lookup(parent,name),mknod:(path,mode,dev)=>{var parent=FS.lookupPath(path,{parent:!0}).node,path=PATH.basename(path);if(!path||"."===path||".."===path)throw new FS.ErrnoError(28);var errCode=FS.mayCreate(parent,path);if(errCode)throw new FS.ErrnoError(errCode);if(parent.node_ops.mknod)return parent.node_ops.mknod(parent,path,mode,dev);throw new FS.ErrnoError(63)},create:(path,mode)=>FS.mknod(path,mode=(mode=void 0!==mode?mode:438)&4095|32768,0),mkdir:(path,mode)=>FS.mknod(path,mode=(mode=void 0!==mode?mode:511)&1023|16384,0),mkdirTree:(path,mode)=>{for(var dirs=path.split("/"),d="",i=0;i<dirs.length;++i)if(dirs[i]){d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(20!=e.errno)throw e}}},mkdev:(path,mode,dev)=>(void 0===dev&&(dev=mode,mode=438),FS.mknod(path,mode|=8192,dev)),symlink:(oldpath,newpath)=>{if(!PATH_FS.resolve(oldpath))throw new FS.ErrnoError(44);var parent=FS.lookupPath(newpath,{parent:!0}).node;if(!parent)throw new FS.ErrnoError(44);var newpath=PATH.basename(newpath),errCode=FS.mayCreate(parent,newpath);if(errCode)throw new FS.ErrnoError(errCode);if(parent.node_ops.symlink)return parent.node_ops.symlink(parent,newpath,oldpath);throw new FS.ErrnoError(63)},rename:(old_path,new_path)=>{var old_dirname=PATH.dirname(old_path),new_dirname=PATH.dirname(new_path),old_name=PATH.basename(old_path),new_name=PATH.basename(new_path),lookup=FS.lookupPath(old_path,{parent:!0}),lookup=lookup.node,new_dir=FS.lookupPath(new_path,{parent:!0}).node;if(!lookup||!new_dir)throw new FS.ErrnoError(44);if(lookup.mount!==new_dir.mount)throw new FS.ErrnoError(75);var new_node,old_node=FS.lookupNode(lookup,old_name),old_path=PATH_FS.relative(old_path,new_dirname);if("."!==old_path.charAt(0))throw new FS.ErrnoError(28);if("."!==(old_path=PATH_FS.relative(new_path,old_dirname)).charAt(0))throw new FS.ErrnoError(55);try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node!==new_node){new_dirname=FS.isDir(old_node.mode),new_path=FS.mayDelete(lookup,old_name,new_dirname);if(new_path)throw new FS.ErrnoError(new_path);if(new_path=new_node?FS.mayDelete(new_dir,new_name,new_dirname):FS.mayCreate(new_dir,new_name))throw new FS.ErrnoError(new_path);if(!lookup.node_ops.rename)throw new FS.ErrnoError(63);if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node))throw new FS.ErrnoError(10);if(new_dir!==lookup&&(new_path=FS.nodePermissions(lookup,"w")))throw new FS.ErrnoError(new_path);FS.hashRemoveNode(old_node);try{lookup.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}}},rmdir:path=>{var parent=FS.lookupPath(path,{parent:!0}).node,path=PATH.basename(path),node=FS.lookupNode(parent,path),errCode=FS.mayDelete(parent,path,!0);if(errCode)throw new FS.ErrnoError(errCode);if(!parent.node_ops.rmdir)throw new FS.ErrnoError(63);if(FS.isMountpoint(node))throw new FS.ErrnoError(10);parent.node_ops.rmdir(parent,path),FS.destroyNode(node)},readdir:path=>{path=FS.lookupPath(path,{follow:!0}).node;if(path.node_ops.readdir)return path.node_ops.readdir(path);throw new FS.ErrnoError(54)},unlink:path=>{var parent=FS.lookupPath(path,{parent:!0}).node;if(!parent)throw new FS.ErrnoError(44);var path=PATH.basename(path),node=FS.lookupNode(parent,path),errCode=FS.mayDelete(parent,path,!1);if(errCode)throw new FS.ErrnoError(errCode);if(!parent.node_ops.unlink)throw new FS.ErrnoError(63);if(FS.isMountpoint(node))throw new FS.ErrnoError(10);parent.node_ops.unlink(parent,path),FS.destroyNode(node)},readlink:path=>{path=FS.lookupPath(path).node;if(!path)throw new FS.ErrnoError(44);if(path.node_ops.readlink)return PATH_FS.resolve(FS.getPath(path.parent),path.node_ops.readlink(path));throw new FS.ErrnoError(28)},stat:(path,dontFollow)=>{path=FS.lookupPath(path,{follow:!dontFollow}).node;if(!path)throw new FS.ErrnoError(44);if(path.node_ops.getattr)return path.node_ops.getattr(path);throw new FS.ErrnoError(63)},lstat:path=>FS.stat(path,!0),chmod:(path,mode,dontFollow)=>{if(!(dontFollow="string"==typeof path?FS.lookupPath(path,{follow:!dontFollow}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);dontFollow.node_ops.setattr(dontFollow,{mode:4095&mode|-4096&dontFollow.mode,timestamp:Date.now()})},lchmod:(path,mode)=>{FS.chmod(path,mode,!0)},fchmod:(fd,mode)=>{fd=FS.getStreamChecked(fd);FS.chmod(fd.node,mode)},chown:(path,uid,gid,dontFollow)=>{if(!(dontFollow="string"==typeof path?FS.lookupPath(path,{follow:!dontFollow}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);dontFollow.node_ops.setattr(dontFollow,{timestamp:Date.now()})},lchown:(path,uid,gid)=>{FS.chown(path,uid,gid,!0)},fchown:(fd,uid,gid)=>{fd=FS.getStreamChecked(fd);FS.chown(fd.node,uid,gid)},truncate:(path,len)=>{if(len<0)throw new FS.ErrnoError(28);if(!(path="string"==typeof path?FS.lookupPath(path,{follow:!0}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);if(FS.isDir(path.mode))throw new FS.ErrnoError(31);if(!FS.isFile(path.mode))throw new FS.ErrnoError(28);var errCode=FS.nodePermissions(path,"w");if(errCode)throw new FS.ErrnoError(errCode);path.node_ops.setattr(path,{size:len,timestamp:Date.now()})},ftruncate:(fd,len)=>{fd=FS.getStreamChecked(fd);if(0==(2097155&fd.flags))throw new FS.ErrnoError(28);FS.truncate(fd.node,len)},utime:(path,atime,mtime)=>{path=FS.lookupPath(path,{follow:!0}).node;path.node_ops.setattr(path,{timestamp:Math.max(atime,mtime)})},open:(path,flags,mode)=>{if(""===path)throw new FS.ErrnoError(44);if(mode=void 0===mode?438:mode,mode=64&(flags="string"==typeof flags?FS_modeStringToFlags(flags):flags)?4095&mode|32768:0,"object"==typeof path)node=path;else{path=PATH.normalize(path);try{var node=FS.lookupPath(path,{follow:!(131072&flags)}).node}catch(e){}}var created=!1;if(64&flags)if(node){if(128&flags)throw new FS.ErrnoError(20)}else node=FS.mknod(path,mode,0),created=!0;if(!node)throw new FS.ErrnoError(44);if(FS.isChrdev(node.mode)&&(flags&=-513),65536&flags&&!FS.isDir(node.mode))throw new FS.ErrnoError(54);if(!created){mode=FS.mayOpen(node,flags);if(mode)throw new FS.ErrnoError(mode)}512&flags&&!created&&FS.truncate(node,0),flags&=-131713;mode=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:!0,position:0,stream_ops:node.stream_ops,ungotten:[],error:!1});return mode.stream_ops.open&&mode.stream_ops.open(mode),!Module.logReadFiles||1&flags||(FS.readFiles||(FS.readFiles={}),path in FS.readFiles)||(FS.readFiles[path]=1),mode},close:stream=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);stream.getdents&&(stream.getdents=null);try{stream.stream_ops.close&&stream.stream_ops.close(stream)}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:stream=>null===stream.fd,llseek:(stream,offset,whence)=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(!stream.seekable||!stream.stream_ops.llseek)throw new FS.ErrnoError(70);if(0!=whence&&1!=whence&&2!=whence)throw new FS.ErrnoError(28);return stream.position=stream.stream_ops.llseek(stream,offset,whence),stream.ungotten=[],stream.position},read:(stream,buffer,offset,length,position)=>{if(length<0||position<0)throw new FS.ErrnoError(28);if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(1==(2097155&stream.flags))throw new FS.ErrnoError(8);if(FS.isDir(stream.node.mode))throw new FS.ErrnoError(31);if(!stream.stream_ops.read)throw new FS.ErrnoError(28);var seeking=void 0!==position;if(seeking){if(!stream.seekable)throw new FS.ErrnoError(70)}else position=stream.position;buffer=stream.stream_ops.read(stream,buffer,offset,length,position);return seeking||(stream.position+=buffer),buffer},write:(stream,buffer,offset,length,position,canOwn)=>{if(length<0||position<0)throw new FS.ErrnoError(28);if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(0==(2097155&stream.flags))throw new FS.ErrnoError(8);if(FS.isDir(stream.node.mode))throw new FS.ErrnoError(31);if(!stream.stream_ops.write)throw new FS.ErrnoError(28);stream.seekable&&1024&stream.flags&&FS.llseek(stream,0,2);var seeking=void 0!==position;if(seeking){if(!stream.seekable)throw new FS.ErrnoError(70)}else position=stream.position;buffer=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);return seeking||(stream.position+=buffer),buffer},allocate:(stream,offset,length)=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(offset<0||length<=0)throw new FS.ErrnoError(28);if(0==(2097155&stream.flags))throw new FS.ErrnoError(8);if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode))throw new FS.ErrnoError(43);if(!stream.stream_ops.allocate)throw new FS.ErrnoError(138);stream.stream_ops.allocate(stream,offset,length)},mmap:(stream,length,position,prot,flags)=>{if(0!=(2&prot)&&0==(2&flags)&&2!=(2097155&stream.flags))throw new FS.ErrnoError(2);if(1==(2097155&stream.flags))throw new FS.ErrnoError(2);if(stream.stream_ops.mmap)return stream.stream_ops.mmap(stream,length,position,prot,flags);throw new FS.ErrnoError(43)},msync:(stream,buffer,offset,length,mmapFlags)=>stream.stream_ops.msync?stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags):0,munmap:stream=>0,ioctl:(stream,cmd,arg)=>{if(stream.stream_ops.ioctl)return stream.stream_ops.ioctl(stream,cmd,arg);throw new FS.ErrnoError(59)},readFile:(path,opts={})=>{if(opts.flags=opts.flags||0,opts.encoding=opts.encoding||"binary","utf8"!==opts.encoding&&"binary"!==opts.encoding)throw new Error(`Invalid encoding type "${opts.encoding}"`);var ret,stream=FS.open(path,opts.flags),path=FS.stat(path).size,buf=new Uint8Array(path);return FS.read(stream,buf,0,path,0),"utf8"===opts.encoding?ret=UTF8ArrayToString(buf,0):"binary"===opts.encoding&&(ret=buf),FS.close(stream),ret},writeFile:(path,data,opts={})=>{opts.flags=opts.flags||577;path=FS.open(path,opts.flags,opts.mode);if("string"==typeof data){var buf=new Uint8Array(lengthBytesUTF8(data)+1),actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(path,buf,0,actualNumBytes,void 0,opts.canOwn)}else{if(!ArrayBuffer.isView(data))throw new Error("Unsupported data type");FS.write(path,data,0,data.byteLength,void 0,opts.canOwn)}FS.close(path)},cwd:()=>FS.currentPath,chdir:path=>{path=FS.lookupPath(path,{follow:!0});if(null===path.node)throw new FS.ErrnoError(44);if(!FS.isDir(path.node.mode))throw new FS.ErrnoError(54);var errCode=FS.nodePermissions(path.node,"x");if(errCode)throw new FS.ErrnoError(errCode);FS.currentPath=path.path},createDefaultDirectories:()=>{FS.mkdir("/tmp"),FS.mkdir("/home"),FS.mkdir("/home/web_user")},createDefaultDevices:()=>{FS.mkdir("/dev"),FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length}),FS.mkdev("/dev/null",FS.makedev(1,3)),TTY.register(FS.makedev(5,0),TTY.default_tty_ops),TTY.register(FS.makedev(6,0),TTY.default_tty1_ops),FS.mkdev("/dev/tty",FS.makedev(5,0)),FS.mkdev("/dev/tty1",FS.makedev(6,0));var randomBuffer=new Uint8Array(1024),randomLeft=0,randomByte=()=>(0===randomLeft&&(randomLeft=randomFill(randomBuffer).byteLength),randomBuffer[--randomLeft]);FS.createDevice("/dev","random",randomByte),FS.createDevice("/dev","urandom",randomByte),FS.mkdir("/dev/shm"),FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{FS.mkdir("/proc");var proc_self=FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd"),FS.mount({mount:()=>{var node=FS.createNode(proc_self,"fd",16895,73);return node.node_ops={lookup:(parent,name)=>{var stream=FS.getStreamChecked(+name),name={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>stream.path}};return name.parent=name}},node}},{},"/proc/self/fd")},createStandardStreams:()=>{Module.stdin?FS.createDevice("/dev","stdin",Module.stdin):FS.symlink("/dev/tty","/dev/stdin"),Module.stdout?FS.createDevice("/dev","stdout",null,Module.stdout):FS.symlink("/dev/tty","/dev/stdout"),Module.stderr?FS.createDevice("/dev","stderr",null,Module.stderr):FS.symlink("/dev/tty1","/dev/stderr");FS.open("/dev/stdin",0),FS.open("/dev/stdout",1),FS.open("/dev/stderr",1)},ensureErrnoError:()=>{FS.ErrnoError||(FS.ErrnoError=function(errno,node){this.name="ErrnoError",this.node=node,this.setErrno=function(errno){this.errno=errno},this.setErrno(errno),this.message="FS error"},FS.ErrnoError.prototype=new Error,FS.ErrnoError.prototype.constructor=FS.ErrnoError,[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code),FS.genericErrors[code].stack="<generic error, no stack>"}))},staticInit:()=>{FS.ensureErrnoError(),FS.nameTable=new Array(4096),FS.mount(MEMFS,{},"/"),FS.createDefaultDirectories(),FS.createDefaultDevices(),FS.createSpecialDirectories(),FS.filesystems={MEMFS:MEMFS}},init:(input,output,error)=>{FS.init.initialized=!0,FS.ensureErrnoError(),Module.stdin=input||Module.stdin,Module.stdout=output||Module.stdout,Module.stderr=error||Module.stderr,FS.createStandardStreams()},quit:()=>{FS.init.initialized=!1;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];stream&&FS.close(stream)}},findObject:(path,dontResolveLastLink)=>{path=FS.analyzePath(path,dontResolveLastLink);return path.exists?path.object:null},analyzePath:(path,dontResolveLastLink)=>{try{path=(lookup=FS.lookupPath(path,{follow:!dontResolveLastLink})).path}catch(e){}var ret={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:!0});ret.parentExists=!0,ret.parentPath=lookup.path,ret.parentObject=lookup.node,ret.name=PATH.basename(path),lookup=FS.lookupPath(path,{follow:!dontResolveLastLink}),ret.exists=!0,ret.path=lookup.path,ret.object=lookup.node,ret.name=lookup.node.name,ret.isRoot="/"===lookup.path}catch(e){ret.error=e.errno}return ret},createPath:(parent,path,canRead,canWrite)=>{parent="string"==typeof parent?parent:FS.getPath(parent);for(var parts=path.split("/").reverse();parts.length;){var part=parts.pop();if(part){var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}}return current},createFile:(parent,name,properties,canRead,canWrite)=>{parent=PATH.join2("string"==typeof parent?parent:FS.getPath(parent),name),name=FS_getMode(canRead,canWrite);return FS.create(parent,name)},createDataFile:(parent,name,data,canRead,canWrite,canOwn)=>{var path=name,name=(parent&&(parent="string"==typeof parent?parent:FS.getPath(parent),path=name?PATH.join2(parent,name):parent),FS_getMode(canRead,canWrite)),parent=FS.create(path,name);if(data){if("string"==typeof data){for(var arr=new Array(data.length),i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(parent,146|name);canRead=FS.open(parent,577);FS.write(canRead,data,0,data.length,0,canOwn),FS.close(canRead),FS.chmod(parent,name)}return parent},createDevice:(parent,name,input,output)=>{var parent=PATH.join2("string"==typeof parent?parent:FS.getPath(parent),name),name=FS_getMode(!!input,!!output),dev=(FS.createDevice.major||(FS.createDevice.major=64),FS.makedev(FS.createDevice.major++,0));return FS.registerDevice(dev,{open:stream=>{stream.seekable=!1},close:stream=>{output&&output.buffer&&output.buffer.length&&output(10)},read:(stream,buffer,offset,length,pos)=>{for(var result,bytesRead=0,i=0;i<length;i++){try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(void 0===result&&0===bytesRead)throw new FS.ErrnoError(6);if(null==result)break;bytesRead++,buffer[offset+i]=result}return bytesRead&&(stream.node.timestamp=Date.now()),bytesRead},write:(stream,buffer,offset,length,pos)=>{for(var i=0;i<length;i++)try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}return length&&(stream.node.timestamp=Date.now()),i}}),FS.mkdev(parent,name,dev)},forceLoadFile:obj=>{if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!read_)throw new Error("Cannot load without read() or XMLHttpRequest.");try{obj.contents=intArrayFromString(read_(obj.url),!0),obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}},createLazyFile:(parent,name,url,canRead,canWrite)=>{function LazyUint8Array(){this.lengthKnown=!1,this.chunks=[]}if(LazyUint8Array.prototype.get=function(idx){var chunkOffset;if(!(idx>this.length-1||idx<0))return chunkOffset=idx%this.chunkSize,idx=idx/this.chunkSize|0,this.getter(idx)[chunkOffset]},LazyUint8Array.prototype.setDataGetter=function(getter){this.getter=getter},LazyUint8Array.prototype.cacheLength=function(){var xhr=new XMLHttpRequest;if(xhr.open("HEAD",url,!1),xhr.send(null),!(200<=xhr.status&&xhr.status<300||304===xhr.status))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var header,datalength=Number(xhr.getResponseHeader("Content-length")),hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&"bytes"===header,xhr=(header=xhr.getResponseHeader("Content-Encoding"))&&"gzip"===header,chunkSize=1048576,lazyArray=(hasByteServing||(chunkSize=datalength),this);lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize,end=(chunkNum+1)*chunkSize-1,end=Math.min(end,datalength-1);if(void 0===lazyArray.chunks[chunkNum]&&(lazyArray.chunks[chunkNum]=((from,to)=>{if(to<from)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(datalength-1<to)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;if(xhr.open("GET",url,!1),datalength!==chunkSize&&xhr.setRequestHeader("Range","bytes="+from+"-"+to),xhr.responseType="arraybuffer",xhr.overrideMimeType&&xhr.overrideMimeType("text/plain; charset=x-user-defined"),xhr.send(null),200<=xhr.status&&xhr.status<300||304===xhr.status)return void 0!==xhr.response?new Uint8Array(xhr.response||[]):intArrayFromString(xhr.responseText||"",!0);throw new Error("Couldn't load "+url+". Status: "+xhr.status)})(start,end)),void 0===lazyArray.chunks[chunkNum])throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}),!xhr&&datalength||(chunkSize=datalength=1,datalength=this.getter(0).length,chunkSize=datalength,out("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=datalength,this._chunkSize=chunkSize,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array,lazyArray=(Object.defineProperties(lazyArray,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}}),{isDevice:!1,contents:lazyArray})}else lazyArray={isDevice:!1,url:url};var node=FS.createFile(parent,name,lazyArray,canRead,canWrite),stream_ops=(lazyArray.contents?node.contents=lazyArray.contents:lazyArray.url&&(node.contents=null,node.url=lazyArray.url),Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}}),{});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice)for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i];else for(i=0;i<size;i++)buffer[offset+i]=contents.get(position+i);return size}return Object.keys(node.stream_ops).forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function(){return FS.forceLoadFile(node),fn.apply(null,arguments)}}),stream_ops.read=(stream,buffer,offset,length,position)=>(FS.forceLoadFile(node),writeChunks(stream,buffer,offset,length,position)),stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(ptr)return writeChunks(stream,HEAP8,ptr,length,position),{ptr:ptr,allocated:!0};throw new FS.ErrnoError(48)},node.stream_ops=stream_ops,node}},SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(PATH.isAbs(path))return path;if(dirfd=-100===dirfd?FS.cwd():SYSCALLS.getStreamFromFD(dirfd).path,0!=path.length)return PATH.join2(dirfd,path);if(allowEmpty)return dirfd;throw new FS.ErrnoError(44)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node)))return-54;throw e}HEAP32[buf>>>2]=stat.dev,HEAP32[buf+4>>>2]=stat.mode,HEAPU32[buf+8>>>2]=stat.nlink,HEAP32[buf+12>>>2]=stat.uid,HEAP32[buf+16>>>2]=stat.gid,HEAP32[buf+20>>>2]=stat.rdev,tempI64=[stat.size>>>0,(tempDouble=stat.size,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+24>>>2]=tempI64[0],HEAP32[buf+28>>>2]=tempI64[1],HEAP32[buf+32>>>2]=4096,HEAP32[buf+36>>>2]=stat.blocks;var func=stat.atime.getTime(),path=stat.mtime.getTime(),ctime=stat.ctime.getTime();return tempI64=[Math.floor(func/1e3)>>>0,(tempDouble=Math.floor(func/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>>2]=tempI64[0],HEAP32[buf+44>>>2]=tempI64[1],HEAPU32[buf+48>>>2]=func%1e3*1e3,tempI64=[Math.floor(path/1e3)>>>0,(tempDouble=Math.floor(path/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+56>>>2]=tempI64[0],HEAP32[buf+60>>>2]=tempI64[1],HEAPU32[buf+64>>>2]=path%1e3*1e3,tempI64=[Math.floor(ctime/1e3)>>>0,(tempDouble=Math.floor(ctime/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+72>>>2]=tempI64[0],HEAP32[buf+76>>>2]=tempI64[1],HEAPU32[buf+80>>>2]=ctime%1e3*1e3,tempI64=[stat.ino>>>0,(tempDouble=stat.ino,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+88>>>2]=tempI64[0],HEAP32[buf+92>>>2]=tempI64[1],0},doMsync:function(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode))throw new FS.ErrnoError(43);if(2&flags)return 0;addr=HEAPU8.slice(addr,addr+len);FS.msync(stream,addr,offset,len,flags)},varargs:void 0,get(){return SYSCALLS.varargs+=4,HEAP32[SYSCALLS.varargs-4>>>2]},getStr(ptr){return UTF8ToString(ptr)},getStreamFromFD:function(fd){return FS.getStreamChecked(fd)}};function _environ_get(__environ,environ_buf){__environ>>>=0,environ_buf>>>=0;var bufSize=0;return getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+4*i>>>2]=ptr,stringToAscii(string,ptr),bufSize+=string.length+1}),0}function _environ_sizes_get(penviron_count,penviron_buf_size){penviron_count>>>=0,penviron_buf_size>>>=0;var strings=getEnvStrings(),bufSize=(HEAPU32[penviron_count>>>2]=strings.length,0);return strings.forEach(function(string){bufSize+=string.length+1}),HEAPU32[penviron_buf_size>>>2]=bufSize,0}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);return FS.close(stream),0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var doReadv=(stream,iov,iovcnt,offset)=>{for(var ret=0,i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2],len=HEAPU32[iov+4>>>2],ptr=(iov+=8,FS.read(stream,HEAP8,ptr,len,offset));if(ptr<0)return-1;if(ret+=ptr,ptr<len)break;void 0!==offset&&(offset+=ptr)}return ret};function _fd_read(fd,iov,iovcnt,pnum){iov>>>=0,iovcnt>>>=0,pnum>>>=0;try{var stream=SYSCALLS.getStreamFromFD(fd),num=doReadv(stream,iov,iovcnt);return HEAPU32[pnum>>>2]=num,0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var stream,offset_low=convertI32PairToI53Checked(offset_low,offset_high);newOffset>>>=0;try{return isNaN(offset_low)?61:(stream=SYSCALLS.getStreamFromFD(fd),FS.llseek(stream,offset_low,whence),tempI64=[stream.position>>>0,(tempDouble=stream.position,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>>2]=tempI64[0],HEAP32[newOffset+4>>>2]=tempI64[1],stream.getdents&&0===offset_low&&0===whence&&(stream.getdents=null),0)}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var doWritev=(stream,iov,iovcnt,offset)=>{for(var ret=0,i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2],len=HEAPU32[iov+4>>>2],ptr=(iov+=8,FS.write(stream,HEAP8,ptr,len,offset));if(ptr<0)return-1;ret+=ptr,void 0!==offset&&(offset+=ptr)}return ret};function _fd_write(fd,iov,iovcnt,pnum){iov>>>=0,iovcnt>>>=0,pnum>>>=0;try{var stream=SYSCALLS.getStreamFromFD(fd),num=doWritev(stream,iov,iovcnt);return HEAPU32[pnum>>>2]=num,0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var arraySum=(array,index)=>{for(var sum=0,i=0;i<=index;sum+=array[i++]);return sum},MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31],MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31],addDays=(date,days)=>{for(var newDate=new Date(date.getTime());0<days;){var leap=isLeapYear(newDate.getFullYear()),currentMonth=newDate.getMonth(),leap=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(!(days>leap-newDate.getDate()))return newDate.setDate(newDate.getDate()+days),newDate;days-=leap-newDate.getDate()+1,newDate.setDate(1),currentMonth<11?newDate.setMonth(currentMonth+1):(newDate.setMonth(0),newDate.setFullYear(newDate.getFullYear()+1))}return newDate},writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer>>>0)};function _strftime(s,maxsize,format,tm){s>>>=0,maxsize>>>=0,format>>>=0;var tm_zone=HEAP32[(tm>>>=0)+40>>>2],date={tm_sec:HEAP32[tm>>>2],tm_min:HEAP32[tm+4>>>2],tm_hour:HEAP32[tm+8>>>2],tm_mday:HEAP32[tm+12>>>2],tm_mon:HEAP32[tm+16>>>2],tm_year:HEAP32[tm+20>>>2],tm_wday:HEAP32[tm+24>>>2],tm_yday:HEAP32[tm+28>>>2],tm_isdst:HEAP32[tm+32>>>2],tm_gmtoff:HEAP32[tm+36>>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""},pattern=UTF8ToString(format),EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(rule in EXPANSION_RULES_1)pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule]);var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){for(var str="number"==typeof value?value.toString():value||"";str.length<digits;)str=character[0]+str;return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:0<value?1:0}var compare;return compare=0===(compare=sgn(date1.getFullYear()-date2.getFullYear()))&&0===(compare=sgn(date1.getMonth()-date2.getMonth()))?sgn(date1.getDate()-date2.getDate()):compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var date=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday),janFourthThisYear=new Date(date.getFullYear(),0,4),janFourthNextYear=new Date(date.getFullYear()+1,0,4),janFourthThisYear=getFirstWeekStartDate(janFourthThisYear),janFourthNextYear=getFirstWeekStartDate(janFourthNextYear);return compareByDay(janFourthThisYear,date)<=0?compareByDay(janFourthNextYear,date)<=0?date.getFullYear()+1:date.getFullYear():date.getFullYear()-1}var rule,EXPANSION_RULES_2={"%a":date=>WEEKDAYS[date.tm_wday].substring(0,3),"%A":date=>WEEKDAYS[date.tm_wday],"%b":date=>MONTHS[date.tm_mon].substring(0,3),"%B":date=>MONTHS[date.tm_mon],"%C":date=>{return leadingNulls((date.tm_year+1900)/100|0,2)},"%d":date=>leadingNulls(date.tm_mday,2),"%e":date=>leadingSomething(date.tm_mday,2," "),"%g":date=>getWeekBasedYear(date).toString().substring(2),"%G":date=>getWeekBasedYear(date),"%H":date=>leadingNulls(date.tm_hour,2),"%I":date=>{date=date.tm_hour;return 0==date?date=12:12<date&&(date-=12),leadingNulls(date,2)},"%j":date=>leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3),"%m":date=>leadingNulls(date.tm_mon+1,2),"%M":date=>leadingNulls(date.tm_min,2),"%n":()=>"\n","%p":date=>0<=date.tm_hour&&date.tm_hour<12?"AM":"PM","%S":date=>leadingNulls(date.tm_sec,2),"%t":()=>"\t","%u":date=>date.tm_wday||7,"%U":date=>{date=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(date/7),2)},"%V":date=>{var jan1,val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);return(date.tm_wday+371-date.tm_yday-2)%7<=2&&val++,val?53!=val||4==(jan1=(date.tm_wday+371-date.tm_yday)%7)||3==jan1&&isLeapYear(date.tm_year)||(val=1):(val=52,(4==(jan1=(date.tm_wday+7-date.tm_yday-1)%7)||5==jan1&&isLeapYear(date.tm_year%400-1))&&val++),leadingNulls(val,2)},"%w":date=>date.tm_wday,"%W":date=>{date=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(date/7),2)},"%y":date=>(date.tm_year+1900).toString().substring(2),"%Y":date=>date.tm_year+1900,"%z":date=>{var ahead=0<=(date=date.tm_gmtoff),date=Math.abs(date)/60;return(ahead?"+":"-")+String("0000"+(date/60*100+date%60)).slice(-4)},"%Z":date=>date.tm_zone,"%%":()=>"%"},pattern=pattern.replace(/%%/g,"\0\0");for(rule in EXPANSION_RULES_2)pattern.includes(rule)&&(pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date)));tm=intArrayFromString(pattern=pattern.replace(/\0\0/g,"%"),!1);return tm.length>maxsize?0:(writeArrayToMemory(tm,s),tm.length-1)}function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s>>>=0,maxsize>>>=0,format>>>=0,tm>>>=0)}function uleb128Encode(n,target){n<128?target.push(n):target.push(n%128|128,n>>7)}function sigToWasmTypes(sig){for(var typeNames={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},type={parameters:[],results:"v"==sig[0]?[]:[typeNames[sig[0]]]},i=1;i<sig.length;++i)type.parameters.push(typeNames[sig[i]]);return type}function generateFuncType(sig,target){var sigRet=sig.slice(0,1),sigParam=sig.slice(1),typeCodes={i:127,p:127,j:126,f:125,d:124};target.push(96),uleb128Encode(sigParam.length,target);for(var i=0;i<sigParam.length;++i)target.push(typeCodes[sigParam[i]]);"v"==sigRet?target.push(0):target.push(1,typeCodes[sigRet])}function convertJsFunctionToWasm(func,sig){var bytes;return"function"==typeof WebAssembly.Function?new WebAssembly.Function(sigToWasmTypes(sig),func):(generateFuncType(sig,sig=[1]),uleb128Encode(sig.length,bytes=[0,97,115,109,1,0,0,0,1]),bytes.push.apply(bytes,sig),bytes.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0),sig=new WebAssembly.Module(new Uint8Array(bytes)),new WebAssembly.Instance(sig,{e:{f:func}}).exports.f)}function updateTableMap(offset,count){if(functionsInTableMap)for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);item&&functionsInTableMap.set(item,i)}}var functionsInTableMap=void 0;function getFunctionAddress(func){return functionsInTableMap||(functionsInTableMap=new WeakMap,updateTableMap(0,wasmTable.length)),functionsInTableMap.get(func)||0}var freeTableIndexes=[];function getEmptyTableSlot(){if(freeTableIndexes.length)return freeTableIndexes.pop();try{wasmTable.grow(1)}catch(err){if(err instanceof RangeError)throw"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.";throw err}return wasmTable.length-1}var setWasmTableEntry=(idx,func)=>{wasmTable.set(idx,func),wasmTableMirror[idx]=wasmTable.get(idx)};function addFunction(func,sig){var rtn=getFunctionAddress(func);if(rtn)return rtn;rtn=getEmptyTableSlot();try{setWasmTableEntry(rtn,func)}catch(err){if(!(err instanceof TypeError))throw err;sig=convertJsFunctionToWasm(func,sig);setWasmTableEntry(rtn,sig)}return functionsInTableMap.set(func,rtn),rtn}function removeFunction(index){functionsInTableMap.delete(getWasmTableEntry(index)),freeTableIndexes.push(index)}function getCFunc(ident){return Module["_"+ident]}var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1,ret=stackAlloc(size);return stringToUTF8(str,ret,size),ret},ccall=function(ident,returnType,argTypes,args,opts){var toC={string:str=>{var ret=0;return ret=null!=str&&0!==str?stringToUTF8OnStack(str):ret},array:arr=>{var ret=stackAlloc(arr.length);return writeArrayToMemory(arr,ret),ret}};var ident=getCFunc(ident),cArgs=[],stack=0;if(args)for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];converter?(0===stack&&(stack=stackSave()),cArgs[i]=converter(args[i])):cArgs[i]=args[i]}return function(ret){return 0!==stack&&stackRestore(stack),function(ret){return"string"===returnType?UTF8ToString(ret):"boolean"===returnType?Boolean(ret):ret}(ret)}(ident.apply(null,cArgs))},cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>"number"===type||"boolean"===type);return"string"!==returnType&&numericArgs&&!opts?getCFunc(ident):function(){return ccall(ident,returnType,argTypes,arguments,opts)}},InternalError=Module.InternalError=class InternalError extends Error{constructor(message){super(message),this.name="InternalError"}},FSNode=(embind_init_charCodes(),BindingError=Module.BindingError=class BindingError extends Error{constructor(message){super(message),this.name="BindingError"}},init_ClassHandle(),init_embind(),init_RegisteredPointer(),UnboundTypeError=Module.UnboundTypeError=extendError(Error,"UnboundTypeError"),handleAllocatorInit(),init_emval(),function(parent,name,mode,rdev){this.parent=parent=parent||this,this.mount=parent.mount,this.mounted=null,this.id=FS.nextInode++,this.name=name,this.mode=mode,this.node_ops={},this.stream_ops={},this.rdev=rdev}),readMode=365,writeMode=146,wasmImports=(Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}}),FS.FSNode=FSNode,FS.createPreloadedFile=FS_createPreloadedFile,FS.staticInit(),{b:___assert_fail,d:___cxa_throw,n:__embind_finalize_value_object,B:__embind_register_bigint,M:__embind_register_bool,p:__embind_register_class,o:__embind_register_class_constructor,f:__embind_register_class_function,L:__embind_register_emval,y:__embind_register_float,c:__embind_register_function,l:__embind_register_integer,j:__embind_register_memory_view,x:__embind_register_std_string,t:__embind_register_std_wstring,m:__embind_register_value_object,e:__embind_register_value_object_field,N:__embind_register_void,i:__emval_decref,k:__emval_incref,r:__emval_new_cstring,u:__emval_new_object,q:__emval_set_property,h:__emval_take_value,A:__localtime_js,F:__tzset_js,s:_abort,w:_emscripten_date_now,K:_emscripten_memcpy_big,E:_emscripten_resize_heap,g:_emscripten_run_script,I:_environ_get,J:_environ_sizes_get,H:_fd_close,D:_fd_read,z:_fd_seek,v:_fd_write,a:wasmMemory,G:_strftime,C:_strftime_l}),asm=createWasm(),___wasm_call_ctors=asm.O,_backtest=Module._backtest=asm.P,_free=Module._free=asm.Q,_malloc=Module._malloc=asm.R,___errno_location=asm.__errno_location,_TA_ForEachFunc=Module._TA_ForEachFunc=asm.T,_TA_GetFuncHandle=Module._TA_GetFuncHandle=asm.U,_TA_GetFuncInfo=Module._TA_GetFuncInfo=asm.V,_TA_GetInputParameterInfo=Module._TA_GetInputParameterInfo=asm.W,_TA_GetOptInputParameterInfo=Module._TA_GetOptInputParameterInfo=asm.X,_TA_GetOutputParameterInfo=Module._TA_GetOutputParameterInfo=asm.Y,_TA_ParamHolderAlloc=Module._TA_ParamHolderAlloc=asm.Z,_TA_ParamHolderFree=Module._TA_ParamHolderFree=asm._,_TA_SetInputParamIntegerPtr=Module._TA_SetInputParamIntegerPtr=asm.$,_TA_SetInputParamRealPtr=Module._TA_SetInputParamRealPtr=asm.aa,_TA_SetInputParamPricePtr=Module._TA_SetInputParamPricePtr=asm.ba,_TA_SetOptInputParamInteger=Module._TA_SetOptInputParamInteger=asm.ca,_TA_SetOptInputParamReal=Module._TA_SetOptInputParamReal=asm.da,_TA_SetOutputParamIntegerPtr=Module._TA_SetOutputParamIntegerPtr=asm.ea,_TA_SetOutputParamRealPtr=Module._TA_SetOutputParamRealPtr=asm.fa,_TA_CallFunc=Module._TA_CallFunc=asm.ga,_TA_Initialize=Module._TA_Initialize=asm.ha,_TA_Shutdown=Module._TA_Shutdown=asm.ia,_TA_SetRetCodeInfo=Module._TA_SetRetCodeInfo=asm.ja,_TA_GetVersionString=Module._TA_GetVersionString=asm.ka,___getTypeName=asm.la,__embind_initialize_bindings=Module.__embind_initialize_bindings=asm.ma,stackSave=asm.na,stackRestore=asm.oa,stackAlloc=asm.pa,___cxa_is_pointer_type=asm.qa,dynCall_viijii=Module.dynCall_viijii=asm.ra,dynCall_jiji=Module.dynCall_jiji=asm.sa,dynCall_iiiiij=Module.dynCall_iiiiij=asm.ta,dynCall_iiiiijj=Module.dynCall_iiiiijj=asm.ua,dynCall_iiiiiijj=Module.dynCall_iiiiiijj=asm.va,calledRun;function applySignatureConversions(exports){var makeWrapper_pp=f=>a0=>f(a0)>>>0,makeWrapper_p=f=>()=>f()>>>0;return(exports=Object.assign({},exports)).malloc=makeWrapper_pp(exports.malloc),exports.__errno_location=makeWrapper_p(exports.__errno_location),exports.__getTypeName=makeWrapper_pp(exports.__getTypeName),exports.stackSave=makeWrapper_p(exports.stackSave),exports.stackAlloc=makeWrapper_pp(exports.stackAlloc),exports}function run(){function doRun(){calledRun||(calledRun=!0,Module.calledRun=!0,ABORT)||(initRuntime(),readyPromiseResolve(Module),Module.onRuntimeInitialized&&Module.onRuntimeInitialized(),postRun())}0<runDependencies||(preRun(),0<runDependencies)||(Module.setStatus?(Module.setStatus("Running..."),setTimeout(function(){setTimeout(function(){Module.setStatus("")},1),doRun()},1)):doRun())}if(Module.ccall=ccall,Module.cwrap=cwrap,Module.addFunction=addFunction,Module.removeFunction=removeFunction,dependenciesFulfilled=function runCaller(){calledRun||run(),calledRun||(dependenciesFulfilled=runCaller)},Module.preInit)for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);0<Module.preInit.length;)Module.preInit.pop()();function utf8_encode(string){if("undefined"!=typeof TextEncoder)return(new TextEncoder).encode(string);for(var pos=0,len=string.length,at=0,tlen=Math.max(32,len+(len>>1)+7),target=new Uint8Array(tlen>>3<<3);pos<len;){var extra,value=string.charCodeAt(pos++);if(55296<=value&&value<=56319)if(pos<len&&56320==(64512&(extra=string.charCodeAt(pos)))&&(++pos,value=((1023&value)<<10)+(1023&extra)+65536),55296<=value&&value<=56319)continue;if(at+4>target.length&&(tlen=(tlen=(tlen+=8)*(1+pos/string.length*2))>>3<<3,(extra=new Uint8Array(tlen)).set(target),target=extra),0==(4294967168&value))target[at++]=value;else{if(0==(4294965248&value))target[at++]=value>>6&31|192;else{if(0==(4294901760&value))target[at++]=value>>12&15|224;else{if(0!=(4292870144&value))continue;target[at++]=value>>18&7|240,target[at++]=value>>12&63|128}target[at++]=value>>6&63|128}target[at++]=63&value|128}}return target.slice(0,at)}function valuesToString(values,pos,ch){void 0===ch&&(ch=" ");for(var result="",i=pos=void 0===pos?0:pos;i<values.length;i++)pos<i&&(result+=ch),void 0===values[i]||null===values[i]?result+="null":"string"==typeof values[i]?result+=values[i]:"number"==typeof values[i]||"function"==typeof values[i].getFullYear?result+=values[i].toString():void 0!==values[i].cols&&"string"==typeof values[i].type&&"table"==values[i].type?result+="`"+JSON.stringify(values[i])+"`":result+=JSON.stringify(values[i]);return result=0<result.length?utf8_encode(result):result}function Vector2Array(obj){for(var arr=[],arrSize=obj.size(),i=0;i<arrSize;i++)arr.push(obj.get(i));return arr}function toNonExponential(value){var sign,e;return"number"!=typeof value&&(value=parseFloat(value),isNaN(value))?"":(value<0?(sign="-",value=Math.abs(value)):sign="",value<1?(e=parseInt(value.toString().split("e-")[1]))&&(value*=Math.pow(10,e-1),value="0."+new Array(e).join("0")+value.toString().substring(2)):(e=parseInt(value.toString().split("e+")[1]))&&(value=(value/=Math.pow(10,e))+new Array(e+1).join("0")),sign+value)}return run(),Module.talib=function(){function ReadDouble(p,idx){return getValue(p+4*idx,"double")}function ReadInt(p,idx){return getValue(p+4*idx,"i32")}function ReadStr(p,idx){return UTF8ToString(getValue(p+4*idx,"i32"))}function GetArr(arr,attr,isInteger){var ret=[],tmp=0;isInteger=void 0!==isInteger&&isInteger;for(var i=0;i<arr.length;i++)"number"!=typeof(tmp=arr[i])&&(tmp=arr[i][attr]),isInteger?ret.push(parseInt(tmp)):ret.push(tmp);var data=isInteger?new Uint8Array(new Int32Array(ret).buffer):new Uint8Array(new Float64Array(ret).buffer),ret=Module._malloc(data.length);return writeArrayToMemory(data,ret),ret}Module._TA_Initialize();function throwError(errCode){var retCodeInfo;if(0!==errCode)throw retCodeInfo=Module._malloc(8),TA_SetRetCodeInfo(errCode,retCodeInfo),errCode=ReadStr(retCodeInfo,0)+": "+ReadStr(retCodeInfo,1),Module._free(retCodeInfo),current_func+": "+errCode}var obj={help:function(n){return obj["h_"+n]()},list:[]},TA_GetInputParameterInfo=Module._TA_GetInputParameterInfo,TA_GetOptInputParameterInfo=Module._TA_GetOptInputParameterInfo,TA_GetOutputParameterInfo=Module._TA_GetOutputParameterInfo,TA_ParamHolderAlloc=Module._TA_ParamHolderAlloc,TA_ParamHolderFree=Module._TA_ParamHolderFree,TA_SetInputParamRealPtr=Module._TA_SetInputParamRealPtr,TA_SetInputParamIntegerPtr=Module._TA_SetInputParamIntegerPtr,TA_SetInputParamPricePtr=Module._TA_SetInputParamPricePtr,TA_SetOptInputParamReal=Module._TA_SetOptInputParamReal,TA_SetOptInputParamInteger=Module._TA_SetOptInputParamInteger,TA_SetOutputParamIntegerPtr=Module._TA_SetOutputParamIntegerPtr,TA_SetOutputParamRealPtr=Module._TA_SetOutputParamRealPtr,TA_CallFunc=Module._TA_CallFunc,TA_SetRetCodeInfo=Module._TA_SetRetCodeInfo,current_func="obj",funcCallback=addFunction(function(ptr){var name=ReadStr(ptr,0),group=ReadStr(ptr,1),hint=ReadStr(ptr,2),nbInput=(ReadInt(ptr,4),ReadInt(ptr,5));if(!(1<nbInput&&"OBV"!==name)){for(var nbOptInput=ReadInt(ptr,6),nbOutput=ReadInt(ptr,7),funcHandle=ReadInt(ptr,8),pInfo=Module._malloc(4),inputs=[],optInputs=[],outputs=[],i=0;i<nbInput;i++){throwError(TA_GetInputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);inputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2)})}for(i=0;i<nbOptInput;i++){throwError(TA_GetOptInputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);optInputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2),displayName:ReadStr(ptr,3),defaultValue:ReadDouble(ptr,6),hint:ReadStr(ptr,8)})}for(i=0;i<nbOutput;i++){throwError(TA_GetOutputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);outputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2)})}Module._free(pInfo),obj["h_"+name]=function(){for(var args=[],i=0;i<inputs.length;i++){var type=inputs[i].type,flags=inputs[i].flags,paramName=inputs[i].paramName;1===type?args.push(["Array[Real]",paramName]):2===type?args.push(["Array[Integer]",paramName]):0===type&&(type=[],1&flags&&type.push("Open"),2&flags&&type.push("High"),4&flags&&type.push("Low"),8&flags&&type.push("Close"),16&flags&&type.push("Volume"),32&flags&&type.push("OpenInterest"),64&flags&&type.push("Time"),args.push(["Records["+type.join(",")+"]",paramName]))}for(i=0;i<optInputs.length;i++){var optType="NA";0===optInputs[i].type?optType="RealRange":1===optInputs[i].type?optType="RealList":2===optInputs[i].type?optType="IntegerRange":3===optInputs[i].type&&(optType="IntegerList"),args.push([optType,optInputs[i].paramName,optInputs[i].defaultValue])}for(var rets=[],i=0;i<outputs.length;i++){var outType="Real";1===outputs[i].type&&(outType="Integer"),rets.push([outType,outputs[i].paramName])}return[name,args,rets,hint]},obj.list.push(name);for(var needArg=0,i=0;i<inputs.length;i++){var type=inputs[i].type,flags=inputs[i].flags;(1===type||2===type||0===type&&(1&flags&&needArg++,2&flags&&needArg++,4&flags&&needArg++,8&flags&&needArg++,16&flags))&&needArg++}obj[name]=function(records){var info={handle:funcHandle,name:current_func=name,needArg:needArg,hint:hint,group:group,inputs:inputs,optInputs:optInputs,outputs:outputs};if(void 0===records&&throwError(2),0===records.length){if(0===info.outputs.length)return[];for(var outputArr=[],i=0;i<info.outputs.length;i++)outputArr.push([]);return outputArr}var argPos=0,argv=arguments,moveStep="number"==typeof records[0]?1:0,allocatedParams=(1==moveStep&&arguments.length<info.needArg&&throwError(2),Module._malloc(4)),openPrice=(throwError(TA_ParamHolderAlloc(info.handle,allocatedParams)),null),highPrice=null,lowPrice=null,closePrice=null,volume=null,ints=[],paramsPtr=ReadInt(allocatedParams,0);Module._free(allocatedParams);for(var i=0;i<info.inputs.length;i++){var tmp,type=info.inputs[i].type,flags=info.inputs[i].flags;1===type?(closePrice||(closePrice=GetArr(argv[argPos],"Close"),argPos+=moveStep),throwError(TA_SetInputParamRealPtr(paramsPtr,i,closePrice))):2===type?(tmp=GetArr(argv[argPos],"Close",!0),argPos+=moveStep,ints.push(tmp),throwError(TA_SetInputParamIntegerPtr(paramsPtr,i,tmp))):0===type&&(1&flags&&(openPrice||(openPrice=GetArr(argv[argPos],"Open"),argPos+=moveStep)),2&flags&&(highPrice||(highPrice=GetArr(argv[argPos],"High"),argPos+=moveStep)),4&flags&&(lowPrice||(lowPrice=GetArr(argv[argPos],"Low"),argPos+=moveStep)),8&flags&&(closePrice||(closePrice=GetArr(argv[argPos],"Close"),argPos+=moveStep)),16&flags&&(volume||(volume=GetArr(argv[argPos],"Volume"),argPos+=moveStep)),throwError(TA_SetInputParamPricePtr(paramsPtr,i,openPrice,highPrice,lowPrice,closePrice,volume,null)))}for(0==moveStep&&argPos++,i=0;i<info.optInputs.length;i++)switch(v=argPos+i<arguments.length?arguments[i+argPos]:info.optInputs[i].defaultValue,info.optInputs[i].type){case 0:case 1:TA_SetOptInputParamReal(paramsPtr,i,v);break;case 2:case 3:TA_SetOptInputParamInteger(paramsPtr,i,v);break;default:throw"error"}outputArr=[];for(i=0;i<info.outputs.length;i++){var ptr=null;1===info.outputs[i].type?(ptr=Module._malloc(4*records.length),throwError(TA_SetOutputParamIntegerPtr(paramsPtr,i,ptr))):0===info.outputs[i].type&&(ptr=Module._malloc(8*records.length),throwError(TA_SetOutputParamRealPtr(paramsPtr,i,ptr))),outputArr.push(ptr)}var allocatedParams=Module._malloc(4),outNbElement=Module._malloc(4),beg=(TA_CallFunc(paramsPtr,0,records.length-1,allocatedParams,outNbElement),ReadInt(allocatedParams,0)),num=ReadInt(outNbElement,0),ret=(Module._free(allocatedParams),Module._free(outNbElement),[]);for(i=0;i<info.outputs.length;i++){ptr=outputArr[i];ret[i]=[];for(var v,j=0;j<records.length;j++)j<beg||num<=j-beg?ret[i].push(NaN):(1===info.outputs[i].type?v=ReadInt(ptr,j-beg):0===info.outputs[i].type&&(v=ReadDouble(ptr,2*(j-beg))),ret[i].push(v));Module._free(ptr)}for(throwError(TA_ParamHolderFree(paramsPtr)),openPrice&&Module._free(openPrice),highPrice&&Module._free(highPrice),lowPrice&&Module._free(lowPrice),closePrice&&Module._free(closePrice),volume&&Module._free(volume),i=0;i<ints.length;i++)Module._free(ints[i]);return 1===ret.length?ret[0]:ret}}},"vii");if(0!==ccall("TA_ForEachFunc","number",["pointer","number"],[funcCallback,0]))throw"error";return removeFunction(funcCallback),obj},Module.VMain=function(task){for(var exchanges=[],i=0;i<task.Exchanges.length;i++)exchanges[i]=function(eIdx){var self={},idx=eIdx;return self.cache=[],self.ct="",self.period=task.Options.Period,self.currency=Module.js_Exchange_GetCurrency(eIdx),self.maxBarLen=task.Exchanges[idx].MaxBarLen,self.lastRawJSON="",self.GetName=function(){return Module.js_Exchange_GetName(eIdx)},self.SetData=function(pair,detail){return"string"!=typeof detail&&(detail=JSON.stringify(detail)),Module.js_Exchange_SetData(eIdx,pair,detail)},self.GetPeriod=function(){return self.period/1e3},self.GetCurrency=function(){return self.currency},self.GetLabel=function(){return Module.js_Exchange_GetLabel(eIdx)},self.GetUSDCNY=function(){return Module.js_Exchange_GetUSDCNY(eIdx)},self.GetRate=function(){return Module.js_Exchange_GetRate(eIdx)},self.SetRate=function(n){return Module.js_Exchange_SetRate(eIdx,n=void 0===n?1:n)},self.SetCurrency=function(s){Module.js_Exchange_SetCurrency(eIdx,s),self.currency=Module.js_Exchange_GetCurrency(eIdx)},self.SetBase=function(s){return Module.js_Exchange_SetBase(eIdx,s)},self.GetBase=function(){return Module.js_Exchange_GetBase(eIdx)},self.SetTimeout=function(n){},self.IO=function(k,v){return void 0===v&&(v=1),"currency"==k?self.SetCurrency(v):Module.js_Exchange_IO(eIdx,k,v)},self.SetPrecision=function(a,b){Module.js_Exchange_SetPrecision(eIdx,a,b)},self.SetProxy=function(){},self.GetQuoteCurrency=function(){return Module.js_Exchange_GetQuoteCurrency(eIdx)},self.GetBaseCurrency=function(){return Module.js_Exchange_GetBaseCurrency(eIdx)},self.GetDepth=function(symbol){self.lastRawJSON="";var ret=Module.js_Exchange_GetDepth(eIdx,symbol||"");if(!ret)return null;for(var arr=Vector2Array(ret.Orders),d={Asks:[],Bids:[]},i=0;i<arr.length;i++)(i<ret.AsksLen?d.Asks:d.Bids).push(arr[i]);return d},self.GetTickers=function(){self.lastRawJSON="";var ret=Module.js_Exchange_GetTickers(eIdx);return ret?Vector2Array(ret):null},self.GetMarkets=function(){return JSON.parse(Module.js_Exchange_GetMarkets(eIdx))},self.GetTicker=function(symbol){return self.lastRawJSON="",Module.js_Exchange_GetTicker(eIdx,symbol||"")},self.GetData=function(pair,timeout,offset){"number"!=typeof timeout&&(timeout=6e4),"number"!=typeof offset&&(offset=0),self.lastRawJSON="";pair=Module.js_Exchange_GetData(eIdx,pair,timeout,offset);return 0<pair.Data.length?pair.Data=JSON.parse(pair.Data):pair.Data=null,pair},self.GetTrades=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetTrades(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.SetMaxBarLen=function(n){self.maxBarLen=n},self.GetRecords=function(symbol,period,limit){"number"==typeof symbol?(limit=period,period=symbol,symbol=""):void 0===symbol&&(symbol="",period=-1,limit=0),self.lastRawJSON="";symbol=Module.js_Exchange_GetRecords(eIdx,symbol||"",period=void 0!==period&&-1!=period?period:self.period/1e3,limit="number"!=typeof limit?0:limit);if(!symbol)return null;var records=Vector2Array(symbol),symbol=self.currency+"/"+self.ct+"/"+period.toString();if(void 0===self.cache[symbol])records.length>self.maxBarLen&&(records=records.slice(records.length-self.maxBarLen)),self.cache[symbol]=records;else for(var c=self.cache[symbol],preTime=0<c.length?c[c.length-1].Time:0,i=0;i<records.length;i++)records[i].Time==preTime&&0<c.length?c[c.length-1]=records[i]:records[i].Time>preTime&&(c.push(records[i]),preTime=c[c.length-1].Time,c.length>self.maxBarLen)&&c.shift();let bars=self.cache[symbol];return bars=0<limit&&bars.length>limit?bars.slice(bars.length-limit):bars},self.GetAccount=function(){return self.lastRawJSON="ctpAccount",Module.js_Exchange_GetAccount(eIdx)},self.GetRawJSON=function(){return"ctpAccount"!=self.lastRawJSON?self.lastRawJSON:Module.js_Exchange_GetCTPAccountJSON(eIdx)},self.Buy=function(price,amount){return self.lastRawJSON="",Module.js_Exchange_Buy(eIdx,price,amount,valuesToString(Array.prototype.slice.call(arguments),2))},self.Sell=function(price,amount){return self.lastRawJSON="",Module.js_Exchange_Sell(eIdx,price,amount,valuesToString(Array.prototype.slice.call(arguments),2))},self.CreateOrder=function(symbol,side,price,amount){return self.lastRawJSON="",Module.js_Exchange_CreateOrder(eIdx,symbol,side,price,amount,valuesToString(Array.prototype.slice.call(arguments),4))},self.Log=function(orderType,price,amount){Module.js_Exchange_Log(eIdx,orderType,price,2==orderType?0:amount,valuesToString(Array.prototype.slice.call(arguments),2==orderType?2:3))},self.GetOrders=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetOrders(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.GetHistoryOrders=function(symbol,since,limit){self.lastRawJSON="",void 0===limit&&(limit=0);symbol=Module.js_Exchange_GetHistoryOrders(eIdx,symbol||"",(since=void 0===since?0:since).toString(),limit);return symbol?Vector2Array(symbol):null},self.GetAssets=function(){self.lastRawJSON="";var ret=Module.js_Exchange_GetAssets(eIdx);return ret?Vector2Array(ret):null},self.GetOrder=function(orderId){return self.lastRawJSON="",Module.js_Exchange_GetOrder(eIdx,orderId)},self.CancelOrder=function(orderId){return self.lastRawJSON="",Module.js_Exchange_CancelOrder(eIdx,orderId,valuesToString(Array.prototype.slice.call(arguments),1))},self.SetDirection=function(s){return Module.js_Exchange_SetDirection(eIdx,s)},self.SetMarginLevel=function(symbol,marginLevel){var tmp;return"number"==typeof symbol&&(tmp=marginLevel||"",marginLevel=symbol,symbol=tmp),Module.js_Exchange_SetMarginLevel(eIdx,symbol,marginLevel)},self.SetContractType=function(symbol){var r=Module.js_Exchange_SetContractType(eIdx,symbol);return"string"==typeof r?(self.ct=symbol,JSON.parse(r)):null},self.GetContractType=function(){return self.ct},self.GetPosition=self.GetPositions=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetPositions(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.Go=function(){var args=Array.prototype.slice.call(arguments),ret=self[args[0]].apply(self,args.slice(1));return{wait:function(){return ret}}},self}(i);var gApis={kvdb:{}},__realDate=Date,__cRetryDelay=3e3,runtime=(gApis.RDate=__realDate,gApis.Benchmark=Module.js_Benchmark,gApis._T=function(a,b){return"[trans]"+("string"==typeof b?a+"|"+b:a)+"[/trans]"},gApis._D=function(date,fmt){void 0===fmt&&(fmt="yyyy-MM-dd hh:mm:ss"),"number"==typeof date?date=new __realDate(date):void 0===date&&(date=new __realDate(Module.js_UnixNano()/1e6));var y=date.getFullYear(),yy=(y%100).toString();1==yy.length&&(yy="0"+yy);var M=(M="0"+(date.getMonth()+1)).substring(M.length-2),d=(d="0"+date.getDate()).substring(d.length-2),h=(h="0"+date.getHours()).substring(h.length-2),m=(m="0"+date.getMinutes()).substring(m.length-2),date=(date="0"+date.getSeconds()).substring(date.length-2);return fmt.replace("yyyy",y).replace("MM",M).replace("dd",d).replace("hh",h).replace("mm",m).replace("ss",date).replace("yy",yy)},gApis.Unix=function(){return Module.js_Unix()},gApis.UnixNano=function(){return Module.js_UnixNano()},gApis.Sleep=function(n){Module.js_Sleep(n)},gApis.Log=function(){Module.js_Log(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogError=function(){Module.js_LogError(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogStatus=function(){Module.js_LogStatus(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogProfit=function(profit){Module.js_LogProfit(profit,valuesToString(Array.prototype.slice.call(arguments),1))},gApis.LogReset=function(keep){Module.js_LogReset(keep=void 0===keep?0:keep)},gApis.EnableLog=function(flag){Module.js_EnableLog(flag=void 0===flag?!0:flag)},gApis.LogProfitReset=function(keep){Module.js_LogProfitReset(keep=void 0===keep?0:keep)},gApis.Date=function(s){return void 0===s&&(s=Module.js_UnixNano()/1e6),new __realDate(s)},gApis.Date.UTC=__realDate.UTC,gApis.Date.parse=__realDate.parse,gApis.Date.now=function(){return Module.js_UnixNano()/1e6},gApis._Cross=function(arr1,arr2){if(arr1.length!==arr2.length)throw"cross array length not equal";for(var n=0,i=arr1.length-1;0<=i&&"number"==typeof arr1[i]&&"number"==typeof arr2[i];i--)if(arr1[i]<arr2[i]){if(0<n)break;n--}else{if(!(arr1[i]>arr2[i]))break;if(n<0)break;n++}return n},gApis._N=function(v,precision){"number"!=typeof precision&&(precision=4);var v=parseFloat(v.toFixed(Math.max(10,precision+5))),s=toNonExponential(v).split(".");return!(0<=precision&&(s.length<2||s[1].length<=precision))&&((s=v<0)&&(v=-v),precision=Math.pow(10,precision),v=Math.floor(v*precision)/precision,s)&&0!=v?-v:v},gApis._C=function(method){for(var r;!(r=method.apply(this,Array.prototype.slice.call(arguments).slice(1)));)gApis.Sleep(__cRetryDelay);return r},gApis._CDelay=function(n){0<n&&(__cRetryDelay=n)},gApis.GetPid=function(){return 1},gApis.GetOS=function(){return"linux/amd64"},gApis.GetLastError=function(){return Module.js_GetLastError()},gApis.SetErrorFilter=function(s){},gApis.MD5=function(s){return Module.js_MD5(s)},gApis.UUID=function(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)},gApis.GetCommand=function(){return""},gApis.GetMeta=function(){return""},gApis.Mail=function(){return!0},gApis.Mail_Go=function(){return!0},gApis.EventLoop=function(){gApis.LogError("sandbox not support EventLoop")},gApis.Dial=function(){gApis.LogError("sandbox not support Dial")},gApis.DBExec=function(){gApis.LogError("sandbox not support DBExec")},gApis.Encode=function(){gApis.LogError("sandbox not support Encode")},gApis.HttpQuery=function(url,data,cookies,headers,isReturnHeader,isAsync){null==cookies&&(cookies=""),null==headers&&(headers=""),void 0===isReturnHeader&&(isReturnHeader=!1);var ret=Module.js_HttpQuery(url);return isAsync?{wait:function(){return ret}}:ret},gApis.JSONParse=function(s){return JSON.parse(s)},gApis.StrDecode=function(s){gApis.LogError("sandbox not support StrDecode")},gApis.IsVirtual=function(){return!0},gApis.EnableLogLocal=function(){},gApis.LogVacuum=function(){},gApis.Version=function(){return"3.6"},gApis._G=function(k,v){if(void 0===k)return 1;if(null==k)gApis.kvdb={};else{if(k=k.toLowerCase(),void 0===v)return void 0===gApis.kvdb[k]?null:gApis.kvdb[k];null==v?delete gApis.kvdb[k]:gApis.kvdb[k]=v}},gApis.Chart=function(js){var self={update:function(cfg){Module.js_Chart_New(utf8_encode(JSON.stringify(cfg)))},add:function(seriesIdx,d,replaceId){var arr=[];"number"!=typeof seriesIdx?arr=seriesIdx:(arr=[seriesIdx,d],void 0!==replaceId&&arr.push(replaceId)),Module.js_Chart_Add(utf8_encode(JSON.stringify(arr)))},reset:function(reverse){Module.js_Chart_Reset("number"!=typeof reverse?0:reverse)}};return self.update(js),self},gApis.KLineChart=function(options){(options=void 0===options?{}:options).__isCandle=!0;function newPlot(shape){return void 0===shape.overlay&&(shape.overlay=scope.overlay),"shape"!=shape.type&&"bgcolor"!=shape.type&&"barcolor"!=shape.type&&(shape.title&&!scope.runtime.titles[shape.title]||(shape.title="<"+(shape.title||"plot")+"_"+scope.runtime.count.toString()+">"),scope.runtime.count+=1,shape.title)&&(scope.runtime.titles[shape.title]=!0),shape}var scope={chart:gApis.Chart(options),bar:{},overlay:options.overlay||!1,preTime:0,runtime:{plots:[],signals:[],titles:{},count:0}};return scope.register=function(name,args,pfn){var dic={},names=[];args.forEach(function(s,i){Array.isArray(s)?(names.push(s[0]),dic[s[0]]={pos:i,val:s[1]}):(names.push(s),dic[s]={pos:i})}),scope[name]=function(){if(!(scope.bar.Time<scope.preTime)){var argv={};for(k in dic)void 0!==dic[k].val&&(argv[k]=dic[k].val);for(var i=0;i<arguments.length;i++)if(i==arguments.length-1&&"object"==typeof arguments[i])for(var k in arguments[i])void 0!==dic[k]&&(argv[k]=arguments[i][k]);else void 0!==dic[names[i]]&&(argv[names[i]]=arguments[i]);return pfn(argv)}}},scope.begin=function(bar){scope.bar=bar},scope.reset=function(remain){scope.chart.reset(remain),scope.preTime=0},scope.close=function(){var data;scope.bar.Time<scope.preTime||(data={timestamp:scope.bar.Time,open:scope.bar.Open,high:scope.bar.High,low:scope.bar.Low,close:scope.bar.Close,volume:scope.bar.Volume},0<scope.runtime.plots.length&&(data.runtime||(data.runtime={}),data.runtime.plots=scope.runtime.plots),0<scope.runtime.signals.length&&(data.runtime||(data.runtime={}),data.runtime.signals=scope.runtime.signals),scope.preTime==scope.bar.Time?scope.chart.add(0,data,-1):scope.chart.add(0,data),scope.preTime=scope.bar.Time,scope.runtime.plots=[],scope.runtime.signals=[],scope.runtime.titles={},scope.runtime.count=0)},scope.register("plot",[["series",NaN],"title","color","linewidth",["style","line"],"trackprice",["histbase",0],["offset",0],["join",!1],"editable","show_last",["display","all"],"overlay"],function(argv,idx){if(!isNaN(argv.series))return scope.runtime.plots.push(newPlot({series:argv.series,overlay:argv.overlay,title:argv.title,join:argv.join,color:argv.color,histbase:argv.histbase,type:argv.style,lineWidth:argv.linewidth,display:argv.display,offset:argv.offset})),scope.runtime.plots.length-1}),scope.register("barcolor",["color","offset","editable","show_last","title",["display","all"]],function(argv,idx){"string"==typeof argv.color&&"all"==argv.display&&scope.runtime.plots.push({type:"barcolor",title:argv.title,color:argv.color,offset:argv.offset,showLast:argv.show_last,display:argv.display})}),scope.register("plotarrow",["series","title",["colorup","#00ff00"],["colordown","#ff0000"],["offset",0],["minheight",5],["maxheight",100],["editable",!0],"show_last",["display","all"],"overlay"],function(argv){"all"!=argv.display||isNaN(argv.series)||scope.runtime.plots.push(newPlot({series:argv.series,title:argv.title,colorup:argv.colorup,colordown:argv.colordown,offset:argv.offset,minheight:argv.minheight,maxheight:argv.maxheight,showLast:argv.show_last,type:"shape",style:"arrow",display:argv.display,overlay:argv.overlay}))}),scope.register("hline",["price","title","color",["linestyle","dashed"],"linewidth","editable",["display","all"],"overlay"],function(argv){return scope.runtime.plots.push(newPlot({title:argv.title,price:argv.price,overlay:argv.overlay,color:argv.color,type:"hline",lineStyle:argv.linestyle,lineWidth:argv.linewidth,display:argv.display})),scope.runtime.plots.length-1}),scope.register("bgcolor",["color","offset","editable","show_last","title",["display","all"],"overlay"],function(argv){"string"==typeof argv.color&&"all"==argv.display&&scope.runtime.plots.push(newPlot({title:argv.title,overlay:argv.overlay,color:argv.color,type:"bgcolor",showLast:argv.show_last,offset:argv.offset}))}),scope.register("plotchar",["series","title","char",["location","abovebar"],"color","offset","text","textcolor","editable",["size","auto"],"show_last","display","overlay"],function(argv){"absolute"!=argv.location&&!argv.series||"absolute"==argv.location&&isNaN(argv.series)||!argv.char||scope.runtime.plots.push(newPlot({overlay:argv.overlay,type:"shape",style:"char",char:argv.char,series:argv.series,location:argv.location,color:argv.color,offset:argv.offset,size:argv.size,text:argv.text,textColor:argv.textcolor}))}),scope.register("plotshape",["series","title","style",["location","abovebar"],"color","offset","text","textcolor","editable",["size","auto"],"show_last","display","overlay"],function(argv){"absolute"!=argv.location&&!argv.series||"absolute"==argv.location&&isNaN(argv.series)||scope.runtime.plots.push(newPlot({type:"shape",overlay:argv.overlay,title:argv.title,size:argv.size,style:argv.style,series:argv.series,location:argv.location,color:argv.color,offset:argv.offset,text:argv.text,textColor:argv.textcolor}))}),scope.register("plotcandle",["open","high","low","close","title","color","wickcolor","editable","show_last","bordercolor",["display","all"],"overlay"],function(argv){"all"==argv.display&&scope.runtime.plots.push(newPlot({price:argv.high,open:argv.open,high:argv.high,low:argv.low,close:argv.close,title:argv.title,color:argv.color,wickColor:argv.wickcolor,showLast:argv.show_last,borderColor:argv.bordercolor,type:"candle",display:argv.display,overlay:argv.overlay}))}),scope.register("fill",["plot1","plot2","color","title","editable","show_last","fillgaps",["display","all"]],function(argv){var dst;0<=argv.plot1&&0<=argv.plot2&&argv.plot1<scope.runtime.plots.length&&argv.plot2<scope.runtime.plots.length&&"all"==argv.display&&void 0!==(dst=scope.runtime.plots[argv.plot1])&&(void 0===dst.fill&&(dst.fill=[]),dst.fill.push({value:scope.runtime.plots[argv.plot2].series,color:argv.color,showLast:argv.show_last}))}),scope.register("signal",["direction","price","qty","id"],function(argv){var task={id:argv.id||argv.direction,qty:argv.qty,avgPrice:argv.price};"buy"==argv.direction||"long"==argv.direction?task.direction="long":"sell"==argv.direction||"short"==argv.direction?task.direction="short":"closesell"==argv.direction||"closeshort"==argv.direction?(task.direction="close",task.closeDirection="short"):"closebuy"!=argv.direction&&"closelong"!=argv.direction||(task.direction="close",task.closeDirection="long"),(task.direction||task.closeDirection)&&scope.runtime.signals.push(task)}),scope},gApis.$={},gApis.ORDER_STATE_PENDING=0,gApis.ORDER_STATE_CLOSED=1,gApis.ORDER_STATE_CANCELED=2,gApis.ORDER_STATE_UNKNOWN=3,gApis.ORDER_TYPE_BUY=0,gApis.ORDER_TYPE_SELL=1,gApis.ORDER_OFFSET_OPEN=0,gApis.ORDER_OFFSET_CLOSE=1,gApis.PD_LONG=0,gApis.PD_SHORT=1,gApis.PD_LONG_YD=2,gApis.PD_SHORT_YD=3,gApis.LOG_TYPE_BUY=0,gApis.LOG_TYPE_SELL=1,gApis.LOG_TYPE_CANCEL=2,gApis.LOG_TYPE_ERROR=3,gApis.LOG_TYPE_PROFIT=4,gApis.LOG_TYPE_LOG=5,gApis.LOG_TYPE_RESTART=6,gApis.PERIOD_M1=60,gApis.PERIOD_M3=180,gApis.PERIOD_M5=300,gApis.PERIOD_M15=900,gApis.PERIOD_M30=1800,gApis.PERIOD_H1=3600,gApis.PERIOD_H2=7200,gApis.PERIOD_H4=14400,gApis.PERIOD_H6=21600,gApis.PERIOD_H12=43200,gApis.PERIOD_D1=86400,gApis.PERIOD_D3=259200,gApis.PERIOD_W1=604800,gApis.exchanges=exchanges,gApis.exchange=exchanges[0],gApis.talib=Module.talib(),gApis.TA=TAInstance(function(name){Module.js_LogTA(name,valuesToString(Array.prototype.slice.call(arguments),1,","))}),null),getMapLines=(gApis.__runtime__=function(obj){runtime=obj},function(source){var endPos,rawTxt,mapLinesPos=source.indexOf("//# sourceMappingObj=");return-1!=mapLinesPos?(rawTxt="",rawTxt=-1==(endPos=source.indexOf("\n",mapLinesPos+1))?source.slice(mapLinesPos+"//# sourceMappingObj=".length):source.slice(mapLinesPos+"//# sourceMappingObj=".length,endPos),JSON.parse(rawTxt)):[]}),countLines=function(s){for(var count=1,i=0;i<s.length;i++)"\n"==s[i]&&count++;return count},tpls=task.Code,scope={},k;for(k in gApis)scope[k]=gApis[k];for(var fullSource="",sourceMapObj=[],i=0;i<tpls.length;i++){var tpl=tpls[i],argsLine="",argDic={},suffix=(tpl[1].forEach(function(pair){argsLine+="var "+pair[0]+" = "+JSON.stringify(pair[1])+";",argDic[pair[0]]=pair[1]}),argsLine+="var __arguments = "+JSON.stringify(argDic)+";","\n;if(typeof(init)==='function')init();"),fileName=tpl[2];if(i==tpls.length-1){if(fileName="__FILE__",void 0!==Module.__ret__){scope.__arguments=argDic,tpl[1].forEach(function(pair){scope[pair[0]]=pair[1]}),Module.__ret__.scope=scope,Module.__ret__.Join=Module.js_Join;continue}suffix+=";;main()\nif(typeof(onexit)==='function'){onexit()}"}sourceMapObj.push({baseLine:countLines(fullSource),codeLine:countLines(tpl[0]),fileName:fileName,mapLines:getMapLines(tpl[0])}),fullSource+="(function(){"+argsLine+tpl[0]+suffix+"})();\n"}var evalScope=function(locals,source){with(locals)eval(source)},errMsg,stacks;try{evalScope(scope,fullSource)}catch(err){"EOF"!=err&&(errMsg=err.toString(),stacks=[errMsg],-1==errMsg.indexOf("line:")&&err.stack&&(console.log("\nStacktrace:"),console.log("===================="),console.log(err.stack),err.stack.split("\n").forEach(function(stackLine){var posSearch=stackLine.indexOf("(eval at evalScope ");if(0<posSearch){var pos=stackLine.indexOf("<anonymous>:",posSearch),posSearch=(0<pos&&(e=stackLine.indexOf(")",pos)),stackLine.substring(0,posSearch).split("\n")),stackLine=stackLine.substring(pos+"<anonymous>:".length,e).split(":");if(0<stackLine.length){for(var vLine=parseInt(stackLine[0]),fileName=null,mapLines=[],pIndex=0;pIndex<sourceMapObj.length;pIndex++)if(vLine>=sourceMapObj[pIndex].baseLine&&vLine<sourceMapObj[pIndex].baseLine+sourceMapObj[pIndex].codeLine){fileName=sourceMapObj[pIndex].fileName,mapLines=sourceMapObj[pIndex].mapLines,vLine-=sourceMapObj[pIndex].baseLine-1;break}if(fileName){for(var pItem=0;pItem<mapLines.length;pItem++)if(vLine>=mapLines[pItem][0]&&vLine<=mapLines[pItem][1]){vLine-=mapLines[pItem][2];break}stacks.push(posSearch[posSearch.length-1]+"("+fileName+":"+vLine.toString()+")")}}}})),Module.js_LogError(valuesToString([stacks.join("\n")])))}try{void 0!==task.Step&&task.Step||Module.js_Close(JSON.stringify(runtime))}catch(e){}},Module.VTask=function(task,httpCache,httpGet,callBack,onEnd,retScope){void 0!==retScope&&(Module.__ret__=retScope),void 0!==httpCache&&httpCache||(httpCache={});var retScope=addFunction(function(a,b,c,d){var jsString,a=UTF8ToString(a),a=(void 0!==httpCache[a]?jsString=httpCache[a]:(jsString=httpGet(a),httpCache[a]=jsString),lengthBytesUTF8(jsString)+1),ptr=_malloc(a);return stringToUTF8(jsString,ptr,a+1),setValue(b,ptr,"i32"),setValue(c,a,"i32"),setValue(d,1,"i32"),0},"iiiii"),progressCallback=addFunction(function(st){callBack(JSON.parse(UTF8ToString(st)))},"vi");ccall("backtest","number",["string","string","pointer","pointer"],[JSON.stringify(task),null,retScope,progressCallback]),"function"==typeof onEnd&&onEnd()},moduleArg}})(),fs,os,process,_,math,Decimal,crypto,httpGet,_session,toUnix,fmtTime,toHTML,pdObj,htmlResult,__m;function md5(text){return crypto.createHash("md5").update(text).digest("hex")}function notify(msgType,msg){var msg=Buffer.from(msg),h=Buffer.allocUnsafe(8);h.writeUInt32BE(msgType,0),h.writeUInt32BE(msg.length,4),_session.write(Buffer.concat([h,msg]))}"object"==typeof exports&&"object"==typeof module?module.exports=VBacktest:"function"==typeof define&&define.amd&&define([],()=>VBacktest),"undefined"!=typeof self&&void 0!==self.onmessage?self.onmessage=function(event){var event=event.data,task=event[0],httpCache=event[1],lastProgress=0,lastSummary="";void 0===VBacktest&&importScripts("env.js","decimal.min.js","underscore-min.js","math.min.js",-1==task.Engine.indexOf("wasm")?"sandbox_cpp.js":"sandbox_cpp_wasm.js"),VBacktest().VTask(task,httpCache,function(path){var r=XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");return r.open("GET",path,!1),r.send(null),r.responseText},function(st){var nowProgress;void 0!==st.TaskStatus&&1==st.TaskStatus&&(st.httpCache=httpCache),1==st.TaskStatus?self.postMessage({ret:st}):(nowProgress=st.Progress.toFixed(1))==lastProgress&&lastSummary===st.statusStr||(lastProgress=nowProgress,lastSummary=st.statusStr,self.postMessage({ret:st}))})}:(fs=require("fs"),os=require("os"),process=require("process"),_=this._,math=this.math,Decimal=this.Decimal,crypto=require("crypto"),httpGet=function(url){var tmpCache=os.tmpdir()+"/cache",tmpCache=(fs.existsSync(tmpCache)||fs.mkdirSync(tmpCache),tmpCache+"/botvs_kline_"+md5(url));return fs.existsSync(tmpCache)?fs.readFileSync(tmpCache,"utf-8"):((url=require("sync-request")("GET",url).getBody("utf8"))&&-1!==url.indexOf(",")&&fs.writeFileSync(tmpCache,url,"utf-8"),url)},"undefined"!=typeof s?(_session=s,VBacktest().VTask(__cfg__,null,httpGet,function(st){notify(st.TaskStatus,JSON.stringify(st))},function(){try{_session.end()}catch(e){}})):(toUnix=function(s){var n=parseInt(new Date(s).getTime()/1e3);return-1==s.indexOf(" ")&&(n-=28800),n},fmtTime=function(date,fmt){void 0===fmt&&(fmt="yyyy-MM-dd hh:mm:ss");var y=date.getFullYear(),yy=(y%100).toString();1==yy.length&&(yy="0"+yy);var M=(M="0"+(date.getMonth()+1)).substring(M.length-2),d=(d="0"+date.getDate()).substring(d.length-2),h=(h="0"+date.getHours()).substring(h.length-2),m=(m="0"+date.getMinutes()).substring(m.length-2),date=(date="0"+date.getSeconds()).substring(date.length-2);return fmt.replace("yyyy",y).replace("MM",M).replace("dd",d).replace("hh",h).replace("mm",m).replace("ss",date).replace("yy",yy)},toHTML=function(data){var html="<table><tr><td>";for(i in data.columns)html+="<td>"+data.columns[i]+"</td>";html+="</tr>";for(var rows=[],i=0;i<data.rows.length;i++){for(var rowSkip="",row=(5<=i&&i<data.rows.length-5&&(i=data.rows.length-5,rowSkip="<tr><td>...</td>"),"<tr><td>"+data.index[i]+"</td>"),j=0;j<data.columns.length;j++)0<rowSkip.length&&(rowSkip+="<td>...</td>"),row+="<td>"+data.rows[i][j]+"</td>";0<rowSkip.length&&rows.push(rowSkip+"</tr>"),rows.push(row+"</tr>")}return html=(html+=rows.join("")+"</table>")+("<p>"+data.rows.length+" rows x "+data.columns.length+" columns<p>")},pdObj=function(data){var p=this;p.index=data.index,p.columns=data.columns,data.columns.forEach(function(c){p[c]=[]}),data.rows.forEach(function(row){row.forEach(function(f,idx){idx<data.columns.length&&p[data.columns[idx]].push(f)})}),p._toHtml=function(){return toHTML(data)}},__ctx.exports.get_bars=function(symbol,unit,start,end,count){void 0===count&&(count=1e3),"string"==typeof(unit=void 0===unit?"1d":unit)&&(ec=unit[unit.length-1],unit=parseInt(unit.slice(0,unit.length-1)),"d"==ec?unit*=1440:"h"==ec?unit*=60:"s"==ec&&(unit/=60));var key,ec=parseInt((new Date).getTime()/1e3),params=(void 0!==end&&(ec=toUnix(end)),void 0!==start?(ts_from=toUnix(start),void 0===end&&(ec=ts_from+100*unit*(count+10))):void 0===end?(ts_from=0,ts_end=0):ts_from=ec-100*unit*(count+10),{symbol:symbol,resolution:unit,from:ts_from,to:ec,size:count}),arr=[];for(key in params)arr.push(encodeURIComponent(key)+"="+encodeURIComponent(params[key]));for(var data=JSON.parse(httpGet("https://q.fmz.com/chart/history?"+arr.join("&"))),rows=[],index=[],i=0;i<data.length;i++)index.push(fmtTime(new Date(1e3*data[i][0]))),rows.push(data[i].slice(1,data[i].length));return new pdObj({index:index,rows:rows,columns:["open","high","low","close","volume"]})},htmlResult=function(s){var s=JSON.parse(s),pnl=[],index=[];return s.Snapshots.forEach(function(ele){var acc=ele[1][0];pnl.push([acc.PnL,100*acc.Utilization]),index.push(fmtTime(new Date(ele[0])))}),columns=["PnL","Utilization(%)"],new pdObj({columns:columns,index:index,rows:pnl})},__m=VBacktest(),void 0===global.talib&&(global.talib=__m.talib(),global.TA=__m.TA,global.plot=function(data,layout){void 0!==data.index&&void 0!==data.columns&&(arr=[],data.columns.forEach(function(c){arr.push({name:c,x:data.index,y:data[c]})}),data=arr),Array.isArray(data)&&0<data.length&&"number"==typeof data[0]&&(obj={x:[],y:data},data.forEach(function(ele,idx){obj.x.push(idx+1)}),data=[obj]),void 0===layout&&(layout={});var arr,obj,timestamp=(new Date).getTime(),timestamp=["<div class='plotly-plot'>","<div id='notebook-plot-"+timestamp+"'></div>","<script>","function plot(){","Plotly.plot('notebook-plot-"+timestamp+"',",JSON.stringify(data),",",JSON.stringify(layout),",",JSON.stringify({displaylogo:!1}),");","}","if(window.Plotly){","plot();","}else{","var head = document.head || document.getElementsByTagName('head')[0];","var s = document.createElement('script');","s.charset='utf-8';","s.src = 'https://www.fmz.com/pkg/plotly-latest.min.js';","s.type = 'text/javascript';","s.async = false;","s.onreadystatechange = s.onload = plot;","head.appendChild(s);","}","<\/script>","</div>"].join("");$$.html(timestamp)}),__ctx.exports.VCtx=function(obj){function periodToMs(s,def){var tmp;return s.length<2||(tmp=parseInt(s.slice(0,s.length-1)),"d"==(s=s[s.length-1])?def=6e4*tmp*60*24:"m"==s?def=6e4*tmp:"h"==s&&(def=36e4*tmp)),def}function dicGet(obj,k,v){return void 0!==obj[k]?obj[k]:v}var k,period=periodToMs(obj.period,36e5),basePeriod=36e5,exchanges=("string"==typeof obj.basePeriod?basePeriod=periodToMs(obj.basePeriod,basePeriod):864e5==period?basePeriod=36e5:36e5==period?basePeriod=18e5:18e5==period?basePeriod=9e5:9e5==period?basePeriod=3e5:3e5==period&&(basePeriod=6e4),[]),feeDef={Huobi:[150,200],OKX:[150,200],Binance:[150,200],Futures_BitMEX:[8,10],Futures_OKX:[30,30],Futures_HuobiDM:[30,30],Futures_CTP:[25,25],Futures_XTP:[30,130]},isCNY=!1,period=(obj.exchanges.forEach(function(e){var arr=e.currency.toUpperCase().split("_"),fee=(1==arr.length&&arr.push(-1!=e.eid.indexOf("CTP")?"CNY":"USD"),[200,200]),v=e.fee,fee=void 0!==v?[1e3*v[0],1e3*v[1]]:feeDef[e.eid]||[200,200];cfg={Balance:dicGet(e,"balance",1e4),BaseCurrency:arr[0],BasePeriod:basePeriod,DepthDeep:5,DepthAmount:20,FaultTolerant:0,PreBarLen:1e3,FeeDenominator:5,FeeMaker:fee[0],FeeTaker:fee[1],FeeMin:dicGet(e,"feeMin",0),Id:e.eid,Label:e.eid,QuoteCurrency:arr[1],SlipPoint:0,Stocks:dicGet(e,"stocks",3)},"Futures_CTP"==e.eid||"Futures_XTP"==e.eid?(cfg.DepthDeep=1,isCNY=!0):"Futures_OKX"!=e.eid&&"Futures_HuobiDM"!=e.eid&&"Bitfinex"!=e.eid&&"Binance"!=e.eid&&("Futures_BitMEX"==e.eid?15!=(v=cfg.BasePeriod/6e4)&&30!=v||(cfg.BasePeriod=3e5):e.eid.indexOf("Futures")),exchanges.push(cfg)}),(options={DataServer:obj.dataServer||(isCNY?"https://q.youquant.com":"https://q.fmz.com"),MaxChartLogs:800,MaxProfitLogs:800,MaxRuntimeLogs:800,NetDelay:200,Period:period,RetFlags:189,UpdatePeriod:5e3}).TimeBegin=toUnix(obj.start),options.TimeEnd=toUnix(obj.end),86400),obj=options.TimeEnd-options.TimeBegin,ctx=(obj/3600<=2?period=60:obj/86400<=2?period=300:obj/86400<30&&(period=3600),options.SnapshotPeriod=1e3*period,options.RetFlags|=256,{});for(k in __m.VTask({Code:[["function main() {}",[],"main"]],Exchanges:exchanges,Options:options,Step:!0},null,httpGet,function(st){},function(){},ctx),ctx.scope)"Date"!=k&&(global[k]=ctx.scope[k]);var realJoin=ctx.Join;return ctx.Join=function(report){var r=realJoin();return report?htmlResult(r):r},ctx}));