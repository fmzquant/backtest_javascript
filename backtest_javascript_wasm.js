"undefined"==typeof __ctx&&(__ctx={}),__ctx.INITIAL_MEMORY=335544320,"undefined"!=typeof module&&(__ctx.module=module),"undefined"!=typeof exports&&(__ctx.exports=exports),"undefined"==typeof module&&"undefined"==typeof exports||(module=void 0,exports=void 0,print=console.log),!function(n){"use strict";function e(n){var e,i,t,r=n.length-1,s="",o=n[0];if(0<r){for(s+=o,e=1;e<r;e++)t=n[e]+"",(i=Sn-t.length)&&(s+=l(i)),s+=t;o=n[e],(i=Sn-(t=o+"").length)&&(s+=l(i))}else if(0===o)return"0";for(;o%10==0;)o/=10;return s+o}function i(n,e,i){if(n!==~~n||n<e||i<n)throw Error(yn+n)}function t(n,e,i,t){for(var r,u,s=n[0];10<=s;s/=10)--e;return--e<0?(e+=Sn,r=0):(r=Math.ceil((e+1)/Sn),e%=Sn),s=qn(10,Sn-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),i<4&&99999==u||3<i&&49999==u||5e4==u||0==u):(i<4&&u+1==s||3<i&&u+1==s/2)&&(n[r+1]/s/100|0)==qn(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),(t||i<4)&&9999==u||!t&&3<i&&4999==u):((t||i<4)&&u+1==s||!t&&3<i&&u+1==s/2)&&(n[r+1]/s/1e3|0)==qn(10,e-3)-1}function r(n,e,i){for(var t,r,s=[0],o=0,u=n.length;o<u;){for(r=s.length;r--;)s[r]*=e;for(s[0]+=mn.indexOf(n.charAt(o++)),t=0;t<s.length;t++)i-1<s[t]&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i)}return s.reverse()}function o(n,e,i,t){var r,s,o,u,c,h,a,l,d=n.constructor;n:if(null!=e){if(!(a=n.d))return n;for(r=1,u=a[0];10<=u;u/=10)r++;if((s=e-r)<0)s+=Sn,o=e,c=(h=a[l=0])/qn(10,r-o-1)%10|0;else if(l=Math.ceil((s+1)/Sn),(u=a.length)<=l){if(!t)break n;for(;u++<=l;)a.push(0);h=c=0,o=(s%=Sn)-Sn+(r=1)}else{for(h=u=a[l],r=1;10<=u;u/=10)r++;c=(o=(s%=Sn)-Sn+r)<0?0:h/qn(10,r-o-1)%10|0}if(t=t||e<0||void 0!==a[l+1]||(o<0?h:h%qn(10,r-o-1)),c=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):5<c||5==c&&(4==i||t||6==i&&(0<s?0<o?h/qn(10,r-o):0:a[l-1])%10&1||i==(n.s<0?8:7)),e<1||!a[0])return a.length=0,c?(e-=n.e+1,a[0]=qn(10,(Sn-e%Sn)%Sn),n.e=-e||0):a[0]=n.e=0,n;if(0==s?(a.length=l,u=1,l--):(a.length=l+1,u=qn(10,Sn-s),a[l]=0<o?(h/qn(10,r-o)%qn(10,o)|0)*u:0),c)for(;;){if(0==l){for(s=1,o=a[0];10<=o;o/=10)s++;for(o=a[0]+=u,u=1;10<=o;o/=10)u++;s!=u&&(n.e++,a[0]==Rn)&&(a[0]=1);break}if(a[l]+=u,a[l]!=Rn)break;a[l--]=0,u=1}for(s=a.length;0===a[--s];)a.pop()}return En&&(n.e>d.maxE?(n.d=null,n.e=NaN):n.e<d.minE&&(n.e=0,n.d=[0])),n}function u(n,i,t){var r,s,o,u;return n.isFinite()?(s=n.e,u=(o=e(n.d)).length,i?(t&&0<(r=t-u)?o=o.charAt(0)+"."+o.slice(1)+l(r):1<u&&(o=o.charAt(0)+"."+o.slice(1)),o=o+(n.e<0?"e":"e+")+n.e):s<0?(o="0."+l(-s-1)+o,t&&0<(r=t-u)&&(o+=l(r))):u<=s?(o+=l(s+1-u),t&&0<(r=t-s-1)&&(o=o+"."+l(r))):((r=s+1)<u&&(o=o.slice(0,r)+"."+o.slice(r)),t&&0<(r=t-u)&&(s+1===u&&(o+="."),o+=l(r))),o):v(n)}function c(n,e){for(var i=1,t=n[0];10<=t;t/=10)i++;return i+e*Sn-1}function f(n,e,i){if(Un<e)throw En=!0,i&&(n.precision=i),Error(An);return o(new n(vn),e,1,!0)}function h(n,e,i){if(_n<e)throw Error(An);return o(new n(Nn),e,i,!0)}function a(n){var e=n.length-1,i=e*Sn+1;if(e=n[e]){for(;e%10==0;e/=10)i--;for(e=n[0];10<=e;e/=10)i++}return i}function l(n){for(var e="";n--;)e+="0";return e}function d(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/Sn+4);for(En=!1;;){if(i%2&&A((s=s.times(e)).d,o)&&(r=!0),0===(i=On(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break}A((e=e.times(e)).d,o)}return En=!0,s}function g(n){return 1&n.d[n.d.length-1]}function p(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break}r[i](t)&&(r=t)}return r}function w(n,i){var r,s,u,c,f,h,a,l=0,d=0,g=0,p=n.constructor,w=p.rounding,m=p.precision;if(!n.d||!n.d[0]||17<n.e)return new p(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(a=null==i?(En=!1,m):i,h=new p(.03125);-2<n.e;)n=n.times(h),g+=5;for(a+=s=Math.log(qn(2,g))/Math.LN10*2+5|0,r=c=f=new p(1),p.precision=a;;){if(c=o(c.times(n),a,1),r=r.times(++d),e((h=f.plus(Tn(c,r,a,1))).d).slice(0,a)===e(f.d).slice(0,a)){for(u=g;u--;)f=o(f.times(f),a,1);if(null!=i)return p.precision=m,f;if(!(l<3&&t(f.d,a-s,w,l)))return o(f,p.precision=m,w,En=!0);p.precision=a+=10,r=c=h=new p(1),d=0,l++}f=h}}function m(n,i){var r,s,u,c,h,a,l,d,g,p,w,v=1,x=n,b=x.d,E=x.constructor,M=E.rounding,y=E.precision;if(x.s<0||!b||!b[0]||!x.e&&1==b[0]&&1==b.length)return new E(b&&!b[0]?-1/0:1!=x.s?NaN:b?0:x);if(g=null==i?(En=!1,y):i,E.precision=g+=10,s=(r=e(b)).charAt(0),!(Math.abs(c=x.e)<15e14))return d=f(E,g+2,y).times(c+""),x=m(new E(s+"."+r.slice(1)),g-10).plus(d),E.precision=y,null==i?o(x,y,M,En=!0):x;for(;s<7&&1!=s||1==s&&3<r.charAt(1);)s=(r=e((x=x.times(n)).d)).charAt(0),v++;for(c=x.e,1<s?(x=new E("0."+r),c++):x=new E(s+"."+r.slice(1)),l=h=x=Tn((p=x).minus(1),x.plus(1),g,1),w=o(x.times(x),g,1),u=3;;){if(h=o(h.times(w),g,1),e((d=l.plus(Tn(h,new E(u),g,1))).d).slice(0,g)===e(l.d).slice(0,g)){if(l=l.times(2),0!==c&&(l=l.plus(f(E,g+2,y).times(c+""))),l=Tn(l,new E(v),g,1),null!=i)return E.precision=y,l;if(!t(l.d,g-10,M,a))return o(l,E.precision=y,M,En=!0);E.precision=g+=10,d=h=x=Tn(p.minus(1),p.plus(1),g,1),w=o(x.times(x),g,1),u=a=1}l=d,u+=2}}function v(n){return String(n.s*n.s/0)}function N(n,e){var i,t,r;for(0<(t=(e=-1<(i=e.indexOf("."))?e.replace(".",""):e).search(/e/i))?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++);for(r=e.length;48===e.charCodeAt(r-1);--r);if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%Sn,i<0&&(t+=Sn),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=Sn;t<r;)n.d.push(+e.slice(t,t+=Sn));e=e.slice(t),t=Sn-e.length}else t-=r;for(;t--;)e+="0";n.d.push(+e),En&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function x(n,e){var i,t,s,o,u,f,h,a;if("Infinity"===e||"NaN"===e)return+e||(n.s=NaN),n.e=NaN,n.d=null,n;if(Dn.test(e))i=16,e=e.toLowerCase();else if(Fn.test(e))i=2;else{if(!Zn.test(e))throw Error(yn+e);i=8}for(o=(e=0<(o=e.search(/p/i))?(h=+e.slice(o+1),e.substring(2,o)):e.slice(2)).indexOf("."),t=n.constructor,(u=0<=o)&&(o=(f=(e=e.replace(".","")).length)-o,s=d(t,new t(i),o,2*o)),o=e=(a=r(e,i,Rn)).length-1;0===a[o];--o)a.pop();return o<0?new t(0*n.s):(n.e=c(a,e),n.d=a,En=!1,u&&(n=Tn(n,s,4*f)),h&&(n=n.times((Math.abs(h)<54?Math:xn).pow(2,h))),En=!0,n)}function E(n,e,i,t,r){var s,o,u,c,h=n.precision,a=Math.ceil(h/Sn);for(En=!1,c=i.times(i),u=new n(t);;){if(o=Tn(u.times(c),new n(e++*e++),h,1),u=r?t.plus(o):t.minus(o),t=Tn(o.times(c),new n(e++*e++),h,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;);if(-1==s)break}s=u,u=t,t=o,o=s,0}return En=!0,o.d.length=a+1,o}function M(n,e){var i,t=e.s<0,n=h(n,n.precision,1),s=n.times(.5);if((e=e.abs()).lte(s))return gn=t?4:1,e;if((i=e.divToInt(n)).isZero())gn=t?3:2;else{if((e=e.minus(i.times(n))).lte(s))return gn=g(i)?t?2:3:t?4:1,e;gn=g(i)?t?1:4:t?3:2}return e.minus(n).abs()}function y(n,e,t,s){var o,c,f,a,l,d,g,p,w=n.constructor,m=void 0!==t;if(m?(i(t,1,wn),void 0===s?s=w.rounding:i(s,0,8)):(t=w.precision,s=w.rounding),n.isFinite()){for(m?(o=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):o=e,0<=(f=(d=u(n)).indexOf("."))&&(d=d.replace(".",""),(p=new w(1)).e=d.length-f,p.d=r(u(p),10,o),p.e=p.d.length),c=a=(g=r(d,10,o)).length;0==g[--a];)g.pop();if(g[0]){if(f<0?c--:((n=new w(n)).d=g,n.e=c,g=(n=Tn(n,p,t,s,0,o)).d,c=n.e,l=ln),f=g[t],w=o/2,l=l||void 0!==g[t+1],l=s<4?(void 0!==f||l)&&(0===s||s===(n.s<0?3:2)):w<f||f===w&&(4===s||l||6===s&&1&g[t-1]||s===(n.s<0?8:7)),g.length=t,l)for(;++g[--t]>o-1;)g[t]=0,t||(++c,g.unshift(1));for(a=g.length;!g[a-1];--a);for(f=0,d="";f<a;f++)d+=mn.charAt(g[f]);if(m){if(1<a)if(16==e||8==e){for(f=16==e?4:3,--a;a%f;a++)d+="0";for(a=(g=r(d,o,e)).length;!g[a-1];--a);for(f=1,d="1.";f<a;f++)d+=mn.charAt(g[f])}else d=d.charAt(0)+"."+d.slice(1);d=d+(c<0?"p":"p+")+c}else if(c<0){for(;++c;)d="0"+d;d="0."+d}else if(++c>a)for(c-=a;c--;)d+="0";else c<a&&(d=d.slice(0,c)+"."+d.slice(c))}else d=m?"0p+0":"0";d=(16==e?"0x":2==e?"0b":8==e?"0o":"")+d}else d=v(n);return n.s<0?"-"+d:d}function A(n,e){return n.length>e&&(n.length=e,1)}function O(n){return new this(n).abs()}function q(n){return new this(n).acos()}function F(n){return new this(n).acosh()}function D(n,e){return new this(n).plus(e)}function Z(n){return new this(n).asin()}function P(n){return new this(n).asinh()}function R(n){return new this(n).atan()}function S(n){return new this(n).atanh()}function L(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?h(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=h(this,s,1).times(.5)).s=n.s:i=e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Tn(n,e,s,1)),e=h(this,s,1),this.precision=t,this.rounding=r,n.s<0?i.minus(e):i.plus(e)):this.atan(Tn(n,e,s,1)):(i=h(this,s,1).times(0<e.s?.25:.75)).s=n.s:i=new this(NaN),i}function U(n){return new this(n).cbrt()}function _(n){return o(n=new this(n),n.e+1,2)}function k(n){if(!n||"object"!=typeof n)throw Error(Mn+"Object expected");for(var i,t,r=["precision",1,wn,"rounding",0,8,"toExpNeg",-pn,0,"toExpPos",0,pn,"maxE",0,pn,"minE",-pn,0,"modulo",0,9],e=0;e<r.length;e+=3)if(void 0!==(t=n[i=r[e]])){if(!(On(t)===t&&r[e+1]<=t&&t<=r[e+2]))throw Error(yn+i+": "+t);this[i]=t}if(n.hasOwnProperty(i="crypto"))if(void 0===(t=n[i]))this[i]=t;else{if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(yn+i+": "+t);this[i]=!(!t||!bn||!bn.getRandomValues&&!bn.randomBytes)}return this}function T(n){return new this(n).cos()}function C(n){return new this(n).cosh()}function H(n,e){return new this(n).div(e)}function B(n){return new this(n).exp()}function V(n){return o(n=new this(n),n.e+1,3)}function j(n){var e,i,t,s;if("string"!=typeof n||!n)throw Error(yn+n);if(t=n.length,s=mn.indexOf(n.charAt(0)),1===t)return new this(81<s?[-1/0,1/0,NaN][s-82]:40<s?-(s-41):s);if(64&s)e=(i=16&s)?(7&s)-3:(15&s)-7,t=1;else{if(2===t)return new this(2816<=(s=88*s+mn.indexOf(n.charAt(1)))?-(s-2816)-41:s+41);if(i=32&s,!(31&s))return n=r(n.slice(1),88,10).join(""),new this(i?"-"+n:n);t=(e=15&s)+1,e=1===e?mn.indexOf(n.charAt(1)):2===e?88*mn.indexOf(n.charAt(1))+mn.indexOf(n.charAt(2)):+r(n.slice(1,t),88,10).join(""),16&s&&(e=-e)}return n=(n=r(n.slice(t),88,10).join(""))+"e"+(e=e-n.length+1),new this(i?"-"+n:n)}function $(){var n,e,i=new this(0);for(En=!1,n=0;n<arguments.length;)if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return En=!0,new this(1/0);i=e}return En=!0,i.sqrt()}function J(n){return new this(n).ln()}function W(n,e){return new this(n).log(e)}function z(n){return new this(n).log(2)}function G(n){return new this(n).log(10)}function K(){return p(this,arguments,"lt")}function Q(){return p(this,arguments,"gt")}function X(n,e){return new this(n).mod(e)}function Y(n,e){return new this(n).mul(e)}function nn(n,e){return new this(n).pow(e)}function en(n){var e,t,r,s,o=0,u=new this(1),c=[];if(void 0===n?n=this.precision:i(n,1,wn),r=Math.ceil(n/Sn),!1===this.crypto)for(;o<r;)c[o++]=1e7*Math.random()|0;else if(bn&&bn.getRandomValues)for(e=bn.getRandomValues(new Uint32Array(r));o<r;)429e7<=(s=e[o])?e[o]=bn.getRandomValues(new Uint32Array(1))[0]:c[o++]=s%1e7;else if(bn&&bn.randomBytes){for(e=bn.randomBytes(r*=4);o<r;)214e7<=(s=e[o]+(e[o+1]<<8)+(e[o+2]<<16)+((127&e[o+3])<<24))?bn.randomBytes(4).copy(e,o):(c.push(s%1e7),o+=4);o=r/4}else{if(this.crypto)throw Error(Mn+"crypto unavailable");for(;o<r;)c[o++]=1e7*Math.random()|0}for(r=c[--o],n%=Sn,r&&n&&(s=qn(10,Sn-n),c[o]=(r/s|0)*s);0===c[o];o--)c.pop();if(o<0)c=[t=0];else{for(t=-1;0===c[0];t-=Sn)c.shift();for(r=1,s=c[0];10<=s;s/=10)r++;r<Sn&&(t-=Sn-r)}return u.e=t,u.d=c,u}function tn(n){return o(n=new this(n),n.e+1,this.rounding)}function rn(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN}function sn(n){return new this(n).sin()}function on(n){return new this(n).sinh()}function un(n){return new this(n).sqrt()}function cn(n,e){return new this(n).sub(e)}function fn(n){return new this(n).tan()}function hn(n){return new this(n).tanh()}function an(n){return o(n=new this(n),n.e+1,1)}var ln,dn,gn,pn=9e15,wn=1e9,mn="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%()*+,-./:;=?@[]^_`{|}~",vn="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",Nn="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",xn={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-pn,maxE:pn,crypto:void 0},bn=void 0!==crypto?crypto:null,En=!0,Mn="[DecimalError] ",yn=Mn+"Invalid argument: ",An=Mn+"Precision limit exceeded",On=Math.floor,qn=Math.pow,Fn=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,Dn=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,Zn=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,Pn=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,Rn=1e7,Sn=7,Un=vn.length-1,_n=Nn.length-1,kn={},Tn=(kn.absoluteValue=kn.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),o(n)},kn.ceil=function(){return o(new this.constructor(this),this.e+1,2)},kn.comparedTo=kn.cmp=function(n){var e,i,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(f=o.length)<(s=u.length)?f:s;e<i;++e)if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;return f===s?0:s<f^c<0?1:-1},kn.cosine=kn.cos=function(){var n,e,i=this,t=i.constructor;return i.d?i.d[0]?(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+Sn,t.rounding=1,i=function(n,e){var i,r=(r=e.d.length)<32?(i=Math.ceil(r/3),Math.pow(4,-i).toString()):(i=16,"2.3283064365386962890625e-10");n.precision+=i,e=E(n,1,e.times(r),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1)}return n.precision-=i,e}(t,M(t,i)),t.precision=n,t.rounding=e,o(2==gn||3==gn?i.neg():i,n,e,!0)):new t(1):new t(NaN)},kn.cubeRoot=kn.cbrt=function(){var n,i,t,r,s,u,c,f,h,a,l=this,d=l.constructor;if(!l.isFinite()||l.isZero())return new d(l);for(En=!1,(u=l.s*Math.pow(l.s*l,1/3))&&Math.abs(u)!=1/0?r=new d(u.toString()):(t=e(l.d),(u=((n=l.e)-t.length+1)%3)&&(t+=1==u||-2==u?"0":"00"),u=Math.pow(t,1/3),n=On((n+1)/3)-(n%3==(n<0?-1:2)),(r=new d(t=u==1/0?"5e"+n:(t=u.toExponential()).slice(0,t.indexOf("e")+1)+n)).s=l.s),c=(n=d.precision)+3;;)if(a=(h=(f=r).times(f).times(f)).plus(l),r=Tn(a.plus(l).times(f),a.plus(h),c+2,1),e(f.d).slice(0,c)===(t=e(r.d)).slice(0,c)){if("9999"!=(t=t.slice(c-3,c+1))&&(s||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(o(r,n+1,1),i=!r.times(r).times(r).eq(l));break}if(!s&&(o(f,n+1,0),f.times(f).times(f).eq(l))){r=f;break}c+=4,s=1}return En=!0,o(r,n,d.rounding,i)},kn.decimalPlaces=kn.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-On(this.e/Sn))*Sn,n=e[n])for(;n%10==0;n/=10)i--;i<0&&(i=0)}return i},kn.dividedBy=kn.div=function(n){return Tn(this,new this.constructor(n))},kn.dividedToIntegerBy=kn.divToInt=function(n){var i=this.constructor;return o(Tn(this,new i(n),0,1,1),i.precision,i.rounding)},kn.equals=kn.eq=function(n){return 0===this.cmp(n)},kn.floor=function(){return o(new this.constructor(this),this.e+1,3)},kn.greaterThan=kn.gt=function(n){return 0<this.cmp(n)},kn.greaterThanOrEqualTo=kn.gte=function(n){n=this.cmp(n);return 1==n||0===n},kn.hyperbolicCosine=kn.cosh=function(){var n,i,t,u=(s=this).constructor,c=new u(1);if(!s.isFinite())return new u(s.s?1/0:NaN);if(s.isZero())return c;i=u.precision,t=u.rounding,u.precision=i+Math.max(s.e,s.sd())+4,u.rounding=1;for(var f,r=(r=s.d.length)<32?(n=Math.ceil(r/3),Math.pow(4,-n).toString()):(n=16,"2.3283064365386962890625e-10"),s=E(u,1,s.times(r),new u(1),!0),h=n,a=new u(8);h--;)f=s.times(s),s=c.minus(f.times(a.minus(f.times(a))));return o(s,u.precision=i,u.rounding=t,!0)},kn.hyperbolicSine=kn.sinh=function(){var e,i,t,s=(r=this).constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=E(s,2,r,r,!0);else for(var u,n=16<(n=1.4*Math.sqrt(t))?16:0|n,r=E(s,2,r=r.times(Math.pow(5,-n)),r,!0),c=new s(5),f=new s(16),h=new s(20);n--;)u=r.times(r),r=r.times(c.plus(u.times(f.times(u).plus(h))));return o(r,s.precision=e,s.rounding=i,!0)},kn.hyperbolicTangent=kn.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Tn(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s)},kn.inverseCosine=kn.acos=function(){var e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?h(i,r,s):new i(0):new i(NaN):e.isZero()?h(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),t=h(i,r+4,s).times(.5),i.precision=r,i.rounding=s,t.minus(e))},kn.inverseHyperbolicCosine=kn.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,En=!1,i=i.times(i).minus(1).sqrt().plus(i),En=!0,t.precision=n,t.rounding=e,i.ln()):new t(i)},kn.inverseHyperbolicSine=kn.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,En=!1,i=i.times(i).plus(1).sqrt().plus(i),En=!0,t.precision=n,t.rounding=e,i.ln())},kn.inverseHyperbolicTangent=kn.atanh=function(){var n,e,t,r=this,s=r.constructor;return r.isFinite()?0<=r.e?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?o(new s(r),n,e,!0):(s.precision=t=t-r.e,r=Tn(r.plus(1),new s(1).minus(r),t+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN)},kn.inverseSine=kn.asin=function(){var e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((e=h(s,i+4,t).times(.5)).s=r.s,e):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)))},kn.inverseTangent=kn.atan=function(){var n,e,i,t,r,s,u,c,f,a=this,l=a.constructor,d=l.precision,g=l.rounding;if(a.isFinite()){if(a.isZero())return new l(a);if(a.abs().eq(1)&&d+4<=_n)return(u=h(l,d+4,g).times(.25)).s=a.s,u}else{if(!a.s)return new l(NaN);if(d+4<=_n)return(u=h(l,d+4,g).times(.5)).s=a.s,u}for(l.precision=c=d+10,l.rounding=1,n=i=Math.min(28,c/Sn+2|0);n;--n)a=a.div(a.times(a).plus(1).sqrt().plus(1));for(En=!1,e=Math.ceil(c/Sn),t=1,f=a.times(a),u=new l(a),r=a;-1!==n;)if(r=r.times(f),s=u.minus(r.div(t+=2)),r=r.times(f),void 0!==(u=s.plus(r.div(t+=2))).d[e])for(n=e;u.d[n]===s.d[n]&&n--;);return i&&(u=u.times(2<<i-1)),En=!0,o(u,l.precision=d,l.rounding=g,!0)},kn.isFinite=function(){return!!this.d},kn.isInteger=kn.isInt=function(){return!!this.d&&On(this.e/Sn)>this.d.length-2},kn.isNaN=function(){return!this.s},kn.isNegative=kn.isNeg=function(){return this.s<0},kn.isPositive=kn.isPos=function(){return 0<this.s},kn.isZero=function(){return!!this.d&&0===this.d[0]},kn.lessThan=kn.lt=function(n){return this.cmp(n)<0},kn.lessThanOrEqualTo=kn.lte=function(n){return this.cmp(n)<1},kn.logarithm=kn.log=function(n){var i,r,s,u,c,h,a,l,d=this,g=d.constructor,p=g.precision,w=g.rounding;if(null==n)n=new g(10),i=!0;else{if(r=(n=new g(n)).d,n.s<0||!r||!r[0]||n.eq(1))return new g(NaN);i=n.eq(10)}if(r=d.d,d.s<0||!r||!r[0]||d.eq(1))return new g(r&&!r[0]?-1/0:1!=d.s?NaN:r?0:1/0);if(i)if(1<r.length)c=!0;else{for(u=r[0];u%10==0;)u/=10;c=1!==u}if(En=!1,h=m(d,a=p+5),s=i?f(g,a+10):m(n,a),t((l=Tn(h,s,a,1)).d,u=p,w))do{if(h=m(d,a+=10),s=i?f(g,a+10):m(n,a),l=Tn(h,s,a,1),!c){+e(l.d).slice(u+1,u+15)+1==1e14&&(l=o(l,p+1,0));break}}while(t(l.d,u+=10,w));return En=!0,o(l,p,w)},kn.minus=kn.sub=function(n){var e,i,t,r,s,u,f,h,a,d,g,p=this,w=p.constructor;if(n=new w(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new w(n.d||p.s!==n.s?p:NaN):n=new w(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(a=p.d,g=n.d,f=w.precision,h=w.rounding,!a[0]||!g[0]){if(g[0])n.s=-n.s;else{if(!a[0])return new w(3===h?-0:0);n=new w(p)}return En?o(n,f,h):n}if(i=On(n.e/Sn),p=On(p.e/Sn),a=a.slice(),s=p-i){for(u=((d=s<0)?(e=a,s=-s,g):(e=g,i=p,a)).length,(t=Math.max(Math.ceil(f/Sn),u)+2)<s&&(s=t,e.length=1),e.reverse(),t=s;t--;)e.push(0);e.reverse()}else{for((d=(t=a.length)<(u=g.length))&&(u=t),t=0;t<u;t++)if(a[t]!=g[t]){d=a[t]<g[t];break}s=0}for(d&&(e=a,a=g,g=e,n.s=-n.s),u=a.length,t=g.length-u;0<t;--t)a[u++]=0;for(t=g.length;s<t;){if(a[--t]<g[t]){for(r=t;r&&0===a[--r];)a[r]=Rn-1;--a[r],a[t]+=Rn}a[t]-=g[t]}for(;0===a[--u];)a.pop();for(;0===a[0];a.shift())--i;return a[0]?(n.d=a,n.e=c(a,i),En?o(n,f,h):n):new w(3===h?-0:0)},kn.modulo=kn.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?o(new t(i),t.precision,t.rounding):(En=!1,9==t.modulo?(e=Tn(i,n.abs(),0,3,1)).s*=n.s:e=Tn(i,n,0,t.modulo,1),e=e.times(n),En=!0,i.minus(e))},kn.naturalExponential=kn.exp=function(){return w(this)},kn.naturalLogarithm=kn.ln=function(){return m(this)},kn.negated=kn.neg=function(){var n=new this.constructor(this);return n.s=-n.s,o(n)},kn.plus=kn.add=function(n){var e,i,t,r,s,u,f,h,a,l,d=this,g=d.constructor;if(n=new g(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new g(n.d||d.s===n.s?d:NaN)):n=new g(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(a=d.d,l=n.d,f=g.precision,h=g.rounding,a[0]&&l[0]){if(s=On(d.e/Sn),t=On(n.e/Sn),a=a.slice(),r=s-t){for((u=(u=(r<0?(i=a,r=-r,l):(i=l,t=s,a)).length)<(s=Math.ceil(f/Sn))?s+1:u+1)<r&&(r=u,i.length=1),i.reverse();r--;)i.push(0);i.reverse()}for((u=a.length)-(r=l.length)<0&&(r=u,i=l,l=a,a=i),e=0;r;)e=(a[--r]=a[r]+l[r]+e)/Rn|0,a[r]%=Rn;for(e&&(a.unshift(e),++t),u=a.length;0==a[--u];)a.pop();n.d=a,n.e=c(a,t)}else l[0]||(n=new g(d));return En?o(n,f,h):n},kn.precision=kn.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(yn+n);return i.d?(e=a(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e},kn.round=function(){var n=this,e=n.constructor;return o(new e(n),n.e+1,e.rounding)},kn.sine=kn.sin=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+Sn,t.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return E(n,2,e,e);i=16<(i=1.4*Math.sqrt(t))?16:0|i,e=E(n,2,e=e.times(Math.pow(5,-i)),e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;)r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));return e}(t,M(t,i)),t.precision=n,t.rounding=e,o(2<gn?i.neg():i,n,e,!0)):new t(NaN)},kn.squareRoot=kn.sqrt=function(){var n,i,t,r,s,u,c=this,f=c.d,h=c.e,a=c.s,l=c.constructor;if(1!==a||!f||!f[0])return new l(!a||a<0&&(!f||f[0])?NaN:f?c:1/0);for(En=!1,r=0==(a=Math.sqrt(+c))||a==1/0?(((i=e(f)).length+h)%2==0&&(i+="0"),a=Math.sqrt(i),h=On((h+1)/2)-(h<0||h%2),new l(i=a==1/0?"1e"+h:(i=a.toExponential()).slice(0,i.indexOf("e")+1)+h)):new l(a.toString()),t=(h=l.precision)+3;;)if(r=(u=r).plus(Tn(c,u,t+2,1)).times(.5),e(u.d).slice(0,t)===(i=e(r.d)).slice(0,t)){if("9999"!=(i=i.slice(t-3,t+1))&&(s||"4999"!=i)){+i&&(+i.slice(1)||"5"!=i.charAt(0))||(o(r,h+1,1),n=!r.times(r).eq(c));break}if(!s&&(o(u,h+1,0),u.times(u).eq(c))){r=u;break}t+=4,s=1}return En=!0,o(r,h,l.rounding,n)},kn.tangent=kn.tan=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+10,t.rounding=1,(i=i.sin()).s=1,i=Tn(i,new t(1).minus(i.times(i)).sqrt(),n+10,0),t.precision=n,t.rounding=e,o(2==gn||4==gn?i.neg():i,n,e,!0)):new t(NaN)},kn.times=kn.mul=function(n){var e,t,r,s,u,f,h,a,l=this,d=l.constructor,g=l.d,p=(n=new d(n)).d;if(n.s*=l.s,!(g&&g[0]&&p&&p[0]))return new d(!n.s||g&&!g[0]&&!p||p&&!p[0]&&!g?NaN:g&&p?0*n.s:n.s/0);for(l=On(l.e/Sn)+On(n.e/Sn),(h=g.length)<(a=p.length)&&(s=g,g=p,p=s,u=h,h=a,a=u),s=[],t=u=h+a;t--;)s.push(0);for(t=a;0<=--t;){for(e=0,r=h+t;t<r;)f=s[r]+p[t]*g[r-t-1]+e,s[r--]=f%Rn|0,e=f/Rn|0;s[r]=(s[r]+e)%Rn|0}for(;!s[--u];)s.pop();for(e?++l:s.shift(),t=s.length;!s[--t];)s.pop();return n.d=s,n.e=c(s,l),En?o(n,d.precision,d.rounding):n},kn.toBinary=function(n,e){return y(this,2,n,e)},kn.toDecimalPlaces=kn.toDP=function(n,e){var r=this.constructor,t=new r(this);return void 0===n?t:(i(n,0,wn),void 0===e?e=r.rounding:i(e,0,8),o(t,n+t.e+1,e))},kn.toExponential=function(n,e){var r=this,s=r.constructor,s=void 0===n?u(r,!0):(i(n,0,wn),void 0===e?e=s.rounding:i(e,0,8),u(r=o(new s(r),n+1,e),!0,n+1));return r.isNeg()&&!r.isZero()?"-"+s:s},kn.toFixed=function(n,e){var s=this,c=s.constructor,e=void 0===n?u(s):(i(n,0,wn),void 0===e?e=c.rounding:i(e,0,8),u(c=o(new c(s),n+s.e+1,e),!1,n+c.e+1));return s.isNeg()&&!s.isZero()?"-"+e:e},kn.toFraction=function(n){var i,t,r,s,o,c,f,h,u,d,p=this,w=p.d,m=p.constructor;if(!w)return new m(p);if(h=t=new m(1),r=f=new m(0),o=(i=new m(r)).e=a(w)-p.e-1,i.d[0]=qn(10,(u=o%Sn)<0?Sn+u:u),null==n)n=0<o?i:h;else{if(!(c=new m(n)).isInt()||c.lt(h))throw Error(yn+c);n=c.gt(i)?0<o?i:h:c}for(En=!1,c=new m(e(w)),u=m.precision,m.precision=o=w.length*Sn*2;d=Tn(c,i,0,1,1),1!=(s=t.plus(d.times(r))).cmp(n);)t=r,r=s,s=h,h=f.plus(d.times(s)),f=s,s=i,i=c.minus(d.times(s)),c=s;return s=Tn(n.minus(t),r,0,1,1),f=f.plus(s.times(h)),t=t.plus(s.times(r)),f.s=h.s=p.s,w=Tn(h,r,o,1).minus(p).abs().cmp(Tn(f,t,o,1).minus(p).abs())<1?[h,r]:[f,t],m.precision=u,En=!0,w},kn.toHexadecimal=kn.toHex=function(n,e){return y(this,16,n,e)},kn.toJSON=function(){var n,i,t,s,o,u,c,h=this,a=h.s<0;if(!h.d)return mn.charAt(h.s?a?82:83:84);if(i=h.e,1===h.d.length&&i<4&&0<=i&&(u=h.d[0])<2857)return u<41?mn.charAt(a?u+41:u):(u-=41,a&&(u+=2816),mn.charAt(s=u/88|0)+mn.charAt(u-88*s));if(h=e(h.d),c="",!a&&i<=8&&-7<=i)s=64+i+7;else if(a&&i<=4&&-3<=i)s=80+i+3;else if(h.length===i+1)s=32*a;else if(s=32*a+16*(i<0),(i=Math.abs(i))<88)s+=1,c=mn.charAt(i);else if(i<7744)s+=2,c=mn.charAt(u=i/88|0)+mn.charAt(i-88*u);else for(s+=o=(n=r(String(i),10,88)).length,t=0;t<o;t++)c+=mn.charAt(n[t]);for(c=mn.charAt(s)+c,o=(n=r(h,10,88)).length,t=0;t<o;t++)c+=mn.charAt(n[t]);return c},kn.toNearest=function(n,e){var r=(t=this).constructor,t=new r(t);if(null==n){if(!t.d)return t;n=new r(1),e=r.rounding}else{if(n=new r(n),void 0!==e&&i(e,0,8),!t.d)return n.s?t:n;if(!n.d)return n.s&&(n.s=t.s),n}return n.d[0]?(En=!1,t=Tn(t,n,0,e=e<4?[4,5,7,8][e]:e,1).times(n),En=!0,o(t)):(n.s=t.s,t=n),t},kn.toNumber=function(){return+this},kn.toOctal=function(n,e){return y(this,8,n,e)},kn.toPower=kn.pow=function(n){var i,r,s,u,c,f,a=this,l=a.constructor,g=+(n=new l(n));if(!(a.d&&n.d&&a.d[0]&&n.d[0]))return new l(qn(+a,g));if((a=new l(a)).eq(1))return a;if(s=l.precision,c=l.rounding,n.eq(1))return o(a,s,c);if(i=On(n.e/Sn),r=n.d.length-1,f=a.s,r<=i){if((r=g<0?-g:g)<=9007199254740991)return u=d(l,a,r,s),n.s<0?new l(1).div(u):o(u,s,c)}else if(f<0)return new l(NaN);return f=f<0&&1&n.d[Math.max(i,r)]?-1:1,(i=0!=(r=qn(+a,g))&&isFinite(r)?new l(r+"").e:On(g*(Math.log("0."+e(a.d))/Math.LN10+a.e+1)))>l.maxE+1||i<l.minE-1?new l(0<i?f/0:0):(En=!1,l.rounding=a.s=1,r=Math.min(12,(i+"").length),(u=t((u=o(u=w(n.times(m(a,s+r)),s),s+5,1)).d,s,c)&&+e((u=o(w(n.times(m(a,(i=s+10)+r)),i),i+5,1)).d).slice(s+1,s+15)+1==1e14?o(u,s+1,0):u).s=f,En=!0,o(u,s,l.rounding=c))},kn.toPrecision=function(n,e){var r=this,s=r.constructor,e=void 0===n?u(r,r.e<=s.toExpNeg||r.e>=s.toExpPos):(i(n,1,wn),void 0===e?e=s.rounding:i(e,0,8),u(r=o(new s(r),n,e),n<=r.e||r.e<=s.toExpNeg,n));return r.isNeg()&&!r.isZero()?"-"+e:e},kn.toSignificantDigits=kn.toSD=function(n,e){var r=this.constructor;return void 0===n?(n=r.precision,e=r.rounding):(i(n,1,wn),void 0===e?e=r.rounding:i(e,0,8)),o(new r(this),n,e)},kn.toString=function(){var n=this,e=n.constructor,e=u(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?"-"+e:e},kn.truncated=kn.trunc=function(){return o(new this.constructor(this),this.e+1,1)},kn.valueOf=function(){var n=this,e=n.constructor,e=u(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?"-"+e:e},function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;)t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;return r&&n.unshift(r),n}function e(n,e,i,t){var r,s;if(i!=t)s=t<i?1:-1;else for(r=s=0;r<i;r++)if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break}return s}function i(n,e,i,t){for(var r=0;i--;)n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];for(;!n[0]&&1<n.length;)n.shift()}return function(t,r,s,u,c,f){var h,a,l,d,g,p,w,m,N,x,b,E,M,y,A,O,q,F,D,Z=t.constructor,P=t.s==r.s?1:-1,R=t.d,S=r.d;if(!(R&&R[0]&&S&&S[0]))return new Z(t.s&&r.s&&(R?!S||R[0]!=S[0]:S)?R&&0==R[0]||!S?0*P:P/0:NaN);for(a=f?(g=1,t.e-r.e):(f=Rn,On(t.e/(g=Sn))-On(r.e/g)),F=S.length,O=R.length,N=(P=new Z(P)).d=[],l=0;S[l]==(R[l]||0);l++);if(S[l]>(R[l]||0)&&a--,null==s?(M=s=Z.precision,u=Z.rounding):M=c?s+(t.e-r.e)+1:s,M<0)N.push(1),p=!0;else{if(M=M/g+2|0,l=0,1==F){for(S=S[d=0],M++;(l<O||d)&&M--;l++)y=d*f+(R[l]||0),N[l]=y/S|0,d=y%S|0;p=d||l<O}else{for(1<(d=f/(S[0]+1)|0)&&(S=n(S,d,f),R=n(R,d,f),F=S.length,O=R.length),A=F,b=(x=R.slice(0,F)).length;b<F;)x[b++]=0;for((D=S.slice()).unshift(0),q=S[0],S[1]>=f/2&&++q;d=0,(h=e(S,x,F,b))<0?(E=x[0],1<(d=(E=F!=b?E*f+(x[1]||0):E)/q|0)?1==(h=e(w=n(S,d=f<=d?f-1:d,f),x,m=w.length,b=x.length))&&(d--,i(w,F<m?D:S,m,f)):(0==d&&(h=d=1),w=S.slice()),(m=w.length)<b&&w.unshift(0),i(x,w,b,f),-1==h&&(h=e(S,x,F,b=x.length))<1&&(d++,i(x,F<b?D:S,b,f)),b=x.length):0===h&&(d++,x=[0]),N[l++]=d,h&&x[0]?x[b++]=R[A]||0:(x=[R[A]],b=1),(A++<O||void 0!==x[0])&&M--;);p=void 0!==x[0]}N[0]||N.shift()}if(1==g)P.e=a,ln=p;else{for(l=1,d=N[0];10<=d;d/=10)l++;P.e=l+a*g-1,o(P,c?s+P.e+1:s,u,p)}return P}}()),vn=new(xn=function I(n){function e(n){var i,t,r,s=this;if(!(s instanceof e))return new e(n);if(!(n instanceof(s.constructor=e))){if("number"==(r=typeof n)){if(0===n)return s.s=1/n<0?-1:1,s.e=0,void(s.d=[0]);if(n<0?(n=-n,s.s=-1):s.s=1,n===~~n&&n<1e7){for(i=0,t=n;10<=t;t/=10)i++;return s.e=i,void(s.d=[n])}return 0*n!=0?(n||(s.s=NaN),s.e=NaN,void(s.d=null)):N(s,n.toString())}if("string"!=r)throw Error(yn+n);return 45===n.charCodeAt(0)?(n=n.slice(1),s.s=-1):s.s=1,(Pn.test(n)?N:x)(s,n)}s.s=n.s,s.e=n.e,s.d=(n=n.d)&&n.slice()}var i,t,r;if(e.prototype=kn,e.ROUND_UP=0,e.ROUND_DOWN=1,e.ROUND_CEIL=2,e.ROUND_FLOOR=3,e.ROUND_HALF_UP=4,e.ROUND_HALF_DOWN=5,e.ROUND_HALF_EVEN=6,e.ROUND_HALF_CEIL=7,e.ROUND_HALF_FLOOR=8,e.EUCLID=9,e.config=k,e.clone=I,e.abs=O,e.acos=q,e.acosh=F,e.add=D,e.asin=Z,e.asinh=P,e.atan=R,e.atanh=S,e.atan2=L,e.cbrt=U,e.ceil=_,e.cos=T,e.cosh=C,e.div=H,e.exp=B,e.floor=V,e.fromJSON=j,e.hypot=$,e.ln=J,e.log=W,e.log10=G,e.log2=z,e.max=K,e.min=Q,e.mod=X,e.mul=Y,e.pow=nn,e.random=en,e.round=tn,e.sign=rn,e.sin=sn,e.sinh=on,e.sqrt=un,e.sub=cn,e.tan=fn,e.tanh=hn,e.trunc=an,n=void 0===n?{}:n)for(r=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],i=0;i<r.length;)n.hasOwnProperty(t=r[i++])||(n[t]=this[t]);return e.config(n),e}(xn))(vn),Nn=new xn(Nn);if("function"==typeof define&&define.amd)define(function(){return xn});else if("undefined"!=typeof module&&module.exports){if(module.exports=xn,!bn)try{bn=require("crypto")}catch(Cn){}}else n=n||("undefined"!=typeof self&&self&&self.self==self?self:Function("return this")()),dn=n.Decimal,xn.noConflict=function(){return n.Decimal=dn,xn},n.Decimal=xn}(this),!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.math=t():e.math=t()}(this,function(){return e=[function(e,t,r){var i=r(1);e.exports=function n(e){e=i.create(e);return e.create=n,e.import(r(13)),e}()},function(e,t,r){e.exports=r(2)},function(e,t,r){var n=r(3).isFactory,i=r(3).deepExtend,a=r(4),o=r(8),s=r(10),u=r(12);t.create=function(e){function t(e){var i,a;if(n(e))return-1===(a=r.indexOf(e))?(i=!0===e.math?e.factory(f.type,l,t,f.typed,f):e.factory(f.type,l,t,f.typed),r.push(e),c.push(i)):i=c[a],i;throw new Error("Factory object with properties `type`, `name`, and `factory` expected")}if("function"!=typeof Object.create)throw new Error("ES5 not supported by this JavaScript engine. Please load the es5-shim and es5-sham library for compatibility.");var r=[],c=[],f=o.mixin({}),l=(f.type={},f.expression={transform:Object.create(f)},f.typed=a.create(f.type),{epsilon:1e-14,matrix:"matrix",number:"number",precision:64,predictable:!1});return e&&i(l,e),f.import=t(s),f.config=t(u),f}},function(e,t){"use strict";t.clone=function r(e){var t=typeof e;if("number"==t||"string"==t||"boolean"==t||null==e)return e;if("function"==typeof e.clone)return e.clone();if(Array.isArray(e))return e.map(r);if(e instanceof Number)return new Number(e.valueOf());if(e instanceof String)return new String(e.valueOf());if(e instanceof Boolean)return new Boolean(e.valueOf());if(e instanceof Date)return new Date(e.valueOf());if(e&&!0===e.isBigNumber)return e;if(e instanceof RegExp)throw new TypeError("Cannot clone "+e);var i,n={};for(i in e)e.hasOwnProperty(i)&&(n[i]=r(e[i]));return n},t.extend=function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e},t.deepExtend=function n(e,t){if(Array.isArray(t))throw new TypeError("Arrays are not supported by deepExtend");for(var r in t)if(t.hasOwnProperty(r))if(t[r]&&t[r].constructor===Object)void 0===e[r]&&(e[r]={}),e[r].constructor===Object?n(e[r],t[r]):e[r]=t[r];else{if(Array.isArray(t[r]))throw new TypeError("Arrays are not supported by deepExtend");e[r]=t[r]}return e},t.deepEqual=function(e,r){var n,i,a;if(Array.isArray(e)){if(!Array.isArray(r))return!1;if(e.length!=r.length)return!1;for(i=0,a=e.length;i<a;i++)if(!t.deepEqual(e[i],r[i]))return!1;return!0}if(e instanceof Object){if(Array.isArray(r)||!(r instanceof Object))return!1;for(n in e)if(!t.deepEqual(e[n],r[n]))return!1;for(n in r)if(!t.deepEqual(e[n],r[n]))return!1;return!0}return typeof e==typeof r&&e==r},t.canDefineProperty=function(){try{if(Object.defineProperty)return Object.defineProperty({},"x",{get:function(){}}),!0}catch(e){}return!1},t.lazy=function(e,r,n){var i,a;t.canDefineProperty()?(a=!0,Object.defineProperty(e,r,{get:function(){return a&&(i=n(),a=!1),i},set:function(e){i=e,a=!1},configurable:!0,enumerable:!0})):e[r]=n()},t.traverse=function(e,t){var r=e;if(t)for(var n=t.split("."),i=0;i<n.length;i++){var a=n[i];a in r||(r[a]={}),r=r[a]}return r},t.isFactory=function(e){return e&&"function"==typeof e.factory}},function(e,t,r){var n=r(5),i=r(6).digits,a=function(){return a=n.create,n};t.create=function(e){var t=a();return t.types=[{name:"number",test:function(e){return"number"==typeof e}},{name:"Complex",test:function(e){return e&&e.isComplex}},{name:"BigNumber",test:function(e){return e&&e.isBigNumber}},{name:"Fraction",test:function(e){return e&&e.isFraction}},{name:"Unit",test:function(e){return e&&e.isUnit}},{name:"string",test:function(e){return"string"==typeof e}},{name:"Array",test:Array.isArray},{name:"Matrix",test:function(e){return e&&e.isMatrix}},{name:"DenseMatrix",test:function(e){return e&&e.isDenseMatrix}},{name:"SparseMatrix",test:function(e){return e&&e.isSparseMatrix}},{name:"ImmutableDenseMatrix",test:function(e){return e&&e.isImmutableDenseMatrix}},{name:"Range",test:function(e){return e&&e.isRange}},{name:"Index",test:function(e){return e&&e.isIndex}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"ResultSet",test:function(e){return e&&e.isResultSet}},{name:"Help",test:function(e){return e&&e.isHelp}},{name:"function",test:function(e){return"function"==typeof e}},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:function(e){return"object"==typeof e}},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],t.conversions=[{from:"number",to:"BigNumber",convert:function(t){if(15<i(t))throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+t+"). Use function bignumber(x) to convert to BigNumber.");return new e.BigNumber(t)}},{from:"number",to:"Complex",convert:function(t){return new e.Complex(t,0)}},{from:"number",to:"string",convert:function(e){return e+""}},{from:"BigNumber",to:"Complex",convert:function(t){return new e.Complex(t.toNumber(),0)}},{from:"number",to:"Fraction",convert:function(t){if(15<i(t))throw new TypeError("Cannot implicitly convert a number with >15 significant digits to Fraction (value: "+t+"). Use function fraction(x) to convert to Fraction.");return new e.Fraction(t)}},{from:"string",to:"number",convert:function(e){var t=Number(e);if(isNaN(t))throw new Error('Cannot convert "'+e+'" to a number');return t}},{from:"boolean",to:"number",convert:function(e){return+e}},{from:"boolean",to:"BigNumber",convert:function(t){return new e.BigNumber(+t)}},{from:"boolean",to:"string",convert:function(e){return+e}},{from:"null",to:"number",convert:function(){return 0}},{from:"null",to:"string",convert:function(){return"null"}},{from:"null",to:"BigNumber",convert:function(){return new e.BigNumber(0)}},{from:"Array",to:"Matrix",convert:function(t){return new e.DenseMatrix(t)}},{from:"Matrix",to:"Array",convert:function(e){return e.valueOf()}}],t}},function(e,t,r){var n;void 0!==(t="function"==typeof(n=function(){function e(){function t(e){for(var t,r=0;r<N.types.length;r++){var n=N.types[r];if(n.name===e){t=n.test;break}}if(!t){var i;for(r=0;r<N.types.length;r++)if(n=N.types[r],n.name.toLowerCase()==e.toLowerCase()){i=n.name;break}throw new Error('Unknown type "'+e+'"'+(i?'. Did you mean "'+i+'"?':""))}return t}function r(e){for(var t="",r=0;r<e.length;r++){var n=e[r];if(""!=n.name)if(""==t)t=n.name;else if(t!=n.name){var i=new Error("Function names do not match (expected: "+t+", actual: "+n.name+")");throw i.data={actual:n.name,expected:t},i}}return t}function n(e,t,r,n,i){var a,o=h(n),s=i?i.split(","):null,u=e||"unnamed",c=s&&g(s,"any"),f={fn:e,index:r,actual:n,expected:s};a=s?t>r&&!c?"Unexpected type of argument in function "+u+" (expected: "+s.join(" or ")+", actual: "+o+", index: "+r+")":"Too few arguments in function "+u+" (expected: "+s.join(" or ")+", index: "+r+")":"Too many arguments in function "+u+" (expected: "+r+", actual: "+t+")";var l=new TypeError(a);return l.data=f,l}function i(e){this.name=e||"refs",this.categories={}}function a(e,t){if("string"==typeof e){var r=e.trim(),n="..."===r.substr(0,3);if(n&&(r=r.substr(3)),""===r)this.types=["any"];else{this.types=r.split("|");for(var i=0;i<this.types.length;i++)this.types[i]=this.types[i].trim()}}else{if(!Array.isArray(e)){if(e instanceof a)return e.clone();throw new Error("String or Array expected")}this.types=e}this.conversions=[],this.varArgs=n||t||!1,this.anyType=-1!==this.types.indexOf("any")}function o(e,t){var r;if("string"==typeof e)r=""!==e?e.split(","):[];else{if(!Array.isArray(e))throw new Error("string or Array expected");r=e}this.params=new Array(r.length);for(var n=0;n<r.length;n++){var i=new a(r[n]);if(this.params[n]=i,n===r.length-1)this.varArgs=i.varArgs;else if(i.varArgs)throw new SyntaxError('Unexpected variable arguments operator "..."')}this.fn=t}function s(e,t,r){this.path=e||[],this.param=e[e.length-1]||null,this.signature=t||null,this.childs=r||[]}function u(e){var t,r,n={},i=[];for(var a in e)if(e.hasOwnProperty(a)){var s=e[a];if(t=new o(a,s),t.ignore())continue;var u=t.expand();for(r=0;r<u.length;r++){var c=u[r],f=c.toString(),l=n[f];if(l){var p=o.compare(c,l);if(0>p)n[f]=c;else if(0===p)throw new Error('Signature "'+f+'" is defined twice')}else n[f]=c}}for(f in n)n.hasOwnProperty(f)&&i.push(n[f]);for(i.sort(function(e,t){return o.compare(e,t)}),r=0;r<i.length;r++)if(t=i[r],t.varArgs)for(var m=t.params.length-1,h=t.params[m],v=0;v<h.types.length;){if(h.conversions[v])for(var d=h.types[v],y=0;y<i.length;y++){var x=i[y],b=x.params[m];if(x!==t&&b&&g(b.types,d)&&!b.conversions[m]){h.types.splice(v,1),h.conversions.splice(v,1),v--;break}}v++}return i}function c(e){for(var t={},r=0;r<e.length;r++){var n=e[r];if(n.fn&&!n.hasConversions()){var i=n.params.join(",");t[i]=n.fn}}return t}function f(e,t){var r,n,i,o=t.length,u=[];for(r=0;r<e.length;r++)n=e[r],n.params.length!==o||i||(i=n),void 0!=n.params[o]&&u.push(n);u.sort(function(e,t){return a.compare(e.params[o],t.params[o])});var c=[];for(r=0;r<u.length;r++){n=u[r];var l=n.params[o],p=c.filter(function(e){return e.param.overlapping(l)})[0];if(p){if(p.param.varArgs)throw new Error('Conflicting types "'+p.param+'" and "'+l+'"');p.signatures.push(n)}else c.push({param:l,signatures:[n]})}var m=new Array(c.length);for(r=0;r<c.length;r++){var h=c[r];m[r]=f(h.signatures,t.concat(h.param))}return new s(t,i,m)}function l(e){for(var t=[],r=0;e>r;r++)t[r]="arg"+r;return t}function p(e,t){var r=new i,a=u(t);if(0==a.length)throw new Error("No signatures provided");var o=f(a,[]),s=[],p=e||"",h=l(m(a));s.push("function "+p+"("+h.join(", ")+") {"),s.push('  "use strict";'),s.push("  var name = '"+p+"';"),s.push(o.toCode(r,"  ")),s.push("}");var g=[r.toCode(),"return "+s.join("\n")].join("\n"),v=new Function(r.name,"createError",g),d=v(r,n);return d.signatures=c(a),d}function m(e){for(var t=0,r=0;r<e.length;r++){var n=e[r].params.length;n>t&&(t=n)}return t}function h(e){for(var t,r=0;r<N.types.length;r++){var n=N.types[r];if("Object"===n.name)t=n;else if(n.test(e))return n.name}return t&&t.test(e)?t.name:"unknown"}function g(e,t){return-1!==e.indexOf(t)}function v(e,t){if(!e.signatures)throw new TypeError("Function is no typed-function");var r;if("string"==typeof t){r=t.split(",");for(var n=0;n<r.length;n++)r[n]=r[n].trim()}else{if(!Array.isArray(t))throw new TypeError("String array or a comma separated string expected");r=t}var i=r.join(","),a=e.signatures[i];if(a)return a;throw new TypeError("Signature not found (signature: "+(e.name||"unnamed")+"("+r.join(", ")+"))")}function d(e,t){var r=h(e);if(t===r)return e;for(var n=0;n<N.conversions.length;n++){var i=N.conversions[n];if(i.from===r&&i.to===t)return i.convert(e)}throw new Error("Cannot convert from "+r+" to "+t)}i.prototype.add=function(e,t){var r=t||"fn";this.categories[r]||(this.categories[r]=[]);var n=this.categories[r].indexOf(e);return-1==n&&(n=this.categories[r].length,this.categories[r].push(e)),r+n},i.prototype.toCode=function(){var e=[],t=this.name+".categories",r=this.categories;for(var n in r)if(r.hasOwnProperty(n))for(var i=r[n],a=0;a<i.length;a++)e.push("var "+n+a+" = "+t+"['"+n+"']["+a+"];");return e.join("\n")},a.compare=function(e,t){if(e.anyType)return 1;if(t.anyType)return-1;if(g(e.types,"Object"))return 1;if(g(t.types,"Object"))return-1;if(e.hasConversions()){if(t.hasConversions()){var r,n,i;for(r=0;r<e.conversions.length;r++)if(void 0!==e.conversions[r]){n=e.conversions[r];break}for(r=0;r<t.conversions.length;r++)if(void 0!==t.conversions[r]){i=t.conversions[r];break}return N.conversions.indexOf(n)-N.conversions.indexOf(i)}return 1}if(t.hasConversions())return-1;var a,o;for(r=0;r<N.types.length;r++)if(N.types[r].name===e.types[0]){a=r;break}for(r=0;r<N.types.length;r++)if(N.types[r].name===t.types[0]){o=r;break}return a-o},a.prototype.overlapping=function(e){for(var t=0;t<this.types.length;t++)if(g(e.types,this.types[t]))return!0;return!1},a.prototype.clone=function(){var e=new a(this.types.slice(),this.varArgs);return e.conversions=this.conversions.slice(),e},a.prototype.hasConversions=function(){return this.conversions.length>0},a.prototype.contains=function(e){for(var t=0;t<this.types.length;t++)if(e[this.types[t]])return!0;return!1},a.prototype.toString=function(e){for(var t=[],r={},n=0;n<this.types.length;n++){var i=this.conversions[n],a=e&&i?i.to:this.types[n];a in r||(r[a]=!0,t.push(a))}return(this.varArgs?"...":"")+t.join("|")},o.prototype.clone=function(){return new o(this.params.slice(),this.fn)},o.prototype.expand=function(){function e(r,n){if(n.length<r.params.length){var i,s,u,c=r.params[n.length];if(c.varArgs){for(s=c.clone(),i=0;i<N.conversions.length;i++)if(u=N.conversions[i],!g(c.types,u.from)&&g(c.types,u.to)){var f=s.types.length;s.types[f]=u.from,s.conversions[f]=u}e(r,n.concat(s))}else{for(i=0;i<c.types.length;i++)e(r,n.concat(new a(c.types[i])));for(i=0;i<N.conversions.length;i++)u=N.conversions[i],!g(c.types,u.from)&&g(c.types,u.to)&&(s=new a(u.from),s.conversions[0]=u,e(r,n.concat(s)))}}else t.push(new o(n,r.fn))}var t=[];return e(this,[]),t},o.compare=function(e,t){if(e.params.length>t.params.length)return 1;if(e.params.length<t.params.length)return-1;var r,n=e.params.length,i=0,o=0;for(r=0;n>r;r++)e.params[r].hasConversions()&&i++,t.params[r].hasConversions()&&o++;if(i>o)return 1;if(o>i)return-1;for(r=0;r<e.params.length;r++){var s=a.compare(e.params[r],t.params[r]);if(0!==s)return s}return 0},o.prototype.hasConversions=function(){for(var e=0;e<this.params.length;e++)if(this.params[e].hasConversions())return!0;return!1},o.prototype.ignore=function(){for(var e={},t=0;t<N.ignore.length;t++)e[N.ignore[t]]=!0;for(t=0;t<this.params.length;t++)if(this.params[t].contains(e))return!0;return!1},o.prototype.toCode=function(e,t){for(var r=[],n=new Array(this.params.length),i=0;i<this.params.length;i++){var a=this.params[i],o=a.conversions[0];a.varArgs?n[i]="varArgs":o?n[i]=e.add(o.convert,"convert")+"(arg"+i+")":n[i]="arg"+i}var s=this.fn?e.add(this.fn,"signature"):void 0;return s?t+"return "+s+"("+n.join(", ")+"); // signature: "+this.params.join(", "):r.join("\n")},o.prototype.toString=function(){return this.params.join(", ")},s.prototype.toCode=function(e,r,n){var i=[];if(this.param){var a=this.path.length-1,o=this.param.conversions[0],s="// type: "+(o?o.from+" (convert to "+o.to+")":this.param);if(this.param.varArgs)if(this.param.anyType)i.push(r+"if (arguments.length > "+a+") {"),i.push(r+"  var varArgs = [];"),i.push(r+"  for (var i = "+a+"; i < arguments.length; i++) {"),i.push(r+"    varArgs.push(arguments[i]);"),i.push(r+"  }"),i.push(this.signature.toCode(e,r+"  ")),i.push(r+"}");else{for(var u=function(r,n){for(var i=[],a=0;a<r.length;a++)i[a]=e.add(t(r[a]),"test")+"("+n+")";return i.join(" || ")}.bind(this),c=this.param.types,f=[],l=0;l<c.length;l++)void 0===this.param.conversions[l]&&f.push(c[l]);i.push(r+"if ("+u(c,"arg"+a)+") { "+s),i.push(r+"  var varArgs = [arg"+a+"];"),i.push(r+"  for (var i = "+(a+1)+"; i < arguments.length; i++) {"),i.push(r+"    if ("+u(f,"arguments[i]")+") {"),i.push(r+"      varArgs.push(arguments[i]);");for(var l=0;l<c.length;l++){var p=this.param.conversions[l];if(p){var m=e.add(t(c[l]),"test"),h=e.add(p.convert,"convert");i.push(r+"    }"),i.push(r+"    else if ("+m+"(arguments[i])) {"),i.push(r+"      varArgs.push("+h+"(arguments[i]));")}}i.push(r+"    } else {"),i.push(r+"      throw createError(name, arguments.length, i, arguments[i], '"+f.join(",")+"');"),i.push(r+"    }"),i.push(r+"  }"),i.push(this.signature.toCode(e,r+"  ")),i.push(r+"}")}else if(this.param.anyType)i.push(r+"// type: any"),i.push(this._innerCode(e,r,n));else{var g=this.param.types[0],m="any"!==g?e.add(t(g),"test"):null;i.push(r+"if ("+m+"(arg"+a+")) { "+s),i.push(this._innerCode(e,r+"  ",n)),i.push(r+"}")}}else i.push(this._innerCode(e,r,n));return i.join("\n")},s.prototype._innerCode=function(e,t,r){var n,i=[];this.signature&&(i.push(t+"if (arguments.length === "+this.path.length+") {"),i.push(this.signature.toCode(e,t+"  ")),i.push(t+"}"));var a;for(n=0;n<this.childs.length;n++)if(this.childs[n].param.anyType){a=this.childs[n];break}for(n=0;n<this.childs.length;n++)i.push(this.childs[n].toCode(e,t,a));r&&!this.param.anyType&&i.push(r.toCode(e,t,a));var o=this._exceptions(e,t);return o&&i.push(o),i.join("\n")},s.prototype._exceptions=function(e,t){var r=this.path.length;if(0===this.childs.length)return[t+"if (arguments.length > "+r+") {",t+"  throw createError(name, arguments.length, "+r+", arguments["+r+"]);",t+"}"].join("\n");for(var n={},i=[],a=0;a<this.childs.length;a++){var o=this.childs[a];if(o.param)for(var s=0;s<o.param.types.length;s++){var u=o.param.types[s];u in n||o.param.conversions[s]||(n[u]=!0,i.push(u))}}return t+"throw createError(name, arguments.length, "+r+", arguments["+r+"], '"+i.join(",")+"');"};var y=[{name:"number",test:function(e){return"number"==typeof e}},{name:"string",test:function(e){return"string"==typeof e}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"Function",test:function(e){return"function"==typeof e}},{name:"Array",test:Array.isArray},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:function(e){return"object"==typeof e}},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],x={},b=[],w=[],N={config:x,types:y,conversions:b,ignore:w};return N=p("typed",{Object:function(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(e[n]);var i=r(t);return p(i,e)},"string, Object":p,"...Function":function(e){for(var t,n=r(e),i={},a=0;a<e.length;a++){var o=e[a];if("object"!=typeof o.signatures)throw t=new TypeError("Function is no typed-function (index: "+a+")"),t.data={index:a},t;for(var s in o.signatures)if(o.signatures.hasOwnProperty(s))if(i.hasOwnProperty(s)){if(o.signatures[s]!==i[s])throw t=new Error('Signature "'+s+'" is defined twice'),t.data={signature:s},t}else i[s]=o.signatures[s]}return p(n,i)}}),N.config=x,N.types=y,N.conversions=b,N.ignore=w,N.create=e,N.find=v,N.convert=d,N.addType=function(e){if(!e||"string"!=typeof e.name||"function"!=typeof e.test)throw new TypeError("Object with properties {name: string, test: function} expected");N.types.push(e)},N.addConversion=function(e){if(!e||"string"!=typeof e.from||"string"!=typeof e.to||"function"!=typeof e.convert)throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");N.conversions.push(e)},N}return e()})?n.apply(t,[]):n)&&(e.exports=t)},function(e,t,r){"use strict";var n=r(7);t.isNumber=function(e){return"number"==typeof e},t.isInteger=function(e){return!!isFinite(e)&&e==Math.round(e)},t.sign=function(e){return 0<e?1:e<0?-1:0},t.format=function(e,r){if("function"==typeof r)return r(e);if(e===1/0)return"Infinity";if(e===-1/0)return"-Infinity";if(isNaN(e))return"NaN";var n="auto",i=void 0;switch(r&&(r.notation&&(n=r.notation),t.isNumber(r)?i=r:r.precision&&(i=r.precision)),n){case"fixed":return t.toFixed(e,i);case"exponential":return t.toExponential(e,i);case"engineering":return t.toEngineering(e,i);case"auto":return t.toPrecision(e,i,r&&r.exponential).replace(/((\.\d*?)(0+))($|e)/,function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t});default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", or "fixed".')}},t.toExponential=function(e,t){return new n(e).toExponential(t)},t.toEngineering=function(e,t){return new n(e).toEngineering(t)},t.toFixed=function(e,t){return new n(e).toFixed(t)},t.toPrecision=function(e,t,r){return new n(e).toPrecision(t,r)},t.digits=function(e){return e.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length},t.DBL_EPSILON=Number.EPSILON||2220446049250313e-31,t.nearlyEqual=function(e,r,n){var i;return null==n?e==r:e==r||!(isNaN(e)||isNaN(r)||!isFinite(e)||!isFinite(r)||!((i=Math.abs(e-r))<t.DBL_EPSILON||i<=Math.max(Math.abs(e),Math.abs(r))*n))}},function(e,t){"use strict";function r(e){e=String(e).toLowerCase().match(/^0*?(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!e)throw new SyntaxError("Invalid number");var r=e[1],n=e[2],i=parseFloat(e[4]||"0"),e=n.indexOf(".");i+=-1!==e?e-1:n.length-1,this.sign=r,this.coefficients=n.replace(".","").replace(/^0*/,function(e){return i-=e.length,""}).replace(/0*$/,"").split("").map(function(e){return parseInt(e)}),0===this.coefficients.length&&(this.coefficients.push(0),i++),this.exponent=i}function n(e){for(var t=[],r=0;r<e;r++)t.push(0);return t}r.prototype.toEngineering=function(e){var e=this.roundDigits(e),r=e.exponent,i=e.coefficients,a=r%3==0?r:r<0?r-3-r%3:r-r%3,o=0<=r?r:Math.abs(a);i.length-1<o&&(i=i.concat(n(o-(i.length-1))));for(var s=Math.abs(r-a),u=1;0<=--s;)u++;o=i.slice(u).join(""),o=o.match(/[1-9]/)?"."+o:"",i=i.slice(0,u).join("")+o;return i+="e"+(0<=r?"+":"")+a.toString(),e.sign+i},r.prototype.toFixed=function(e){var t=this.roundDigits(this.exponent+1+(e||0)),r=t.coefficients,t=t.exponent+1,a=t+(e||0);return r.length<a&&(r=r.concat(n(a-r.length))),t<0&&(r=n(1-t).concat(r),t=1),e&&r.splice(t,0,0===t?"0.":"."),this.sign+r.join("")},r.prototype.toExponential=function(e){var t=e?this.roundDigits(e):this.clone(),r=t.coefficients,t=t.exponent,e=(r=r.length<e?r.concat(n(e-r.length)):r).shift();return this.sign+e+(0<r.length?"."+r.join(""):"")+"e"+(0<=t?"+":"")+t},r.prototype.toPrecision=function(e,t){var r=t&&void 0!==t.lower?t.lower:.001,t=t&&void 0!==t.upper?t.upper:1e5,a=Math.abs(Math.pow(10,this.exponent));return a<r||t<=a?this.toExponential(e):(t=(r=e?this.roundDigits(e):this.clone()).coefficients,a=r.exponent,t=(t=t.length<e?t.concat(n(e-t.length)):t).concat(n(a-t.length+1+(t.length<e?e-t.length:0))),(r=0<a?a:0)<(t=n(-a).concat(t)).length-1&&t.splice(r+1,0,"."),this.sign+t.join(""))},r.prototype.clone=function(){var e=new r("0");return e.sign=this.sign,e.coefficients=this.coefficients.slice(0),e.exponent=this.exponent,e},r.prototype.roundDigits=function(e){for(var t=this.clone(),r=t.coefficients;e<=0;)r.unshift(0),t.exponent++,e++;if(r.length>e&&5<=r.splice(e,r.length-e)[0]){var i=e-1;for(r[i]++;10===r[i];)r.pop(),0===i&&(r.unshift(0),t.exponent++,i++),r[--i]++}return t},e.exports=r},function(e,t,r){var n=r(9);t.mixin=function(e){var t=new n;return e.on=t.on.bind(t),e.off=t.off.bind(t),e.once=t.once.bind(t),e.emit=t.emit.bind(t),e}},function(e,t){function r(){}r.prototype={on:function(e,t,r){var n=this.e||(this.e={});return(n[e]||(n[e]=[])).push({fn:t,ctx:r}),this},once:function(e,t,r){function n(){i.off(e,n),t.apply(r,arguments)}var i=this;return n._=t,this.on(e,n,r)},emit:function(e){for(var t=[].slice.call(arguments,1),r=((this.e||(this.e={}))[e]||[]).slice(),n=0,i=r.length;n<i;n++)r[n].fn.apply(r[n].ctx,t);return this},off:function(e,t){var r=this.e||(this.e={}),n=r[e],i=[];if(n&&t)for(var a=0,o=n.length;a<o;a++)n[a].fn!==t&&n[a].fn._!==t&&i.push(n[a]);return i.length?r[e]=i:delete r[e],this}},e.exports=r},function(e,t,r){"use strict";var i=r(3).lazy,a=r(3).isFactory,o=r(3).traverse,s=(r(3).extend,r(11));t.math=!0,t.name="import",t.factory=function(e,t,r,n,u){function f(e,t,r){if(r.wrap&&"function"==typeof t&&(t=function(e){function t(){for(var t=[],r=0,n=arguments.length;r<n;r++){var i=arguments[r];t[r]=i&&i.valueOf()}return e.apply(u,t)}return e.transform&&(t.transform=e.transform),t}(t)),g(u[e])&&g(t))return t=r.override?n(e,t.signatures):n(u[e],t),l(e,u[e]=t),u.emit("import",e,function(){return t});if(void 0===u[e]||r.override)return l(e,u[e]=t),u.emit("import",e,function(){return t});if(!r.silent)throw new Error('Cannot import "'+e+'": already exists')}function l(e,t){t&&"function"==typeof t.transform&&(u.expression.transform[e]=t.transform)}function m(e,t){var a,s,c,f;"string"==typeof e.name?(a=e.name,s=e.path?o(u,e.path):u,c=s.hasOwnProperty(a)?s[a]:void 0,!(f=function(){var i=r(e);if(g(c)&&g(i))return i=t.override?i:n(c,i);if(void 0===c||t.override)return i;if(!t.silent)throw new Error('Cannot import "'+a+'": already exists')})!==e.lazy?i(s,a,f):s[a]=f(),u.emit("import",a,f,e.path)):r(e)}function g(e){return"function"==typeof e&&"object"==typeof e.signatures}return function c(e,t){var i,r=arguments.length;if(1!=r&&2!=r)throw new s("import",r,1,2);if(t=t||{},a(e))m(e,t);else if(Array.isArray(e))e.forEach(function(e){c(e,t)});else if("object"==typeof e)for(var n in e)e.hasOwnProperty(n)&&(function(e){return"function"==typeof e||"number"==typeof e||"string"==typeof e||"boolean"==typeof e||null===e||e&&!0===e.isUnit||e&&!0===e.isComplex}(i=e[n])?f(n,i,t):a(e)?m(e,t):c(i,t));else if(!t.silent)throw new TypeError("Factory, Object, or Array expected")}},t.lazy=!0},function(e,t){"use strict";function r(e,t,n,i){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.fn=e,this.count=t,this.min=n,this.max=i,this.message="Wrong number of arguments in function "+e+" ("+t+" provided, "+n+(null!=i?"-"+i:"")+" expected)",this.stack=(new Error).stack}(r.prototype=new Error).constructor=Error,r.prototype.name="ArgumentsError",r.prototype.isArgumentsError=!0,e.exports=r},function(e,t,r){"use strict";var i=r(3);t.name="config",t.math=!0,t.factory=function(e,t,r,n,a){return function(e){var r;return e?(r=i.clone(t),i.deepExtend(t,e),e=i.clone(t),a.emit("config",e,r),e):i.clone(t)}}},function(e,t,r){e.exports=[r(14),r(92),r(96),r(320),r(495),r(497)]},function(e,t,r){e.exports=[r(15),r(20),r(21),r(26),r(30),r(36),r(68),r(69),r(71),r(72)]},function(e,t,r){e.exports=[r(16),r(18)]},function(e,t,r){var i=r(17);r(6).digits,t.name="BigNumber",t.path="type",t.factory=function(e,t,r,n,a){var o=i.constructor(t);return o.prototype.type="BigNumber",o.prototype.isBigNumber=!0,o.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},o.fromJSON=function(e){return new o(e.value)},a.on("config",function(e,t){e.precision!==t.precision&&o.config({precision:e.precision})}),o},t.math=!0},function(e,t,r){var n;!function(i){"use strict";function a(e){for(var t,r,n=1,i=e.length,a=e[0]+"";n<i;n++){for(t=e[n]+"",r=_-t.length;r--;)t="0"+t;a+=t}for(i=a.length;48===a.charCodeAt(--i););return a.slice(0,i+1||1)}function o(e,t,r,n){for(var i,a=1,o=e[0];10<=o;o/=10,a++);return(o=t-a)<0?(o+=_,i=0):(i=Math.ceil((o+1)/_),o%=_),a=E(10,_-o),t=e[i]%a|0,null==n?o<3?(0==o?t=t/100|0:1==o&&(t=t/10|0),r<4&&99999==t||3<r&&49999==t||5e4==t||0==t):(r<4&&t+1==a||3<r&&t+1==a/2)&&(e[i+1]/a/100|0)==E(10,o-2)-1||(t==a/2||0==t)&&0==(e[i+1]/a/100|0):o<4?(0==o?t=t/1e3|0:1==o?t=t/100|0:2==o&&(t=t/10|0),(n||r<4)&&9999==t||!n&&3<r&&4999==t):((n||r<4)&&t+1==a||!n&&3<r&&t+1==a/2)&&(e[i+1]/a/1e3|0)==E(10,o-3)-1}function s(e,t,r){e=e.constructor;return null==t||((y=t<0||8<t)||0!==t&&(e.errors?parseInt:parseFloat)(t)!=t)&&!p(e,"rounding mode",t,r,0)?e.rounding:0|t}function u(e,t,r,n){e=e.constructor;return!(y=t<(n||0)||S+1<=t)&&(0===t||(e.errors?parseInt:parseFloat)(t)==t)||p(e,"argument",t,r,0)}function c(e,t){var r,n,i,s,u,c,f,l=0,p=0,m=0,h=e.constructor,v=h.ONE,d=h.rounding,y=h.precision;if(!e.c||!e.c[0]||17<e.e)return new h(e.c?e.c[0]?e.s<0?0:1/0:v:e.s?e.s<0?0:e:NaN);for(u=null==t?(b=!1,y):t,f=new h(.03125);-2<e.e;)e=e.times(f),m+=5;for(u+=n=Math.log(E(2,m))/Math.LN10*2+5|0,r=s=c=new h(v),h.precision=u;;){if(s=g(s.times(e),u,1),r=r.times(++p),a((f=c.plus(k(s,r,u,1))).c).slice(0,u)===a(c.c).slice(0,u)){for(i=m;i--;)c=g(c.times(c),u,1);if(null!=t)return h.precision=y,c;if(!(l<3&&o(c.c,u-n,d,l)))return g(c,h.precision=y,d,b=!0);h.precision=u+=10,r=s=f=new h(v),p=0,l++}c=f}}function f(e,t,r,n){var i,o,s=e.constructor,u=(e=new s(e)).e;if(r=null==t?0:(g(e,++t,r),n?t:t+e.e-u),u=e.e,i=a(e.c),1==n||2==n&&(t<=u||u<=s.toExpNeg)){for(;i.length<r;i+="0");1<i.length&&(i=i.charAt(0)+"."+i.slice(1)),i+=(u<0?"e":"e+")+u}else{if(n=i.length,u<0){for(o=r-n;++u;i="0"+i);i="0."+i}else if(++u>n){for(o=r-u,u-=n;u--;i+="0");0<o&&(i+=".")}else o=r-n,u<n?i=i.slice(0,u)+"."+i.slice(u):0<o&&(i+=".");if(0<o)for(;o--;i+="0");}return e.s<0&&e.c[0]?"-"+i:i}function l(e){var t=e.length-1,r=t*_+1;if(t=e[t]){for(;t%10==0;t/=10,r--);for(t=e[0];10<=t;t/=10,r++);}return r}function p(e,t,r,n,i){if(e.errors)throw(e=new Error((n||["new Decimal","cmp","div","eq","gt","gte","lt","lte","minus","mod","plus","times","toFraction","pow","random","log","sqrt","toNearest","divToInt"][w?w<0?-w:w:1/w<0?1:0])+"() "+(["number type has more than 15 significant digits","LN10 out of digits"][t]||t+([y?" out of range":" not an integer"," not a boolean or binary digit"][i]||""))+": "+r)).name="Decimal Error",y=w=0,e}function m(e,t,r){var n=new e(e.ONE);for(b=!1;1&r&&(n=n.times(t)),r>>=1;)t=t.times(t);return b=!0,n}function h(e,t){var r,n,i,s,u,c,f,l,m,v,d,y=1,w=e,N=w.c,E=w.constructor,M=E.ONE,A=E.rounding,_=E.precision;if(w.s<0||!N||!N[0]||!w.e&&1==N[0]&&1==N.length)return new E(N&&!N[0]?-1/0:1!=w.s?NaN:N?0:w);if(f=null==t?(b=!1,_):t,E.precision=f+=10,n=(r=a(N)).charAt(0),!(Math.abs(s=w.e)<15e14))return w=new E(n+"."+r.slice(1)),B.length<f+2&&p(E,1,f+2,"ln"),w=h(w,f-10).plus(new E(B.slice(0,f+2)).times(s+"")),E.precision=_,null==t?g(w,_,A,b=!0):w;for(;n<7&&1!=n||1==n&&3<r.charAt(1);)n=(r=a((w=w.times(e)).c)).charAt(0),y++;for(s=w.e,1<n?(w=new E("0."+r),s++):w=new E(n+"."+r.slice(1)),l=u=w=k((v=w).minus(M),w.plus(M),f,1),d=g(w.times(w),f,1),i=3;;){if(u=g(u.times(d),f,1),a((m=l.plus(k(u,new E(i),f,1))).c).slice(0,f)===a(l.c).slice(0,f)){if(l=l.times(2),0!==s&&(B.length<f+2&&p(E,1,f+2,"ln"),l=l.plus(new E(B.slice(0,f+2)).times(s+""))),l=k(l,new E(y),f,1),null!=t)return E.precision=_,l;if(!o(l.c,f-10,A,c))return g(l,E.precision=_,A,b=!0);E.precision=f+=10,m=u=w=k(v.minus(M),v.plus(M),f,1),d=g(w.times(w),f,1),i=c=1}l=m,i+=2}}function g(e,t,r,n){var i,a,o,s,u,c,f,l,p=e.constructor;e:if(null!=t){if(!(f=e.c))return e;for(i=1,s=f[0];10<=s;s/=10,i++);if((a=t-i)<0)a+=_,o=t,c=(u=f[l=0])/E(10,i-o-1)%10|0;else if((l=Math.ceil((a+1)/_))>=f.length){if(!n)break e;for(;f.length<=l;f.push(0));u=c=0,o=(a%=_)-_+(i=1)}else{for(u=s=f[l],i=1;10<=s;s/=10,i++);c=(o=(a%=_)-_+i)<0?0:N(u/E(10,i-o-1)%10)}if(n=n||t<0||null!=f[l+1]||(o<0?u:u%E(10,i-o-1)),n=r<4?(c||n)&&(0==r||r==(e.s<0?3:2)):5<c||5==c&&(4==r||n||6==r&&(0<a?0<o?u/E(10,i-o):0:f[l-1])%10&1||r==(e.s<0?8:7)),t<1||!f[0])return f.length=0,n?(t-=e.e+1,f[0]=E(10,(_-t%_)%_),e.e=-t||0):f[0]=e.e=0,e;if(0==a?(f.length=l,s=1,l--):(f.length=l+1,s=E(10,_-a),f[l]=0<o?(u/E(10,i-o)%E(10,o)|0)*s:0),n)for(;;){if(0==l){for(a=1,o=f[0];10<=o;o/=10,a++);for(o=f[0]+=s,s=1;10<=o;o/=10,s++);a!=s&&(e.e++,f[0]==A)&&(f[0]=1);break}if(f[l]+=s,f[l]!=A)break;f[l--]=0,s=1}for(a=f.length;0===f[--a];f.pop());}return b&&(e.e>p.maxE?e.c=e.e=null:e.e<p.minE&&(e.c=[e.e=0])),e}var v,y,x=i.crypto,b=!0,w=0,N=Math.floor,E=Math.pow,M=Object.prototype.toString,A=1e7,_=7,O="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_",T={},C=9e15,S=1e9,B="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",k=(T.absoluteValue=T.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),g(e)},T.ceil=function(){return g(new this.constructor(this),this.e+1,2)},T.comparedTo=T.cmp=function(e,t){var r,n=this,i=n.c,a=(w=-w,(e=new n.constructor(e,t)).c),o=n.s,s=e.s,n=n.e,e=e.e;if(!o||!s)return null;if(r=i&&!i[0],t=a&&!a[0],r||t)return r?t?0:-s:o;if(o!=s)return o;if(r=o<0,!i||!a)return n==e?0:!i^r?1:-1;if(n!=e)return e<n^r?1:-1;for(o=-1,s=(n=i.length)<(e=a.length)?n:e;++o<s;)if(i[o]!=a[o])return i[o]>a[o]^r?1:-1;return n==e?0:e<n^r?1:-1},T.decimalPlaces=T.dp=function(){var e,t,r=null;if(e=this.c){if(r=((t=e.length-1)-N(this.e/_))*_,t=e[t])for(;t%10==0;t/=10,r--);r<0&&(r=0)}return r},T.dividedBy=T.div=function(e,t){return w=2,k(this,new this.constructor(e,t))},T.dividedToIntegerBy=T.divToInt=function(e,t){var n=this.constructor;return w=18,g(k(this,new n(e,t),0,1,1),n.precision,n.rounding)},T.equals=T.eq=function(e,t){return w=3,0===this.cmp(e,t)},T.exponential=T.exp=function(){return c(this)},T.floor=function(){return g(new this.constructor(this),this.e+1,3)},T.greaterThan=T.gt=function(e,t){return w=4,0<this.cmp(e,t)},T.greaterThanOrEqualTo=T.gte=function(e,t){return w=5,1==(t=this.cmp(e,t))||0===t},T.isFinite=function(){return!!this.c},T.isInteger=T.isInt=function(){return!!this.c&&N(this.e/_)>this.c.length-2},T.isNaN=function(){return!this.s},T.isNegative=T.isNeg=function(){return this.s<0},T.isZero=function(){return!!this.c&&0==this.c[0]},T.lessThan=T.lt=function(e,t){return w=6,this.cmp(e,t)<0},T.lessThanOrEqualTo=T.lte=function(e,t){return w=7,-1==(t=this.cmp(e,t))||0===t},T.logarithm=T.log=function(e,t){var r,n,i,s,u,c,f,l,m,v=this,d=v.constructor,y=d.precision,x=d.rounding;if(null==e)e=new d(10),r=!0;else{if(w=15,n=(e=new d(e,t)).c,e.s<0||!n||!n[0]||!e.e&&1==n[0]&&1==n.length)return new d(NaN);r=e.eq(10)}if(n=v.c,v.s<0||!n||!n[0]||!v.e&&1==n[0]&&1==n.length)return new d(n&&!n[0]?-1/0:1!=v.s?NaN:n?0:1/0);if(u=r&&(s=n[0],1<n.length||1!=s&&10!=s&&100!=s&&1e3!=s&&1e4!=s&&1e5!=s&&1e6!=s),b=!1,l=(f=y+5)+10,c=h(v,f),i=r?(B.length<l&&p(d,1,l,"log"),new d(B.slice(0,l))):h(e,f),o((m=k(c,i,f,1)).c,s=y,x))do{if(c=h(v,f+=10),i=r?(B.length<(l=f+10)&&p(d,1,l,"log"),new d(B.slice(0,l))):h(e,f),m=k(c,i,f,1),!u){+a(m.c).slice(s+1,s+15)+1==1e14&&(m=g(m,y+1,0));break}}while(o(m.c,s+=10,x));return b=!0,g(m,y,x)},T.minus=function(e,t){var r,n,i,a,o=this,s=o.constructor,u=o.s;if(w=8,t=(e=new s(e,t)).s,!u||!t)return new s(NaN);if(u!=t)return e.s=-t,o.plus(e);var c=o.c,f=e.c,l=N(e.e/_),p=N(o.e/_),m=s.precision,h=s.rounding;if(!p||!l){if(!c||!f)return c?(e.s=-t,e):new s(f?o:NaN);if(!c[0]||!f[0])return o=f[0]?(e.s=-t,e):new s(c[0]?o:3==h?-0:0),b?g(o,m,h):o}if(n=(c=c.slice()).length,u=p-l){for((a=u<0)?(u=-u,r=c,n=f.length):(l=p,r=f),(p=Math.ceil(m/_))>n&&(n=p),u>(n+=2)&&(u=n,r.length=1),r.reverse(),t=u;t--;r.push(0));r.reverse()}else for((a=n<(i=f.length))&&(i=n),u=t=0;t<i;t++)if(c[t]!=f[t]){a=c[t]<f[t];break}if(a&&(r=c,c=f,f=r,e.s=-e.s),0<(t=-((i=c.length)-f.length)))for(;t--;c[i++]=0);for(p=A-1,t=f.length;u<t;){if(c[--t]<f[t]){for(n=t;n&&!c[--n];c[n]=p);--c[n],c[t]+=A}c[t]-=f[t]}for(;0==c[--i];c.pop());for(;0==c[0];c.shift(),--l);for(c[0]||(c=[l=0],e.s=3==h?-1:1),u=1,t=(e.c=c)[0];10<=t;t/=10,u++);return e.e=u+l*_-1,b?g(e,m,h):e},T.modulo=T.mod=function(e,t){var r,n,i=this,a=i.constructor,o=a.modulo;return w=9,t=(e=new a(e,t)).s,(r=!i.c||!t||e.c&&!e.c[0])||!e.c||i.c&&!i.c[0]?r?new a(NaN):g(new a(i),a.precision,a.rounding):(b=!1,9==o?(e.s=1,n=k(i,e,0,3,1),e.s=t,n.s*=t):n=k(i,e,0,o,1),n=n.times(e),b=!0,i.minus(n))},T.naturalLogarithm=T.ln=function(){return h(this)},T.negated=T.neg=function(){var e=new this.constructor(this);return e.s=-e.s||null,g(e)},T.plus=function(e,t){var r,n=this,i=n.constructor,a=n.s;if(w=10,t=(e=new i(e,t)).s,!a||!t)return new i(NaN);if(a!=t)return e.s=-t,n.minus(e);var o=n.c,s=e.c,u=N(e.e/_),c=N(n.e/_),f=i.precision,l=i.rounding;if(!c||!u){if(!o||!s)return new i(a/0);if(!o[0]||!s[0])return n=s[0]?e:new i(o[0]?n:0*a),b?g(n,f,l):n}if(o=o.slice(),a=c-u){for(t=(a<0?(a=-a,r=o,s):(u=c,r=s,o)).length,(c=Math.ceil(f/_))>t&&(t=c),a>++t&&(a=t,r.length=1),r.reverse();a--;r.push(0));r.reverse()}for(o.length-s.length<0&&(r=s,s=o,o=r),a=s.length,t=0,c=A;a;o[a]%=c)t=(o[--a]=o[a]+s[a]+t)/c|0;for(t&&(o.unshift(t),++u),a=o.length;0==o[--a];o.pop());for(a=1,t=(e.c=o)[0];10<=t;t/=10,a++);return e.e=a+u*_-1,b?g(e,f,l):e},T.precision=T.sd=function(e){var t=null,r=this;return e!=t&&e!==!!e&&1!==e&&0!==e&&p(r.constructor,"argument",e,"precision",1),t=r.c&&(t=l(r.c),e)&&r.e+1>t?r.e+1:t},T.round=function(){var e=this,t=e.constructor;return g(new t(e),e.e+1,t.rounding)},T.squareRoot=T.sqrt=function(){var e,t,r,n,i,o,s=this,u=s.c,c=s.s,f=s.e,l=s.constructor,p=new l(.5);if(1!==c||!u||!u[0])return new l(!c||c<0&&(!u||u[0])?NaN:u?s:1/0);for(b=!1,n=0==(c=Math.sqrt(+s))||c==1/0?(((t=a(u)).length+f)%2==0&&(t+="0"),c=Math.sqrt(t),f=N((f+1)/2)-(f<0||f%2),new l(t=c==1/0?"1e"+f:(t=c.toExponential()).slice(0,t.indexOf("e")+1)+f)):new l(c.toString()),r=(f=l.precision)+3;;)if(o=n,n=p.times(o.plus(k(s,o,r+2,1))),a(o.c).slice(0,r)===(t=a(n.c)).slice(0,r)){if("9999"!=(t=t.slice(r-3,r+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(g(n,f+1,1),e=!n.times(n).eq(s));break}if(!i&&(g(o,f+1,0),o.times(o).eq(s))){n=o;break}r+=4,i=1}return b=!0,g(n,f,l.rounding,e)},T.times=function(e,t){var r,i=this,a=i.constructor,o=i.c,s=(w=11,(e=new a(e,t)).c),u=N(i.e/_),c=N(e.e/_),f=i.s;if(t=e.s,e.s=f==t?1:-1,!(u||o&&o[0])||!(c||s&&s[0]))return new a(!f||!t||o&&!o[0]&&!s||s&&!s[0]&&!o?NaN:o&&s?0*e.s:e.s/0);for(i=u+c,(f=o.length)<(t=s.length)&&(r=o,o=s,s=r,c=f,f=t,t=c),c=f+t,r=[];c--;r.push(0));for(u=t-1;-1<u;u--){for(t=0,c=f+u;u<c;)t=r[c]+s[u]*o[c-u-1]+t,r[c--]=t%A|0,t=t/A|0;r[c]=(r[c]+t)%A|0}for(t?++i:r[0]||r.shift(),c=r.length;!r[--c];r.pop());for(f=1,t=(e.c=r)[0];10<=t;t/=10,f++);return e.e=f+i*_-1,b?g(e,a.precision,a.rounding):e},T.toDecimalPlaces=T.toDP=function(e,t){var r=new this.constructor(this);return null!=e&&u(r,e,"toDP")?g(r,(0|e)+r.e+1,s(r,t,"toDP")):r},T.toExponential=function(e,t){var r=this;return r.c?f(r,null!=e&&u(r,e,"toExponential")?0|e:null,null!=e&&s(r,t,"toExponential"),1):r.toString()},T.toFixed=function(e,t){var r,n=this,i=n.constructor,a=i.toExpNeg,o=i.toExpPos;return null!=e&&(e=u(n,e,r="toFixed")?n.e+(0|e):null,t=s(n,t,r)),i.toExpNeg=-(i.toExpPos=1/0),null!=e&&n.c?(r=f(n,e,t),n.s<0&&n.c&&(n.c[0]?r.indexOf("-")<0&&(r="-"+r):r=r.replace("-",""))):r=n.toString(),i.toExpNeg=a,i.toExpPos=o,r},T.toFormat=function(e,t){var r=this;if(!r.c)return r.toString();var n,i=r.s<0,a=r.constructor.format,o=a.groupSeparator,s=+a.groupSize,u=+a.secondaryGroupSize,r=r.toFixed(e,t).split("."),f=r[0],e=r[1],p=i?f.slice(1):f,m=p.length;if(u&&(n=s,s=u,m-=u=n),0<s&&0<m){for(f=p.substr(0,n=m%s||s);n<m;n+=s)f+=o+p.substr(n,s);0<u&&(f+=o+p.slice(n)),i&&(f="-"+f)}return e?f+a.decimalSeparator+((u=+a.fractionGroupSize)?e.replace(new RegExp("\\d{"+u+"}\\B","g"),"$&"+a.fractionGroupSeparator):e):f},T.toFraction=function(e){var t,r,n,o,s,u,c,f=this,m=f.constructor,h=t=new m(m.ONE),g=s=new m(0),v=f.c,d=new m(g);if(!v)return f.toString();for(n=d.e=l(v)-f.e-1,d.c[0]=E(10,(u=n%_)<0?_+u:u),(null==e||(w=12,(!(o=new m(e)).s||(y=o.cmp(h)<0||!o.c)||m.errors&&N(o.e/_)<o.c.length-1)&&!p(m,"max denominator",e,"toFraction",0))||0<(e=o).cmp(d))&&(e=0<n?d:h),b=!1,o=new m(a(v)),u=m.precision,m.precision=n=v.length*_*2;c=k(o,d,0,1,1),1!=(r=t.plus(c.times(g))).cmp(e);)t=g,g=r,h=s.plus(c.times(r=h)),s=r,d=o.minus(c.times(r=d)),o=r;return r=k(e.minus(t),g,0,1,1),s=s.plus(r.times(h)),t=t.plus(r.times(g)),s.s=h.s=f.s,v=k(h,g,n,1).minus(f).abs().cmp(k(s,t,n,1).minus(f).abs())<1?[h+"",g+""]:[s+"",t+""],b=!0,m.precision=u,v},T.toNearest=function(e,t){var n=(r=this).constructor,r=new n(r);return t=null==e?(e=new n(n.ONE),n.rounding):(w=17,e=new n(e),s(r,t,"toNearest")),e.c?r.c&&(e.c[0]?(b=!1,r=k(r,e,0,t<4?[4,5,7,8][t]:t,1).times(e),b=!0,g(r)):r.c=[r.e=0]):r.s&&(e.s&&(e.s=r.s),r=e),r},T.toNumber=function(){var e=this;return+e||(e.s?0*e.s:NaN)},T.toPower=T.pow=function(e,t){var r,n,i,s,u=this,f=u.constructor,l=u.s,p=(w=13,+(e=new f(e,t))),v=p<0?-p:p,d=f.precision,y=f.rounding;if(!u.c||!e.c||(i=!u.c[0])||!e.c[0])return new f(E(i?0*l:+u,p));if(r=(u=new f(u)).c.length,!u.e&&u.c[0]==u.s&&1==r)return u;if(t=e.c.length-1,e.e||e.c[0]!=e.s||t)if(!(i=t<=(n=N(e.e/_)))&&l<0)s=new f(NaN);else{if(i&&r*_*v<3e3){if(s=m(f,u,v),e.s<0)return f.ONE.div(s)}else{if(l=l<0&&1&e.c[Math.max(n,t)]?-1:1,(n=0!=(t=E(+u,p))&&isFinite(t)?new f(t+"").e:N(p*(Math.log("0."+a(u.c))/Math.LN10+u.e+1)))>f.maxE+1||n<f.minE-1)return new f(0<n?l/0:0);b=!1,f.rounding=u.s=1,v=Math.min(12,(n+"").length),(s=o((s=g(s=c(e.times(h(u,d+v)),d),d+5,1)).c,d,y)&&+a((s=g(c(e.times(h(u,(n=d+10)+v)),n),n+5,1)).c).slice(d+1,d+15)+1==1e14?g(s,d+1,0):s).s=l,b=!0,f.rounding=y}s=g(s,d,y)}else s=g(u,d,y);return s},T.toPrecision=function(e,t){var r=this;return null!=e&&u(r,e,"toPrecision",1)&&r.c?f(r,0|--e,s(r,t,"toPrecision"),2):r.toString()},T.toSignificantDigits=T.toSD=function(e,t){var n=this.constructor,r=new n(this);return null!=e&&u(r,e,"toSD",1)?g(r,0|e,s(r,t,"toSD")):g(r,n.precision,n.rounding)},T.toString=function(e){var t,r,n,i=this,o=i.constructor,s=i.e;if(null===s)r=i.s?"Infinity":"NaN";else{if(e===t&&(s<=o.toExpNeg||s>=o.toExpPos))return f(i,null,o.rounding,1);if(r=a(i.c),s<0){for(;++s;r="0"+r);r="0."+r}else if(n=r.length,0<s)if(++s>n)for(s-=n;s--;r+="0");else s<n&&(r=r.slice(0,s)+"."+r.slice(s));else if(t=r.charAt(0),1<n)r=t+"."+r.slice(1);else if("0"==t)return t;if(null!=e)if((y=!(2<=e&&e<65))||e!=(0|e)&&o.errors)p(o,"base",e,"toString",0);else if("0"==(r=v(o,r,0|e,10,i.s)))return r}return i.s<0?"-"+r:r},T.truncated=T.trunc=function(){return g(new this.constructor(this),this.e+1,1)},T.valueOf=T.toJSON=function(){return this.toString()},v=function(){function e(e,t,r){for(var n,i,a=[0],o=0,s=e.length;o<s;){for(i=a.length;i--;a[i]*=t);for(a[n=0]+=O.indexOf(e.charAt(o++));n<a.length;n++)r-1<a[n]&&(null==a[n+1]&&(a[n+1]=0),a[n+1]+=a[n]/r|0,a[n]%=r)}return a.reverse()}return function(t,r,n,i,a){var o,s,u,c,f,l,p=r.indexOf("."),h=t.precision,g=t.rounding;for(i<37&&(r=r.toLowerCase()),0<=p&&(r=r.replace(".",""),l=new t(i),c=m(t,l,r.length-p),l.c=e(c.toFixed(),10,n),l.e=l.c.length),o=s=(f=e(r,i,n)).length;0==f[--s];f.pop());if(!f[0])return"0";if(p<0?o--:(c.c=f,c.e=o,c.s=a,f=(c=k(c,l,h,g,0,n)).c,u=c.r,o=c.e),p=f[h],s=n/2,u=u||null!=f[h+1],g<4?(null!=p||u)&&(0==g||g==(a<0?3:2)):s<p||p==s&&(4==g||u||6==g&&1&f[h-1]||g==(a<0?8:7)))for(f.length=h,--n;++f[--h]>n;)f[h]=0,h||(++o,f.unshift(1));else f.length=h;for(s=f.length;!f[--s];);for(p=0,r="";p<=s;r+=O.charAt(f[p++]));if(o<0){for(;++o;r="0"+r);r="0."+r}else if(++o>(p=r.length))for(o-=p;o--;r+="0");else o<p&&(r=r.slice(0,o)+"."+r.slice(o));return r}}(),function(){function e(e,t,r){var n,i=0,a=e.length;for(e=e.slice();a--;)n=e[a]*t+i,e[a]=n%r|0,i=n/r|0;return i&&e.unshift(i),e}function t(e,t,r,n){var i,a;if(r!=n)a=n<r?1:-1;else for(i=a=0;i<r;i++)if(e[i]!=t[i]){a=e[i]>t[i]?1:-1;break}return a}function r(e,t,r,n){for(var i=0;r--;)e[r]-=i,i=e[r]<t[r]?1:0,e[r]=i*n+e[r]-t[r];for(;!e[0]&&1<e.length;e.shift());}return function(n,i,a,o,s,u){var c,f,l,p,m,h,v,d,y,x,b,w,E,M,O,T,C,S,z,B=n.constructor,k=n.s==i.s?1:-1,I=n.c,R=i.c;if(!(I&&I[0]&&R&&R[0]))return new B(n.s&&i.s&&(I?!R||I[0]!=R[0]:R)?I&&0==I[0]||!R?0*k:k/0:NaN);for(f=u?(p=1,n.e-i.e):(u=A,N(n.e/(p=_))-N(i.e/p)),S=R.length,T=I.length,x=(y=new B(k)).c=[],l=0;R[l]==(I[l]||0);l++);if(R[l]>(I[l]||0)&&f--,null==a?(k=a=B.precision,o=B.rounding):k=s?a+(n.e-i.e)+1:a,k<0)x.push(1),m=!0;else{if(k=k/p+2|0,l=0,1==S){for(R=R[h=0],k++;(l<T||h)&&k--;l++)M=h*u+(I[l]||0),x[l]=M/R|0,h=M%R|0;m=h||l<T}else{for(1<(h=u/(R[0]+1)|0)&&(R=e(R,h,u),I=e(I,h,u),S=R.length,T=I.length),O=S,w=(b=I.slice(0,S)).length;w<S;b[w++]=0);for((z=R.slice()).unshift(0),C=R[0],R[1]>=u/2&&C++;h=0,(c=t(R,b,S,w))<0?(E=b[0],1<(h=(E=S!=w?E*u+(b[1]||0):E)/C|0)?1==(c=t(v=e(R,h=u<=h?u-1:h,u),b,d=v.length,w=b.length))&&(h--,r(v,S<d?z:R,d,u)):(0==h&&(c=h=1),v=R.slice()),(d=v.length)<w&&v.unshift(0),r(b,v,w,u),-1==c&&(c=t(R,b,S,w=b.length))<1&&(h++,r(b,S<w?z:R,w,u)),w=b.length):0===c&&(h++,b=[0]),x[l++]=h,c&&b[0]?b[w++]=I[O]||0:(b=[I[O]],w=1),(O++<T||null!=b[0])&&k--;);m=null!=b[0]}x[0]||x.shift()}if(1==p)y.e=f,y.r=+m;else{for(l=1,k=x[0];10<=k;k/=10,l++);y.e=l+f*p-1,g(y,s?a+y.e+1:a,o,m)}return y}}()),d=function(){function e(e){var t,r,n,i=this,a="config",o=i.errors?parseInt:parseFloat;return e==r||("object"!=typeof e?!p(i,"object expected",e,a):((n=e[t="precision"])!=r&&((y=n<1||S<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(n=e[t="rounding"])!=r&&((y=n<0||8<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(n=e[t="toExpNeg"])!=r&&((y=n<-C||0<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="toExpPos"])!=r&&((y=n<0||C<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="minE"])!=r&&((y=n<-C||0<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="maxE"])!=r&&((y=n<0||C<n)||o(n)!=n?p(i,t,n,a,0):i[t]=N(n)),(n=e[t="errors"])!=r&&(n===!!n||1===n||0===n?(y=w=0,i[t]=!!n):p(i,t,n,a,1)),(n=e[t="crypto"])!=r&&(n===!!n||1===n||0===n?i[t]=!(!n||!x||"object"!=typeof x):p(i,t,n,a,1)),(n=e[t="modulo"])!=r&&((y=n<0||9<n)||o(n)!=n?p(i,t,n,a,0):i[t]=0|n),(e=e[t="format"])!=r&&("object"==typeof e?i[t]=e:p(i,"format object expected",e,a)))),i}function t(e){return new this(e).exp()}function r(e){return new this(e).ln()}function n(e,t){return new this(e).log(t)}function i(e,t,r){for(var i,a=0,n=new e((t="[object Array]"==M.call(t[0])?t[0]:t)[0]);++a<t.length;){if(!(i=new e(t[a])).s){n=i;break}n[r](i)&&(n=i)}return n}function a(){return i(this,arguments,"lt")}function o(){return i(this,arguments,"gt")}function s(e,t){return new this(e).pow(t)}function c(e){var t,r,n,i=0,a=[],o=this,s=new o(o.ONE);if(null!=e&&u(s,e,"random")?e|=0:e=o.precision,r=Math.ceil(e/_),o.crypto)if(x&&x.getRandomValues)for(t=x.getRandomValues(new Uint32Array(r));i<r;)429e7<=(n=t[i])?t[i]=x.getRandomValues(new Uint32Array(1))[0]:a[i++]=n%1e7;else if(x&&x.randomBytes){for(t=x.randomBytes(r*=4);i<r;)214e7<=(n=t[i]+(t[i+1]<<8)+(t[i+2]<<16)+((127&t[i+3])<<24))?x.randomBytes(4).copy(t,i):(a.push(n%1e7),i+=4);i=r/4}else p(o,"crypto unavailable",x,"random");if(!i)for(;i<r;)a[i++]=1e7*Math.random()|0;for(r=a[--i],e%=_,r&&e&&(n=E(10,_-e),a[i]=(r/n|0)*n);0===a[i];i--)a.pop();if(i<0)a=[r=0];else{for(r=-1;0===a[0];)a.shift(),r-=_;for(i=1,n=a[0];10<=n;)n/=10,i++;i<_&&(r-=_-i)}return s.e=r,s.c=a,s}function f(e){return new this(e).sqrt()}var m=function(){var e=/^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,t=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};return function(r,n,i,a){var o,u,c,l,f=i="string"!=typeof i?(c="number"==typeof i||"[object Number]"==M.call(i))&&0===i&&1/i<0?"-0":i+"":i;if(null==a&&e.test(i))n.s=45===i.charCodeAt(0)?(i=i.slice(1),-1):1;else{if(10==a)return g(new r(i),r.precision,r.rounding);if(i=t.call(i).replace(/^\+(?!-)/,""),n.s=45===i.charCodeAt(0)?(i=i.replace(/^-(?!-)/,""),-1):1,null!=a?a!=(0|a)&&r.errors||(y=!(2<=a&&a<65))?(p(r,"base",a,0,0),l=e.test(i)):(o="["+O.slice(0,a|=0)+"]+",i=i.replace(/\.$/,"").replace(/^\./,"0."),(l=new RegExp("^"+o+"(?:\\."+o+")?$",a<37?"i":"").test(i))?(c&&(15<i.replace(/^0\.0*|\./,"").length&&p(r,0,f),c=!c),i=v(r,i,10,a,n.s)):"Infinity"!=i&&"NaN"!=i&&(p(r,"not a base "+a+" number",f),i="NaN")):l=e.test(i),!l)return n.c=n.e=null,"Infinity"!=i&&("NaN"!=i&&p(r,"not a number",f),n.s=null),w=0,n}for(0<(u=(i=-1<(o=i.indexOf("."))?i.replace(".",""):i).search(/e/i))?(o<0&&(o=u),o+=+i.slice(u+1),i=i.substring(0,u)):o<0&&(o=i.length),u=0;48===i.charCodeAt(u);u++);for(a=i.length;48===i.charCodeAt(--a););if(i=i.slice(u,a+1)){if(a=i.length,c&&15<a&&p(r,0,f),n.e=o=o-u-1,n.c=[],u=(o+1)%_,o<0&&(u+=_),u<a){for(u&&n.c.push(+i.slice(0,u)),a-=_;u<a;)n.c.push(+i.slice(u,u+=_));i=i.slice(u),u=_-i.length}else u-=a;for(;u--;i+="0");n.c.push(+i),b&&(n.e>r.maxE?n.c=n.e=null:n.e<r.minE&&(n.c=[n.e=0]))}else n.c=[n.e=0];return w=0,n}}();return function l(i){function u(e,t){var r=this;if(!(r instanceof u))return p(u,"Decimal called without new",e),new u(e,t);if(e instanceof(r.constructor=u)){if(null==t)return w=0,r.s=e.s,r.e=e.e,r.c=(e=e.c)&&e.slice(),r;if(10==t)return g(new u(e),u.precision,u.rounding);e+=""}return m(u,r,e,t)}return u.precision=20,u.rounding=4,u.modulo=1,u.toExpNeg=-7,u.toExpPos=21,u.minE=-C,u.maxE=C,u.errors=!0,u.crypto=!1,u.format={decimalSeparator:".",groupSeparator:",",groupSize:3,secondaryGroupSize:0,fractionGroupSeparator:" ",fractionGroupSize:0},u.prototype=T,u.ONE=new u(1),u.ROUND_UP=0,u.ROUND_DOWN=1,u.ROUND_CEIL=2,u.ROUND_FLOOR=3,u.ROUND_HALF_UP=4,u.ROUND_HALF_DOWN=5,u.ROUND_HALF_EVEN=6,u.ROUND_HALF_CEIL=7,u.ROUND_HALF_FLOOR=8,u.EUCLID=9,u.config=e,u.constructor=l,u.exp=t,u.ln=r,u.log=n,u.max=a,u.min=o,u.pow=s,u.sqrt=f,u.random=c,null!=i&&u.config(i),u}()}();void 0!==(n=function(){return d}.call(t,r,t,e))&&(e.exports=n)}(this)},function(e,t,r){"use strict";var i=r(19);t.name="bignumber",t.factory=function(e,t,r,n){var a=n("bignumber",{"":function(){return new e.BigNumber(0)},number:function(t){return new e.BigNumber(t+"")},string:function(t){return new e.BigNumber(t)},BigNumber:function(e){return e},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={0:"0",1:"\\left(${args[0]}\\right)"},a}},function(e,t){"use strict";e.exports=function r(e,t,n){return e&&"function"==typeof e.map?e.map(function(e){return r(e,t,n)}):t(e)}},function(e,t,r){"use strict";var i=r(19);t.name="boolean",t.factory=function(e,t,r,n){var a=n("bool",{"":function(){return!1},boolean:function(e){return e},number:function(e){return!!e},BigNumber:function(e){return!e.isZero()},string:function(e){var t=e.toLowerCase();if("true"===t)return!0;if("false"===t)return!1;t=Number(e);if(""==e||isNaN(t))throw new Error('Cannot convert "'+e+'" to a boolean');return!!t},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){e.exports=[r(22),r(25)]},function(e,t,r){"use strict";var i=r(23).format,a=r(3).lazy;t.name="Chain",t.path="type",t.factory=function(e,t,r,n,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");e&&e.isChain?this.value=e.value:this.value=e}function u(e,t){"function"==typeof t&&(s.prototype[e]=f(t))}function f(e){return function(){for(var t=[this.value],r=0;r<arguments.length;r++)t[r+1]=arguments[r];return new s(e.apply(e,t))}}return s.prototype.type="Chain",s.prototype.isChain=!0,s.prototype.done=function(){return this.value},s.prototype.valueOf=function(){return this.value},s.prototype.toString=function(){return i(this.value)},(s.createProxy=function(e,t){if("string"==typeof e)u(e,t);else for(var r in e)e.hasOwnProperty(r)&&u(r,e[r])})(o),o.on("import",function(e,t,r){void 0===r&&function(e,t){a(s.prototype,e,function(){var e=t();return"function"==typeof e?f(e):void 0})}(e,t)}),s},t.math=!0,t.lazy=!1},function(e,t,r){"use strict";var i=r(6).format,a=r(24).format;t.isString=function(e){return"string"==typeof e},t.endsWith=function(e,t){var r=e.length-t.length,n=e.length;return e.substring(r,n)===t},t.format=function(e,r){return"number"==typeof e?i(e,r):e&&!0===e.isBigNumber?a(e,r):e&&!0===e.isFraction?r&&"decimal"===r.fraction?e.toString():e.s*e.n+"/"+e.d:Array.isArray(e)?function n(e,r){if(Array.isArray(e)){for(var i="[",a=e.length,o=0;o<a;o++)0!=o&&(i+=", "),i+=n(e[o],r);return i+"]"}return t.format(e,r)}(e,r):t.isString(e)?'"'+e+'"':"function"==typeof e?e.syntax?e.syntax+"":"function":"object"==typeof e?"function"==typeof e.format?e.format(r):e.toString():String(e)}},function(e,t){t.format=function(e,r){if("function"==typeof r)return r(e);if(!e.isFinite())return e.isNaN()?"NaN":e.gt(0)?"Infinity":"-Infinity";var n="auto",i=void 0;switch(void 0!==r&&(r.notation&&(n=r.notation),"number"==typeof r?i=r:r.precision&&(i=r.precision)),n){case"fixed":return t.toFixed(e,i);case"exponential":return t.toExponential(e,i);case"auto":var u,a=.001,o=1e5;return r&&r.exponential&&(void 0!==r.exponential.lower&&(a=r.exponential.lower),void 0!==r.exponential.upper)&&(o=r.exponential.upper),e.constructor.toExpNeg,e.constructor.toExpPos,(e.constructor.config({toExpNeg:Math.round(Math.log(a)/Math.LN10),toExpPos:Math.round(Math.log(o)/Math.LN10)}),e.isZero())?"0":((u=e.abs()).gte(a)&&u.lt(o)?e.toSignificantDigits(i).toFixed():t.toExponential(e,i)).replace(/((\.\d*?)(0+))($|e)/,function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t});default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", or "fixed".')}},t.toExponential=function(e,t){return void 0!==t?e.toExponential(t-1):e.toExponential()},t.toFixed=function(e,t){return e.toFixed(t||0)}},function(e,t){"use strict";t.name="chain",t.factory=function(e,t,r,n){return n("chain",{"":function(){return new e.Chain},any:function(t){return new e.Chain(t)}})}},function(e,t,r){e.exports=[r(27),r(28)]},function(e,t,r){"use strict";var i=r(6).isNumber,a=r(6).format;t.name="Complex",t.path="type",t.factory=function(e,t,r,n){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");switch(arguments.length){case 0:this.re=0,this.im=0;break;case 1:var r=e;if("object"==typeof r){if("re"in r&&"im"in r){var n=new o(r.re,r.im);this.re=n.re,this.im=n.im;break}if("r"in r&&"phi"in r){n=o.fromPolar(r.r,r.phi);this.re=n.re,this.im=n.im;break}}throw new SyntaxError("Object with the re and im or r and phi properties expected.");case 2:if(!i(e)||!i(t))throw new TypeError("Two numbers expected in Complex constructor");this.re=e,this.im=t;break;default:throw new SyntaxError("One, two or three arguments expected in Complex constructor")}}function s(){for(;" "==d||"\t"==d;)f()}function c(e){return"0"<=e&&e<="9"}function f(){v++,d=g.charAt(v)}function l(e){v=e,d=g.charAt(v)}function p(){var t="",e=v;if("+"==d?f():"-"==d&&(t+=d,f()),!function(e){return"0"<=e&&e<="9"||"."==e}(d))return l(e),null;if("."==d){if(t+=d,f(),!c(d))return l(e),null}else{for(;c(d);)t+=d,f();"."==d&&(t+=d,f())}for(;c(d);)t+=d,f();if("E"==d||"e"==d){if(t+=d,f(),"+"!=d&&"-"!=d||(t+=d,f()),!c(d))return l(e),null;for(;c(d);)t+=d,f()}return t}function m(){var e=g.charAt(v+1);return"I"==d||"i"==d?(f(),"1"):"+"!=d&&"-"!=d||"I"!=e&&"i"!=e?null:(e="+"==d?"1":"-1",f(),f(),e)}function h(){return new SyntaxError('End of string expected, got "'+g.substr(v)+'"')}var g,v,d;return o.prototype.isComplex=!0,o.prototype.type="Complex",o.parse=function(e){if(v=-1,d="","string"!=typeof(g=e))throw new TypeError("Invalid argument in Complex.parse, string expected");f(),s();var t=p();if(t){if("I"==d||"i"==d){if(f(),s(),d)throw h();return new o(0,Number(t))}s();var r=d;if("+"!=r&&"-"!=r){if(s(),d)throw h();return new o(Number(t),0)}f(),s();var n=p();if(n){if("I"!=d&&"i"!=d)throw new SyntaxError('Character "i" expected, got "'+d+'"');f()}else if(!(n=m()))throw new SyntaxError("Imaginary part expected");if("-"==r&&(n="-"==n[0]?"+"+n.substring(1):"-"+n),f(),s(),d)throw h();return new o(Number(t),Number(n))}if(t=m()){if(s(),d)throw h();return new o(0,Number(t))}throw new SyntaxError('Could not parse: "'+e+'" as complex number')},o.fromPolar=function(e){switch(arguments.length){case 1:if("object"==typeof e)return o.fromPolar(e.r,e.phi);throw new TypeError("Input has to be an object with r and phi keys.");case 2:var r=e,n=arguments[1];if(i(r)){if(n&&n.isUnit&&n.hasBase("ANGLE")&&(n=n.toNumber("rad")),i(n))return new o(r*Math.cos(n),r*Math.sin(n));throw new TypeError("Phi is not a number nor an angle unit.")}throw new TypeError("Radius r is not a number.");default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},o.prototype.toPolar=function(){return{r:Math.sqrt(this.re*this.re+this.im*this.im),phi:Math.atan2(this.im,this.re)}},o.prototype.clone=function(){return new o(this.re,this.im)},o.prototype.equals=function(e){return this.re===e.re&&this.im===e.im},o.prototype.format=function(e){var r=this.im,n=this.re,o=a(this.re,e),s=a(this.im,e),e=i(e)?e:e?e.precision:null;return 0==(r=null!==e&&(e=Math.pow(10,-e),Math.abs(n/r)<e&&(n=0),Math.abs(r/n)<e)?0:r)?o:0==n?1==r?"i":-1==r?"-i":s+"i":0<r?1==r?o+" + i":o+" + "+s+"i":-1==r?o+" - i":o+" - "+s.substring(1)+"i"},o.prototype.toString=function(){return this.format()},o.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},o.fromJSON=function(e){return new o(e)},o.prototype.valueOf=o.prototype.toString,o}},function(e,t,r){"use strict";var i=r(19);t.name="complex",t.factory=function(e,t,n,a){var o=r(29),s=a("complex",{"":function(){return new e.Complex(0,0)},number:function(t){return new e.Complex(t,0)},"number, number":function(t,r){return new e.Complex(t,r)},"BigNumber, BigNumber":function(t,r){return new e.Complex(t.toNumber(),r.toNumber())},Complex:function(e){return e.clone()},string:function(t){return e.Complex.parse(t)},Object:function(t){if("re"in t&&"im"in t)return new e.Complex(t.re,t.im);if("r"in t&&"phi"in t)return e.Complex.fromPolar(t.r,t.phi);throw new Error("Expected object with either properties re and im, or properties r and phi.")},"Array | Matrix":function(e){return i(e,s)}});return s.toTex={0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)+"+o.symbols.i+"\\cdot\\left(${args[1]}\\right)\\right)"},s}},function(e,t){"use strict";t.symbols={Alpha:"A",alpha:"\\alpha",Beta:"B",beta:"\\beta",Gamma:"\\Gamma",gamma:"\\gamma",Delta:"\\Delta",delta:"\\delta",Epsilon:"E",epsilon:"\\epsilon",varepsilon:"\\varepsilon",Zeta:"Z",zeta:"\\zeta",Eta:"H",eta:"\\eta",Theta:"\\Theta",theta:"\\theta",vartheta:"\\vartheta",Iota:"I",iota:"\\iota",Kappa:"K",kappa:"\\kappa",varkappa:"\\varkappa",Lambda:"\\Lambda",lambda:"\\lambda",Mu:"M",mu:"\\mu",Nu:"N",nu:"\\nu",Xi:"\\Xi",xi:"\\xi",Omicron:"O",omicron:"o",Pi:"\\Pi",pi:"\\pi",varpi:"\\varpi",Rho:"P",rho:"\\rho",varrho:"\\varrho",Sigma:"\\Sigma",sigma:"\\sigma",varsigma:"\\varsigma",Tau:"T",tau:"\\tau",Upsilon:"\\Upsilon",upsilon:"\\upsilon",Phi:"\\Phi",phi:"\\phi",varphi:"\\varphi",Chi:"X",chi:"\\chi",Psi:"\\Psi",psi:"\\psi",Omega:"\\Omega",omega:"\\omega",true:"\\mathrm{True}",false:"\\mathrm{False}",i:"i",inf:"\\infty",Inf:"\\infty",infinity:"\\infty",Infinity:"\\infty",oo:"\\infty",lim:"\\lim",undefined:"\\mathbf{?}"},t.operators={transpose:"^\\top",factorial:"!",pow:"^",dotPow:".^\\wedge",unaryPlus:"+",unaryMinus:"-",bitNot:"~",not:"\\neg",multiply:"\\cdot",divide:"\\frac",dotMultiply:".\\cdot",dotDivide:".:",mod:"\\mod",add:"+",subtract:"-",to:"\\rightarrow",leftShift:"<<",rightArithShift:">>",rightLogShift:">>>",equal:"=",unequal:"\\neq",smaller:"<",larger:">",smallerEq:"\\leq",largerEq:"\\geq",bitAnd:"\\&",bitXor:"\\underline{|}",bitOr:"|",and:"\\wedge",xor:"\\veebar",or:"\\vee"},t.defaultTemplate="\\mathrm{${name}}\\left(${args}\\right)";var r={deg:"^\\circ"};t.toSymbol=function(e,n){return(n=void 0!==n&&n)?r.hasOwnProperty(e)?r[e]:"\\mathrm{"+e+"}":t.symbols.hasOwnProperty(e)?t.symbols[e]:-1!==e.indexOf("_")?(n=e.indexOf("_"),t.toSymbol(e.substring(0,n))+"_{"+t.toSymbol(e.substring(n+1))+"}"):e}},function(e,t,r){e.exports=[r(31),r(35)]},function(e,t,r){var i=r(32);i.prototype.type="Fraction",i.prototype.isFraction=!0,i.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},i.fromJSON=function(e){return new i(e)},t.name="Fraction",t.path="type",t.factory=function(e,t,r,n){return i}},function(e,t,r){var i;!function(e){!function(){"use strict";function o(e,t){return isNaN(e=parseInt(e,10))&&s(),e*t}function s(){throw"Invalid Param"}function u(e,t){return this instanceof u?(l(e,t),e=u.REDUCE?g(f.d,f.n):1,this.s=f.s,this.n=f.n/e,void(this.d=f.d/e)):new u(e,t)}function l(e,t){var r,n=0,i=1,a=1,u=0,c=0,l=0,p=1,m=1,h=0,g=1,v=1,d=1,y=1e7;if(null!=e)if(void 0!==t)a=(n=e)*(i=t);else switch(typeof e){case"object":"d"in e&&"n"in e?(n=e.n,i=e.d,"s"in e&&(n*=e.s)):0 in e?(n=e[0],1 in e&&(i=e[1])):s(),a=n*i;break;case"number":if((e=e<0?-(a=e):e)%1==0)n=e;else if(0<e){for(1<=e&&(e/=m=Math.pow(10,Math.floor(1+Math.log(e)/Math.LN10)));g<=y&&d<=y;){if(e===(r=(h+v)/(g+d))){i=g+d<=y?(n=h+v,g+d):g<d?(n=v,d):(n=h,g);break}r<e?(h+=v,g+=d):(v+=h,d+=g),i=y<g?(n=v,d):(n=h,g)}n*=m}break;case"string":if("-"===(g=e.match(/\d+|./g))[h]?(a=-1,h++):"+"===g[h]&&h++,g.length===h+1?c=o(g[h++],a):"."===g[h+1]||"."===g[h]?("."!==g[h]&&(u=o(g[h++],a)),(++h+1===g.length||"("===g[h+1]&&")"===g[h+3]||"'"===g[h+1]&&"'"===g[h+3])&&(c=o(g[h],a),p=Math.pow(10,g[h].length),h++),("("===g[h]&&")"===g[h+2]||"'"===g[h]&&"'"===g[h+2])&&(l=o(g[h+1],a),m=Math.pow(10,g[h+1].length)-1,h+=3)):"/"===g[h+1]||":"===g[h+1]?(c=o(g[h],a),p=o(g[h+2],1),h+=3):"/"===g[h+3]&&" "===g[h+1]&&(u=o(g[h],a),c=o(g[h+2],a),p=o(g[h+4],1),h+=5),g.length<=h){a=n=l+m*(u*p+c),i=p*m;break}default:s()}if(!i)throw"DIV/0";f.s=a<0?-1:1,f.n=Math.abs(n),f.d=Math.abs(i)}function g(e,t){if(!e)return t;if(!t)return e;for(;;){if(!(e%=t))return t;if(!(t%=e))return e}}var f={s:1,n:0,d:1};u.REDUCE=1,u.prototype={s:1,n:0,d:1,abs:function(){return new u(this.n,this.d)},neg:function(){return new u(-this.s*this.n,this.d)},add:function(e,t){return l(e,t),new u(this.s*this.n*f.d+f.s*this.d*f.n,this.d*f.d)},sub:function(e,t){return l(e,t),new u(this.s*this.n*f.d-f.s*this.d*f.n,this.d*f.d)},mul:function(e,t){return l(e,t),new u(this.s*f.s*this.n*f.n,this.d*f.d)},div:function(e,t){return l(e,t),new u(this.s*f.s*this.n*f.d,this.d*f.n)},clone:function(){return new u(this)},mod:function(e,t){return void 0===e?new u(this.s*this.n%this.d,1):(l(e,t),0==f.n*this.d&&u(0,0),new u(this.s*f.d*this.n%(f.n*this.d),f.d*this.d))},gcd:function(e,t){return l(e,t),new u(g(f.n,this.n),f.d*this.d/g(f.d,this.d))},lcm:function(e,t){return l(e,t),new u(f.n*this.n/g(f.n,this.n),g(f.d,this.d))},ceil:function(){return new u(Math.ceil(this.s*this.n/this.d),1)},floor:function(){return new u(Math.floor(this.s*this.n/this.d),1)},round:function(){return new u(Math.round(this.s*this.n/this.d),1)},inverse:function(){return new u(this.s*this.d,this.n)},pow:function(e){var t=this.d,r=this.n;return e<0?(this.d=Math.pow(r,-e),this.n=Math.pow(t,-e)):(this.d=Math.pow(t,e),this.n=Math.pow(r,e)),0==e%2&&(this.s=1),this},equals:function(e,t){return l(e,t),this.s*this.n*f.d==f.s*f.n*this.d},compare:function(e,t){l(e,t);e=this.s*this.n*f.d-f.s*f.n*this.d;return(0<e)-(e<0)},divisible:function(e,t){return l(e,t),!(!(f.n*this.d)||this.n*f.d%(f.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(e){var r="",n=this.n,i=this.d;return this.s<0&&(r+="-"),1===i?r+=n:(e&&0<(e=Math.floor(n/i))&&(r=r+e+" ",n%=i),r=(r+=n)+"/"+i),r},toLatex:function(e){var r="",n=this.n,i=this.d;return this.s<0&&(r+="-"),1===i?r+=n:(e&&0<(e=Math.floor(n/i))&&(r+=e,n%=i),r=(r=(r+="\\frac{")+n+"}{")+i+"}"),r},toString:function(){var e,t=this.n,r=this.d;u.REDUCE||(t/=e=g(t,r),r/=e);for(var n=String(t).split(""),i=0,a=[~this.s?"":"-","",""],o="",s=function(t){for(;t%2==0;t/=2);for(;t%5==0;t/=5);if(1===t)return 0;for(var r=10%t,n=1;1!==r;n++)if(r=10*r%t,2e3<n)return 0;return n}(r),c=function(t,r){for(var n=1,i=function(e,t,r){for(var n=1;0<t;e=e*e%r,t>>=1)1&t&&(n=n*e%r);return n}(10,r,t),a=0;a<300;a++){if(n===i)return a;n=10*n%t,i=10*i%t}return 0}(r,s),f=-1,l=1,p=10+s+c+n.length,v=0;v<p;v++,i*=10){if(v<n.length?i+=Number(n[v]):(l=2,f++),0<s)if(f===c)a[l]+=o+"(",o="";else if(f===s+c){a[l]+=o+")";break}r<=i?(a[l]+=o+(i/r|0),o="",i%=r):1<l?o+="0":a[l]&&(a[l]+="0")}return a[0]+=a[1]||"0",a[2]?a[0]+"."+a[2]:a[0]}},r(34).amd?void 0!==(i=function(){return u}.apply(t,[]))&&(e.exports=i):e.exports=u}()}.call(t,r(33)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children=[],e.webpackPolyfill=1),e}},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,r){"use strict";var i=r(19);t.name="fraction",t.factory=function(e,t,r,n){var a=n("fraction",{number:function(t){if(!isFinite(t)||isNaN(t))throw new Error(t+" cannot be represented as a fraction");return new e.Fraction(t)},string:function(t){return new e.Fraction(t)},"number, number":function(t,r){return new e.Fraction(t,r)},Fraction:function(e){return e},Object:function(t){return new e.Fraction(t)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){e.exports=[r(37),r(45),r(46),r(48),r(57),r(63),r(64),r(65),r(66),r(50),r(67)]},function(e,t,r){"use strict";var o=r(38).string.isString;t.name="Matrix",t.path="type",t.factory=function(e,t,r,n){function i(){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator")}return i.prototype.type="Matrix",i.prototype.isMatrix=!0,i.storage=function(e){if(!o(e))throw new TypeError("format must be a string value");var t=i._storage[e];if(t)return t;throw new SyntaxError("Unsupported matrix storage format: "+e)},i._storage={},i.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},i.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},i.prototype.create=function(e,t){throw new Error("Cannot invoke create on a Matrix interface")},i.prototype.subset=function(e,t,r){throw new Error("Cannot invoke subset on a Matrix interface")},i.prototype.get=function(e){throw new Error("Cannot invoke get on a Matrix interface")},i.prototype.set=function(e,t,r){throw new Error("Cannot invoke set on a Matrix interface")},i.prototype.resize=function(e,t){throw new Error("Cannot invoke resize on a Matrix interface")},i.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},i.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},i.prototype.map=function(e,t){throw new Error("Cannot invoke map on a Matrix interface")},i.prototype.forEach=function(e){throw new Error("Cannot invoke forEach on a Matrix interface")},i.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},i.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},i.prototype.format=function(e){throw new Error("Cannot invoke format on a Matrix interface")},i.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},i}},function(e,t,r){"use strict";t.array=r(39),t.boolean=r(43),t.function=r(44),t.number=r(6),t.object=r(3),t.string=r(23),t.types=r(40),t.emitter=r(8)},function(e,t,r){"use strict";function i(e,r,n,a){var s,u=e.length,f=r[n],l=Math.min(u,f);if(e.length=f,n<r.length-1){for(var p=n+1,o=0;o<l;o++)s=e[o],Array.isArray(s)||(e[o]=s=[s]),i(s,r,p,a);for(o=l;o<f;o++)i(e[o]=s=[],r,p,a)}else{for(o=0;o<l;o++)for(;Array.isArray(e[o]);)e[o]=e[o][0];if(a!==t.UNINITIALIZED)for(o=l;o<f;o++)e[o]=c.clone(a)}}var s=r(6),u=r(23),c=r(3),f=(r(40),r(41)),l=r(42);t.size=function(e){for(var t=[];Array.isArray(e);)t.push(e.length),e=e[0];return t},t.validate=function(e,t){if(0==t.length){if(Array.isArray(e))throw new f(e.length,0)}else!function n(e,t,r){var a=e.length;if(a!=t[r])throw new f(a,t[r]);if(r<t.length-1)for(var o=r+1,i=0;i<a;i++){var s=e[i];if(!Array.isArray(s))throw new f(t.length-1,t.length,"<");n(e[i],t,o)}else for(i=0;i<a;i++)if(Array.isArray(e[i]))throw new f(t.length+1,t.length,">")}(e,t,0)},t.validateIndex=function(e,t){if(!s.isNumber(e)||!s.isInteger(e))throw new TypeError("Index must be an integer (value: "+e+")");if(e<0)throw new l(e);if(void 0!==t&&t<=e)throw new l(e,t)},t.UNINITIALIZED={},t.resize=function(e,t,r){if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new Error("Resizing to scalar is not supported");return t.forEach(function(e){if(!s.isNumber(e)||!s.isInteger(e)||e<0)throw new TypeError("Invalid size, must contain positive integers (size: "+u.format(t)+")")}),i(e,t,0,void 0!==r?r:0),e},t.squeeze=function(e,r){for(var n=r||t.size(e);Array.isArray(e)&&1===e.length;)e=e[0],n.shift();for(var i=n.length;1===n[i-1];)i--;return i<n.length&&(e=function a(e,t,r){if(r<t)for(var o=r+1,n=0,i=e.length;n<i;n++)e[n]=a(e[n],t,o);else for(;Array.isArray(e);)e=e[0];return e}(e,i,0),n.length=i),e},t.unsqueeze=function(e,r,n,i){var a=i||t.size(e);if(n)for(var s=0;s<n;s++)e=[e],a.unshift(1);for(e=function o(e,t,r){if(Array.isArray(e))for(var a=r+1,n=0,i=e.length;n<i;n++)e[n]=o(e[n],t,a);else for(var s=r;s<t;s++)e=[e];return e}(e,r,0);a.length<r;)a.push(1);return e},t.flatten=function(e){var t;return Array.isArray(e)?(t=[],e.forEach(function r(e){Array.isArray(e)?e.forEach(r):t.push(e)}),t):e},t.isArray=Array.isArray},function(e,t){"use strict";t.type=function(e){var t=typeof e;return"object"==t?null===e?"null":e instanceof Boolean?"boolean":e instanceof Number?"number":e instanceof String?"string":Array.isArray(e)?"Array":e instanceof Date?"Date":e instanceof RegExp?"RegExp":"Object":"function"==t?"Function":t}},function(e,t){"use strict";function r(e,t,n){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.actual=e,this.expected=t,this.relation=n,this.message="Dimension mismatch ("+(Array.isArray(e)?"["+e.join(", ")+"]":e)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=(new Error).stack}(r.prototype=new RangeError).constructor=RangeError,r.prototype.name="DimensionError",r.prototype.isDimensionError=!0,e.exports=r},function(e,t){"use strict";function r(e,t,n){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");this.index=e,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=n),void 0!==this.min&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":void 0!==this.max&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=(new Error).stack}(r.prototype=new RangeError).constructor=RangeError,r.prototype.name="IndexError",r.prototype.isIndexError=!0,e.exports=r},function(e,t){"use strict";t.isBoolean=function(e){return"boolean"==typeof e}},function(e,t){t.memoize=function(e,t){return function r(){"object"!=typeof r.cache&&(r.cache={});for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];var a=t?t(n):JSON.stringify(n);return a in r.cache?r.cache[a]:r.cache[a]=e.apply(e,n)}}},function(e,t,r){"use strict";var i=r(38),a=r(41),o=i.string,s=i.array,u=i.object,c=i.number,f=Array.isArray,l=c.isNumber,p=c.isInteger,m=o.isString,h=s.validateIndex;t.name="DenseMatrix",t.path="type",t.factory=function(e,t,n,c){function g(e,t){if(!(this instanceof g))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!m(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix)"DenseMatrix"===e.type?(this._data=u.clone(e._data),this._size=u.clone(e._size)):(this._data=e.toArray(),this._size=e.size()),this._datatype=t||e._datatype;else if(e&&f(e.data)&&f(e.size))this._data=e.data,this._size=e.size,this._datatype=t||e.datatype;else{if(f(e))this._data=function w(e){for(var t=0,r=e.length;t<r;t++){var n=e[t];f(n)?e[t]=w(n):n&&!0===n.isMatrix&&(e[t]=w(n.valueOf()))}return e}(e),this._size=s.size(this._data),s.validate(this._data,this._size);else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._data=[],this._size=[0]}this._datatype=t}}function v(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var n=t.size();if(n.length!=e._size.length)throw new a(n.length,e._size.length);for(var i=t.min(),o=t.max(),s=0,u=e._size.length;s<u;s++)h(i[s],e._size[s]),h(o[s],e._size[s]);return new g(function d(e,t,r,n){var i=n==r-1,a=t.dimension(n);return(i?a.map(function(t){return e[t]}):a.map(function(i){i=e[i];return d(i,t,r,n+1)})).valueOf()}(e._data,t,n.length,0),e._datatype)}function x(e,t,r,n,i){var a=i==n-1,o=t.dimension(i);a?o.forEach(function(t,n){h(t),e[t]=r[n[0]]}):o.forEach(function(a,o){h(a),x(e[a],t,r[o[0]],n,i+1)})}function b(e,t,r){for(var n=u.clone(e._size),i=!1;n.length<t.length;)n.push(0),i=!0;for(var a=0,o=t.length;a<o;a++)t[a]>n[a]&&(n[a]=t[a],i=!0);i&&E(e,n,r)}var n=n(r(37)),E=((g.prototype=new n).type="DenseMatrix",g.prototype.isDenseMatrix=!0,g.prototype.storage=function(){return"dense"},g.prototype.datatype=function(){return this._datatype},g.prototype.create=function(e,t){return new g(e,t)},g.prototype.subset=function(e,t,r){switch(arguments.length){case 1:return v(this,e);case 2:case 3:return function(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var i,o=t.size(),c=t.isScalar();if(r&&!0===r.isMatrix?(i=r.size(),r=r.valueOf()):i=s.size(r),c){if(0!==i.length)throw new TypeError("Scalar expected");e.set(t.min(),r,n)}else{if(o.length<e._size.length)throw new a(o.length,e._size.length,"<");if(i.length<o.length){for(var f=0,l=0;1===o[f]&&1===i[f];)f++;for(;1===o[f];)l++,f++;r=s.unsqueeze(r,o.length,l,i)}if(!u.deepEqual(o,i))throw new a(o,i,">");b(e,t.max().map(function(e){return e+1}),n);c=o.length;x(e._data,t,r,c,0)}return e}(this,e,t,r);default:throw new SyntaxError("Wrong number of arguments")}},g.prototype.get=function(e){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);for(var t=0;t<e.length;t++)h(e[t],this._size[t]);for(var r=this._data,n=0,i=e.length;n<i;n++){var o=e[n];h(o,r.length),r=r[o]}return u.clone(r)},g.prototype.set=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(e.length<this._size.length)throw new a(e.length,this._size.length,"<");b(this,e.map(function(e){return e+1}),r);for(var o,u=this._data,n=0,i=e.length-1;n<i;n++)o=e[n],h(o,u.length),u=u[o];return o=e[e.length-1],h(o,u.length),u[o]=t,this},g.prototype.resize=function(e,t,r){if(f(e))return r=r?this.clone():this,E(r,e,t);throw new TypeError("Array expected")},function(e,t,r){if(0!==t.length)return e._size=u.clone(t),e._data=s.resize(e._data,e._size,r),e;for(var n=e._data;f(n);)n=n[0];return u.clone(n)});return g.prototype.clone=function(){return new g({data:u.clone(this._data),size:u.clone(this._size),datatype:this._datatype})},g.prototype.size=function(){return this._size},g.prototype.map=function(e){var t=this,r=function(n,i){return f(n)?n.map(function(e,t){return r(e,i.concat(t))}):e(n,i,t)};return new g({data:r(this._data,[]),size:u.clone(this._size),datatype:this._datatype})},g.prototype.forEach=function(e){var t=this,r=function(n,i){f(n)?n.forEach(function(e,t){r(e,i.concat(t))}):e(n,i,t)};r(this._data,[])},g.prototype.toArray=function(){return u.clone(this._data)},g.prototype.valueOf=function(){return this._data},g.prototype.format=function(e){return o.format(this._data,e)},g.prototype.toString=function(){return o.format(this._data)},g.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},g.prototype.diagonal=function(e){if(e){if(!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e))throw new TypeError("The parameter k must be an integer number")}else e=0;for(var t=0<e?e:0,r=e<0?-e:0,e=this._size[0],i=this._size[1],a=Math.min(e-r,i-t),o=[],s=0;s<a;s++)o[s]=u.clone(this._data[s+r][s+t]);return new g({data:o,size:[a],datatype:this._datatype})},g.diagonal=function(t,r,n,i,a){if(!f(t))throw new TypeError("Array expected, size parameter");if(2!==t.length)throw new Error("Only two dimensions matrix are supported");if(t=t.map(function(e){if(e&&!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e)||e<1)throw new Error("Size values must be positive integers");return e}),n){if(n&&!0===n.isBigNumber&&(n=n.toNumber()),!l(n)||!p(n))throw new TypeError("The parameter k must be an integer number")}else n=0;i&&m(a)&&(i=c.convert(i,a));var o,u=0<n?n:0,h=n<0?-n:0,a=t[0],n=t[1],y=Math.min(a-h,n-u);if(f(r)){if(r.length!==y)throw new Error("Invalid value array length");o=function(e){return r[e]}}else if(r&&!0===r.isMatrix){var x=r.size();if(1!==x.length||x[0]!==y)throw new Error("Invalid matrix length");o=function(e){return r.get([e])}}else o=function(){return r};i=i||(o(0)&&!0===o(0).isBigNumber?new e.BigNumber(0):0);var b=[];if(0<t.length)for(var b=s.resize(b,t,i),w=0;w<y;w++)b[w+h][w+u]=o(w);return new g({data:b,size:[a,n]})},g.fromJSON=function(e){return new g(e)},g.prototype.swapRows=function(e,t){if(!(l(e)&&p(e)&&l(t)&&p(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return h(e,this._size[0]),h(t,this._size[0]),g._swapRows(e,t,this._data),this},g._swapRows=function(e,t,r){var n=r[e];r[e]=r[t],r[t]=n},e.Matrix._storage.dense=g,e.Matrix._storage.default=g},t.lazy=!1},function(e,t,r){"use strict";var i=r(38),a=r(41),o=i.array,s=i.object,u=i.string,c=i.number,f=Array.isArray,l=c.isNumber,p=c.isInteger,m=u.isString,h=o.validateIndex;t.name="SparseMatrix",t.path="type",t.factory=function(e,t,n,g){function v(e,t){if(!(this instanceof v))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!m(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix)!function(e,t,r){"SparseMatrix"===t.type?(e._values=t._values?s.clone(t._values):void 0,e._index=s.clone(t._index),e._ptr=s.clone(t._ptr),e._size=s.clone(t._size),e._datatype=r||t._datatype):b(e,t.valueOf(),r||t._datatype)}(this,e,t);else if(e&&f(e.index)&&f(e.ptr)&&f(e.size))this._values=e.values,this._index=e.index,this._ptr=e.ptr,this._size=e.size,this._datatype=t||e.datatype;else if(f(e))b(this,e,t);else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=t}}var d=n(r(37)),y=n(r(47)),b=function(e,t,r){e._values=[],e._index=[],e._ptr=[],e._datatype=r;var n=t.length,i=0,a=y,o=0;if(m(r)&&(a=g.find(y,[r,r])||y,o=g.convert(0,r)),0<n){var s=0;do{e._ptr.push(e._index.length);for(var u=0;u<n;u++){var l,c=t[u];f(c)?(0===s&&i<c.length&&(i=c.length),s<c.length&&(a(l=c[s],o)||(e._values.push(l),e._index.push(u)))):(0===s&&i<1&&(i=1),a(c,o)||(e._values.push(c),e._index.push(u)))}}while(++s<i)}e._ptr.push(e._index.length),e._size=[n,i]},w=((v.prototype=new d).type="SparseMatrix",v.prototype.isSparseMatrix=!0,v.prototype.storage=function(){return"sparse"},v.prototype.datatype=function(){return this._datatype},v.prototype.create=function(e,t){return new v(e,t)},v.prototype.density=function(){var e=this._size[0],t=this._size[1];return 0!==e&&0!==t?this._index.length/(e*t):0},v.prototype.subset=function(e,t,r){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return w(this,e);case 2:case 3:return N(this,e,t,r);default:throw new SyntaxError("Wrong number of arguments")}},function(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var n=t.size();if(n.length!=e._size.length)throw new a(n.length,e._size.length);for(var s,u,c=t.min(),f=t.max(),i=0,o=e._size.length;i<o;i++)h(c[i],e._size[i]),h(f[i],e._size[i]);var l=e._values,p=e._index,m=e._ptr,g=t.dimension(0),t=t.dimension(1),y=[],x=[],b=(g.forEach(function(e,t){x[e]=t[0],y[e]=!0}),l?[]:void 0),w=[],N=[];return t.forEach(function(e){for(N.push(w.length),s=m[e],u=m[e+1];s<u;s++)i=p[s],!0===y[i]&&(w.push(x[i]),b)&&b.push(l[s])}),N.push(w.length),new v({values:b,index:w,ptr:N,size:n,datatype:e._datatype})}),N=function(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var i,u=t.size(),c=t.isScalar();if(r&&!0===r.isMatrix?(i=r.size(),r=r.toArray()):i=o.size(r),c){if(0!==i.length)throw new TypeError("Scalar expected");e.set(t.min(),r,n)}else{if(1!==u.length&&2!==u.length)throw new a(u.length,e._size.length,"<");if(i.length<u.length){for(var f=0,l=0;1===u[f]&&1===i[f];)f++;for(;1===u[f];)l++,f++;r=o.unsqueeze(r,u.length,l,i)}if(!s.deepEqual(u,i))throw new a(u,i,">");for(var p=t.min()[0],m=t.min()[1],h=i[0],g=i[1],v=0;v<h;v++)for(var d=0;d<g;d++){var y=r[v][d];e.set([v+p,d+m],y,n)}}return e},E=(v.prototype.get=function(e){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);var t,n;if(this._values)return t=e[0],e=e[1],h(t,this._size[0]),h(e,this._size[1]),(n=E(t,this._ptr[e],this._ptr[e+1],this._index))<this._ptr[e+1]&&this._index[n]===t?s.clone(this._values[n]):0;throw new Error("Cannot invoke get on a Pattern only matrix")},v.prototype.set=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(e.length!=this._size.length)throw new a(e.length,this._size.length);var n,o,s,u,c;if(this._values)return n=e[0],e=e[1],o=this._size[0],s=this._size[1],u=y,c=0,m(this._datatype)&&(u=g.find(y,[this._datatype,this._datatype])||y,c=g.convert(0,this._datatype)),(o-1<n||s-1<e)&&(_(this,Math.max(n+1,o),Math.max(e+1,s),r),o=this._size[0],s=this._size[1]),h(n,o),h(e,s),(r=E(n,this._ptr[e],this._ptr[e+1],this._index))<this._ptr[e+1]&&this._index[r]===n?u(t,c)?M(r,e,this._values,this._index,this._ptr):this._values[r]=t:A(r,n,e,t,this._values,this._index,this._ptr),this;throw new Error("Cannot invoke set on a Pattern only matrix")},function(e,t,r,n){if(r-t==0)return r;for(var i=t;i<r;i++)if(n[i]===e)return i;return t}),M=function(e,t,r,n,i){r.splice(e,1),n.splice(e,1);for(var a=t+1;a<i.length;a++)i[a]--},A=function(e,t,r,n,i,a,o){i.splice(e,0,n),a.splice(e,0,t);for(var s=r+1;s<o.length;s++)o[s]++},_=(v.prototype.resize=function(e,t,r){if(!f(e))throw new TypeError("Array expected");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");e.forEach(function(t){if(!c.isNumber(t)||!c.isInteger(t)||t<0)throw new TypeError("Invalid size, must contain positive integers (size: "+u.format(e)+")")});r=r?this.clone():this;return _(r,e[0],e[1],t)},function(e,t,r,n){var i=n||0,n=y,o=0;m(e._datatype)&&(n=g.find(y,[e._datatype,e._datatype])||y,o=g.convert(0,e._datatype),i=g.convert(i,e._datatype));var f=!n(i,o),l=e._size[0],p=e._size[1];if(p<r){for(u=p;u<r;u++)if(e._ptr[u]=e._values.length,f)for(s=0;s<l;s++)e._values.push(i),e._index.push(s);e._ptr[r]=e._values.length}else r<p&&(e._ptr.splice(r+1,p-r),e._values.splice(e._ptr[r],e._values.length),e._index.splice(e._ptr[r],e._index.length));if(p=r,l<t){if(f){for(var h=0,u=0;u<p;u++){e._ptr[u]=e._ptr[u]+h;for(var c=e._ptr[u+1]+h,v=0,s=l;s<t;s++,v++)e._values.splice(c+v,0,i),e._index.splice(c+v,0,s),h++}e._ptr[p]=e._values.length}}else if(t<l){var d=0;for(u=0;u<p;u++){e._ptr[u]=e._ptr[u]-d;var x=e._ptr[u],b=e._ptr[u+1]-d;for(c=x;c<b;c++)t-1<(s=e._index[c])&&(e._values.splice(c,1),e._index.splice(c,1),d++)}e._ptr[u]=e._values.length}return e._size[0]=t,e._size[1]=r,e}),O=(v.prototype.clone=function(){return new v({values:this._values?s.clone(this._values):void 0,index:s.clone(this._index),ptr:s.clone(this._ptr),size:s.clone(this._size),datatype:this._datatype})},v.prototype.size=function(){return s.clone(this._size)},v.prototype.map=function(e,t){var r,n,i;if(this._values)return n=(r=this)._size[0],i=this._size[1],O(this,0,n-1,0,i-1,function(t,n,i){return e(t,[n,i],r)},t);throw new Error("Cannot invoke map on a Pattern only matrix")},function(e,t,r,n,i,a,o){var s=[],u=[],c=[],f=y,l=0;m(e._datatype)&&(f=g.find(y,[e._datatype,e._datatype])||y,l=g.convert(0,e._datatype));for(var p=function(e,t,r){e=a(e,t,r),f(e,l)||(s.push(e),u.push(t))},h=n;h<=i;h++){c.push(s.length);for(var d=e._ptr[h],x=e._ptr[h+1],b=t,w=d;w<x;w++){var N=e._index[w];if(t<=N&&N<=r){if(!o)for(var E=b;E<N;E++)p(0,E-t,h-n);p(e._values[w],N-t,h-n)}b=N+1}if(!o)for(var M=b;M<=r;M++)p(0,M-t,h-n)}return c.push(s.length),new v({values:s,index:u,ptr:c,size:[r-t+1,i-n+1]})}),T=(v.prototype.forEach=function(e,t){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var r=this,n=this._size[0],i=this._size[1],a=0;a<i;a++){for(var o=this._ptr[a],s=this._ptr[a+1],u=0,c=o;c<s;c++){var f=this._index[c];if(!t)for(var l=u;l<f;l++)e(0,[l,a],r);e(this._values[c],[f,a],r),u=f+1}if(!t)for(var p=u;p<n;p++)e(0,[p,a],r)}},v.prototype.toArray=function(){return T(this._values,this._index,this._ptr,this._size,!0)},v.prototype.valueOf=function(){return T(this._values,this._index,this._ptr,this._size,!1)},function(e,t,r,n,i){for(var o,u=n[0],c=n[1],f=[],a=0;a<u;a++)for(f[a]=[],o=0;o<c;o++)f[a][o]=0;for(o=0;o<c;o++)for(var l=r[o],p=r[o+1],m=l;m<p;m++)f[a=t[m]][o]=e?i?s.clone(e[m]):e[m]:1;return f});return v.prototype.format=function(e){for(var t=this._size[0],r=this._size[1],n=this.density(),i="Sparse Matrix ["+u.format(t,e)+" x "+u.format(r,e)+"] density: "+u.format(n,e)+"\n",a=0;a<r;a++)for(var o=this._ptr[a],s=this._ptr[a+1],c=o;c<s;c++){var f=this._index[c];i+="\n    ("+u.format(f,e)+", "+u.format(a,e)+") ==> "+(this._values?u.format(this._values[c],e):"X")}return i},v.prototype.toString=function(){return u.format(this.toArray())},v.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},v.prototype.diagonal=function(e){if(e){if(!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e))throw new TypeError("The parameter k must be an integer number")}else e=0;var t=0<e?e:0,r=e<0?-e:0,e=this._size[0],i=this._size[1],a=Math.min(e-r,i-t),o=[],u=[],e=[];e[0]=0;for(var f=t;f<i&&o.length<a;f++)for(var m=this._ptr[f],h=this._ptr[f+1],g=m;g<h;g++){var d=this._index[g];if(d===f-t+r){o.push(s.clone(this._values[g])),u[o.length-1]=d-r;break}}return e.push(o.length),new v({values:o,index:u,ptr:e,size:[a,1]})},v.fromJSON=function(e){return new v(e)},v.diagonal=function(e,t,r,n,i){if(!f(e))throw new TypeError("Array expected, size parameter");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");if(e=e.map(function(e){if(e&&!0===e.isBigNumber&&(e=e.toNumber()),!l(e)||!p(e)||e<1)throw new Error("Size values must be positive integers");return e}),r){if(!0===r.isBigNumber&&(r=r.toNumber()),!l(r)||!p(r))throw new TypeError("The parameter k must be an integer number")}else r=0;var a=y,o=0;m(i)&&(a=g.find(y,[i,i])||y,o=g.convert(0,i));var s,u=0<r?r:0,c=r<0?-r:0,i=e[0],d=e[1],x=Math.min(i-c,d-u);if(f(t)){if(t.length!==x)throw new Error("Invalid value array length");s=function(e){return t[e]}}else if(t&&!0===t.isMatrix){r=t.size();if(1!==r.length||r[0]!==x)throw new Error("Invalid matrix length");s=function(e){return t.get([e])}}else s=function(){return t};for(var w=[],N=[],E=[],M=0;M<d;M++){E.push(w.length);var _,A=M-u;0<=A&&A<x&&(a(_=s(A),o)||(N.push(A+c),w.push(_)))}return E.push(w.length),new v({values:w,index:N,ptr:E,size:[i,d]})},v.prototype.swapRows=function(e,t){if(!(l(e)&&p(e)&&l(t)&&p(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return h(e,this._size[0]),h(t,this._size[0]),v._swapRows(e,t,this._size[1],this._values,this._index,this._ptr),this},v._forEachRow=function(e,t,r,n,i){for(var a=n[e],o=n[e+1],s=a;s<o;s++)i(r[s],t[s])},v._swapRows=function(e,t,r,n,i,a){for(var o=0;o<r;o++){var l,s=a[o],u=a[o+1],c=E(e,s,u,i),s=E(t,s,u,i);c<u&&s<u&&i[c]===e&&i[s]===t?n&&(l=n[c],n[c]=n[s],n[s]=l):c<u&&i[c]===e&&(u<=s||i[s]!==t)?(l=n?n[c]:void 0,i.splice(s,0,t),n&&n.splice(s,0,l),i.splice(s<=c?c+1:c,1),n&&n.splice(s<=c?c+1:c,1)):s<u&&i[s]===t&&(u<=c||i[c]!==e)&&(u=n?n[s]:void 0,i.splice(c,0,e),n&&n.splice(c,0,u),i.splice(c<=s?s+1:s,1),n)&&n.splice(c<=s?s+1:s,1)}},e.Matrix._storage.sparse=v},t.lazy=!1},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.factory=function(e,t,r,n){var a=n("equalScalar",{"boolean, boolean":function(e,t){return e===t},"number, number":function(e,r){return e===r||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.eq(t)},"Fraction, Fraction":function(e,t){return e.equals(t)},"Complex, Complex":function(e,r){return(e.re===r.re||i(e.re,r.re,t.epsilon))&&(e.im===r.im||i(e.im,r.im,t.epsilon))},"Unit, Unit":function(e,t){if(e.equalBase(t))return a(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e===t}});return a}},function(e,t,r){"use strict";t.name="Spa",t.path="type",t.factory=function(e,t,n){function i(){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");this._values=[],this._heap=new e.FibonacciHeap}var a=n(r(49)),o=n(r(47));return i.prototype.type="Spa",i.prototype.isSpa=!0,i.prototype.set=function(e,t){this._values[e]?this._values[e].value=t:(t=this._heap.insert(e,t),this._values[e]=t)},i.prototype.get=function(e){e=this._values[e];return e?e.value:0},i.prototype.accumulate=function(e,t){var r=this._values[e];r?r.value=a(r.value,t):(r=this._heap.insert(e,t),this._values[e]=r)},i.prototype.forEach=function(e,t,r){var n=this._heap,i=this._values,a=[];for((s=n.extractMinimum())&&a.push(s);s&&s.key<=t;)s.key>=e&&(o(s.value,0)||r(s.key,s.value,this)),(s=n.extractMinimum())&&a.push(s);for(var u=0;u<a.length;u++){var s,c=a[u];i[(s=n.insert(c.key,c.value)).key]=s}},i.prototype.swap=function(e,t){var r=this._values[e],n=this._values[t];!r&&n?(r=this._heap.insert(e,n.value),this._heap.remove(n),this._values[e]=r,this._values[t]=void 0):r&&!n?(n=this._heap.insert(t,r.value),this._heap.remove(r),this._values[t]=n,this._values[e]=void 0):r&&n&&(t=r.value,r.value=n.value,n.value=t)},i}},function(e,t,r){"use strict";var i=r(3).extend;t.name="add",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(51)),u=r(29),c=n(r(52)),f=n(r(53)),l=n(r(54)),p=n(r(55)),m=n(r(56)),h=a("add",i({"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,s):c(t,e,s,!0):"sparse"===t.storage()?c(e,t,s,!1):p(e,t,s);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,s,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,s,!0);return t},"Array, any":function(e,t){return m(o(e),t,s,!1).valueOf()},"any, Array":function(e,t){return m(o(t),e,s,!0).valueOf()}},s.signatures));return h.toTex="\\left(${args[0]}"+u.operators.add+"${args[1]}\\right)",h}},function(e,t){"use strict";t.name="matrix",t.factory=function(e,t,r,n){function i(t,r,n){return new(e.Matrix.storage(r||"default"))(t,n)}return(n=n("matrix",{"":function(){return i([])},string:function(e){return i([],e)},"string, string":function(e,t){return i([],e,t)},Array:function(e){return i(e)},Matrix:function(e){return i(e,e.storage())},"Array | Matrix, string":i,"Array | Matrix, string, string":i})).toTex={0:"\\begin{bmatrix}\\end{bmatrix}",1:"\\left(${args[0]}\\right)",2:"\\left(${args[0]}\\right)"},n}},function(e,t){"use strict";t.factory=function(e,t,r,n){var i=n("add",{"number, number":function(e,t){return e+t},"Complex, Complex":function(t,r){return new e.Complex(t.re+r.re,t.im+r.im)},"BigNumber, BigNumber":function(e,t){return e.plus(t)},"Fraction, Fraction":function(e,t){return e.add(t)},"Unit, Unit":function(e,t){if(null==e.value)throw new Error("Parameter x contains a unit with undefined value");if(null==t.value)throw new Error("Parameter y contains a unit with undefined value");if(e.equalBase(t))return(e=e.clone()).value=i(e.value,t.value),e.fixPrefix=!1,e;throw new Error("Units do not match")}});return i}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm01",t.factory=function(e,t,r,n){var a=e.DenseMatrix;return function(e,t,r,o){var s=e._data,u=e._size,e=e._datatype,f=t._values,l=t._index,p=t._ptr,m=t._size,t=t._datatype;if(u.length!==m.length)throw new i(u.length,m.length);if(u[0]!==m[0]||u[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+m+")");if(!f)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");for(var d=u[0],y=u[1],m="string"==typeof e&&e===t?e:void 0,b=m?n.find(r,[m,m]):r,w=[],g=0;g<d;g++)w[g]=[];for(var N=[],E=[],v=0;v<y;v++){for(var M=v+1,A=p[v],_=p[v+1],O=A;O<_;O++)N[g=l[O]]=o?b(f[O],s[g][v]):b(s[g][v],f[O]),E[g]=M;for(g=0;g<d;g++)w[g][v]=E[g]===M?N[g]:s[g][v]}return new a({data:w,size:[d,y],datatype:m})}}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm04",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var E,T=n&&p?[]:void 0,C=[],S=[],f=new s({values:T,index:C,ptr:S,size:[g,x],datatype:d}),B=n&&p?[]:void 0,k=n&&p?[]:void 0,I=[],R=[],M=0;M<x;M++){S[M]=C.length;for(var U,P=M+1,_=c[M],O=c[M+1],A=_;A<O;A++)E=u[A],C.push(E),I[E]=P,B&&(B[E]=n[A]);for(_=h[M],O=h[M+1],A=_;A<O;A++)I[E=m[A]]===P?B&&(b(U=N(B[E],p[A]),w)?I[E]=null:B[E]=U):(C.push(E),R[E]=P,k&&(k[E]=p[A]));if(B&&k)for(A=S[M];A<C.length;)I[E=C[A]]===P?(T[A]=B[E],A++):R[E]===P?(T[A]=k[E],A++):C.splice(A,1)}return S[x]=C.length,f}}},function(e,t){"use strict";t.name="algorithm10",t.factory=function(e,t,r,n){var i=e.DenseMatrix;return function(e,t,r,a){var o=e._values,s=e._index,u=e._ptr,c=e._size,e=e._datatype;if(!o)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var l,p=c[0],m=c[1],h=r;"string"==typeof e&&(t=n.convert(t,l=e),h=n.find(r,[l,l]));for(var g=[],c=new i({data:g,size:[p,m],datatype:l}),d=[],y=[],x=0;x<m;x++){for(var b=x+1,w=u[x],N=u[x+1],E=w;E<N;E++){var M=s[E];d[M]=o[E],y[M]=b}for(var A=0;A<p;A++)0===x&&(g[A]=[]),g[A][x]=y[A]===b?a?h(t,d[A]):h(d[A],t):t}return c}}},function(e,t,r){"use strict";var i=r(38),a=r(41);i.string.isString,t.name="algorithm13",t.factory=function(e,t,r,n){var i=e.DenseMatrix,s=function(e,t,r,n,i,a){var o=[];if(t===r.length-1)for(var u=0;u<n;u++)o[u]=e(i[u],a[u]);else for(var c=0;c<n;c++)o[c]=s(e,t+1,r,r[t+1],i[c],a[c]);return o};return function(e,t,r){var o=e._data,u=e._size,e=e._datatype,f=t._data,l=t._size,p=t._datatype,m=[];if(u.length!==l.length)throw new a(u.length,l.length);for(var h=0;h<u.length;h++){if(u[h]!==l[h])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+l+")");m[h]=u[h]}var g,v=r,p=("string"==typeof e&&e===p&&(t=n.convert(t,g=e),v=n.find(r,[g,g])),0<m.length?s(v,0,m,m[0],o,f):[]);return new i({data:p,size:m,datatype:g})}}},function(e,t,r){"use strict";var i=r(3).clone;t.name="algorithm14",t.factory=function(e,t,r,n){var a=e.DenseMatrix,s=function(e,t,r,n,i,a,o){var u=[];if(t===r.length-1)for(var c=0;c<n;c++)u[c]=o?e(a,i[c]):e(i[c],a);else for(var f=0;f<n;f++)u[f]=s(e,t+1,r,r[t+1],i[f],a,o);return u};return function(e,t,r,o){var u,c=e._data,f=e._size,e=e._datatype,p=r,e=("string"==typeof e&&(t=n.convert(t,u=e),p=n.find(r,[u,u])),0<f.length?s(p,0,f,f[0],c,t,o):[]);return new a({data:e,size:i(f),datatype:u})}}},function(e,t,r){"use strict";t.name="FibonacciHeap",t.path="type",t.factory=function(e,t,n,i){function a(){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");this._minimum=null,this._size=0}var o=n(r(58)),s=n(r(62)),u=1/Math.log((1+Math.sqrt(5))/2),c=(a.prototype.type="FibonacciHeap",a.prototype.isFibonacciHeap=!0,a.prototype.insert=function(e,t){var n,t={key:e,value:t,degree:0};return this._minimum?(n=this._minimum,t.left=n,t.right=n.right,(n.right=t).right.left=t,o(e,n.key)&&(this._minimum=t)):this._minimum=(t.left=t).right=t,this._size++,t},a.prototype.size=function(){return this._size},a.prototype.clear=function(){this._minimum=null,this._size=0},a.prototype.isEmpty=function(){return!!this._minimum},a.prototype.extractMinimum=function(){var e=this._minimum;if(null!==e){for(var t=this._minimum,r=e.degree,n=e.child;0<r;){var i=n.right;n.left.right=n.right,n.right.left=n.left,n.left=t,n.right=t.right,((t.right=n).right.left=n).parent=null,n=i,r--}e.left.right=e.right,e.right.left=e.left,t=e==e.right?null:(t=e.right,m(t,this._size)),this._size--,this._minimum=t}return e},a.prototype.remove=function(e){this._minimum=c(this._minimum,e,-1),this.extractMinimum()},function(e,t,r){t.key=r;r=t.parent;return r&&o(t.key,r.key)&&(f(e,t,r),l(e,r)),e=o(t.key,e.key)?t:e}),f=function(e,t,r){t.left.right=t.right,t.right.left=t.left,r.degree--,r.child==t&&(r.child=t.right),0===r.degree&&(r.child=null),t.left=e,t.right=e.right,((e.right=t).right.left=t).parent=null,t.mark=!1},l=function(e,t){var r=t.parent;r&&(t.mark?(f(e,t,r),l(r)):t.mark=!0)},m=function(e,t){var r=Math.floor(Math.log(t)*u)+1,n=new Array(r),i=0;if(a=e)for(i++,a=a.right;a!==e;)i++,a=a.right;for(;0<i;){for(var m,c,a,f=a.degree,l=a.right;c=n[f];)s(a.key,c.key)&&(m=c,c=a,a=m),function(e,t){e.left.right=e.right,e.right.left=e.left,(e.parent=t).child?(e.left=t.child,e.right=t.child.right,(t.child.right=e).right.left=e):((t.child=e).right=e).left=e,t.degree++,e.mark=!1}(c,a),n[f]=null,f++;n[f]=a,a=l,i--}e=null;for(var h=0;h<r;h++)!(c=n[h])||e&&(c.left.right=c.right,c.right.left=c.left,c.left=e,c.right=e.right,(e.right=c).right.left=c,!o(c.key,e.key))||(e=c);return e};return a}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="smaller",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("smaller",{"boolean, boolean":function(e,t){return e<t},"number, number":function(e,r){return e<r&&!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lt(t)},"Fraction, Fraction":function(e,t){return-1===e.compare(t)},"Complex, Complex":function(e,t){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e<t},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.smaller+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm03",t.factory=function(e,t,r,n){var a=e.DenseMatrix;return function(e,t,r,o){var s=e._data,u=e._size,e=e._datatype,f=t._values,l=t._index,p=t._ptr,m=t._size,t=t._datatype;if(u.length!==m.length)throw new i(u.length,m.length);if(u[0]!==m[0]||u[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+m+")");if(!f)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var g,v=u[0],d=u[1],y=0,x=r;"string"==typeof e&&e===t&&(y=n.convert(0,g=e),x=n.find(r,[g,g]));for(var b=[],w=0;w<v;w++)b[w]=[];for(var N=[],E=[],M=0;M<d;M++){for(var A=M+1,_=p[M],O=p[M+1],T=_;T<O;T++){var C=l[T];N[C]=o?x(f[T],s[C][M]):x(s[C][M],f[T]),E[C]=A}for(var S=0;S<v;S++)b[S][M]=E[S]===A?N[S]:o?x(y,s[S][M]):x(s[S][M],y)}return new a({data:b,size:[v,d],datatype:g})}}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm07",t.factory=function(e,t,r,n){function s(e,t,r,n,i){for(var a=e._values,o=e._index,u=(e=e._ptr)[t],c=e[t+1];u<c;u++){var f=o[u];r[f]=i,n[f]=a[u]}}var a=e.DenseMatrix;return function(e,t,r){var o=e._size,u=e._datatype,c=t._size,f=t._datatype;if(o.length!==c.length)throw new i(o.length,c.length);if(o[0]!==c[0]||o[1]!==c[1])throw new RangeError("Dimension mismatch. Matrix A ("+o+") must match Matrix B ("+c+")");var l,p=o[0],m=o[1],h=0,g=r;"string"==typeof u&&u===f&&(h=n.convert(0,l=u),g=n.find(r,[l,l]));for(var y=[],v=0;v<p;v++)y[v]=[];for(var c=new a({data:y,size:[p,m],datatype:l}),b=[],w=[],N=[],E=[],d=0;d<m;d++){var M=d+1;for(s(e,d,N,b,M),s(t,d,E,w,M),v=0;v<p;v++)y[v][d]=g(N[v]===M?b[v]:h,E[v]===M?w[v]:h)}return c}}},function(e,t){"use strict";t.name="algorithm12",t.factory=function(e,t,r,n){var i=e.DenseMatrix;return function(e,t,r,a){var o=e._values,s=e._index,u=e._ptr,c=e._size,e=e._datatype;if(!o)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var l,p=c[0],m=c[1],h=r;"string"==typeof e&&(t=n.convert(t,l=e),h=n.find(r,[l,l]));for(var g=[],c=new i({data:g,size:[p,m],datatype:l}),d=[],y=[],x=0;x<m;x++){for(var b=x+1,w=u[x],N=u[x+1],E=w;E<N;E++){var M=s[E];d[M]=o[E],y[M]=b}for(var A=0;A<p;A++)0===x&&(g[A]=[]),g[A][x]=y[A]===b?a?h(t,d[A]):h(d[A],t):a?h(t,0):h(0,t)}return c}}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="larger",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("larger",{"boolean, boolean":function(e,t){return t<e},"number, number":function(e,r){return r<e&&!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gt(t)},"Fraction, Fraction":function(e,t){return 1===e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return t<e},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.larger+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(38),a=i.string,o=i.object,s=Array.isArray,u=a.isString;t.name="ImmutableDenseMatrix",t.path="type",t.factory=function(e,t,n){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!u(t))throw new Error("Invalid datatype: "+t);if(e&&!0===e.isMatrix||s(e)){var r=new c(e,t);this._data=r._data,this._size=r._size,this._datatype=r._datatype,this._min=null,this._max=null}else if(e&&s(e.data)&&s(e.size))this._data=e.data,this._size=e.size,this._datatype=e.datatype,this._min=void 0!==e.min?e.min:null,this._max=void 0!==e.max?e.max:null;else{if(e)throw new TypeError("Unsupported type of data ("+i.types.type(e)+")");this._data=[],this._size=[0],this._datatype=t,this._min=null,this._max=null}}var c=n(r(45)),f=n(r(58));return(a.prototype=new c).type="ImmutableDenseMatrix",a.prototype.isImmutableDenseMatrix=!0,a.prototype.subset=function(e){switch(arguments.length){case 1:var t=c.prototype.subset.call(this,e);return t.isMatrix?new a({data:t._data,size:t._size,datatype:t._datatype}):t;case 2:case 3:throw new Error("Cannot invoke set subset on an Immutable Matrix instance");default:throw new SyntaxError("Wrong number of arguments")}},a.prototype.set=function(){throw new Error("Cannot invoke set on an Immutable Matrix instance")},a.prototype.resize=function(){throw new Error("Cannot invoke resize on an Immutable Matrix instance")},a.prototype.clone=function(){return new a({data:o.clone(this._data),size:o.clone(this._size),datatype:this._datatype})},a.prototype.toJSON=function(){return{mathjs:"ImmutableDenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},a.fromJSON=function(e){return new a(e)},a.prototype.swapRows=function(){throw new Error("Cannot invoke swapRows on an Immutable Matrix instance")},a.prototype.min=function(){var e;return null===this._min&&(e=null,this.forEach(function(t){null!==e&&!f(t,e)||(e=t)}),this._min=null!==e?e:void 0),this._min},a.prototype.max=function(){var e;return null===this._max&&(e=null,this.forEach(function(t){null!==e&&!f(e,t)||(e=t)}),this._max=null!==e?e:void 0),this._max},a}},function(e,t,r){"use strict";var i=r(3).clone,a=r(6).isInteger;t.name="Index",t.path="type",t.factory=function(e){function t(e){if(!(this instanceof t))throw new SyntaxError("Constructor must be called with the new operator");this._dimensions=[],this._isScalar=!0;for(var n=0,i=arguments.length;n<i;n++){var a=arguments[n];if(a&&!0===a.isRange)this._dimensions.push(a),this._isScalar=!1;else if(a&&(Array.isArray(a)||!0===a.isMatrix)){var o=r(a.valueOf()),o=(this._dimensions.push(o),o.size());1===o.length&&1===o[0]||(this._isScalar=!1)}else{if("number"!=typeof a)throw new TypeError("Dimension must be an Array, Matrix, Number or Range");this._dimensions.push(r([a]))}}}function r(t){for(var r=0,n=t.length;r<n;r++)if("number"!=typeof t[r]||!a(t[r]))throw new TypeError("Index parameters must be positive integer numbers");return new e.ImmutableDenseMatrix(t)}return t.prototype.type="Index",t.prototype.isIndex=!0,t.prototype.clone=function(){var e=new t;return e._dimensions=i(this._dimensions),e._isScalar=this._isScalar,e},t.create=function(e){var r=new t;return t.apply(r,e),r},t.prototype.size=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.size()[0]}return e},t.prototype.max=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.max()}return e},t.prototype.min=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++){var n=this._dimensions[t];e[t]=n.min()}return e},t.prototype.forEach=function(e){for(var t=0,r=this._dimensions.length;t<r;t++)e(this._dimensions[t],t,this)},t.prototype.dimension=function(e){return this._dimensions[e]||null},t.prototype.isScalar=function(){return this._isScalar},t.prototype.valueOf=t.prototype.toArray=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++)e.push(this._dimensions[t].toArray());return e},t.prototype.toString=function(){for(var e=[],t=0,r=this._dimensions.length;t<r;t++)e.push(this._dimensions[t].toString());return"["+e.join(", ")+"]"},t.prototype.toJSON=function(){return{mathjs:"Index",dimensions:this._dimensions}},t.fromJSON=function(e){return t.create(e.dimensions)},t}},function(e,t,r){"use strict";var i=r(6);t.name="Range",t.path="type",t.factory=function(e,t,r,n){function a(e,t,r){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(null!=e)if(!0===e.isBigNumber)e=e.toNumber();else if("number"!=typeof e)throw new TypeError("Parameter start must be a number");if(null!=t)if(!0===t.isBigNumber)t=t.toNumber();else if("number"!=typeof t)throw new TypeError("Parameter end must be a number");if(null!=r)if(!0===r.isBigNumber)r=r.toNumber();else if("number"!=typeof r)throw new TypeError("Parameter step must be a number");this.start=null!=e?parseFloat(e):0,this.end=null!=t?parseFloat(t):0,this.step=null!=r?parseFloat(r):1}return a.prototype.type="Range",a.prototype.isRange=!0,a.parse=function(e){if("string"!=typeof e)return null;var r=e.split(":").map(function(e){return parseFloat(e)});if(r.some(function(e){return isNaN(e)}))return null;switch(r.length){case 2:return new a(r[0],r[1]);case 3:return new a(r[0],r[2],r[1]);default:return null}},a.prototype.clone=function(){return new a(this.start,this.end,this.step)},a.prototype.size=function(){var e=0,t=this.start,r=this.step,t=this.end-t;return i.sign(r)==i.sign(t)?e=Math.ceil(t/r):0==t&&(e=0),[e=isNaN(e)?0:e]},a.prototype.min=function(){var e=this.size()[0];return 0<e?0<this.step?this.start:this.start+(e-1)*this.step:void 0},a.prototype.max=function(){var e=this.size()[0];return 0<e?0<this.step?this.start+(e-1)*this.step:this.start:void 0},a.prototype.forEach=function(e){var t=this.start,r=this.step,n=this.end,i=0;if(0<r)for(;t<n;)e(t,[i],this),t+=r,i++;else if(r<0)for(;n<t;)e(t,[i],this),t+=r,i++},a.prototype.map=function(e){var t=[];return this.forEach(function(r,n,i){t[n[0]]=e(r,n,i)}),t},a.prototype.toArray=function(){var e=[];return this.forEach(function(t,r){e[r[0]]=t}),e},a.prototype.valueOf=function(){return this.toArray()},a.prototype.format=function(e){var t=i.format(this.start,e);return 1!=this.step&&(t+=":"+i.format(this.step,e)),t+(":"+i.format(this.end,e))},a.prototype.toString=function(){return this.format()},a.prototype.toJSON=function(){return{mathjs:"Range",start:this.start,end:this.end,step:this.step}},a.fromJSON=function(e){return new a(e.start,e.end,e.step)},a}},function(e,t){"use strict";t.name="index",t.factory=function(e,t,r,n){return n("index",{"...number | BigNumber | Range | Array | Matrix":function(t){var t=t.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e&&(Array.isArray(e)||!0===e.isMatrix)?e.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e}):e}),n=new e.Index;return e.Index.apply(n,t),n}})}},function(e,t){"use strict";t.name="sparse",t.factory=function(e,t,r,n){var i=e.SparseMatrix;return(e=n("sparse",{"":function(){return new i([])},string:function(e){return new i([],e)},"Array | Matrix":function(e){return new i(e)},"Array | Matrix, string":function(e,t){return new i(e,t)}})).toTex={0:"\\begin{bsparse}\\end{bsparse}",1:"\\left(${args[0]}\\right)"},e}},function(e,t,r){"use strict";var i=r(19);t.name="number",t.factory=function(e,t,r,n){var a=n("number",{"":function(){return 0},number:function(e){return e},string:function(e){var t=Number(e);if(isNaN(t))throw new SyntaxError('String "'+e+'" is no valid number');return t},BigNumber:function(e){return e.toNumber()},Fraction:function(e){return e.valueOf()},Unit:function(e){throw new Error("Second argument with valueless unit expected")},"Unit, string | Unit":function(e,t){return e.toNumber(t)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},a}},function(e,t,r){e.exports=[r(70)]},function(e,t){"use strict";t.name="ResultSet",t.path="type",t.factory=function(e,t,r,n){function i(e){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");this.entries=e||[]}return i.prototype.type="ResultSet",i.prototype.isResultSet=!0,i.prototype.valueOf=function(){return this.entries},i.prototype.toString=function(){return"["+this.entries.join(", ")+"]"},i.prototype.toJSON=function(){return{mathjs:"ResultSet",entries:this.entries}},i.fromJSON=function(e){return new i(e.entries)},i}},function(e,t,r){"use strict";var i=r(19),a=r(6);t.name="string",t.factory=function(e,t,r,n){var o=n("string",{"":function(){return""},number:a.format,null:function(e){return"null"},boolean:function(e){return e+""},string:function(e){return e},"Array | Matrix":function(e){return i(e,o)},any:function(e){return String(e)}});return o.toTex={0:'\\mathtt{""}',1:"\\mathrm{string}\\left(${args[0]}\\right)"},o}},function(e,t,r){e.exports=[r(73),r(90),r(91)]},function(e,t,r){"use strict";var i=r(23).endsWith,a=r(3).clone;t.name="Unit",t.path="type",t.factory=function(e,t,n,o){function s(e,t){if(!(this instanceof s))throw new Error("Constructor must be called with the new operator");if(void 0!==e&&!M(e)&&!e.isComplex)throw new TypeError("First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined");if(null!=t&&("string"!=typeof t||""==t))throw new TypeError("Second parameter in Unit constructor must be a string");null!=t?(t=s.parse(t),this.units=t.units,this.dimensions=t.dimensions):(this.units=[{unit:q,prefix:I,power:0}],this.dimensions=[0,0,0,0,0,0,0,0,0]),this.value=null!=e?this._normalize(e):null,this.fixPrefix=!1,this.isUnitListSimplified=!0}function u(){for(;" "==z||"\t"==z;)l()}function f(e){return"0"<=e&&e<="9"}function l(){S++,z=C.charAt(S)}function p(e){S=e,z=C.charAt(S)}function m(){var t="",e=S;if("+"==z?l():"-"==z&&(t+=z,l()),!function(e){return"0"<=e&&e<="9"||"."==e}(z))return p(e),null;if("."==z){if(t+=z,l(),!f(z))return p(e),null}else{for(;f(z);)t+=z,l();"."==z&&(t+=z,l())}for(;f(z);)t+=z,l();if("E"==z||"e"==z){var e="",n=S;if(e+=z,l(),"+"!=z&&"-"!=z||(e+=z,l()),!f(z))return p(n),t;for(t+=e;f(z);)t+=z,l()}return t}function g(e){return z===e&&(l(),e)}function v(e){for(var t in L)if(L.hasOwnProperty(t)&&i(e,t)){var r=L[t],t=e.length-t.length,t=e.substring(0,t),t=r.prefixes[t];if(void 0!==t)return{unit:r,prefix:t}}return null}var C,S,z,d=n(r(51)),y=n(r(74)),x=n(r(77)),b=n(r(78)),w=n(r(79)),N=n(r(85)),E=n(r(86)),M=n(r(87)),A=n(r(88)),_=n(r(89)),O=n(r(68)),n=n(r(27)),B=(s.prototype.type="Unit",s.prototype.isUnit=!0,s.parse=function(r){if(S=-1,z="","string"!=typeof(C=r))throw new TypeError("Invalid argument in Unit.parse, string expected");var n=new s,i=(n.units=[],l(),u(),m()),a=null;i&&(a="bignumber"===t.number?new e.BigNumber(i):"fraction"===t.number?new e.Fraction(i):parseFloat(i)),u();for(var o=1,c=!1,f=[],p=1;;){for(u();"("===z;)f.push(o),p*=o,o=1,l(),u();if(!z)break;var d=z,y=function(){for(var e="",t=C.charCodeAt(S);48<=t&&t<=57||65<=t&&t<=90||97<=t&&t<=122;)e+=z,l(),t=C.charCodeAt(S);return(65<=(t=e.charCodeAt(0))&&t<=90||97<=t&&t<=122)&&e||null}();if(null==y)throw new SyntaxError('Unexpected "'+d+'" in "'+C+'" at index '+S.toString());var x=v(y);if(null==x)throw new SyntaxError('Unit "'+y+'" not found.');var b=o*p;if(u(),g("^")){u();d=m();if(null==d)throw new SyntaxError('In "'+r+'", "^" must be followed by a floating-point number');b*=d}n.units.push({unit:x.unit,prefix:x.prefix,power:b});for(var N=0;N<R.length;N++)n.dimensions[N]+=x.unit.dimensions[N]*b;for(u();")"===z;){if(0===f.length)throw new SyntaxError('Unmatched ")" in "'+C+'" at index '+S.toString());p/=f.pop(),l(),u()}c=!1,g("*")?(o=1,c=!0):g("/")?(o=-1,c=!0):o=1;y=x.unit.base.key;D.auto[y]={unit:x.unit,prefix:x.prefix}}if(u(),z)throw new SyntaxError('Could not parse: "'+r+'"');if(c)throw new SyntaxError('Trailing characters: "'+r+'"');if(0!==f.length)throw new SyntaxError('Unmatched "(" in "'+C+'"');if(0==n.units.length)throw new SyntaxError('"'+r+'" contains no units');return n.value=null!=a?n._normalize(a):null,n},s.prototype.clone=function(){var e=new s;e.fixPrefix=this.fixPrefix,e.isUnitListSimplified=this.isUnitListSimplified,e.value=a(this.value),e.dimensions=this.dimensions.slice(0),e.units=[];for(var t=0;t<this.units.length;t++)for(var r in e.units[t]={},this.units[t])this.units[t].hasOwnProperty(r)&&(e.units[t][r]=this.units[t][r]);return e},s.prototype._isDerived=function(){return 0!==this.units.length&&(1<this.units.length||1e-15<Math.abs(this.units[0].power-1))},s.prototype._normalize=function(e){var t,r,n,i;if(null==e||0===this.units.length)return e;if(this._isDerived()){for(var o=e,a=s._getNumberConverter(_(e)),u=0;u<this.units.length;u++)t=a(this.units[u].unit.value),i=a(this.units[u].prefix.value),n=a(this.units[u].power),o=x(o,w(x(t,i),n));return o}return t=(a=s._getNumberConverter(_(e)))(this.units[0].unit.value),r=a(this.units[0].unit.offset),i=a(this.units[0].prefix.value),x(d(e,r),x(t,i))},s.prototype._denormalize=function(e,t){var r,n,i,a;if(null==e||0===this.units.length)return e;if(this._isDerived()){for(var u=e,o=s._getNumberConverter(_(e)),c=0;c<this.units.length;c++)r=o(this.units[c].unit.value),a=o(this.units[c].prefix.value),i=o(this.units[c].power),u=b(u,w(x(r,a),i));return u}return r=(o=s._getNumberConverter(_(e)))(this.units[0].unit.value),a=o(this.units[0].prefix.value),n=o(this.units[0].unit.offset),y(b(b(e,r),null==t?a:t),n)},s.isValuelessUnit=function(e){return null!=v(e)},s.prototype.hasBase=function(e){if(!(e="string"==typeof e?P[e]:e))return!1;for(var t=0;t<R.length;t++)if(1e-12<Math.abs(this.dimensions[t]-e.dimensions[t]))return!1;return!0},s.prototype.equalBase=function(e){for(var t=0;t<R.length;t++)if(1e-12<Math.abs(this.dimensions[t]-e.dimensions[t]))return!1;return!0},s.prototype.equals=function(e){return this.equalBase(e)&&E(this.value,e.value)},s.prototype.multiply=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]+e.dimensions[r];for(var i,a,r=0;r<e.units.length;r++){var n=JSON.parse(JSON.stringify(e.units[r]));t.units.push(n)}return null!=this.value||null!=e.value?(i=null==this.value?this._normalize(1):this.value,a=null==e.value?e._normalize(1):e.value,t.value=x(i,a)):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.divide=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]-e.dimensions[r];for(var i,a,r=0;r<e.units.length;r++){var n=JSON.parse(JSON.stringify(e.units[r]));n.power=-n.power,t.units.push(n)}return null!=this.value||null!=e.value?(i=null==this.value?this._normalize(1):this.value,a=null==e.value?e._normalize(1):e.value,t.value=b(i,a)):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.pow=function(e){for(var t=this.clone(),r=0;r<R.length;r++)t.dimensions[r]=this.dimensions[r]*e;for(r=0;r<t.units.length;r++)t.units[r].power*=e;return null!=t.value?t.value=w(t.value,e):t.value=null,t.isUnitListSimplified=!1,t},s.prototype.abs=function(){var t,e=this.clone();for(t in e.value=N(e.value),e.units)"VA"!==e.units[t].unit.name&&"VAR"!==e.units[t].unit.name||(e.units[t].unit=L.W);return e},s.prototype.to=function(e){var t,r=null==this.value?this._normalize(1):this.value;if("string"==typeof e){if(t=s.parse(e),!this.equalBase(t))throw new Error("Units do not match");if(null!==t.value)throw new Error("Cannot convert to a unit with a value");return t.value=a(r),t.fixPrefix=!0,t.isUnitListSimplified=!0,t}if(e&&e.isUnit){if(!this.equalBase(e))throw new Error("Units do not match");if(null!==e.value)throw new Error("Cannot convert to a unit with a value");return(t=e.clone()).value=a(r),t.fixPrefix=!0,t.isUnitListSimplified=!0,t}throw new Error("String or Unit expected as parameter")},s.prototype.toNumber=function(e){return O(this.toNumeric(e))},s.prototype.toNumeric=function(e){e=this.to(e);return e._isDerived()?e._denormalize(e.value):e._denormalize(e.value,e.units[0].prefix.value)},s.prototype.toString=function(){return this.format()},s.prototype.toJSON=function(){return{mathjs:"Unit",value:this._denormalize(this.value),unit:this.formatUnits(),fixPrefix:this.fixPrefix}},s.fromJSON=function(e){var t=new s(e.value,e.unit);return t.fixPrefix=e.fixPrefix||!1,t},s.prototype.valueOf=s.prototype.toString,s.prototype.simplifyUnitListLazy=function(){if(!this.isUnitListSimplified&&null!=this.value){var e,r,n,t=[];for(r in $)if(this.hasBase(P[r])){e=r;break}if("NONE"===e)this.units=[];else if(n=e&&$.hasOwnProperty(e)?$[e]:n)this.units=[{unit:n.unit,prefix:n.prefix,power:1}];else{for(var i=0;i<R.length;i++){var a=R[i];1e-12<Math.abs(this.dimensions[i])&&t.push({unit:$[a].unit,prefix:$[a].prefix,power:this.dimensions[i]})}t.length<this.units.length&&(this.units=t)}this.isUnitListSimplified=!0}},s.prototype.formatUnits=function(){this.simplifyUnitListLazy();for(var e="",t="",r=0,n=0,i=0;i<this.units.length;i++)0<this.units[i].power?(r++,e+=" "+this.units[i].prefix.name+this.units[i].unit.name,1e-15<Math.abs(this.units[i].power-1)&&(e+="^"+this.units[i].power)):this.units[i].power<0&&n++;if(0<n)for(i=0;i<this.units.length;i++)this.units[i].power<0&&(0<r?(t+=" "+this.units[i].prefix.name+this.units[i].unit.name,1e-15<Math.abs(this.units[i].power+1)&&(t+="^"+-this.units[i].power)):t=(t+=" "+this.units[i].prefix.name+this.units[i].unit.name)+("^"+this.units[i].power));var e=e.substr(1),t=t.substr(1),a=e=1<r&&0<n?"("+e+")":e;return 0<r&&0<n&&(a+=" / "),a+(t=1<n&&0<r?"("+t+")":t)},s.prototype.format=function(e){this.simplifyUnitListLazy();var n,t=!1;for(n in void 0!==this.value&&null!==this.value&&this.value.isComplex&&(t=Math.abs(this.value.re)<1e-14,Math.abs(this.value.im)),this.units)this.units[n].unit&&("VA"===this.units[n].unit.name&&t?this.units[n].unit=L.VAR:"VAR"!==this.units[n].unit.name||t||(this.units[n].unit=L.VA));1!==this.units.length||this.fixPrefix||Math.abs(this.units[0].power-Math.round(this.units[0].power))<1e-14&&(this.units[0].prefix=this._bestPrefix());var i=this._denormalize(this.value),i=null!==this.value?A(i,e||{}):"",e=this.formatUnits();return this.value&&this.value.isComplex&&(i="("+i+")"),0<e.length&&0<i.length&&(i+=" "),i+e},{NONE:{"":{name:"",value:1,scientific:!0}},SHORT:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:10,scientific:!(s.prototype._bestPrefix=function(){if(1!==this.units.length)throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");if(1e-14<=Math.abs(this.units[0].power-Math.round(this.units[0].power)))throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");var e=N(this.value),t=N(this.units[0].unit.value),r=this.units[0].prefix;if(0!==e){var o,s,u,n=this.units[0].power,i=Math.abs(Math.log(e/Math.pow(r.value*t,n))/Math.LN10-1.2),a=this.units[0].unit.prefixes;for(o in a)a.hasOwnProperty(o)&&(s=a[o]).scientific&&((u=Math.abs(Math.log(e/Math.pow(s.value*t,n))/Math.LN10-1.2))<i||u===i&&s.name.length<r.name.length)&&(r=s,i=u)}return r})},h:{name:"h",value:100,scientific:!1},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0},d:{name:"d",value:.1,scientific:!1},c:{name:"c",value:.01,scientific:!1},m:{name:"m",value:.001,scientific:!0},u:{name:"u",value:1e-6,scientific:!0},n:{name:"n",value:1e-9,scientific:!0},p:{name:"p",value:1e-12,scientific:!0},f:{name:"f",value:1e-15,scientific:!0},a:{name:"a",value:1e-18,scientific:!0},z:{name:"z",value:1e-21,scientific:!0},y:{name:"y",value:1e-24,scientific:!0}},LONG:{"":{name:"",value:1,scientific:!0},deca:{name:"deca",value:10,scientific:!1},hecto:{name:"hecto",value:100,scientific:!1},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0},deci:{name:"deci",value:.1,scientific:!1},centi:{name:"centi",value:.01,scientific:!1},milli:{name:"milli",value:.001,scientific:!0},micro:{name:"micro",value:1e-6,scientific:!0},nano:{name:"nano",value:1e-9,scientific:!0},pico:{name:"pico",value:1e-12,scientific:!0},femto:{name:"femto",value:1e-15,scientific:!0},atto:{name:"atto",value:1e-18,scientific:!0},zepto:{name:"zepto",value:1e-21,scientific:!0},yocto:{name:"yocto",value:1e-24,scientific:!0}},SQUARED:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:100,scientific:!1},h:{name:"h",value:1e4,scientific:!1},k:{name:"k",value:1e6,scientific:!0},M:{name:"M",value:1e12,scientific:!0},G:{name:"G",value:1e18,scientific:!0},T:{name:"T",value:1e24,scientific:!0},P:{name:"P",value:1e30,scientific:!0},E:{name:"E",value:1e36,scientific:!0},Z:{name:"Z",value:1e42,scientific:!0},Y:{name:"Y",value:1e48,scientific:!0},d:{name:"d",value:.01,scientific:!1},c:{name:"c",value:1e-4,scientific:!1},m:{name:"m",value:1e-6,scientific:!0},u:{name:"u",value:1e-12,scientific:!0},n:{name:"n",value:1e-18,scientific:!0},p:{name:"p",value:1e-24,scientific:!0},f:{name:"f",value:1e-30,scientific:!0},a:{name:"a",value:1e-36,scientific:!0},z:{name:"z",value:1e-42,scientific:!0},y:{name:"y",value:1e-48,scientific:!0}},CUBIC:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:1e3,scientific:!1},h:{name:"h",value:1e6,scientific:!1},k:{name:"k",value:1e9,scientific:!0},M:{name:"M",value:1e18,scientific:!0},G:{name:"G",value:1e27,scientific:!0},T:{name:"T",value:1e36,scientific:!0},P:{name:"P",value:1e45,scientific:!0},E:{name:"E",value:1e54,scientific:!0},Z:{name:"Z",value:1e63,scientific:!0},Y:{name:"Y",value:1e72,scientific:!0},d:{name:"d",value:.001,scientific:!1},c:{name:"c",value:1e-6,scientific:!1},m:{name:"m",value:1e-9,scientific:!0},u:{name:"u",value:1e-18,scientific:!0},n:{name:"n",value:1e-27,scientific:!0},p:{name:"p",value:1e-36,scientific:!0},f:{name:"f",value:1e-45,scientific:!0},a:{name:"a",value:1e-54,scientific:!0},z:{name:"z",value:1e-63,scientific:!0},y:{name:"y",value:1e-72,scientific:!0}},BINARY_SHORT:{"":{name:"",value:1,scientific:!0},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0},Ki:{name:"Ki",value:1024,scientific:!0},Mi:{name:"Mi",value:Math.pow(1024,2),scientific:!0},Gi:{name:"Gi",value:Math.pow(1024,3),scientific:!0},Ti:{name:"Ti",value:Math.pow(1024,4),scientific:!0},Pi:{name:"Pi",value:Math.pow(1024,5),scientific:!0},Ei:{name:"Ei",value:Math.pow(1024,6),scientific:!0},Zi:{name:"Zi",value:Math.pow(1024,7),scientific:!0},Yi:{name:"Yi",value:Math.pow(1024,8),scientific:!0}},BINARY_LONG:{"":{name:"",value:1,scientific:!0},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0},kibi:{name:"kibi",value:1024,scientific:!0},mebi:{name:"mebi",value:Math.pow(1024,2),scientific:!0},gibi:{name:"gibi",value:Math.pow(1024,3),scientific:!0},tebi:{name:"tebi",value:Math.pow(1024,4),scientific:!0},pebi:{name:"pebi",value:Math.pow(1024,5),scientific:!0},exi:{name:"exi",value:Math.pow(1024,6),scientific:!0},zebi:{name:"zebi",value:Math.pow(1024,7),scientific:!0},yobi:{name:"yobi",value:Math.pow(1024,8),scientific:!0}},BTU:{"":{name:"",value:1,scientific:!0},MM:{name:"MM",value:1e6,scientific:!0}}});for(k in B.SHORTLONG={},B.SHORT)B.SHORT.hasOwnProperty(k)&&(B.SHORTLONG[k]=B.SHORT[k]);for(k in B.LONG)B.LONG.hasOwnProperty(k)&&(B.SHORTLONG[k]=B.LONG[k]);var I={name:"",value:1,scientific:!0},R=["MASS","LENGTH","TIME","CURRENT","TEMPERATURE","LUMINOUS_INTENSITY","AMOUNT_OF_SUBSTANCE","ANGLE","BIT"],P={NONE:{dimensions:[0,0,0,0,0,0,0,0,0]},MASS:{dimensions:[1,0,0,0,0,0,0,0,0]},LENGTH:{dimensions:[0,1,0,0,0,0,0,0,0]},TIME:{dimensions:[0,0,1,0,0,0,0,0,0]},CURRENT:{dimensions:[0,0,0,1,0,0,0,0,0]},TEMPERATURE:{dimensions:[0,0,0,0,1,0,0,0,0]},LUMINOUS_INTENSITY:{dimensions:[0,0,0,0,0,1,0,0,0]},AMOUNT_OF_SUBSTANCE:{dimensions:[0,0,0,0,0,0,1,0,0]},FORCE:{dimensions:[1,1,-2,0,0,0,0,0,0]},SURFACE:{dimensions:[0,2,0,0,0,0,0,0,0]},VOLUME:{dimensions:[0,3,0,0,0,0,0,0,0]},ENERGY:{dimensions:[1,2,-2,0,0,0,0,0,0]},POWER:{dimensions:[1,2,-3,0,0,0,0,0,0]},PRESSURE:{dimensions:[1,-1,-2,0,0,0,0,0,0]},ELECTRIC_CHARGE:{dimensions:[0,0,1,1,0,0,0,0,0]},ELECTRIC_CAPACITANCE:{dimensions:[-1,-2,4,2,0,0,0,0,0]},ELECTRIC_POTENTIAL:{dimensions:[1,2,-3,-1,0,0,0,0,0]},ELECTRIC_RESISTANCE:{dimensions:[1,2,-3,-2,0,0,0,0,0]},ELECTRIC_INDUCTANCE:{dimensions:[1,2,-2,-2,0,0,0,0,0]},ELECTRIC_CONDUCTANCE:{dimensions:[-1,-2,3,2,0,0,0,0,0]},MAGNETIC_FLUX:{dimensions:[1,2,-2,-1,0,0,0,0,0]},MAGNETIC_FLUX_DENSITY:{dimensions:[1,0,-2,-1,0,0,0,0,0]},FREQUENCY:{dimensions:[0,0,-1,0,0,0,0,0,0]},ANGLE:{dimensions:[0,0,0,0,0,0,0,1,0]},BIT:{dimensions:[0,0,0,0,0,0,0,0,1]}};for(k in P)P[k].key=k;var k,G,j,H,q={name:"",base:{},value:1,offset:0,dimensions:[0,0,0,0,0,0,0,0,0]},L={meter:{name:"meter",base:P.LENGTH,prefixes:B.LONG,value:1,offset:0},inch:{name:"inch",base:P.LENGTH,prefixes:B.NONE,value:.0254,offset:0},foot:{name:"foot",base:P.LENGTH,prefixes:B.NONE,value:.3048,offset:0},yard:{name:"yard",base:P.LENGTH,prefixes:B.NONE,value:.9144,offset:0},mile:{name:"mile",base:P.LENGTH,prefixes:B.NONE,value:1609.344,offset:0},link:{name:"link",base:P.LENGTH,prefixes:B.NONE,value:.201168,offset:0},rod:{name:"rod",base:P.LENGTH,prefixes:B.NONE,value:5.02921,offset:0},chain:{name:"chain",base:P.LENGTH,prefixes:B.NONE,value:20.1168,offset:0},angstrom:{name:"angstrom",base:P.LENGTH,prefixes:B.NONE,value:1e-10,offset:0},m:{name:"m",base:P.LENGTH,prefixes:B.SHORT,value:1,offset:0},in:{name:"in",base:P.LENGTH,prefixes:B.NONE,value:.0254,offset:0},ft:{name:"ft",base:P.LENGTH,prefixes:B.NONE,value:.3048,offset:0},yd:{name:"yd",base:P.LENGTH,prefixes:B.NONE,value:.9144,offset:0},mi:{name:"mi",base:P.LENGTH,prefixes:B.NONE,value:1609.344,offset:0},li:{name:"li",base:P.LENGTH,prefixes:B.NONE,value:.201168,offset:0},rd:{name:"rd",base:P.LENGTH,prefixes:B.NONE,value:5.02921,offset:0},ch:{name:"ch",base:P.LENGTH,prefixes:B.NONE,value:20.1168,offset:0},mil:{name:"mil",base:P.LENGTH,prefixes:B.NONE,value:254e-7,offset:0},m2:{name:"m2",base:P.SURFACE,prefixes:B.SQUARED,value:1,offset:0},sqin:{name:"sqin",base:P.SURFACE,prefixes:B.NONE,value:64516e-8,offset:0},sqft:{name:"sqft",base:P.SURFACE,prefixes:B.NONE,value:.09290304,offset:0},sqyd:{name:"sqyd",base:P.SURFACE,prefixes:B.NONE,value:.83612736,offset:0},sqmi:{name:"sqmi",base:P.SURFACE,prefixes:B.NONE,value:2589988.110336,offset:0},sqrd:{name:"sqrd",base:P.SURFACE,prefixes:B.NONE,value:25.29295,offset:0},sqch:{name:"sqch",base:P.SURFACE,prefixes:B.NONE,value:404.6873,offset:0},sqmil:{name:"sqmil",base:P.SURFACE,prefixes:B.NONE,value:6.4516e-10,offset:0},m3:{name:"m3",base:P.VOLUME,prefixes:B.CUBIC,value:1,offset:0},L:{name:"L",base:P.VOLUME,prefixes:B.SHORT,value:.001,offset:0},l:{name:"l",base:P.VOLUME,prefixes:B.SHORT,value:.001,offset:0},litre:{name:"litre",base:P.VOLUME,prefixes:B.LONG,value:.001,offset:0},cuin:{name:"cuin",base:P.VOLUME,prefixes:B.NONE,value:16387064e-12,offset:0},cuft:{name:"cuft",base:P.VOLUME,prefixes:B.NONE,value:.028316846592,offset:0},cuyd:{name:"cuyd",base:P.VOLUME,prefixes:B.NONE,value:.764554857984,offset:0},teaspoon:{name:"teaspoon",base:P.VOLUME,prefixes:B.NONE,value:5e-6,offset:0},tablespoon:{name:"tablespoon",base:P.VOLUME,prefixes:B.NONE,value:15e-6,offset:0},drop:{name:"drop",base:P.VOLUME,prefixes:B.NONE,value:5e-8,offset:0},gtt:{name:"gtt",base:P.VOLUME,prefixes:B.NONE,value:5e-8,offset:0},minim:{name:"minim",base:P.VOLUME,prefixes:B.NONE,value:6.161152e-8,offset:0},fluiddram:{name:"fluiddram",base:P.VOLUME,prefixes:B.NONE,value:36966911e-13,offset:0},fluidounce:{name:"fluidounce",base:P.VOLUME,prefixes:B.NONE,value:2957353e-11,offset:0},gill:{name:"gill",base:P.VOLUME,prefixes:B.NONE,value:.0001182941,offset:0},cc:{name:"cc",base:P.VOLUME,prefixes:B.NONE,value:1e-6,offset:0},cup:{name:"cup",base:P.VOLUME,prefixes:B.NONE,value:.0002365882,offset:0},pint:{name:"pint",base:P.VOLUME,prefixes:B.NONE,value:.0004731765,offset:0},quart:{name:"quart",base:P.VOLUME,prefixes:B.NONE,value:.0009463529,offset:0},gallon:{name:"gallon",base:P.VOLUME,prefixes:B.NONE,value:.003785412,offset:0},beerbarrel:{name:"beerbarrel",base:P.VOLUME,prefixes:B.NONE,value:.1173478,offset:0},oilbarrel:{name:"oilbarrel",base:P.VOLUME,prefixes:B.NONE,value:.1589873,offset:0},hogshead:{name:"hogshead",base:P.VOLUME,prefixes:B.NONE,value:.238481,offset:0},fldr:{name:"fldr",base:P.VOLUME,prefixes:B.NONE,value:36966911e-13,offset:0},floz:{name:"floz",base:P.VOLUME,prefixes:B.NONE,value:2957353e-11,offset:0},gi:{name:"gi",base:P.VOLUME,prefixes:B.NONE,value:.0001182941,offset:0},cp:{name:"cp",base:P.VOLUME,prefixes:B.NONE,value:.0002365882,offset:0},pt:{name:"pt",base:P.VOLUME,prefixes:B.NONE,value:.0004731765,offset:0},qt:{name:"qt",base:P.VOLUME,prefixes:B.NONE,value:.0009463529,offset:0},gal:{name:"gal",base:P.VOLUME,prefixes:B.NONE,value:.003785412,offset:0},bbl:{name:"bbl",base:P.VOLUME,prefixes:B.NONE,value:.1173478,offset:0},obl:{name:"obl",base:P.VOLUME,prefixes:B.NONE,value:.1589873,offset:0},g:{name:"g",base:P.MASS,prefixes:B.SHORT,value:.001,offset:0},gram:{name:"gram",base:P.MASS,prefixes:B.LONG,value:.001,offset:0},ton:{name:"ton",base:P.MASS,prefixes:B.SHORT,value:907.18474,offset:0},tonne:{name:"tonne",base:P.MASS,prefixes:B.SHORT,value:1e3,offset:0},grain:{name:"grain",base:P.MASS,prefixes:B.NONE,value:6479891e-11,offset:0},dram:{name:"dram",base:P.MASS,prefixes:B.NONE,value:.0017718451953125,offset:0},ounce:{name:"ounce",base:P.MASS,prefixes:B.NONE,value:.028349523125,offset:0},poundmass:{name:"poundmass",base:P.MASS,prefixes:B.NONE,value:.45359237,offset:0},hundredweight:{name:"hundredweight",base:P.MASS,prefixes:B.NONE,value:45.359237,offset:0},stick:{name:"stick",base:P.MASS,prefixes:B.NONE,value:.115,offset:0},stone:{name:"stone",base:P.MASS,prefixes:B.NONE,value:6.35029318,offset:0},gr:{name:"gr",base:P.MASS,prefixes:B.NONE,value:6479891e-11,offset:0},dr:{name:"dr",base:P.MASS,prefixes:B.NONE,value:.0017718451953125,offset:0},oz:{name:"oz",base:P.MASS,prefixes:B.NONE,value:.028349523125,offset:0},lbm:{name:"lbm",base:P.MASS,prefixes:B.NONE,value:.45359237,offset:0},cwt:{name:"cwt",base:P.MASS,prefixes:B.NONE,value:45.359237,offset:0},s:{name:"s",base:P.TIME,prefixes:B.SHORT,value:1,offset:0},min:{name:"min",base:P.TIME,prefixes:B.NONE,value:60,offset:0},h:{name:"h",base:P.TIME,prefixes:B.NONE,value:3600,offset:0},second:{name:"second",base:P.TIME,prefixes:B.LONG,value:1,offset:0},sec:{name:"sec",base:P.TIME,prefixes:B.LONG,value:1,offset:0},minute:{name:"minute",base:P.TIME,prefixes:B.NONE,value:60,offset:0},hour:{name:"hour",base:P.TIME,prefixes:B.NONE,value:3600,offset:0},day:{name:"day",base:P.TIME,prefixes:B.NONE,value:86400,offset:0},week:{name:"week",base:P.TIME,prefixes:B.NONE,value:604800,offset:0},month:{name:"month",base:P.TIME,prefixes:B.NONE,value:2629800,offset:0},year:{name:"year",base:P.TIME,prefixes:B.NONE,value:31557600,offset:0},decade:{name:"year",base:P.TIME,prefixes:B.NONE,value:315576e3,offset:0},century:{name:"century",base:P.TIME,prefixes:B.NONE,value:315576e4,offset:0},millennium:{name:"millennium",base:P.TIME,prefixes:B.NONE,value:315576e5,offset:0},hertz:{name:"Hertz",base:P.FREQUENCY,prefixes:B.LONG,value:1,offset:0,reciprocal:!0},Hz:{name:"Hz",base:P.FREQUENCY,prefixes:B.SHORT,value:1,offset:0,reciprocal:!0},rad:{name:"rad",base:P.ANGLE,prefixes:B.NONE,value:1,offset:0},deg:{name:"deg",base:P.ANGLE,prefixes:B.NONE,value:.017453292519943295,offset:0},grad:{name:"grad",base:P.ANGLE,prefixes:B.NONE,value:.015707963267948967,offset:0},cycle:{name:"cycle",base:P.ANGLE,prefixes:B.NONE,value:6.283185307179586,offset:0},arcsec:{name:"arcsec",base:P.ANGLE,prefixes:B.NONE,value:484813681109536e-20,offset:0},arcmin:{name:"arcmin",base:P.ANGLE,prefixes:B.NONE,value:.0002908882086657216,offset:0},A:{name:"A",base:P.CURRENT,prefixes:B.SHORT,value:1,offset:0},ampere:{name:"ampere",base:P.CURRENT,prefixes:B.LONG,value:1,offset:0},K:{name:"K",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:0},degC:{name:"degC",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:273.15},degF:{name:"degF",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:459.67},degR:{name:"degR",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:0},kelvin:{name:"kelvin",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:0},celsius:{name:"celsius",base:P.TEMPERATURE,prefixes:B.NONE,value:1,offset:273.15},fahrenheit:{name:"fahrenheit",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:459.67},rankine:{name:"rankine",base:P.TEMPERATURE,prefixes:B.NONE,value:1/1.8,offset:0},mol:{name:"mol",base:P.AMOUNT_OF_SUBSTANCE,prefixes:B.NONE,value:1,offset:0},mole:{name:"mole",base:P.AMOUNT_OF_SUBSTANCE,prefixes:B.NONE,value:1,offset:0},cd:{name:"cd",base:P.LUMINOUS_INTENSITY,prefixes:B.NONE,value:1,offset:0},candela:{name:"candela",base:P.LUMINOUS_INTENSITY,prefixes:B.NONE,value:1,offset:0},N:{name:"N",base:P.FORCE,prefixes:B.SHORT,value:1,offset:0},newton:{name:"newton",base:P.FORCE,prefixes:B.LONG,value:1,offset:0},dyn:{name:"dyn",base:P.FORCE,prefixes:B.SHORT,value:1e-5,offset:0},dyne:{name:"dyne",base:P.FORCE,prefixes:B.LONG,value:1e-5,offset:0},lbf:{name:"lbf",base:P.FORCE,prefixes:B.NONE,value:4.4482216152605,offset:0},poundforce:{name:"poundforce",base:P.FORCE,prefixes:B.NONE,value:4.4482216152605,offset:0},J:{name:"J",base:P.ENERGY,prefixes:B.SHORT,value:1,offset:0},joule:{name:"joule",base:P.ENERGY,prefixes:B.SHORT,value:1,offset:0},erg:{name:"erg",base:P.ENERGY,prefixes:B.NONE,value:1e-5,offset:0},Wh:{name:"Wh",base:P.ENERGY,prefixes:B.SHORT,value:3600,offset:0},BTU:{name:"BTU",base:P.ENERGY,prefixes:B.BTU,value:1055.05585262,offset:0},eV:{name:"eV",base:P.ENERGY,prefixes:B.SHORT,value:1602176565e-28,offset:0},electronvolt:{name:"electronvolt",base:P.ENERGY,prefixes:B.LONG,value:1602176565e-28,offset:0},W:{name:"W",base:P.POWER,prefixes:B.SHORT,value:1,offset:0},watt:{name:"W",base:P.POWER,prefixes:B.LONG,value:1,offset:0},hp:{name:"hp",base:P.POWER,prefixes:B.NONE,value:745.6998715386,offset:0},VAR:{name:"VAR",base:P.POWER,prefixes:B.SHORT,value:new n(0,1),offset:0},VA:{name:"VA",base:P.POWER,prefixes:B.SHORT,value:1,offset:0},Pa:{name:"Pa",base:P.PRESSURE,prefixes:B.SHORT,value:1,offset:0},psi:{name:"psi",base:P.PRESSURE,prefixes:B.NONE,value:6894.75729276459,offset:0},atm:{name:"atm",base:P.PRESSURE,prefixes:B.NONE,value:101325,offset:0},coulomb:{name:"coulomb",base:P.ELECTRIC_CHARGE,prefixes:B.LONG,value:1,offset:0},C:{name:"C",base:P.ELECTRIC_CHARGE,prefixes:B.SHORT,value:1,offset:0},farad:{name:"farad",base:P.ELECTRIC_CAPACITANCE,prefixes:B.LONG,value:1,offset:0},F:{name:"F",base:P.ELECTRIC_CAPACITANCE,prefixes:B.SHORT,value:1,offset:0},volt:{name:"volt",base:P.ELECTRIC_POTENTIAL,prefixes:B.LONG,value:1,offset:0},V:{name:"V",base:P.ELECTRIC_POTENTIAL,prefixes:B.SHORT,value:1,offset:0},ohm:{name:"ohm",base:P.ELECTRIC_RESISTANCE,prefixes:B.SHORTLONG,value:1,offset:0},henry:{name:"henry",base:P.ELECTRIC_INDUCTANCE,prefixes:B.LONG,value:1,offset:0},H:{name:"H",base:P.ELECTRIC_INDUCTANCE,prefixes:B.SHORT,value:1,offset:0},siemens:{name:"siemens",base:P.ELECTRIC_CONDUCTANCE,prefixes:B.LONG,value:1,offset:0},S:{name:"S",base:P.ELECTRIC_CONDUCTANCE,prefixes:B.SHORT,value:1,offset:0},weber:{name:"weber",base:P.MAGNETIC_FLUX,prefixes:B.LONG,value:1,offset:0},Wb:{name:"Wb",base:P.MAGNETIC_FLUX,prefixes:B.SHORT,value:1,offset:0},tesla:{name:"tesla",base:P.MAGNETIC_FLUX_DENSITY,prefixes:B.LONG,value:1,offset:0},T:{name:"T",base:P.MAGNETIC_FLUX_DENSITY,prefixes:B.SHORT,value:1,offset:0},b:{name:"b",base:P.BIT,prefixes:B.BINARY_SHORT,value:1,offset:0},bits:{name:"bits",base:P.BIT,prefixes:B.BINARY_LONG,value:1,offset:0},B:{name:"B",base:P.BIT,prefixes:B.BINARY_SHORT,value:8,offset:0},bytes:{name:"bytes",base:P.BIT,prefixes:B.BINARY_LONG,value:8,offset:0}},F={meters:"meter",inches:"inch",feet:"foot",yards:"yard",miles:"mile",links:"link",rods:"rod",chains:"chain",angstroms:"angstrom",lt:"l",litres:"litre",liter:"litre",liters:"litre",teaspoons:"teaspoon",tablespoons:"tablespoon",minims:"minim",fluiddrams:"fluiddram",fluidounces:"fluidounce",gills:"gill",cups:"cup",pints:"pint",quarts:"quart",gallons:"gallon",beerbarrels:"beerbarrel",oilbarrels:"oilbarrel",hogsheads:"hogshead",gtts:"gtt",grams:"gram",tons:"ton",tonnes:"tonne",grains:"grain",drams:"dram",ounces:"ounce",poundmasses:"poundmass",hundredweights:"hundredweight",sticks:"stick",lb:"lbm",lbs:"lbm",seconds:"second",minutes:"minute",hours:"hour",days:"day",hertz:"hertz",radians:"rad",degree:"deg",degrees:"deg",gradian:"grad",gradians:"grad",cycles:"cycle",arcsecond:"arcsec",arcseconds:"arcsec",arcminute:"arcmin",arcminutes:"arcmin",BTUs:"BTU",watts:"watt",joules:"joule",amperes:"ampere",coulombs:"coulomb",volts:"volt",ohms:"ohm",farads:"farad",webers:"weber",teslas:"tesla",electronvolts:"electronvolt",moles:"mole"},D={si:{NONE:{unit:q,prefix:B.NONE[""]},LENGTH:{unit:L.m,prefix:B.SHORT[""]},MASS:{unit:L.g,prefix:B.SHORT.k},TIME:{unit:L.s,prefix:B.SHORT[""]},CURRENT:{unit:L.A,prefix:B.SHORT[""]},TEMPERATURE:{unit:L.K,prefix:B.SHORT[""]},LUMINOUS_INTENSITY:{unit:L.cd,prefix:B.SHORT[""]},AMOUNT_OF_SUBSTANCE:{unit:L.mol,prefix:B.SHORT[""]},ANGLE:{unit:L.rad,prefix:B.SHORT[""]},BIT:{unit:L.bit,prefix:B.SHORT[""]},FORCE:{unit:L.N,prefix:B.SHORT[""]},ENERGY:{unit:L.J,prefix:B.SHORT[""]},POWER:{unit:L.W,prefix:B.SHORT[""]},PRESSURE:{unit:L.Pa,prefix:B.SHORT[""]},ELECTRIC_CHARGE:{unit:L.C,prefix:B.SHORT[""]},ELECTRIC_CAPACITANCE:{unit:L.F,prefix:B.SHORT[""]},ELECTRIC_POTENTIAL:{unit:L.V,prefix:B.SHORT[""]},ELECTRIC_RESISTANCE:{unit:L.ohm,prefix:B.SHORT[""]},ELECTRIC_INDUCTANCE:{unit:L.H,prefix:B.SHORT[""]},ELECTRIC_CONDUCTANCE:{unit:L.S,prefix:B.SHORT[""]},MAGNETIC_FLUX:{unit:L.Wb,prefix:B.SHORT[""]},MAGNETIC_FLUX_DENSITY:{unit:L.T,prefix:B.SHORT[""]},FREQUENCY:{unit:L.Hz,prefix:B.SHORT[""]}}},$=(D.cgs=JSON.parse(JSON.stringify(D.si)),D.cgs.LENGTH={unit:L.m,prefix:B.SHORT.c},D.cgs.MASS={unit:L.g,prefix:B.SHORT[""]},D.cgs.FORCE={unit:L.dyn,prefix:B.SHORT[""]},D.cgs.ENERGY={unit:L.erg,prefix:B.NONE[""]},D.us=JSON.parse(JSON.stringify(D.si)),D.us.LENGTH={unit:L.ft,prefix:B.NONE[""]},D.us.MASS={unit:L.lbm,prefix:B.NONE[""]},D.us.TEMPERATURE={unit:L.degF,prefix:B.NONE[""]},D.us.FORCE={unit:L.lbf,prefix:B.NONE[""]},D.us.ENERGY={unit:L.BTU,prefix:B.BTU[""]},D.us.POWER={unit:L.hp,prefix:B.NONE[""]},D.us.PRESSURE={unit:L.psi,prefix:B.NONE[""]},D.auto=JSON.parse(JSON.stringify(D.si)),D.auto);for(k in s.setUnitSystem=function(e){if(!D.hasOwnProperty(e))throw new Error("Unit system "+e+" does not exist. Choices are: "+Object.keys(D).join(", "));$=D[e]},s.getUnitSystem=function(){for(var e in D)if(D[e]===$)return e},s.typeConverters={BigNumber:function(t){return new e.BigNumber(t+"")},Fraction:function(t){return new e.Fraction(t)},Complex:function(e){return e},number:function(e){return e}},s._getNumberConverter=function(e){if(s.typeConverters[e])return s.typeConverters[e];throw new TypeError('Unsupported type "'+e+'"')},L)(j=L[k]).dimensions=j.base.dimensions;for(G in F)F.hasOwnProperty(G)&&(j=L[F[G]],(H=Object.create(j)).name=G,L[G]=H);return s.PREFIXES=B,s.BASE_UNITS=P,s.UNITS=L,s.UNIT_SYSTEMS=D,s}},function(e,t,r){"use strict";var i=r(41);t.name="subtract",t.factory=function(e,t,n,a){var o=r(29),s=n(r(50)),u=n(r(51)),c=n(r(75)),f=n(r(52)),l=n(r(59)),p=n(r(76)),m=n(r(54)),h=n(r(55)),g=n(r(56)),v=a("subtract",{"number, number":function(e,t){return e-t},"Complex, Complex":function(t,r){return new e.Complex(t.re-r.re,t.im-r.im)},"BigNumber, BigNumber":function(e,t){return e.minus(t)},"Fraction, Fraction":function(e,t){return e.sub(t)},"Unit, Unit":function(e,t){if(null==e.value)throw new Error("Parameter x contains a unit with undefined value");if(null==t.value)throw new Error("Parameter y contains a unit with undefined value");if(e.equalBase(t))return(e=e.clone()).value=v(e.value,t.value),e.fixPrefix=!1,e;throw new Error("Units do not match")},"Matrix, Matrix":function(e,t){var r=e.size(),n=t.size();if(r.length!==n.length)throw new i(r.length,n.length);return"sparse"===e.storage()?"sparse"===t.storage()?p(e,t,v):l(t,e,v,!0):"sparse"===t.storage()?f(e,t,v,!1):h(e,t,v)},"Array, Array":function(e,t){return v(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return v(s(e),t)},"Matrix, Array":function(e,t){return v(e,s(t))},"Matrix, any":function(e,t){e="sparse"===e.storage()?m(e,c(t),u):g(e,t,v);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?m:g)(t,e,v,!0);return t},"Array, any":function(e,t){return g(s(e),t,v,!1).valueOf()},"any, Array":function(e,t){return g(s(t),e,v,!0).valueOf()}});return v.toTex="\\left(${args[0]}"+o.operators.subtract+"${args[1]}\\right)",v}},function(e,t,r){"use strict";var i=r(19);t.name="unaryMinus",t.factory=function(e,t,n,a){var o=r(29),s=a("unaryMinus",{number:function(e){return-e},Complex:function(t){return new e.Complex(-t.re,-t.im)},BigNumber:function(e){return e.neg()},Fraction:function(e){return e.neg()},Unit:function(e){var t=e.clone();return t.value=s(e.value),t},"Array | Matrix":function(e){return i(e,s,!0)}});return s.toTex=o.operators.unaryMinus+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm05",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var O=n&&p?[]:void 0,T=[],C=[],f=new s({values:O,index:T,ptr:C,size:[g,x],datatype:d}),z=O?[]:void 0,B=O?[]:void 0,k=[],I=[],M=0;M<x;M++){C[M]=T.length;for(var R=M+1,A=c[M],_=c[M+1];A<_;A++)E=u[A],T.push(E),k[E]=R,z&&(z[E]=n[A]);for(A=h[M],_=h[M+1];A<_;A++)k[E=m[A]]!==R&&T.push(E),I[E]=R,B&&(B[E]=p[A]);if(O)for(A=C[M];A<T.length;){var E,P=k[E=T[A]],U=I[E];P!==R&&U!==R||(b(P=N(P===R?z[E]:w,U===R?B[E]:w),w)?T.splice(A,1):(O.push(P),A++))}}return C[x]=T.length,f}}},function(e,t){"use strict";t.factory=function(e,t,r,n){var i=n("multiplyScalar",{"number, number":function(e,t){return e*t},"Complex, Complex":function(t,r){return new e.Complex(t.re*r.re-t.im*r.im,t.re*r.im+t.im*r.re)},"BigNumber, BigNumber":function(e,t){return e.times(t)},"Fraction, Fraction":function(e,t){return e.mul(t)},"number | Fraction | BigNumber | Complex, Unit":function(e,t){t=t.clone();return t.value=null===t.value?t._normalize(e):i(t.value,e),t},"Unit, number | Fraction | BigNumber | Complex":function(e,t){e=e.clone();return e.value=null===e.value?e._normalize(t):i(e.value,t),e},"Unit, Unit":function(e,t){return e.multiply(t)}});return i}},function(e,t,r){"use strict";t.factory=function(e,t,n,i){var o=n(r(77)),s=i("divide",{"number, number":function(e,t){return e/t},"Complex, Complex":function(t,r){var n=r.re*r.re+r.im*r.im;return 0!=n?new e.Complex((t.re*r.re+t.im*r.im)/n,(t.im*r.re-t.re*r.im)/n):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?t.im/0:0)},"BigNumber, BigNumber":function(e,t){return e.div(t)},"Fraction, Fraction":function(e,t){return e.div(t)},"Unit, number | Fraction | BigNumber":function(e,t){e=e.clone();return e.value=s(null===e.value?e._normalize(1):e.value,t),e},"number | Fraction | BigNumber, Unit":function(e,t){t=t.pow(-1);return t.value=o(null===t.value?t._normalize(1):t.value,e),t},"Unit, Unit":function(e,t){return e.divide(t)}});return s}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).size;t.name="pow",t.factory=function(e,t,n,o){function s(r,n){return i(n)||0<=r||t.predictable?Math.pow(r,n):u(new e.Complex(r,0),new e.Complex(n,0))}function u(e,t){return p(g(h(e),t))}function c(e,t){if(!i(t)||t<0)throw new TypeError("For A^b, b must be a positive integer (value is "+t+")");var r=a(e);if(2!=r.length)throw new Error("For A^b, A must be 2 dimensional (A has "+r.length+" dimensions)");if(r[0]!=r[1])throw new Error("For A^b, A must be square (size is "+r[0]+"x"+r[1]+")");for(var n=m(r[0]).valueOf(),o=e;1<=t;)1==(1&t)&&(n=g(o,n)),t>>=1,o=g(o,o);return n}function f(e,t){return v(c(e.valueOf(),t))}var l=r(29),p=n(r(80)),m=n(r(81)),h=n(r(82)),g=n(r(83)),v=n(r(50));return(n=o("pow",{"number, number":s,"Complex, Complex":u,"BigNumber, BigNumber":function(r,n){return n.isInteger()||0<=r||t.predictable?r.pow(n):u(new e.Complex(r.toNumber(),0),new e.Complex(n.toNumber(),0))},"Fraction, Fraction":function(e,r){if(1===r.d)return e.pow(r);if(t.predictable)throw new Error("Function pow does not support non-integer exponents for fractions.");return s(e.valueOf(),r.valueOf())},"Array, number":c,"Array, BigNumber":function(e,t){return c(e,t.toNumber())},"Matrix, number":f,"Matrix, BigNumber":function(e,t){return f(e,t.toNumber())},"Unit, number":function(e,t){return e.pow(t)}})).toTex="\\left(${args[0]}\\right)"+l.operators.pow+"{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(19);t.name="exp",t.factory=function(e,t,r,n){var a=n("exp",{number:Math.exp,Complex:function(t){var r=Math.exp(t.re);return new e.Complex(r*Math.cos(t.im),r*Math.sin(t.im))},BigNumber:function(e){return e.exp()},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\exp\\left(${args[0]}\\right)",a}},function(e,t,r){"use strict";var i=r(39),a=r(6).isInteger;t.name="eye",t.factory=function(e,t,n,o){function s(e,t){switch(e.length){case 0:return t?c(t):[];case 1:return u(e[0],e[0],t);case 2:return u(e[0],e[1],t);default:throw new Error("Vector containing two values expected")}}function u(t,r,n){var o=t&&!0===t.isBigNumber||r&&!0===r.isBigNumber?e.BigNumber:null;if(t&&!0===t.isBigNumber&&(t=t.toNumber()),r&&!0===r.isBigNumber&&(r=r.toNumber()),!a(t)||t<1)throw new Error("Parameters in function eye must be positive integers");if(!a(r)||r<1)throw new Error("Parameters in function eye must be positive integers");var s=o?new e.BigNumber(1):1,o=o?new o(0):0,c=[t,r];if(n)return e.Matrix.storage(n).diagonal(c,s,0,o);for(var l=i.resize([],c,o),p=t<r?t:r,m=0;m<p;m++)l[m][m]=s;return l}var c=n(r(50));return(n=o("eye",{"":function(){return"matrix"===t.matrix?c([]):[]},string:function(e){return c(e)},"number | BigNumber":function(e){return u(e,e,"matrix"===t.matrix?"default":void 0)},"number | BigNumber, string":function(e,t){return u(e,e,t)},"number | BigNumber, number | BigNumber":function(e,r){return u(e,r,"matrix"===t.matrix?"default":void 0)},"number | BigNumber, number | BigNumber, string":u,Array:function(e){return s(e)},"Array, string":s,Matrix:function(e){return s(e.valueOf(),e.storage())},"Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(19);t.name="log",t.factory=function(e,t,n,a){function s(t){return new e.Complex(Math.log(Math.sqrt(t.re*t.re+t.im*t.im)),Math.atan2(t.im,t.re))}var u=n(r(78)),c=a("log",{number:function(r){return 0<=r||t.predictable?Math.log(r):c(new e.Complex(r,0))},Complex:s,BigNumber:function(r){return!r.isNegative()||t.predictable?r.ln():s(new e.Complex(r.toNumber(),0))},"Array | Matrix":function(e){return i(e,c)},"any, any":function(e,t){return u(c(e),c(t))}});return c.toTex={1:"\\ln\\left(${args[0]}\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}\\right)"},c}},function(e,t,r){"use strict";var i=r(3).extend,a=r(39);t.name="multiply",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(51)),f=n(r(77)),l=n(r(47)),p=n(r(84)),m=n(r(56)),h=e.DenseMatrix,g=e.SparseMatrix,v=o("multiply",i({"Array, Array":function(e,t){d(a.size(e),a.size(t));e=v(u(e),u(t));return e&&!0===e.isMatrix?e.valueOf():e},"Matrix, Matrix":function(e,t){var r=e.size(),n=t.size();return d(r,n),1===r.length?1===n.length?y(e,t,r[0]):x(e,t):(1===n.length?w:N)(e,t)},"Matrix, Array":function(e,t){return v(e,u(t))},"Array, Matrix":function(e,t){return v(u(e,t.storage()),t)},"Matrix, any":function(e,t){var r;switch(e.storage()){case"sparse":r=p(e,t,f,!1);break;case"dense":r=m(e,t,f,!1)}return r},"any, Matrix":function(e,t){var r;switch(t.storage()){case"sparse":r=p(t,e,f,!0);break;case"dense":r=m(t,e,f,!0)}return r},"Array, any":function(e,t){return m(u(e),t,f,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,f,!0).valueOf()}},f.signatures)),d=function(e,t){switch(e.length){case 1:switch(t.length){case 1:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+e[0]+") must match Matrix rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;case 2:switch(t.length){case 1:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+e[1]+") must match Vector length ("+t[0]+")");break;case 2:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+e[1]+") must match Matrix B rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+e.length+" dimensions)")}},y=function(e,t,r){if(0===r)throw new Error("Cannot multiply two empty vectors");var i=e._data,e=e._datatype,s=t._data,t=t._datatype,l=c,p=f;e&&t&&e===t&&"string"==typeof e&&(l=o.find(c,[t=e,t]),p=o.find(f,[t,t]));for(var m=p(i[0],s[0]),h=1;h<r;h++)m=l(m,p(i[h],s[h]));return m},x=function(e,t){if("dense"===t.storage())return b(e,t);throw new Error("Not implemented")},b=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,u=t._size,t=t._datatype,p=i[0],m=u[1],g=c,v=f;e&&t&&e===t&&"string"==typeof e&&(g=o.find(c,[r=e,r]),v=o.find(f,[r,r]));for(var d=[],y=0;y<m;y++){for(var x=v(n[0],s[0][y]),b=1;b<p;b++)x=g(x,v(n[b],s[b][y]));d[y]=x}return 1===m?d[0]:new h({data:d,size:[m],datatype:r})},w=function(e,t){switch(e.storage()){case"dense":return E(e,t);case"sparse":return _(e,t)}},N=function(e,t){switch(e.storage()){case"dense":switch(t.storage()){case"dense":return M(e,t);case"sparse":return A(e,t)}break;case"sparse":switch(t.storage()){case"dense":return O(e,t);case"sparse":return T(e,t)}}},E=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,t=t._datatype,l=i[0],p=i[1],m=c,g=f;e&&t&&e===t&&"string"==typeof e&&(m=o.find(c,[r=e,r]),g=o.find(f,[r,r]));for(var v=[],d=0;d<l;d++){for(var y=n[d],x=g(y[0],s[0]),b=1;b<p;b++)x=m(x,g(y[b],s[b]));v[d]=x}return 1===l?v[0]:new h({data:v,size:[l],datatype:r})},M=function(e,t){var r,n=e._data,i=e._size,e=e._datatype,s=t._data,u=t._size,t=t._datatype,p=i[0],m=i[1],g=u[1],v=c,d=f;e&&t&&e===t&&"string"==typeof e&&(v=o.find(c,[r=e,r]),d=o.find(f,[r,r]));for(var y=[],x=0;x<p;x++){var b=n[x];y[x]=[];for(var w=0;w<g;w++){for(var N=d(b[0],s[0][w]),E=1;E<m;E++)N=v(N,d(b[E],s[E][w]));y[x][w]=N}}return 1===p&&1===g?y[0][0]:new h({data:y,size:[p,g],datatype:r})},A=function(e,t){var r=e._data,n=e._size,e=e._datatype,a=t._values,s=t._index,u=t._ptr,p=t._size,t=t._datatype;if(!a)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var h,v=n[0],d=p[1],y=c,x=f,b=l,w=0;e&&t&&e===t&&"string"==typeof e&&(y=o.find(c,[h=e,h]),x=o.find(f,[h,h]),b=o.find(l,[h,h]),w=o.convert(0,h));for(var N=[],E=[],M=[],n=new g({values:N,index:E,ptr:M,size:[v,d],datatype:h}),_=0;_<d;_++){M[_]=E.length;var O=u[_],T=u[_+1];if(O<T)for(var C=0,S=0;S<v;S++){for(var z,B=S+1,k=O;k<T;k++){var I=s[k];C!==B?(z=x(r[S][I],a[k]),C=B):z=y(z,x(r[S][I],a[k]))}C!==B||b(z,w)||(E.push(S),N.push(z))}}return M[d]=E.length,1===v&&1===d?1===N.length?N[0]:0:n},_=function(e,t){var r=e._values,n=e._index,i=e._ptr,a=e._datatype;if(!r)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");for(var s,u=t._data,p=t._datatype,e=e._size[0],h=t._size[0],v=[],d=[],t=[],x=c,b=f,w=l,N=0,E=(a&&p&&a===p&&"string"==typeof a&&(x=o.find(c,[s=a,s]),b=o.find(f,[s,s]),w=o.find(l,[s,s]),N=o.convert(0,s)),[]),M=[],A=t[0]=0;A<h;A++){var _=u[A];if(!w(_,N))for(var O=i[A],T=i[A+1],C=O;C<T;C++){var S=n[C];M[S]?E[S]=x(E[S],b(_,r[C])):(M[S]=!0,d.push(S),E[S]=b(_,r[C]))}}for(var z=d.length,B=0;B<z;B++)v[B]=E[d[B]];return t[1]=d.length,1===e?1===v.length?v[0]:0:new g({values:v,index:d,ptr:t,size:[e,1],datatype:s})},O=function(e,t){var r=e._values,n=e._index,i=e._ptr,a=e._datatype;if(!r)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var s,u=t._data,p=t._datatype,e=e._size[0],h=t._size[0],v=t._size[1],d=c,y=f,x=l,b=0;a&&p&&a===p&&"string"==typeof a&&(d=o.find(c,[s=a,s]),y=o.find(f,[s,s]),x=o.find(l,[s,s]),b=o.convert(0,s));for(var w=[],N=[],E=[],t=new g({values:w,index:N,ptr:E,size:[e,v],datatype:s}),A=[],_=[],O=0;O<v;O++){E[O]=N.length;for(var T=O+1,C=0;C<h;C++){var S=u[C][O];if(!x(S,b))for(var z=i[C],B=i[C+1],k=z;k<B;k++){var I=n[k];_[I]!==T?(_[I]=T,N.push(I),A[I]=y(S,r[k])):A[I]=d(A[I],y(S,r[k]))}}for(var R=E[O],P=N.length,U=R;U<P;U++){var q=N[U];w[U]=A[q]}}return E[v]=N.length,1===e&&1===v?1===w.length?w[0]:0:t},T=function(e,t){var r,n=e._values,i=e._index,a=e._ptr,s=e._datatype,u=t._values,l=t._index,p=t._ptr,m=t._datatype,e=e._size[0],v=t._size[1],d=n&&u,y=c,x=f;s&&m&&s===m&&"string"==typeof s&&(y=o.find(c,[r=s,r]),x=o.find(f,[r,r]));for(var b,w,N,_,O,T=d?[]:void 0,C=[],S=[],t=new g({values:T,index:C,ptr:S,size:[e,v],datatype:r}),B=d?[]:void 0,k=[],I=0;I<v;I++){S[I]=C.length;for(var R=I+1,M=p[I],A=p[I+1],E=M;E<A;E++)if(O=l[E],d)for(w=a[O],N=a[O+1],b=w;b<N;b++)k[_=i[b]]!==R?(k[_]=R,C.push(_),B[_]=x(u[E],n[b])):B[_]=y(B[_],x(u[E],n[b]));else for(w=a[O],N=a[O+1],b=w;b<N;b++)k[_=i[b]]!==R&&(k[_]=R,C.push(_));if(d)for(var M=S[I],U=C.length,q=M;q<U;q++){var L=C[q];T[q]=B[L]}}return S[v]=C.length,1===e&&1===v&&d?1===T.length?T[0]:0:t};return v.toTex="\\left(${args[0]}"+s.operators.multiply+"${args[1]}\\right)",v}},function(e,t,r){"use strict";t.name="algorithm11",t.factory=function(e,t,n,i){var a=n(r(47)),o=e.SparseMatrix;return function(e,t,r,n){var s=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype;if(!s)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var p,m=f[0],h=f[1],g=a,v=0,d=r;"string"==typeof e&&(g=i.find(a,[p=e,p]),v=i.convert(0,p),t=i.convert(t,p),d=i.find(r,[p,p]));for(var y=[],x=[],b=[],f=new o({values:y,index:x,ptr:b,size:[m,h],datatype:p}),N=0;N<h;N++){b[N]=x.length;for(var E=c[N],M=c[N+1],A=E;A<M;A++){var _=u[A],O=n?d(t,s[A]):d(s[A],t);g(O,v)||(x.push(_),y.push(O))}}return b[h]=x.length,f}}},function(e,t,r){"use strict";var i=r(19);t.name="abs",t.factory=function(e,t,r,n){var a=n("abs",{number:Math.abs,Complex:function(e){var n,t=Math.abs(e.re),e=Math.abs(e.im);return t<1e3&&e<1e3?Math.sqrt(t*t+e*e):e<=t?(n=e/t,t*Math.sqrt(1+n*n)):(n=t/e,e*Math.sqrt(1+n*n))},BigNumber:function(e){return e.abs()},Fraction:function(e){return e.abs()},"Array | Matrix":function(e){return i(e,a,!0)},Unit:function(e){return e.abs()}});return a.toTex="\\left|${args[0]}\\right|",a}},function(e,t,r){"use strict";t.name="equal",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(47)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=i("equal",{"any, any":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:o(e,t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,o):s(t,e,o,!0):"sparse"===t.storage()?s(e,t,o,!1):f(e,t,o);return e},"Array, Array":function(e,t){return m(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return m(a(e),t)},"Matrix, Array":function(e,t){return m(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,o,!0);return t},"Array, any":function(e,t){return l(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return l(a(t),e,o,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.equal+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isNumeric",t.factory=function(e,t,r,n){var a=n("isNumeric",{"number | BigNumber | Fraction | boolean":function(){return!0},"Complex | Unit | string":function(){return!1},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";var i=r(23);t.name="format",t.factory=function(e,t,r,n){return(n=n("format",{any:i.format,"any, Object | function | number":i.format})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(40);t.name="typeof",t.factory=function(e,t,r,n){return(n=n("_typeof",{any:function(e){var t=i.type(e);if("Object"===t){if(!0===e.isBigNumber)return"BigNumber";if(!0===e.isComplex)return"Complex";if(!0===e.isFraction)return"Fraction";if(!0===e.isMatrix)return"Matrix";if(!0===e.isUnit)return"Unit";if(!0===e.isIndex)return"Index";if(!0===e.isRange)return"Range";if(!0===e.isChain)return"Chain";if(!0===e.isHelp)return"Help"}return t}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(19);t.name="unit",t.factory=function(e,t,r,n){var a=n("unit",{Unit:function(e){return e.clone()},string:function(t){return e.Unit.isValuelessUnit(t)?new e.Unit(null,t):e.Unit.parse(t)},"number | BigNumber | Fraction | Complex, string":function(t,r){return new e.Unit(t,r)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex={1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},a}},function(e,t,r){var i=r(3).lazy;t.factory=function(e,t,r,n,a){function o(t){t=e.Unit.parse(t);return t.fixPrefix=!0,t}i(a,"speedOfLight",function(){return o("299792458 m s^-1")}),i(a,"gravitationConstant",function(){return o("6.6738480e-11 m^3 kg^-1 s^-2")}),i(a,"planckConstant",function(){return o("6.626069311e-34 J s")}),i(a,"reducedPlanckConstant",function(){return o("1.05457172647e-34 J s")}),i(a,"magneticConstant",function(){return o("1.2566370614e-6 N A^-2")}),i(a,"electricConstant",function(){return o("8.854187817e-12 F m^-1")}),i(a,"vacuumImpedance",function(){return o("376.730313461 ohm")}),i(a,"coulomb",function(){return o("8.9875517873681764e9 N m^2 C^-2")}),i(a,"elementaryCharge",function(){return o("1.60217656535e-19 C")}),i(a,"bohrMagneton",function(){return o("9.2740096820e-24 J T^-1")}),i(a,"conductanceQuantum",function(){return o("7.748091734625e-5 S")}),i(a,"inverseConductanceQuantum",function(){return o("12906.403721742 ohm")}),i(a,"magneticFluxQuantum",function(){return o("2.06783375846e-15 Wb")}),i(a,"nuclearMagneton",function(){return o("5.0507835311e-27 J T^-1")}),i(a,"klitzing",function(){return o("25812.807443484 ohm")}),i(a,"bohrRadius",function(){return o("5.291772109217e-11 m")}),i(a,"classicalElectronRadius",function(){return o("2.817940326727e-15 m")}),i(a,"electronMass",function(){return o("9.1093829140e-31 kg")}),i(a,"fermiCoupling",function(){return o("1.1663645e-5 GeV^-2")}),i(a,"fineStructure",function(){return.007297352569824}),i(a,"hartreeEnergy",function(){return o("4.3597443419e-18 J")}),i(a,"protonMass",function(){return o("1.67262177774e-27 kg")}),i(a,"deuteronMass",function(){return o("3.3435830926e-27 kg")}),i(a,"neutronMass",function(){return o("1.6749271613e-27 kg")}),i(a,"quantumOfCirculation",function(){return o("3.636947552024e-4 m^2 s^-1")}),i(a,"rydberg",function(){return o("10973731.56853955 m^-1")}),i(a,"thomsonCrossSection",function(){return o("6.65245873413e-29 m^2")}),i(a,"weakMixingAngle",function(){return.222321}),i(a,"efimovFactor",function(){return 22.7}),i(a,"atomicMass",function(){return o("1.66053892173e-27 kg")}),i(a,"avogadro",function(){return o("6.0221412927e23 mol^-1")}),i(a,"boltzmann",function(){return o("1.380648813e-23 J K^-1")}),i(a,"faraday",function(){return o("96485.336521 C mol^-1")}),i(a,"firstRadiation",function(){return o("3.7417715317e-16 W m^2")}),i(a,"loschmidt",function(){return o("2.686780524e25 m^-3")}),i(a,"gasConstant",function(){return o("8.314462175 J K^-1 mol^-1")}),i(a,"molarPlanckConstant",function(){return o("3.990312717628e-10 J s mol^-1")}),i(a,"molarVolume",function(){return o("2.241396820e-10 m^3 mol^-1")}),i(a,"sackurTetrode",function(){return-1.164870823}),i(a,"secondRadiation",function(){return o("1.438777013e-2 m K")}),i(a,"stefanBoltzmann",function(){return o("5.67037321e-8 W m^-2 K^-4")}),i(a,"wienDisplacement",function(){return o("2.897772126e-3 m K")}),i(a,"molarMass",function(){return o("1e-3 kg mol^-1")}),i(a,"molarMassC12",function(){return o("1.2e-2 kg mol^-1")}),i(a,"gravity",function(){return o("9.80665 m s^-2")}),i(a,"planckLength",function(){return o("1.61619997e-35 m")}),i(a,"planckMass",function(){return o("2.1765113e-8 kg")}),i(a,"planckTime",function(){return o("5.3910632e-44 s")}),i(a,"planckCharge",function(){return o("1.87554595641e-18 C")}),i(a,"planckTemperature",function(){return o("1.41683385e+32 K")})},t.lazy=!1,t.math=!0},function(e,t,r){"use strict";var i=r(3),a=r(93);t.factory=function n(e,t,o,s,u){u.on("config",function(r,i){r.number!==i.number&&n(e,t,o,s,u)}),u.true=!0,u.false=!1,u.null=null,u.uninitialized=r(39).UNINITIALIZED,"bignumber"===t.number?(u.Infinity=new e.BigNumber(1/0),u.NaN=new e.BigNumber(NaN),i.lazy(u,"pi",function(){return a.pi(e.BigNumber)}),i.lazy(u,"tau",function(){return a.tau(e.BigNumber)}),i.lazy(u,"e",function(){return a.e(e.BigNumber)}),i.lazy(u,"phi",function(){return a.phi(e.BigNumber)}),i.lazy(u,"E",function(){return u.e}),i.lazy(u,"LN2",function(){return new e.BigNumber(2).ln()}),i.lazy(u,"LN10",function(){return new e.BigNumber(10).ln()}),i.lazy(u,"LOG2E",function(){return new e.BigNumber(1).div(new e.BigNumber(2).ln())}),i.lazy(u,"LOG10E",function(){return new e.BigNumber(1).div(new e.BigNumber(10).ln())}),i.lazy(u,"PI",function(){return u.pi}),i.lazy(u,"SQRT1_2",function(){return new e.BigNumber("0.5").sqrt()}),i.lazy(u,"SQRT2",function(){return new e.BigNumber(2).sqrt()})):(u.Infinity=1/0,u.NaN=NaN,u.pi=Math.PI,u.tau=2*Math.PI,u.e=Math.E,u.phi=1.618033988749895,u.E=u.e,u.LN2=Math.LN2,u.LN10=Math.LN10,u.LOG2E=Math.LOG2E,u.LOG10E=Math.LOG10E,u.PI=u.pi,u.SQRT1_2=Math.SQRT1_2,u.SQRT2=Math.SQRT2),u.i=new e.Complex(0,1),u.version=r(95)},t.lazy=!1,t.math=!0},function(e,t,r){function n(e){return e[0].precision}var i=r(44).memoize,a=r(94);t.e=i(function(e){return new e(1).exp()},n),t.phi=i(function(e){return new e(1).plus(new e(5).sqrt()).div(2)},n),t.pi=i(function(e){var t=e.constructor({precision:e.precision+4}),t=new t(4).times(a(new t(1).div(5))).minus(a(new t(1).div(239)));return new e(4).times(t)},n),t.tau=i(function(e){var r=t.pi(e.constructor({precision:e.precision+2}));return new e(2).times(r)},n)},function(e,t){e.exports=function(e){for(var t=e,r=NaN,n=e.times(e),i=e,a=!0,o=3;!t.equals(r);o+=2)i=i.times(n),r=t,t=(a=!a)?t.plus(i.div(o)):t.minus(i.div(o));return t}},function(e,t){e.exports="2.6.0"},function(e,t,r){e.exports=[r(97),r(267),r(291),r(292),r(319),r(269),r(290)]},function(e,t,r){t.name="docs",t.path="expression",t.factory=function(e,t,n,i){var a={};return a.bignumber=r(98),a.boolean=r(99),a.complex=r(100),a.fraction=r(101),a.index=r(102),a.matrix=r(103),a.number=r(104),a.sparse=r(105),a.string=r(106),a.unit=r(107),a.e=r(108),a.E=r(108),a.false=r(109),a.i=r(110),a.Infinity=r(111),a.LN2=r(112),a.LN10=r(113),a.LOG2E=r(114),a.LOG10E=r(115),a.NaN=r(116),a.null=r(117),a.pi=r(118),a.PI=r(118),a.phi=r(119),a.SQRT1_2=r(120),a.SQRT2=r(121),a.tau=r(122),a.true=r(123),a.version=r(124),a.speedOfLight={description:"Speed of light in vacuum",examples:["speedOfLight"]},a.gravitationConstant={description:"Newtonian constant of gravitation",examples:["gravitationConstant"]},a.planckConstant={description:"Planck constant",examples:["planckConstant"]},a.reducedPlanckConstant={description:"Reduced Planck constant",examples:["reducedPlanckConstant"]},a.magneticConstant={description:"Magnetic constant (vacuum permeability)",examples:["magneticConstant"]},a.electricConstant={description:"Electric constant (vacuum permeability)",examples:["electricConstant"]},a.vacuumImpedance={description:"Characteristic impedance of vacuum",examples:["vacuumImpedance"]},a.coulomb={description:"Coulomb's constant",examples:["coulomb"]},a.elementaryCharge={description:"Elementary charge",examples:["elementaryCharge"]},a.bohrMagneton={description:"Borh magneton",examples:["bohrMagneton"]},a.conductanceQuantum={description:"Conductance quantum",examples:["conductanceQuantum"]},a.inverseConductanceQuantum={description:"Inverse conductance quantum",examples:["inverseConductanceQuantum"]},a.magneticFluxQuantum={description:"Magnetic flux quantum",examples:["magneticFluxQuantum"]},a.nuclearMagneton={description:"Nuclear magneton",examples:["nuclearMagneton"]},a.klitzing={description:"Von Klitzing constant",examples:["klitzing"]},a.bohrRadius={description:"Borh radius",examples:["bohrRadius"]},a.classicalElectronRadius={description:"Classical electron radius",examples:["classicalElectronRadius"]},a.electronMass={description:"Electron mass",examples:["electronMass"]},a.fermiCoupling={description:"Fermi coupling constant",examples:["fermiCoupling"]},a.fineStructure={description:"Fine-structure constant",examples:["fineStructure"]},a.hartreeEnergy={description:"Hartree energy",examples:["hartreeEnergy"]},a.protonMass={description:"Proton mass",examples:["protonMass"]},a.deuteronMass={description:"Deuteron Mass",examples:["deuteronMass"]},a.neutronMass={description:"Neutron mass",examples:["neutronMass"]},a.quantumOfCirculation={description:"Quantum of circulation",examples:["quantumOfCirculation"]},a.rydberg={description:"Rydberg constant",examples:["rydberg"]},a.thomsonCrossSection={description:"Thomson cross section",examples:["thomsonCrossSection"]},a.weakMixingAngle={description:"Weak mixing angle",examples:["weakMixingAngle"]},a.efimovFactor={description:"Efimov factor",examples:["efimovFactor"]},a.atomicMass={description:"Atomic mass constant",examples:["atomicMass"]},a.avogadro={description:"Avogadro's number",examples:["avogadro"]},a.boltzmann={description:"Boltzmann constant",examples:["boltzmann"]},a.faraday={description:"Faraday constant",examples:["faraday"]},a.firstRadiation={description:"First radiation constant",examples:["firstRadiation"]},a.loschmidt={description:"Loschmidt constant at T=273.15 K and p=101.325 kPa",examples:["loschmidt"]},a.gasConstant={description:"Gas constant",examples:["gasConstant"]},a.molarPlanckConstant={description:"Molar Planck constant",examples:["molarPlanckConstant"]},a.molarVolume={description:"Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",examples:["molarVolume"]},a.sackurTetrode={description:"Sackur-Tetrode constant at T=1 K and p=101.325 kPa",examples:["sackurTetrode"]},a.secondRadiation={description:"Second radiation constant",examples:["secondRadiation"]},a.stefanBoltzmann={description:"Stefan-Boltzmann constant",examples:["stefanBoltzmann"]},a.wienDisplacement={description:"Wien displacement law constant",examples:["wienDisplacement"]},a.molarMass={description:"Molar mass constant",examples:["molarMass"]},a.molarMassC12={description:"Molar mass constant of carbon-12",examples:["molarMassC12"]},a.gravity={description:"Standard acceleration of gravity (standard acceleration of free-fall on Earth)",examples:["gravity"]},a.planckLength={description:"Planck length",examples:["planckLength"]},a.planckMass={description:"Planck mass",examples:["planckMass"]},a.planckTime={description:"Planck time",examples:["planckTime"]},a.planckCharge={description:"Planck charge",examples:["planckCharge"]},a.planckTemperature={description:"Planck temperature",examples:["planckTemperature"]},a.lsolve=r(125),a.lup=r(126),a.lusolve=r(127),a.slu=r(128),a.usolve=r(129),a.abs=r(130),a.add=r(131),a.cbrt=r(132),a.ceil=r(133),a.cube=r(134),a.divide=r(135),a.dotDivide=r(136),a.dotMultiply=r(137),a.dotPow=r(138),a.exp=r(139),a.fix=r(140),a.floor=r(141),a.gcd=r(142),a.hypot=r(143),a.lcm=r(144),a.log=r(145),a.log10=r(146),a.mod=r(147),a.multiply=r(148),a.norm=r(149),a.nthRoot=r(150),a.pow=r(151),a.round=r(152),a.sign=r(153),a.sqrt=r(154),a.square=r(155),a.subtract=r(156),a.unaryMinus=r(157),a.unaryPlus=r(158),a.xgcd=r(159),a.bitAnd=r(160),a.bitNot=r(161),a.bitOr=r(162),a.bitXor=r(163),a.leftShift=r(164),a.rightArithShift=r(165),a.rightLogShift=r(166),a.bellNumbers=r(167),a.catalan=r(168),a.composition=r(169),a.stirlingS2=r(170),a.arg=r(171),a.conj=r(172),a.re=r(173),a.im=r(174),a.eval=r(175),a.help=r(176),a.distance=r(177),a.intersect=r(178),a.and=r(179),a.not=r(180),a.or=r(181),a.xor=r(182),a.concat=r(183),a.cross=r(184),a.det=r(185),a.diag=r(186),a.dot=r(187),a.eye=r(188),a.flatten=r(189),a.inv=r(190),a.ones=r(191),a.range=r(192),a.resize=r(193),a.size=r(194),a.squeeze=r(195),a.subset=r(196),a.trace=r(197),a.transpose=r(198),a.zeros=r(199),a.combinations=r(200),a.factorial=r(201),a.gamma=r(202),a.kldivergence=r(203),a.multinomial=r(204),a.permutations=r(205),a.pickRandom=r(206),a.random=r(207),a.randomInt=r(208),a.compare=r(209),a.deepEqual=r(210),a.equal=r(211),a.larger=r(212),a.largerEq=r(213),a.smaller=r(214),a.smallerEq=r(215),a.unequal=r(216),a.max=r(217),a.mean=r(218),a.median=r(219),a.min=r(220),a.mode=r(221),a.prod=r(222),a.quantileSeq=r(223),a.std=r(224),a.sum=r(225),a.var=r(226),a.acos=r(227),a.acosh=r(228),a.acot=r(229),a.acoth=r(230),a.acsc=r(231),a.acsch=r(232),a.asec=r(233),a.asech=r(234),a.asin=r(235),a.asinh=r(236),a.atan=r(237),a.atanh=r(238),a.atan2=r(239),a.cos=r(240),a.cosh=r(241),a.cot=r(242),a.coth=r(243),a.csc=r(244),a.csch=r(245),a.sec=r(246),a.sech=r(247),a.sin=r(248),a.sinh=r(249),a.tan=r(250),a.tanh=r(251),a.to=r(252),a.clone=r(253),a.map=r(254),a.partitionSelect=r(255),a.filter=r(256),a.forEach=r(257),a.format=r(258),a.isInteger=r(259),a.isNegative=r(260),a.isNumeric=r(261),a.isPositive=r(262),a.isZero=r(263),a.import=r(264),a.sort=r(265),a.typeof=r(266),a}},function(e,t){e.exports={name:"bignumber",category:"Type",syntax:["bignumber(x)"],description:"Create a big number from a number or string.",examples:["0.1 + 0.2","bignumber(0.1) + bignumber(0.2)",'bignumber("7.2")','bignumber("7.2e500")',"bignumber([0.1, 0.2, 0.3])"],seealso:["boolean","complex","fraction","index","matrix","string","unit"]}},function(e,t){e.exports={name:"boolean",category:"Type",syntax:["x","boolean(x)"],description:"Convert a string or number into a boolean.",examples:["boolean(0)","boolean(1)","boolean(3)",'boolean("true")','boolean("false")',"boolean([1, 0, 1, 1])"],seealso:["bignumber","complex","index","matrix","number","string","unit"]}},function(e,t){e.exports={name:"complex",category:"Type",syntax:["complex()","complex(re, im)","complex(string)"],description:"Create a complex number.",examples:["complex()","complex(2, 3)",'complex("7 - 2i")'],seealso:["bignumber","boolean","index","matrix","number","string","unit"]}},function(e,t){e.exports={name:"fraction",category:"Type",syntax:["fraction(num)","fraction(num,den)"],description:"Create a fraction from a number or from a numerator and denominator.",examples:["fraction(0.125)","fraction(1, 3) + fraction(2, 5)"],seealso:["bignumber","boolean","complex","index","matrix","string","unit"]}},function(e,t){e.exports={name:"index",category:"Type",syntax:["[start]","[start:end]","[start:step:end]","[start1, start 2, ...]","[start1:end1, start2:end2, ...]","[start1:step1:end1, start2:step2:end2, ...]"],description:"Create an index to get or replace a subset of a matrix",examples:["[]","[1, 2, 3]","A = [1, 2, 3; 4, 5, 6]","A[1, :]","A[1, 2] = 50","A[0:2, 0:2] = ones(2, 2)"],seealso:["bignumber","boolean","complex","matrix,","number","range","string","unit"]}},function(e,t){e.exports={name:"matrix",category:"Type",syntax:["[]","[a1, b1, ...; a2, b2, ...]","matrix()",'matrix("dense")',"matrix([...])"],description:"Create a matrix.",examples:["[]","[1, 2, 3]","[1, 2, 3; 4, 5, 6]","matrix()","matrix([3, 4])",'matrix([3, 4; 5, 6], "sparse")','matrix([3, 4; 5, 6], "sparse", "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","sparse"]}},function(e,t){e.exports={name:"number",category:"Type",syntax:["x","number(x)"],description:"Create a number or convert a string or boolean into a number.",examples:["2","2e3","4.05","number(2)",'number("7.2")',"number(true)","number([true, false, true, true])",'number("52cm", "m")'],seealso:["bignumber","boolean","complex","fraction","index","matrix","string","unit"]}},function(e,t){e.exports={name:"sparse",category:"Type",syntax:["sparse()","sparse([a1, b1, ...; a1, b2, ...])",'sparse([a1, b1, ...; a1, b2, ...], "number")'],description:"Create a sparse matrix.",examples:["sparse()","sparse([3, 4; 5, 6])",'sparse([3, 0; 5, 0], "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","matrix"]}},function(e,t){e.exports={name:"string",category:"Type",syntax:['"text"',"string(x)"],description:"Create a string or convert a value to a string",examples:['"Hello World!"',"string(4.2)","string(3 + 2i)"],seealso:["bignumber","boolean","complex","index","matrix","number","unit"]}},function(e,t){e.exports={name:"unit",category:"Type",syntax:["value unit","unit(value, unit)","unit(string)"],description:"Create a unit.",examples:["5.5 mm","3 inch",'unit(7.1, "kilogram")','unit("23 deg")'],seealso:["bignumber","boolean","complex","index","matrix","number","string"]}},function(e,t){e.exports={name:"e",category:"Constants",syntax:["e"],description:"Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",examples:["e","e ^ 2","exp(2)","log(e)"],seealso:["exp"]}},function(e,t){e.exports={name:"false",category:"Constants",syntax:["false"],description:"Boolean value false",examples:["false"],seealso:["true"]}},function(e,t){e.exports={name:"i",category:"Constants",syntax:["i"],description:"Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",examples:["i","i * i","sqrt(-1)"],seealso:[]}},function(e,t){e.exports={name:"Infinity",category:"Constants",syntax:["Infinity"],description:"Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",examples:["Infinity","1 / 0"],seealso:[]}},function(e,t){e.exports={name:"LN2",category:"Constants",syntax:["LN2"],description:"Returns the natural logarithm of 2, approximately equal to 0.693",examples:["LN2","log(2)"],seealso:[]}},function(e,t){e.exports={name:"LN10",category:"Constants",syntax:["LN10"],description:"Returns the natural logarithm of 10, approximately equal to 2.302",examples:["LN10","log(10)"],seealso:[]}},function(e,t){e.exports={name:"LOG2E",category:"Constants",syntax:["LOG2E"],description:"Returns the base-2 logarithm of E, approximately equal to 1.442",examples:["LOG2E","log(e, 2)"],seealso:[]}},function(e,t){e.exports={name:"LOG10E",category:"Constants",syntax:["LOG10E"],description:"Returns the base-10 logarithm of E, approximately equal to 0.434",examples:["LOG10E","log(e, 10)"],seealso:[]}},function(e,t){e.exports={name:"NaN",category:"Constants",syntax:["NaN"],description:"Not a number",examples:["NaN","0 / 0"],seealso:[]}},function(e,t){e.exports={name:"null",category:"Constants",syntax:["null"],description:"Value null",examples:["null"],seealso:["true","false"]}},function(e,t){e.exports={name:"pi",category:"Constants",syntax:["pi"],description:"The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",examples:["pi","sin(pi/2)"],seealso:["tau"]}},function(e,t){e.exports={name:"phi",category:"Constants",syntax:["phi"],description:"Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",examples:["tau"],seealso:[]}},function(e,t){e.exports={name:"SQRT1_2",category:"Constants",syntax:["SQRT1_2"],description:"Returns the square root of 1/2, approximately equal to 0.707",examples:["SQRT1_2","sqrt(1/2)"],seealso:[]}},function(e,t){e.exports={name:"SQRT2",category:"Constants",syntax:["SQRT2"],description:"Returns the square root of 2, approximately equal to 1.414",examples:["SQRT2","sqrt(2)"],seealso:[]}},function(e,t){e.exports={name:"tau",category:"Constants",syntax:["tau"],description:"Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",examples:["tau","2 * pi"],seealso:["pi"]}},function(e,t){e.exports={name:"true",category:"Constants",syntax:["true"],description:"Boolean value true",examples:["true"],seealso:["false"]}},function(e,t){e.exports={name:"version",category:"Constants",syntax:["version"],description:"A string with the version number of math.js",examples:["version"],seealso:[]}},function(e,t){e.exports={name:"lsolve",category:"Algebra",syntax:["x=lsolve(L, b)"],description:"Solves the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lup","lusolve","usolve","matrix","sparse"]}},function(e,t){e.exports={name:"lup",category:"Algebra",syntax:["lup(m)"],description:"Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",examples:["lup([[2, 1], [1, 4]])","lup(matrix([[2, 1], [1, 4]]))","lup(sparse([[2, 1], [1, 4]]))"],seealso:["lusolve","lsolve","usolve","matrix","sparse","slu"]}},function(e,t){e.exports={name:"lusolve",category:"Algebra",syntax:["x=lusolve(A, b)","x=lusolve(lu, b)"],description:"Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lusolve(a, b)"],seealso:["lup","slu","lsolve","usolve","matrix","sparse"]}},function(e,t){e.exports={name:"slu",category:"Algebra",syntax:["slu(A, order, threshold)"],description:"Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",examples:["slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)"],seealso:["lusolve","lsolve","usolve","matrix","sparse","lup"]}},function(e,t){e.exports={name:"usolve",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Solves the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["lup","lusolve","lsolve","matrix","sparse"]}},function(e,t){e.exports={name:"abs",category:"Arithmetic",syntax:["abs(x)"],description:"Compute the absolute value.",examples:["abs(3.5)","abs(-4.2)"],seealso:["sign"]}},function(e,t){e.exports={name:"add",category:"Operators",syntax:["x + y","add(x, y)"],description:"Add two values.",examples:["a = 2.1 + 3.6","a - 3.6","3 + 2i","3 cm + 2 inch",'"2.3" + "4"'],seealso:["subtract"]}},function(e,t){e.exports={name:"cbrt",category:"Arithmetic",syntax:["cbrt(x)","cbrt(x, allRoots)"],description:"Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",examples:["cbrt(64)","cube(4)","cbrt(-8)","cbrt(2 + 3i)","cbrt(8i)","cbrt(8i, true)","cbrt(27 m^3)"],seealso:["square","sqrt","cube","multiply"]}},function(e,t){e.exports={name:"ceil",category:"Arithmetic",syntax:["ceil(x)"],description:"Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",examples:["ceil(3.2)","ceil(3.8)","ceil(-4.2)"],seealso:["floor","fix","round"]}},function(e,t){e.exports={name:"cube",category:"Arithmetic",syntax:["cube(x)"],description:"Compute the cube of a value. The cube of x is x * x * x.",examples:["cube(2)","2^3","2 * 2 * 2"],seealso:["multiply","square","pow"]}},function(e,t){e.exports={name:"divide",category:"Operators",syntax:["x / y","divide(x, y)"],description:"Divide two values.",examples:["a = 2 / 3","a * 3","4.5 / 2","3 + 4 / 2","(3 + 4) / 2","18 km / 4.5"],seealso:["multiply"]}},function(e,t){e.exports={name:"dotDivide",category:"Operators",syntax:["x ./ y","dotDivide(x, y)"],description:"Divide two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a ./ b"],seealso:["multiply","dotMultiply","divide"]}},function(e,t){e.exports={name:"dotMultiply",category:"Operators",syntax:["x .* y","dotMultiply(x, y)"],description:"Multiply two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a .* b"],seealso:["multiply","divide","dotDivide"]}},function(e,t){e.exports={name:"dotpow",category:"Operators",syntax:["x .^ y","dotpow(x, y)"],description:"Calculates the power of x to y element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","a .^ 2"],seealso:["pow"]}},function(e,t){e.exports={name:"exp",category:"Arithmetic",syntax:["exp(x)"],description:"Calculate the exponent of a value.",examples:["exp(1.3)","e ^ 1.3","log(exp(1.3))","x = 2.4","(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula"],seealso:["pow","log"]}},function(e,t){e.exports={name:"fix",category:"Arithmetic",syntax:["fix(x)"],description:"Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",examples:["fix(3.2)","fix(3.8)","fix(-4.2)","fix(-4.8)"],seealso:["ceil","floor","round"]}},function(e,t){e.exports={name:"floor",category:"Arithmetic",syntax:["floor(x)"],description:"Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",examples:["floor(3.2)","floor(3.8)","floor(-4.2)"],seealso:["ceil","fix","round"]}},function(e,t){e.exports={name:"gcd",category:"Arithmetic",syntax:["gcd(a, b)","gcd(a, b, c, ...)"],description:"Compute the greatest common divisor.",examples:["gcd(8, 12)","gcd(-4, 6)","gcd(25, 15, -10)"],seealso:["lcm","xgcd"]}},function(e,t){e.exports={name:"hypot",category:"Arithmetic",syntax:["hypot(a, b, c, ...)","hypot([a, b, c, ...])"],description:"Calculate the hypotenusa of a list with values. ",examples:["hypot(3, 4)","sqrt(3^2 + 4^2)","hypot(-2)","hypot([3, 4, 5])"],seealso:["abs","norm"]}},function(e,t){e.exports={name:"lcm",category:"Arithmetic",syntax:["lcm(x, y)"],description:"Compute the least common multiple.",examples:["lcm(4, 6)","lcm(6, 21)","lcm(6, 21, 5)"],seealso:["gcd"]}},function(e,t){e.exports={name:"log",category:"Arithmetic",syntax:["log(x)","log(x, base)"],description:"Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",examples:["log(3.5)","a = log(2.4)","exp(a)","10 ^ 4","log(10000, 10)","log(10000) / log(10)","b = log(1024, 2)","2 ^ b"],seealso:["exp","log10"]}},function(e,t){e.exports={name:"log10",category:"Arithmetic",syntax:["log10(x)"],description:"Compute the 10-base logarithm of a value.",examples:["log10(0.00001)","log10(10000)","10 ^ 4","log(10000) / log(10)","log(10000, 10)"],seealso:["exp","log"]}},function(e,t){e.exports={name:"mod",category:"Operators",syntax:["x % y","x mod y","mod(x, y)"],description:"Calculates the modulus, the remainder of an integer division.",examples:["7 % 3","11 % 2","10 mod 4","function isOdd(x) = x % 2","isOdd(2)","isOdd(3)"],seealso:["divide"]}},function(e,t){e.exports={name:"multiply",category:"Operators",syntax:["x * y","multiply(x, y)"],description:"multiply two values.",examples:["a = 2.1 * 3.4","a / 3.4","2 * 3 + 4","2 * (3 + 4)","3 * 2.1 km"],seealso:["divide"]}},function(e,t){e.exports={name:"norm",category:"Arithmetic",syntax:["norm(x)","norm(x, p)"],description:"Calculate the norm of a number, vector or matrix.",examples:["abs(-3.5)","norm(-3.5)","norm(3 - 4i))","norm([1, 2, -3], Infinity)","norm([1, 2, -3], -Infinity)","norm([3, 4], 2)","norm([[1, 2], [3, 4]], 1)","norm([[1, 2], [3, 4]], 'inf')","norm([[1, 2], [3, 4]], 'fro')"]}},function(e,t){e.exports={name:"nthRoot",category:"Arithmetic",syntax:["nthRoot(a)","nthRoot(a, root)"],description:'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',examples:["4 ^ 3","nthRoot(64, 3)","nthRoot(9, 2)","sqrt(9)"],seealso:["sqrt","pow"]}},function(e,t){e.exports={name:"pow",category:"Operators",syntax:["x ^ y","pow(x, y)"],description:"Calculates the power of x to y, x^y.",examples:["2^3 = 8","2*2*2","1 + e ^ (pi * i)"],seealso:["multiply"]}},function(e,t){e.exports={name:"round",category:"Arithmetic",syntax:["round(x)","round(x, n)"],description:"round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",examples:["round(3.2)","round(3.8)","round(-4.2)","round(-4.8)","round(pi, 3)","round(123.45678, 2)"],seealso:["ceil","floor","fix"]}},function(e,t){e.exports={name:"sign",category:"Arithmetic",syntax:["sign(x)"],description:"Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",examples:["sign(3.5)","sign(-4.2)","sign(0)"],seealso:["abs"]}},function(e,t){e.exports={name:"sqrt",category:"Arithmetic",syntax:["sqrt(x)"],description:"Compute the square root value. If x = y * y, then y is the square root of x.",examples:["sqrt(25)","5 * 5","sqrt(-1)"],seealso:["square","multiply"]}},function(e,t){e.exports={name:"square",category:"Arithmetic",syntax:["square(x)"],description:"Compute the square of a value. The square of x is x * x.",examples:["square(3)","sqrt(9)","3^2","3 * 3"],seealso:["multiply","pow","sqrt","cube"]}},function(e,t){e.exports={name:"subtract",category:"Operators",syntax:["x - y","subtract(x, y)"],description:"subtract two values.",examples:["a = 5.3 - 2","a + 2","2/3 - 1/6","2 * 3 - 3","2.1 km - 500m"],seealso:["add"]}},function(e,t){e.exports={name:"unaryMinus",category:"Operators",syntax:["-x","unaryMinus(x)"],description:"Inverse the sign of a value. Converts booleans and strings to numbers.",examples:["-4.5","-(-5.6)",'-"22"'],seealso:["add","subtract","unaryPlus"]}},function(e,t){e.exports={name:"unaryPlus",category:"Operators",syntax:["+x","unaryPlus(x)"],description:"Converts booleans and strings to numbers.",examples:["+true",'+"2"'],seealso:["add","subtract","unaryMinus"]}},function(e,t){e.exports={name:"xgcd",category:"Arithmetic",syntax:["xgcd(a, b)"],description:"Calculate the extended greatest common divisor for two values",examples:["xgcd(8, 12)","gcd(8, 12)","xgcd(36163, 21199)"],seealso:["gcd","lcm"]}},function(e,t){e.exports={name:"bitAnd",category:"Bitwise",syntax:["x & y","bitAnd(x, y)"],description:"Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",examples:["5 & 3","bitAnd(53, 131)","[1, 12, 31] & 42"],seealso:["bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitNot",category:"Bitwise",syntax:["~x","bitNot(x)"],description:"Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",examples:["~1","~2","bitNot([2, -3, 4])"],seealso:["bitAnd","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitOr",category:"Bitwise",syntax:["x | y","bitOr(x, y)"],description:"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",examples:["5 | 3","bitOr([1, 2, 3], 4)"],seealso:["bitAnd","bitNot","bitXor","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"bitXor",category:"Bitwise",syntax:["bitXor(x, y)"],description:"Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",examples:["bitOr(1, 2)","bitXor([2, 3, 4], 4)"],seealso:["bitAnd","bitNot","bitOr","leftShift","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"leftShift",category:"Bitwise",syntax:["x << y","leftShift(x, y)"],description:"Bitwise left logical shift of a value x by y number of bits.",examples:["4 << 1","8 >> 1"],seealso:["bitAnd","bitNot","bitOr","bitXor","rightArithShift","rightLogShift"]}},function(e,t){e.exports={name:"rightArithShift",category:"Bitwise",syntax:["x >> y","leftShift(x, y)"],description:"Bitwise right arithmetic shift of a value x by y number of bits.",examples:["8 >> 1","4 << 1","-12 >> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightLogShift"]}},function(e,t){e.exports={name:"rightLogShift",category:"Bitwise",syntax:["x >> y","leftShift(x, y)"],description:"Bitwise right logical shift of a value x by y number of bits.",examples:["8 >>> 1","4 << 1","-12 >>> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift"]}},function(e,t){e.exports={name:"bellNumbers",category:"Combinatorics",syntax:["bellNumbers(n)"],description:"The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["bellNumbers(3)","bellNumbers(8)"],seealso:["stirlingS2"]}},function(e,t){e.exports={name:"catalan",category:"Combinatorics",syntax:["catalan(n)"],description:"The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["catalan(3)","catalan(8)"],seealso:["bellNumbers"]}},function(e,t){e.exports={name:"composition",category:"Combinatorics",syntax:["composition(n, k)"],description:"The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",examples:["composition(5, 3)"],seealso:["combinations"]}},function(e,t){e.exports={name:"stirlingS2",category:"Combinatorics",syntax:["stirlingS2(n, k)"],description:"he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",examples:["stirlingS2(5, 3)"],seealso:["bellNumbers"]}},function(e,t){e.exports={name:"arg",category:"Complex",syntax:["arg(x)"],description:"Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",examples:["arg(2 + 2i)","atan2(3, 2)","arg(2 + 3i)"],seealso:["re","im","conj","abs"]}},function(e,t){e.exports={name:"conj",category:"Complex",syntax:["conj(x)"],description:"Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",examples:["conj(2 + 3i)","conj(2 - 3i)","conj(-5.2i)"],seealso:["re","im","abs","arg"]}},function(e,t){e.exports={name:"re",category:"Complex",syntax:["re(x)"],description:"Get the real part of a complex number.",examples:["re(2 + 3i)","im(2 + 3i)","re(-5.2i)","re(2.4)"],seealso:["im","conj","abs","arg"]}},function(e,t){e.exports={name:"im",category:"Complex",syntax:["im(x)"],description:"Get the imaginary part of a complex number.",examples:["im(2 + 3i)","re(2 + 3i)","im(-5.2i)","im(2.4)"],seealso:["re","conj","abs","arg"]}},function(e,t){e.exports={name:"eval",category:"Expression",syntax:["eval(expression)","eval([expr1, expr2, expr3, ...])"],description:"Evaluate an expression or an array with expressions.",examples:['eval("2 + 3")','eval("sqrt(" + 4 + ")")'],seealso:[]}},function(e,t){e.exports={name:"help",category:"Expression",syntax:["help(object)","help(string)"],description:"Display documentation on a function or data type.",examples:["help(sqrt)",'help("complex")'],seealso:[]}},function(e,t){e.exports={name:"distance",category:"Geometry",syntax:["distance([x1, y1], [x2, y2])","distance([[x1, y1], [x2, y2])"],description:"Calculates the Euclidean distance between two points.",examples:["distance([0,0], [4,4])","distance([[0,0], [4,4]])"],seealso:[]}},function(e,t){e.exports={name:"intersect",category:"Geometry",syntax:["intersect(expr1, expr2, expr3, expr4)","intersect(expr1, expr2, expr3)"],description:"Computes the intersection point of lines and/or planes.",examples:["intersect([0, 0], [10, 10], [10, 0], [0, 10])","intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])"],seealso:[]}},function(e,t){e.exports={name:"and",category:"Logical",syntax:["x and y","and(x, y)"],description:"Logical and. Test whether two values are both defined with a nonzero/nonempty value.",examples:["true and false","true and true","2 and 4"],seealso:["not","or","xor"]}},function(e,t){e.exports={name:"not",category:"Logical",syntax:["not x","not(x)"],description:"Logical not. Flips the boolean value of given argument.",examples:["not true","not false","not 2","not 0"],seealso:["and","or","xor"]}},function(e,t){e.exports={name:"or",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical or. Test if at least one value is defined with a nonzero/nonempty value.",examples:["true or false","false or false","0 or 4"],seealso:["not","and","xor"]}},function(e,t){e.exports={name:"xor",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",examples:["true xor false","false xor false","true xor true","0 or 4"],seealso:["not","and","or"]}},function(e,t){e.exports={name:"concat",category:"Matrix",syntax:["concat(A, B, C, ...)","concat(A, B, C, ..., dim)"],description:"Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",examples:["A = [1, 2; 5, 6]","B = [3, 4; 7, 8]","concat(A, B)","concat(A, B, 1)","concat(A, B, 2)"],seealso:["det","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"cross",category:"Matrix",syntax:["cross(A, B)"],description:"Calculate the cross product for two vectors in three dimensional space.",examples:["cross([1, 1, 0],  [0, 1, 1])","cross([3, -3, 1], [4, 9, 2])","cross([2, 3, 4],  [5, 6, 7])"],seealso:["multiply","dot"]}},function(e,t){e.exports={name:"det",category:"Matrix",syntax:["det(x)"],description:"Calculate the determinant of a matrix",examples:["det([1, 2; 3, 4])","det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],seealso:["concat","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"diag",category:"Matrix",syntax:["diag(x)","diag(x, k)"],description:"Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",examples:["diag(1:3)","diag(1:3, 1)","a = [1, 2, 3; 4, 5, 6; 7, 8, 9]","diag(a)"],seealso:["concat","det","eye","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"dot",category:"Matrix",syntax:["dot(A, B)"],description:"Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",examples:["dot([2, 4, 1], [2, 2, 3])","[2, 4, 1] * [2, 2, 3]"],seealso:["multiply","cross"]}},function(e,t){e.exports={name:"eye",category:"Matrix",syntax:["eye(n)","eye(m, n)","eye([m, n])","eye"],description:"Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",examples:["eye(3)","eye(3, 5)","a = [1, 2, 3; 4, 5, 6]","eye(size(a))"],seealso:["concat","det","diag","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"flatten",category:"Matrix",syntax:["flatten(x)"],description:"Flatten a multi dimensional matrix into a single dimensional matrix.",examples:["a = [1, 2, 3; 4, 5, 6]","size(a)","b = flatten(a)","size(b)"],seealso:["concat","resize","size","squeeze"]}},function(e,t){e.exports={name:"inv",category:"Matrix",syntax:["inv(x)"],description:"Calculate the inverse of a matrix",examples:["inv([1, 2; 3, 4])","inv(4)","1 / 4"],seealso:["concat","det","diag","eye","ones","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"ones",category:"Matrix",syntax:["ones(m)","ones(m, n)","ones(m, n, p, ...)","ones([m])","ones([m, n])","ones([m, n, p, ...])","ones"],description:"Create a matrix containing ones.",examples:["ones(3)","ones(3, 5)","ones([2,3]) * 4.5","a = [1, 2, 3; 4, 5, 6]","ones(size(a))"],seealso:["concat","det","diag","eye","inv","range","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"range",category:"Type",syntax:["start:end","start:step:end","range(start, end)","range(start, end, step)","range(string)"],description:"Create a range. Lower bound of the range is included, upper bound is excluded.",examples:["1:5","3:-1:-3","range(3, 7)","range(0, 12, 2)",'range("4:10")',"a = [1, 2, 3, 4; 5, 6, 7, 8]","a[1:2, 1:2]"],seealso:["concat","det","diag","eye","inv","ones","size","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"resize",category:"Matrix",syntax:["resize(x, size)","resize(x, size, defaultValue)"],description:"Resize a matrix.",examples:["resize([1,2,3,4,5], [3])","resize([1,2,3], [5])","resize([1,2,3], [5], -1)","resize(2, [2, 3])",'resize("hello", [8], "!")'],seealso:["size","subset","squeeze"]}},function(e,t){e.exports={name:"size",category:"Matrix",syntax:["size(x)"],description:"Calculate the size of a matrix.",examples:["size(2.3)",'size("hello world")',"a = [1, 2; 3, 4; 5, 6]","size(a)","size(1:6)"],seealso:["concat","det","diag","eye","inv","ones","range","squeeze","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"squeeze",category:"Matrix",syntax:["squeeze(x)"],description:"Remove inner and outer singleton dimensions from a matrix.",examples:["a = zeros(3,2,1)","size(squeeze(a))","b = zeros(1,1,3)","size(squeeze(b))"],seealso:["concat","det","diag","eye","inv","ones","range","size","subset","trace","transpose","zeros"]}},function(e,t){e.exports={name:"subset",category:"Matrix",syntax:["value(index)","value(index) = replacement","subset(value, [index])","subset(value, [index], replacement)"],description:"Get or set a subset of a matrix or string. Indexes are one-based. Both the ranges lower-bound and upper-bound are included.",examples:["d = [1, 2; 3, 4]","e = []","e[1, 1:2] = [5, 6]","e[2, :] = [7, 8]","f = d * e","f[2, 1]","f[:, 1]"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","trace","transpose","zeros"]}},function(e,t){e.exports={name:"trace",category:"Matrix",syntax:["trace(A)"],description:"Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",examples:["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]","trace(A)"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","transpose","zeros"]}},function(e,t){e.exports={name:"transpose",category:"Matrix",syntax:["x'","transpose(x)"],description:"Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","transpose(a)"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","trace","zeros"]}},function(e,t){e.exports={name:"zeros",category:"Matrix",syntax:["zeros(m)","zeros(m, n)","zeros(m, n, p, ...)","zeros([m])","zeros([m, n])","zeros([m, n, p, ...])","zeros"],description:"Create a matrix containing zeros.",examples:["zeros(3)","zeros(3, 5)","a = [1, 2, 3; 4, 5, 6]","zeros(size(a))"],seealso:["concat","det","diag","eye","inv","ones","range","size","squeeze","subset","trace","transpose"]}},function(e,t){e.exports={name:"combinations",category:"Probability",syntax:["combinations(n, k)"],description:"Compute the number of combinations of n items taken k at a time",examples:["combinations(7, 5)"],seealso:["permutations","factorial"]}},function(e,t){e.exports={name:"factorial",category:"Probability",syntax:["kldivergence(x, y)"],description:"Compute the factorial of a value",examples:["5!","5 * 4 * 3 * 2 * 1","3!"],seealso:["combinations","permutations","gamma"]}},function(e,t){e.exports={name:"gamma",category:"Probability",syntax:["gamma(n)"],description:"Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",examples:["gamma(4)","3!","gamma(1/2)","sqrt(pi)"],seealso:["factorial"]}},function(e,t){e.exports={name:"kldivergence",category:"Probability",syntax:["n!","factorial(n)"],description:"Calculate the Kullback-Leibler (KL) divergence  between two distributions.",examples:["math.kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],seealso:[]}},function(e,t){e.exports={name:"multinomial",category:"Probability",syntax:["multinomial(A)"],description:"Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai <= 0.",examples:["multinomial([1, 2, 1])"],seealso:["combinations","factorial"]}},function(e,t){e.exports={name:"permutations",category:"Probability",syntax:["permutations(n)","permutations(n, k)"],description:"Compute the number of permutations of n items taken k at a time",examples:["permutations(5)","permutations(5, 3)"],seealso:["combinations","factorial"]}},function(e,t){e.exports={name:"pickRandom",category:"Probability",syntax:["pickRandom(array)"],description:"Pick a random entry from a given array.",examples:["pickRandom(0:10)","pickRandom([1, 3, 1, 6])"],seealso:["random","randomInt"]}},function(e,t){e.exports={name:"random",category:"Probability",syntax:["random()","random(max)","random(min, max)","random(size)","random(size, max)","random(size, min, max)"],description:"Return a random number.",examples:["random()","random(10, 20)","random([2, 3])"],seealso:["pickRandom","randomInt"]}},function(e,t){e.exports={name:"randInt",category:"Probability",syntax:["randInt(max)","randInt(min, max)","randInt(size)","randInt(size, max)","randInt(size, min, max)"],description:"Return a random integer number",examples:["randInt(10, 20)","randInt([2, 3], 10)"],seealso:["pickRandom","random"]}},function(e,t){e.exports={name:"compare",category:"Relational",syntax:["compare(x, y)"],description:"Compare two values. Returns 1 if x is larger than y, -1 if x is smaller than y, and 0 if x and y are equal.",examples:["compare(2, 3)","compare(3, 2)","compare(2, 2)","compare(5cm, 40mm)","compare(2, [1, 2, 3])"],seealso:["equal","unequal","smaller","smallerEq","largerEq"]}},function(e,t){e.exports={name:"deepEqual",category:"Relational",syntax:["deepEqual(x, y)"],description:"Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",examples:["[1,3,4] == [1,3,4]","[1,3,4] == [1,3]"],seealso:["equal","unequal","smaller","larger","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"equal",category:"Relational",syntax:["x == y","equal(x, y)"],description:"Check equality of two values. Returns true if the values are equal, and false if not.",examples:["2+2 == 3","2+2 == 4","a = 3.2","b = 6-2.8","a == b","50cm == 0.5m"],seealso:["unequal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]}},function(e,t){e.exports={name:"larger",category:"Relational",syntax:["x > y","larger(x, y)"],description:"Check if value x is larger than y. Returns true if x is larger than y, and false if not.",examples:["2 > 3","5 > 2*2","a = 3.3","b = 6-2.8","(a > b)","(b < a)","5 cm > 2 inch"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"largerEq",category:"Relational",syntax:["x >= y","largerEq(x, y)"],description:"Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",examples:["2 > 1+1","2 >= 1+1","a = 3.2","b = 6-2.8","(a > b)"],seealso:["equal","unequal","smallerEq","smaller","largerEq","compare"]}},function(e,t){e.exports={name:"smaller",category:"Relational",syntax:["x < y","smaller(x, y)"],description:"Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 3","5 < 2*2","a = 3.3","b = 6-2.8","(a < b)","5 cm < 2 inch"],seealso:["equal","unequal","larger","smallerEq","largerEq","compare"]}},function(e,t){e.exports={name:"smallerEq",category:"Relational",syntax:["x <= y","smallerEq(x, y)"],description:"Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 1+1","2 <= 1+1","a = 3.2","b = 6-2.8","(a < b)"],seealso:["equal","unequal","larger","smaller","largerEq","compare"]}},function(e,t){e.exports={name:"unequal",category:"Relational",syntax:["x != y","unequal(x, y)"],description:"Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",examples:["2+2 != 3","2+2 != 4","a = 3.2","b = 6-2.8","a != b","50cm != 0.5m","5 cm != 2 inch"],seealso:["equal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]}},function(e,t){e.exports={name:"max",category:"Statistics",syntax:["max(a, b, c, ...)","max(A)","max(A, dim)"],description:"Compute the maximum value of a list of values.",examples:["max(2, 3, 4, 1)","max([2, 3, 4, 1])","max([2, 5; 4, 3])","max([2, 5; 4, 3], 1)","max([2, 5; 4, 3], 2)","max(2.7, 7.1, -4.5, 2.0, 4.1)","min(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["mean","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"mean",category:"Statistics",syntax:["mean(a, b, c, ...)","mean(A)","mean(A, dim)"],description:"Compute the arithmetic mean of a list of values.",examples:["mean(2, 3, 4, 1)","mean([2, 3, 4, 1])","mean([2, 5; 4, 3])","mean([2, 5; 4, 3], 1)","mean([2, 5; 4, 3], 2)","mean([1.0, 2.7, 3.2, 4.0])"],seealso:["max","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"median",category:"Statistics",syntax:["median(a, b, c, ...)","median(A)"],description:"Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",examples:["median(5, 2, 7)","median([3, -1, 5, 7])"],seealso:["max","mean","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"min",category:"Statistics",syntax:["min(a, b, c, ...)","min(A)","min(A, dim)"],description:"Compute the minimum value of a list of values.",examples:["min(2, 3, 4, 1)","min([2, 3, 4, 1])","min([2, 5; 4, 3])","min([2, 5; 4, 3], 1)","min([2, 5; 4, 3], 2)","min(2.7, 7.1, -4.5, 2.0, 4.1)","max(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["max","mean","median","prod","std","sum","var"]}},function(e,t){e.exports={name:"mode",category:"Statistics",syntax:["mode(a, b, c, ...)","mode(A)","mode(A, a, b, B, c, ...)"],description:"Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",examples:["mode(5, 2, 7)","mode([3, -1, 5, 7])"],seealso:["max","mean","min","median","prod","std","sum","var"]}},function(e,t){e.exports={name:"prod",category:"Statistics",syntax:["prod(a, b, c, ...)","prod(A)"],description:"Compute the product of all values.",examples:["prod(2, 3, 4)","prod([2, 3, 4])","prod([2, 5; 4, 3])"],seealso:["max","mean","min","median","min","std","sum","var"]}},function(e,t){e.exports={name:"quantileSeq",category:"Statistics",syntax:["quantileSeq(A, prob[, sorted])","quantileSeq(A, [prob1, prob2, ...][, sorted])","quantileSeq(A, N[, sorted])"],description:"Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.",examples:["quantileSeq([3, -1, 5, 7], 0.5)","quantileSeq([3, -1, 5, 7], [1/3, 2/3])","quantileSeq([3, -1, 5, 7], 2)","quantileSeq([-1, 3, 5, 7], 0.5, true)"],seealso:["mean","median","min","max","prod","std","sum","var"]}},function(e,t){e.exports={name:"std",category:"Statistics",syntax:["std(a, b, c, ...)","std(A)","std(A, normalization)"],description:'Compute the standard deviation of all values, defined as std(A) = sqrt(var(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["std(2, 4, 6)","std([2, 4, 6, 8])",'std([2, 4, 6, 8], "uncorrected")','std([2, 4, 6, 8], "biased")',"std([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","sum","var"]}},function(e,t){e.exports={name:"sum",category:"Statistics",syntax:["sum(a, b, c, ...)","sum(A)"],description:"Compute the sum of all values.",examples:["sum(2, 3, 4, 1)","sum([2, 3, 4, 1])","sum([2, 5; 4, 3])"],seealso:["max","mean","median","min","prod","std","sum","var"]}},function(e,t){e.exports={name:"var",category:"Statistics",syntax:["var(a, b, c, ...)","var(A)","var(A, normalization)"],description:'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["var(2, 4, 6)","var([2, 4, 6, 8])",'var([2, 4, 6, 8], "uncorrected")','var([2, 4, 6, 8], "biased")',"var([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","std","sum"]}},function(e,t){e.exports={name:"acos",category:"Trigonometry",syntax:["acos(x)"],description:"Compute the inverse cosine of a value in radians.",examples:["acos(0.5)","acos(cos(2.3))"],seealso:["cos","atan","asin"]}},function(e,t){e.exports={name:"acosh",category:"Trigonometry",syntax:["acosh(x)"],description:"Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",examples:["acosh(1.5)"],seealso:["cosh","asinh","atanh"]}},function(e,t){e.exports={name:"acot",category:"Trigonometry",syntax:["acot(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acot(0.5)","acot(cot(0.5))","acot(2)"],seealso:["cot","atan"]}},function(e,t){e.exports={name:"acoth",category:"Trigonometry",syntax:["acoth(x)"],description:"Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",examples:["acoth(0.5)"],seealso:["acsch","asech"]}},function(e,t){e.exports={name:"acsc",category:"Trigonometry",syntax:["acsc(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acsc(0.5)","acsc(csc(0.5))","acsc(2)"],seealso:["csc","asin","asec"]}},function(e,t){e.exports={name:"acsch",category:"Trigonometry",syntax:["acsch(x)"],description:"Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",examples:["acsch(0.5)"],seealso:["asech","acoth"]}},function(e,t){e.exports={name:"asec",category:"Trigonometry",syntax:["asec(x)"],description:"Calculate the inverse secant of a value.",examples:["asec(0.5)","asec(sec(0.5))","asec(2)"],seealso:["acos","acot","acsc"]}},function(e,t){e.exports={name:"asech",category:"Trigonometry",syntax:["asech(x)"],description:"Calculate the inverse secant of a value.",examples:["asech(0.5)"],seealso:["acsch","acoth"]}},function(e,t){e.exports={name:"asin",category:"Trigonometry",syntax:["asin(x)"],description:"Compute the inverse sine of a value in radians.",examples:["asin(0.5)","asin(sin(2.3))"],seealso:["sin","acos","atan"]}},function(e,t){e.exports={name:"asinh",category:"Trigonometry",syntax:["asinh(x)"],description:"Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",examples:["asinh(0.5)"],seealso:["acosh","atanh"]}},function(e,t){e.exports={name:"atan",category:"Trigonometry",syntax:["atan(x)"],description:"Compute the inverse tangent of a value in radians.",examples:["atan(0.5)","atan(tan(2.3))"],seealso:["tan","acos","asin"]}},function(e,t){e.exports={name:"atanh",category:"Trigonometry",syntax:["atanh(x)"],description:"Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",examples:["atanh(0.5)"],seealso:["acosh","asinh"]}},function(e,t){e.exports={name:"atan2",category:"Trigonometry",syntax:["atan2(y, x)"],description:"Computes the principal value of the arc tangent of y/x in radians.",examples:["atan2(2, 2) / pi","angle = 60 deg in rad","x = cos(angle)","y = sin(angle)","atan2(y, x)"],seealso:["sin","cos","tan"]}},function(e,t){e.exports={name:"cos",category:"Trigonometry",syntax:["cos(x)"],description:"Compute the cosine of x in radians.",examples:["cos(2)","cos(pi / 4) ^ 2","cos(180 deg)","cos(60 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["acos","sin","tan"]}},function(e,t){e.exports={name:"cosh",category:"Trigonometry",syntax:["cosh(x)"],description:"Compute the hyperbolic cosine of x in radians.",examples:["cosh(0.5)"],seealso:["sinh","tanh","coth"]}},function(e,t){e.exports={name:"cot",category:"Trigonometry",syntax:["cot(x)"],description:"Compute the cotangent of x in radians. Defined as 1/tan(x)",examples:["cot(2)","1 / tan(2)"],seealso:["sec","csc","tan"]}},function(e,t){e.exports={name:"coth",category:"Trigonometry",syntax:["coth(x)"],description:"Compute the hyperbolic cotangent of x in radians.",examples:["coth(2)","1 / tanh(2)"],seealso:["sech","csch","tanh"]}},function(e,t){e.exports={name:"csc",category:"Trigonometry",syntax:["csc(x)"],description:"Compute the cosecant of x in radians. Defined as 1/sin(x)",examples:["csc(2)","1 / sin(2)"],seealso:["sec","cot","sin"]}},function(e,t){e.exports={name:"csch",category:"Trigonometry",syntax:["csch(x)"],description:"Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",examples:["csch(2)","1 / sinh(2)"],seealso:["sech","coth","sinh"]}},function(e,t){e.exports={name:"sec",category:"Trigonometry",syntax:["sec(x)"],description:"Compute the secant of x in radians. Defined as 1/cos(x)",examples:["sec(2)","1 / cos(2)"],seealso:["cot","csc","cos"]}},function(e,t){e.exports={name:"sech",category:"Trigonometry",syntax:["sech(x)"],description:"Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",examples:["sech(2)","1 / cosh(2)"],seealso:["coth","csch","cosh"]}},function(e,t){e.exports={name:"sin",category:"Trigonometry",syntax:["sin(x)"],description:"Compute the sine of x in radians.",examples:["sin(2)","sin(pi / 4) ^ 2","sin(90 deg)","sin(30 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["asin","cos","tan"]}},function(e,t){e.exports={name:"sinh",category:"Trigonometry",syntax:["sinh(x)"],description:"Compute the hyperbolic sine of x in radians.",examples:["sinh(0.5)"],seealso:["cosh","tanh"]}},function(e,t){e.exports={name:"tan",category:"Trigonometry",syntax:["tan(x)"],description:"Compute the tangent of x in radians.",examples:["tan(0.5)","sin(0.5) / cos(0.5)","tan(pi / 4)","tan(45 deg)"],seealso:["atan","sin","cos"]}},function(e,t){e.exports={name:"tanh",category:"Trigonometry",syntax:["tanh(x)"],description:"Compute the hyperbolic tangent of x in radians.",examples:["tanh(0.5)","sinh(0.5) / cosh(0.5)"],seealso:["sinh","cosh"]}},function(e,t){e.exports={name:"to",category:"Units",syntax:["x to unit","to(x, unit)"],description:"Change the unit of a value.",examples:["5 inch to cm","3.2kg to g","16 bytes in bits"],seealso:[]}},function(e,t){e.exports={name:"clone",category:"Utils",syntax:["clone(x)"],description:"Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",examples:["clone(3.5)","clone(2 - 4i)","clone(45 deg)","clone([1, 2; 3, 4])",'clone("hello world")'],seealso:[]}},function(e,t){e.exports={name:"map",category:"Utils",syntax:["map(x, callback)"],description:"Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",examples:["map([1, 2, 3], function(val) { return value * value })"],seealso:["filter","forEach"]}},function(e,t){e.exports={name:"partitionSelect",category:"Utils",syntax:["partitionSelect(x, k)","partitionSelect(x, k, compare)"],description:"Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",examples:["partitionSelect([5, 10, 1], 2)",'partitionSelect(["C", "B", "A", "D"], 1)'],seealso:["sort"]}},function(e,t){e.exports={name:"filter",category:"Utils",syntax:["filter(x, test)"],description:"Filter items in a matrix.",examples:["isPositive(x) = x > 0","filter([6, -2, -1, 4, 3], isPositive)","filter([6, -2, 0, 1, 0], x != 0)"],seealso:["sort","map","forEach"]}},function(e,t){e.exports={name:"forEach",category:"Utils",syntax:["forEach(x, callback)"],description:"Iterates over all elements of a matrix/array, and executes the given callback function.",examples:["forEach([1, 2, 3], function(val) { console.log(val) })"],seealso:["map","sort","filter"]}},function(e,t){e.exports={name:"format",category:"Utils",syntax:["format(value)","format(value, precision)"],description:"Format a value of any type as string.",examples:["format(2.3)","format(3 - 4i)","format([])","format(pi, 3)"],seealso:["print"]}},function(e,t){e.exports={name:"isInteger",category:"Utils",syntax:["isInteger(x)"],description:"Test whether a value is an integer number.",examples:["isInteger(2)","isInteger(3.5)","isInteger([3, 0.5, -2])"],seealso:["isNegative","isNumeric","isPositive","isZero"]}},function(e,t){e.exports={name:"isNegative",category:"Utils",syntax:["isNegative(x)"],description:"Test whether a value is negative: smaller than zero.",examples:["isNegative(2)","isNegative(0)","isNegative(-4)","isNegative([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isPositive","isZero"]}},function(e,t){e.exports={name:"isNumeric",category:"Utils",syntax:["isNumeric(x)"],description:"Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",examples:["isNumeric(2)","isNumeric(0)","isNumeric(bignumber(500))","isNumeric(fraction(0.125))",'isNumeric("3")',"isNumeric(2 + 3i)",'isNumeric([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive"]}},function(e,t){e.exports={name:"isPositive",category:"Utils",syntax:["isPositive(x)"],description:"Test whether a value is positive: larger than zero.",examples:["isPositive(2)","isPositive(0)","isPositive(-4)","isPositive([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isNegative","isZero"]}},function(e,t){e.exports={name:"isZero",category:"Utils",syntax:["isZero(x)"],description:"Test whether a value is zero.",examples:["isZero(2)","isZero(0)","isZero(-4)","isZero([3, 0, -2, 0])"],seealso:["isInteger","isNumeric","isNegative","isPositive"]}},function(e,t){e.exports={name:"import",category:"Utils",syntax:["import(string)"],description:"Import functions from a file.",examples:['import("numbers")','import("./mylib.js")'],seealso:[]}},function(e,t){e.exports={name:"sort",category:"Utils",syntax:["sort(x)","sort(x, compare)"],description:'Sort the items in a matrix. Compare can be a string "asc" or "desc", or a custom sort function.',examples:["sort([5, 10, 1])",'sort(["C", "B", "A", "D"])',"sortByLength(a, b) = size(a)[1] - size(b)[1]",'sort(["Langdon", "Tom", "Sara"], sortByLength)'],seealso:["map","filter","forEach"]}},function(e,t){e.exports={name:"typeof",category:"Utils",syntax:["typeof(x)"],description:"Get the type of a variable.",examples:["typeof(3.5)","typeof(2 - 4i)","typeof(45 deg)",'typeof("hello world")'],seealso:[]}},function(e,t,r){e.exports=[r(268),r(286),r(287),r(288),r(289)]},function(e,t,r){"use strict";var i=r(19);t.name="compile",t.factory=function(e,t,n,a){var o=n(r(269));return a("compile",{string:function(e){return o(e).compile()},"Array | Matrix":function(e){return i(e,function(e){return o(e).compile()})}})}},function(e,t,r){"use strict";var i=r(11),a=r(19);t.name="parse",t.path="expression",t.factory=function(e,t,n,o){function c(){ve++,de=ge.charAt(ve)}function f(){return ge.charAt(ve+1)}function p(){for(xe=le.NULL,ye="";" "==de||"\t"==de||"\n"==de&&be;)c();if("#"==de)for(;"\n"!=de&&""!=de;)c();if(""==de)return xe=le.DELIMITER;if("\n"==de&&!be)return xe=le.DELIMITER,ye=de,c();var e=de+f(),t=e+ge.charAt(ve+2);if(3==t.length&&pe[t])return xe=le.DELIMITER,ye=t,c(),c(),c();if(2==e.length&&pe[e])return xe=le.DELIMITER,ye=e,c(),c();if(pe[de])return xe=le.DELIMITER,ye=de,c();if(!function(e){return"0"<=e&&e<="9"||"."==e}(de)){if(v()){for(;v()||y(de);)ye+=de,c();return xe=me[ye]?le.DELIMITER:le.SYMBOL}for(xe=le.UNKNOWN;""!=de;)ye+=de,c();throw X('Syntax error in part "'+ye+'"')}if(xe=le.NUMBER,"."==de)ye+=de,c(),y(de)||(xe=le.UNKNOWN);else{for(;y(de);)ye+=de,c();"."==de&&(ye+=de,c())}for(;y(de);)ye+=de,c();if(e=f(),("E"==de||"e"==de)&&(y(e)||"-"==e||"+"==e))for(ye+=de,c(),"+"!=de&&"-"!=de||(ye+=de,c()),y(de)||(xe=le.UNKNOWN);y(de);)ye+=de,c()}function m(){for(;p(),"\n"==ye;);}function h(){be++}function g(){be--}function v(){function n(e,t){return/^[\uD835]$/.test(e)&&/^[\uDC00-\uDFFF]$/.test(t)&&/^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(t)}var e=ge.charAt(ve-1),t=ge.charAt(ve+1);return/^[a-zA-Z_\u00C0-\u02AF\u0370-\u03FF]$/.test(de)||n(de,t)||n(e,de)}function y(e){return"0"<=e&&e<="9"}function x(){ve=0,de=ge.charAt(0),be=0,we=null,p();var e=function(){var e,t,r=[];if(""==ye)return new re("undefined","undefined");for("\n"!=ye&&";"!=ye&&(e=w());"\n"==ye||";"==ye;)0==r.length&&e&&(t=";"!=ye,r.push({node:e,visible:t})),p(),"\n"!=ye&&";"!=ye&&""!=ye&&(e=w(),t=";"!=ye,r.push({node:e,visible:t}));return 0<r.length?new ee(r):e}();if(""!=ye)throw xe==le.DELIMITER?J("Unexpected operator "+ye):X('Unexpected part "'+ye+'"');return e}function w(){if(xe==le.SYMBOL&&"function"==ye)throw X('Deprecated keyword "function". Functions can now be assigned without it, like "f(x) = x^2".');return N()}function N(){var e,t,r,n,i=E();if("="!=ye)return i;if(i&&i.isSymbolNode)return e=i.name,m(),r=N(),new K(e,r);if(i&&i.isIndexNode)return m(),r=N(),new fe(i,r);if(i&&i.isFunctionNode&&(n=!0,t=[],e=i.name,i.args.forEach(function(e,r){e&&e.isSymbolNode?t[r]=e.name:n=!1}),n))return m(),r=N(),new ne(e,t,r);throw X("Invalid left hand side of assignment operator =")}function E(){for(var e=M();"?"==ye;){var t=we,r=(we=be,m(),e),n=M();if(":"!=ye)throw X("False part of conditional expression expected");we=null,m();var i=E(),e=new te(r,n,i);we=t}return e}function M(){for(var e=A();"or"==ye;)m(),e=new ae("or","or",[e,A()]);return e}function A(){for(var e=_();"xor"==ye;)m(),e=new ae("xor","xor",[e,_()]);return e}function _(){for(var e=O();"and"==ye;)m(),e=new ae("and","and",[e,O()]);return e}function O(){for(var e=T();"|"==ye;)m(),e=new ae("|","bitOr",[e,T()]);return e}function T(){for(var e=C();"^|"==ye;)m(),e=new ae("^|","bitXor",[e,C()]);return e}function C(){for(var e=S();"&"==ye;)m(),e=new ae("&","bitAnd",[e,S()]);return e}function S(){for(var r,n,i,e=z(),t={"==":"equal","!=":"unequal","<":"smaller",">":"larger","<=":"smallerEq",">=":"largerEq"};ye in t;)n=t[r=ye],m(),i=[e,z()],e=new ae(r,n,i);return e}function z(){for(var r,n,i,e=B(),t={"<<":"leftShift",">>":"rightArithShift",">>>":"rightLogShift"};ye in t;)n=t[r=ye],m(),i=[e,B()],e=new ae(r,n,i);return e}function B(){for(var r,n,i,e=k(),t={to:"to",in:"to"};ye in t;)n=t[r=ye],m(),i=[e,k()],e=new ae(r,n,i);return e}function k(){var t=[],e=":"==ye?new re("1","number"):I();if(":"==ye&&we!==be){for(t.push(e);":"==ye&&t.length<3;)m(),t.push(")"==ye||"]"==ye||","==ye||""==ye?new ce("end"):I());e=3==t.length?new ue(t[0],t[2],t[1]):new ue(t[0],t[1])}return e}function I(){for(var r,n,i,e=R(),t={"+":"add","-":"subtract"};ye in t;)n=t[r=ye],m(),i=[e,R()],e=new ae(r,n,i);return e}function R(){for(var n,i,e=P(),t=e,r={"*":"multiply",".*":"dotMultiply","/":"divide","./":"dotDivide","%":"mod",mod:"mod"};;)if(ye in r)i=r[n=ye],m(),t=P(),e=new ae(n,i,[e,t]);else{if(!(xe==le.SYMBOL||"in"==ye&&e&&e.isConstantNode||xe==le.NUMBER&&!t.isConstantNode||"("==ye||"["==ye))break;t=P(),e=new ae("*","multiply",[e,t])}return e}function P(){var e,t,r={"-":"unaryMinus","+":"unaryPlus","~":"bitNot",not:"not"}[ye];return r?(e=ye,m(),t=[P()],new ae(e,r,t)):function(){var e,t,r,n;return e=function(){var e,t,r,n;for(e=function(){var e,t=[];if(xe==le.SYMBOL&&he[ye]){if(e=he[ye],p(),"("==ye){if(t=[],h(),p(),")"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if(")"!=ye)throw X("Parenthesis ) expected");g(),p()}return new e(t)}return function(){var t;return xe==le.SYMBOL||xe==le.DELIMITER&&ye in me?(t=ye,p(),$(function(e){var t;if("("!=ye)return new ce(e);if(t=[],h(),p(),")"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if(")"!=ye)throw X("Parenthesis ) expected");return g(),p(),new se(e,t)}(t))):function(){var t,r;if('"'!=ye)return function(){var e,t,r,n;if("["!=ye)return function(){var e;return xe==le.NUMBER?(e=ye,p(),new re(e,"number")):function(){var e;if("("!=ye)throw X(""==ye?"Unexpected end of expression":"Value expected");if(h(),p(),e=N(),")"!=ye)throw X("Parenthesis ) expected");return g(),p(),new oe(e)}()}();if(h(),p(),"]"!=ye){var i=H();if(";"==ye){for(r=1,t=[i];";"==ye;)p(),t[r]=H(),r++;if("]"!=ye)throw X("End of matrix ] expected");g(),p(),n=t[0].nodes.length;for(var a=1;a<r;a++)if(t[a].nodes.length!=n)throw J("Column dimensions mismatch ("+t[a].nodes.length+" != "+n+")");e=new Q(t)}else{if("]"!=ye)throw X("End of matrix ] expected");g(),p(),e=i}}else g(),p(),e=new Q([]);return e}();for(r=t="";""!=de&&('"'!=de||"\\"==r);)t+=de,r=de,c();if(p(),'"'!=ye)throw X('End of string " expected');return p(),$(new re(t,"string"))}()}()}(),t={"!":"factorial","'":"transpose"};ye in t;)n=t[r=ye],p(),e=new ae(r,n,[e]);return e}(),"^"!=ye&&".^"!=ye||(r="^"==(t=ye)?"pow":"dotPow",m(),n=[e,P()],e=new ae(t,r,n)),e}()}function $(e){for(var t;"["==ye;){if(t=[],h(),p(),"]"!=ye)for(t.push(E());","==ye;)p(),t.push(E());if("]"!=ye)throw X("Parenthesis ] expected");g(),p(),e=new ie(e,t)}return e}function H(){for(var e=[N()],t=1;","==ye;)p(),e[t]=N(),t++;return new Q(e)}function W(){return ve-ye.length+1}function X(e){var t=W(),e=new SyntaxError(e+" (char "+t+")");return e.char=t,e}function J(e){var t=W(),e=new Error(e+" (char "+t+")");return e.char=t,e}var Q=n(r(270)),K=n(r(273)),ee=n(r(275)),te=n(r(276)),re=n(r(277)),ne=n(r(278)),ie=n(r(279)),ae=n(r(282)),oe=n(r(284)),se=n(r(283)),ue=n(r(280)),ce=n(r(281)),fe=n(r(285)),le={NULL:0,DELIMITER:1,NUMBER:2,SYMBOL:3,UNKNOWN:4},pe={",":!0,"(":!0,")":!0,"[":!0,"]":!0,'"':!0,";":!0,"+":!0,"-":!0,"*":!0,".*":!0,"/":!0,"./":!0,"%":!0,"^":!0,".^":!0,"~":!0,"!":!0,"&":!0,"|":!0,"^|":!0,"'":!0,"=":!0,":":!0,"?":!0,"==":!0,"!=":!0,"<":!0,">":!0,"<=":!0,">=":!0,"<<":!0,">>":!0,">>>":!0},me={mod:!0,to:!0,in:!0,and:!0,xor:!0,or:!0,not:!0},he={},ge="",ve=0,de="",ye="",xe=le.NULL,be=0,we=null;return function(t,r){if(1!=arguments.length&&2!=arguments.length)throw new i("parse",arguments.length,1,2);if(he=r&&r.nodes?r.nodes:{},"string"==typeof t)return ge=t,x();if(Array.isArray(t)||t instanceof e.Matrix)return a(t,function(e){if("string"!=typeof e)throw new TypeError("String expected");return ge=e,x()});throw new TypeError("String or matrix expected")}}},function(e,t,r){"use strict";var i=r(23);t.name="ArrayNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(this.nodes=e||[],!Array.isArray(this.nodes)||!this.nodes.every(function(e){return e&&e.isNode}))throw new TypeError("Array containing Nodes expected")}return n=n(r(271)),(o.prototype=new n).type="ArrayNode",o.prototype.isArrayNode=!0,o.prototype._compile=function(e,t){var r="array"!==e.math.config().matrix,n=this.nodes.map(function(r){return r._compile(e,t)});return(r?"math.matrix([":"[")+n.join(",")+(r?"])":"]")},o.prototype.forEach=function(e){for(var t=0;t<this.nodes.length;t++)e(this.nodes[t],"nodes["+t+"]",this)},o.prototype.map=function(e){for(var t=[],r=0;r<this.nodes.length;r++)t[r]=this._ifNode(e(this.nodes[r],"nodes["+r+"]",this));return new o(t)},o.prototype.clone=function(){return new o(this.nodes.slice(0))},o.prototype._toString=function(e){return i.format(this.nodes)},o.prototype._toTex=function(e){var t="\\begin{bmatrix}";return this.nodes.forEach(function(r){t=t+(r.nodes?r.nodes.map(function(t){return t.toTex(e)}).join("&"):r.toTex(e))+"\\\\"}),t+="\\end{bmatrix}"},o}},function(e,t,r){"use strict";var i=r(272);r(3).extend,t.name="Node",t.path="expression.node",t.math=!0,t.factory=function(e,t,r,n,a){function o(){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator")}function s(e){for(var t in e)if(e.hasOwnProperty(t)&&t in i)throw new Error('Scope contains an illegal symbol, "'+t+'" is a reserved keyword')}return o.prototype.eval=function(e){return this.compile().eval(e)},o.prototype.type="Node",o.prototype.isNode=!0,o.prototype.compile=function(){if(0<arguments.length)throw new Error("Calling compile(math) is deprecated. Call the function as compile() instead.");var e={math:a.expression.transform,args:{},_validateScope:s},r=this._compile(e,{}),r=Object.keys(e).map(function(e){return"    var "+e+' = defs["'+e+'"];'}).join(" ")+'return {  "eval": function (scope) {    if (scope) _validateScope(scope);    scope = scope || {};    return '+r+";  }};";return new Function("defs",r)(e)},o.prototype._compile=function(e,t){throw new Error("Cannot compile a Node interface")},o.prototype.forEach=function(e){throw new Error("Cannot run forEach on a Node interface")},o.prototype.map=function(e){throw new Error("Cannot run map on a Node interface")},o.prototype._ifNode=function(e){if(e&&e.isNode)return e;throw new TypeError("Callback function must return a Node")},o.prototype.traverse=function(e){e(this,null,null),function t(e,r){e.forEach(function(e,n,i){r(e,n,i),t(e,r)})}(this,e)},o.prototype.transform=function(e){return function t(e,r){return e.map(function(e,n,i){return t(r(e,n,i),r)})}(e(this,null,null),e)},o.prototype.filter=function(e){var t=[];return this.traverse(function(r,n,i){e(r,n,i)&&t.push(r)}),t},o.prototype.find=function(){throw new Error("Function Node.find is deprecated. Use Node.filter instead.")},o.prototype.match=function(){throw new Error("Function Node.match is deprecated. See functions Node.filter, Node.transform, Node.traverse.")},o.prototype.clone=function(){throw new Error("Cannot clone a Node interface")},o.prototype.toString=function(e){var t;if(e&&"object"==typeof e)switch(typeof e.handler){case"object":case"undefined":break;case"function":t=e.handler(this,e);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==t?t:this._toString(e)},o.prototype._toString=function(){throw new Error("_toString not implemented for "+this.type)},o.prototype.toTex=function(e){var t;if(e&&"object"==typeof e)switch(typeof e.handler){case"object":case"undefined":break;case"function":t=e.handler(this,e);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==t?t:this._toTex(e)},o.prototype._toTex=function(e){throw new Error("_toTex not implemented for "+this.type)},o.prototype.getIdentifier=function(){return this.type},o.prototype.getContent=function(){return this},o}},function(e,t){"use strict";e.exports={end:!0}},function(e,t,r){"use strict";var i=r(29);t.name="AssignmentNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');if(!t||!t.isNode)throw new TypeError('Node expected for parameter "expr"');if(e in c)throw new Error('Illegal symbol name, "'+e+'" is a reserved keyword');this.name=e,this.expr=t}function s(e,t){var r=f.getPrecedence(e,t),e=f.getPrecedence(e.expr,t);return"all"===t||null!==e&&e<=r}var u=n(r(271)),c=(n(r(270)),r(272)),f=r(274);return(o.prototype=new u).type="AssignmentNode",o.prototype.isAssignmentNode=!0,o.prototype._compile=function(e,t){return'scope["'+this.name+'"] = '+this.expr._compile(e,t)},o.prototype.forEach=function(e){e(this.expr,"expr",this)},o.prototype.map=function(e){return new o(this.name,this._ifNode(e(this.expr,"expr",this)))},o.prototype.clone=function(){return new o(this.name,this.expr)},o.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toString(e);return s(this,t)&&(e="("+e+")"),this.name+" = "+e},o.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toTex(e);return s(this,t)&&(e="\\left("+e+"\\right)"),i.toSymbol(this.name)+":="+e},o}},function(e,t){"use strict";function r(e,t){for(var r=e,n=(r="keep"!==t?e.getContent():r).getIdentifier(),i=0;i<a.length;i++)if(n in a[i])return i;return null}var a=[{AssignmentNode:{},FunctionAssignmentNode:{}},{ConditionalNode:{latexLeftParens:!1,latexRightParens:!1,latexParens:!1}},{"OperatorNode:or":{associativity:"left",associativeWith:[]}},{"OperatorNode:xor":{associativity:"left",associativeWith:[]}},{"OperatorNode:and":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitOr":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitXor":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitAnd":{associativity:"left",associativeWith:[]}},{"OperatorNode:equal":{associativity:"left",associativeWith:[]},"OperatorNode:unequal":{associativity:"left",associativeWith:[]},"OperatorNode:smaller":{associativity:"left",associativeWith:[]},"OperatorNode:larger":{associativity:"left",associativeWith:[]},"OperatorNode:smallerEq":{associativity:"left",associativeWith:[]},"OperatorNode:largerEq":{associativity:"left",associativeWith:[]}},{"OperatorNode:leftShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightArithShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightLogShift":{associativity:"left",associativeWith:[]}},{"OperatorNode:to":{associativity:"left",associativeWith:[]}},{RangeNode:{}},{"OperatorNode:add":{associativity:"left",associativeWith:["OperatorNode:add","OperatorNode:subtract"]},"OperatorNode:subtract":{associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]},"OperatorNode:divide":{associativity:"left",associativeWith:[],latexLeftParens:!1,latexRightParens:!1,latexParens:!1},"OperatorNode:dotMultiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:doDivide"]},"OperatorNode:dotDivide":{associativity:"left",associativeWith:[]},"OperatorNode:mod":{associativity:"left",associativeWith:[]}},{"OperatorNode:unaryPlus":{associativity:"right"},"OperatorNode:unaryMinus":{associativity:"right"},"OperatorNode:bitNot":{associativity:"right"},"OperatorNode:not":{associativity:"right"}},{"OperatorNode:pow":{associativity:"right",associativeWith:[],latexRightParens:!1},"OperatorNode:dotPow":{associativity:"right",associativeWith:[]}},{"OperatorNode:factorial":{associativity:"left"}},{"OperatorNode:transpose":{associativity:"left"}}];e.exports.properties=a,e.exports.getPrecedence=r,e.exports.getAssociativity=function(e,t){var n=e,e=(n="keep"!==t?e.getContent():n).getIdentifier(),n=r(n,t);if(null!==n){t=a[n][e];if(t.hasOwnProperty("associativity")){if("left"===t.associativity)return"left";if("right"===t.associativity)return"right";throw Error("'"+e+"' has the invalid associativity '"+t.associativity+"'.")}}return null},e.exports.isAssociativeWith=function(e,t,n){var i=e,o=t,e=("keep"!==n&&(i=e.getContent(),o=t.getContent()),i.getIdentifier()),u=o.getIdentifier(),t=r(i,n);if(null!==t){var f=a[t][e];if(f.hasOwnProperty("associativeWith")&&f.associativeWith instanceof Array){for(var l=0;l<f.associativeWith.length;l++)if(f.associativeWith[l]===u)return!0;return!1}}return null}},function(e,t,r){"use strict";t.name="BlockNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!Array.isArray(e))throw new Error("Array expected");this.blocks=e.map(function(e){var t=e&&e.node,e=!e||void 0===e.visible||e.visible;if(!t||!t.isNode)throw new TypeError('Property "node" must be a Node');if("boolean"!=typeof e)throw new TypeError('Property "visible" must be a boolean');return{node:t,visible:e}})}var o=n(r(271)),s=n(r(70));return(a.prototype=new o).type="BlockNode",a.prototype.isBlockNode=!0,a.prototype._compile=function(e,t){return e.ResultSet=s,"(function () {var results = [];"+this.blocks.map(function(r){var n=r.node._compile(e,t);return r.visible?"results.push("+n+");":n+";"}).join("")+"return new ResultSet(results);})()"},a.prototype.forEach=function(e){for(var t=0;t<this.blocks.length;t++)e(this.blocks[t].node,"blocks["+t+"].node",this)},a.prototype.map=function(e){for(var t=[],r=0;r<this.blocks.length;r++){var n=this.blocks[r],i=this._ifNode(e(n.node,"blocks["+r+"].node",this));t[r]={node:i,visible:n.visible}}return new a(t)},a.prototype.clone=function(){return new a(this.blocks.map(function(e){return{node:e.node,visible:e.visible}}))},a.prototype._toString=function(e){return this.blocks.map(function(t){return t.node.toString(e)+(t.visible?"":";")}).join("\n")},a.prototype._toTex=function(e){return this.blocks.map(function(t){return t.node.toTex(e)+(t.visible?"":";")}).join("\\;\\;\n")},a}},function(e,t,r){"use strict";r(29);var i=r(274);t.name="ConditionalNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t,r){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError("Parameter condition must be a Node");if(!t||!t.isNode)throw new TypeError("Parameter trueExpr must be a Node");if(!r||!r.isNode)throw new TypeError("Parameter falseExpr must be a Node");this.condition=e,this.trueExpr=t,this.falseExpr=r}return n=n(r(271)),(o.prototype=new n).type="ConditionalNode",o.prototype.isConditionalNode=!0,o.prototype._compile=function(e,t){return e.testCondition=function(t){if("number"==typeof t||"boolean"==typeof t||"string"==typeof t)return!!t;if(t){if(!0===t.isBigNumber)return!t.isZero();if(!0===t.isComplex)return!(!t.re&&!t.im);if(!0===t.isUnit)return!!t.value}if(null==t)return!1;throw new TypeError('Unsupported type of condition "'+e.math.typeof(t)+'"')},"testCondition("+this.condition._compile(e,t)+") ? ( "+this.trueExpr._compile(e,t)+") : ( "+this.falseExpr._compile(e,t)+")"},o.prototype.forEach=function(e){e(this.condition,"condition",this),e(this.trueExpr,"trueExpr",this),e(this.falseExpr,"falseExpr",this)},o.prototype.map=function(e){return new o(this._ifNode(e(this.condition,"condition",this)),this._ifNode(e(this.trueExpr,"trueExpr",this)),this._ifNode(e(this.falseExpr,"falseExpr",this)))},o.prototype.clone=function(){return new o(this.condition,this.trueExpr,this.falseExpr)},o.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=i.getPrecedence(this,t),n=this.condition.toString(e),a=i.getPrecedence(this.condition,t),a=(("all"===t||"OperatorNode"===this.condition.type||null!==a&&a<=r)&&(n="("+n+")"),this.trueExpr.toString(e)),s=i.getPrecedence(this.trueExpr,t),s=(("all"===t||"OperatorNode"===this.trueExpr.type||null!==s&&s<=r)&&(a="("+a+")"),this.falseExpr.toString(e)),e=i.getPrecedence(this.falseExpr,t);return n+" ? "+a+" : "+(s="all"===t||"OperatorNode"===this.falseExpr.type||null!==e&&e<=r?"("+s+")":s)},o.prototype._toTex=function(e){return"\\begin{cases} {"+this.trueExpr.toTex(e)+"}, &\\quad{\\text{if }\\;"+this.condition.toTex(e)+"}\\\\{"+this.falseExpr.toTex(e)+"}, &\\quad{\\text{otherwise}}\\end{cases}"},o}},function(e,t,r){"use strict";var i=r(40).type;t.name="ConstantNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(t){if("string"!=typeof t)throw new TypeError('String expected for parameter "valueType"');if("string"!=typeof e)throw new TypeError('String expected for parameter "value"');this.value=e,this.valueType=t}else this.value=e+"",this.valueType=i(e);if(!u[this.valueType])throw new TypeError('Unsupported type of value "'+this.valueType+'"')}var n=n(r(271)),u={number:!0,string:!0,boolean:!0,undefined:!0,null:!0};return(o.prototype=new n).type="ConstantNode",o.prototype.isConstantNode=!0,o.prototype._compile=function(e,t){switch(this.valueType){case"number":var r=e.math.config().number;return"bignumber"===r?'math.bignumber("'+this.value+'")':"fraction"===r?'math.fraction("'+this.value+'")':this.value.replace(/^(0*)[0-9]/,function(e,t){return e.substring(t.length)});case"string":return'"'+this.value+'"';case"boolean":case"undefined":case"null":return this.value;default:throw new TypeError('Unsupported type of constant "'+this.valueType+'"')}},o.prototype.forEach=function(e){},o.prototype.map=function(e){return this.clone()},o.prototype.clone=function(){return new o(this.value,this.valueType)},o.prototype._toString=function(e){return"string"!==this.valueType?this.value:'"'+this.value+'"'},o.prototype._toTex=function(e){var t,r=this.value;switch(this.valueType){case"string":return'\\mathtt{"'+r+'"}';case"number":return-1!==(t=r.toLowerCase().indexOf("e"))?r.substring(0,t)+"\\cdot10^{"+r.substring(t+1)+"}":r;default:return r}},o}},function(e,t,r){"use strict";function n(e){return"string"==typeof e}var a=r(272),o=r(29),s=r(274);t.name="FunctionAssignmentNode",t.path="expression.node",t.factory=function(e,t,i,u){function c(e,t,r){if(!(this instanceof c))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');if(!Array.isArray(t)||!t.every(n))throw new TypeError('Array containing strings expected for parameter "params"');if(!r||!r.isNode)throw new TypeError('Node expected for parameter "expr"');if(e in a)throw new Error('Illegal function name, "'+e+'" is a reserved keyword');this.name=e,this.params=t,this.expr=r}function f(e,t){var r=s.getPrecedence(e,t),e=s.getPrecedence(e.expr,t);return"all"===t||null!==e&&e<=r}return i=i(r(271)),(c.prototype=new i).type="FunctionAssignmentNode",c.prototype.isFunctionAssignmentNode=!0,c.prototype._compile=function(e,t){var r=Object.create(t),t=(this.params.forEach(function(e){r[e]=!0}),this.expr._compile(e,r));return'scope["'+this.name+'"] =   (function () {    var fn = function '+this.name+"("+this.params.join(",")+") {      if (arguments.length != "+this.params.length+') {        throw new SyntaxError("Wrong number of arguments in function '+this.name+' (" + arguments.length + " provided, '+this.params.length+' expected)");      }      return '+t+'    };    fn.syntax = "'+this.name+"("+this.params.join(", ")+')";    return fn;  })()'},c.prototype.forEach=function(e){e(this.expr,"expr",this)},c.prototype.map=function(e){e=this._ifNode(e(this.expr,"expr",this));return new c(this.name,this.params.slice(0),e)},c.prototype.clone=function(){return new c(this.name,this.params.slice(0),this.expr)},c.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toString(e);return f(this,t)&&(e="("+e+")"),"function "+this.name+"("+this.params.join(", ")+") = "+e},c.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",e=this.expr.toTex(e);return f(this,t)&&(e="\\left("+e+"\\right)"),"\\mathrm{"+this.name+"}\\left("+this.params.map(o.toSymbol).join(",")+"\\right):="+e},c}},function(e,t,r){"use strict";t.name="IndexNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError('Node expected for parameter "object"');if(!c(t)||!t.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "ranges"');this.object=e,this.ranges=t}function o(e){switch(e.object.type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":return;default:return 1}}var s=n(r(271)),u=(n(r(280)),n(r(281)),n(r(65))),c=Array.isArray;return(a.prototype=new s).type="IndexNode",a.prototype.isIndexNode=!0,a.prototype._compile=function(e,t){return this.compileSubset(e,t)},a.prototype.compileSubset=function(e,t,r){function n(e){return e&&e.isSymbolNode&&"end"==e.name}var i=!1,a=this.ranges.map(function(e){e=0<e.filter(n).length;return i=e||i,e}),o=(e.range=function(e,t,r){return new u(e&&!0===e.isBigNumber?e.toNumber():e,t&&!0===t.isBigNumber?t.toNumber():t,r&&!0===r.isBigNumber?r.toNumber():r)},Object.create(t)),t=this.ranges.map(function(t,r){var n=a[r];return t&&t.isRangeNode?n?(o.end=!0,"(function () {  var end = size["+r+"];  return range(    "+t.start._compile(e,o)+",     "+t.end._compile(e,o)+",     "+(t.step?t.step._compile(e,o):"1")+"  );})()"):"range("+t.start._compile(e,o)+", "+t.end._compile(e,o)+", "+(t.step?t.step._compile(e,o):"1")+")":n?(o.end=!0,"(function () {  var end = size["+r+"];  return "+t._compile(e,o)+";})()"):t._compile(e,o)});return i?"(function () {  var obj = "+this.object._compile(e,o)+";  var size = math.size(obj).valueOf();  return math.subset(    obj,     math.index("+t.join(", ")+")    "+(r?", "+r:"")+"  );})()":"math.subset("+this.object._compile(e,o)+",math.index("+t.join(", ")+")"+(r?", "+r:"")+")"},a.prototype.forEach=function(e){e(this.object,"object",this);for(var t=0;t<this.ranges.length;t++)e(this.ranges[t],"ranges["+t+"]",this)},a.prototype.map=function(e){for(var t=this._ifNode(e(this.object,"object",this)),r=[],n=0;n<this.ranges.length;n++)r[n]=this._ifNode(e(this.ranges[n],"ranges["+n+"]",this));return new a(t,r)},a.prototype.objectName=function(){return this.object.name},a.prototype.clone=function(){return new a(this.object,this.ranges.slice(0))},a.prototype._toString=function(e){e=this.object.toString(e);return(e=o(this)?"("+e+"(":e)+"["+this.ranges.join(", ")+"]"},a.prototype._toTex=function(e){var t=this.object.toTex(e),r=(o(this)&&(t="\\left("+t+"\\right)"),this.ranges.map(function(t){return t.toTex(e)}));return t+"_{"+r.join(",")+"}"},a}},function(e,t,r){"use strict";var i=r(274);t.name="RangeNode",t.path="expression.node",t.factory=function(e,t,n,a){function o(e,t,r){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError("Node expected");if(!t||!t.isNode)throw new TypeError("Node expected");if(r&&(!r||!r.isNode))throw new TypeError("Node expected");if(3<arguments.length)throw new Error("Too many arguments");this.start=e,this.end=t,this.step=r||null}function s(e,t){var r=i.getPrecedence(e,t),n={},a=i.getPrecedence(e.start,t),a=(n.start=null!==a&&a<=r||"all"===t,e.step&&(a=i.getPrecedence(e.step,t),n.step=null!==a&&a<=r||"all"===t),i.getPrecedence(e.end,t));return n.end=null!==a&&a<=r||"all"===t,n}return n=n(r(271)),(o.prototype=new n).type="RangeNode",o.prototype.isRangeNode=!0,o.prototype._compile=function(e,t){return"math.range("+this.start._compile(e,t)+", "+this.end._compile(e,t)+(this.step?", "+this.step._compile(e,t):"")+")"},o.prototype.forEach=function(e){e(this.start,"start",this),e(this.end,"end",this),this.step&&e(this.step,"step",this)},o.prototype.map=function(e){return new o(this._ifNode(e(this.start,"start",this)),this._ifNode(e(this.end,"end",this)),this.step&&this._ifNode(e(this.step,"step",this)))},o.prototype.clone=function(){return new o(this.start,this.end,this.step&&this.step)},o.prototype._toString=function(e){var n=s(this,e&&e.parenthesis?e.parenthesis:"keep"),i=this.start.toString(e),i=i=n.start?"("+i+")":i,a=(this.step&&(a=this.step.toString(e),i+=":"+(a=n.step?"("+a+")":a)),this.end.toString(e));return i+":"+(a=n.end?"("+a+")":a)},o.prototype._toTex=function(e){var r=s(this,e&&e.parenthesis?e.parenthesis:"keep"),n=this.start.toTex(e),i=(r.start&&(n="\\left("+n+"\\right)"),this.step&&(i=this.step.toTex(e),n+=":"+(i=r.step?"\\left("+i+"\\right)":i)),this.end.toTex(e));return n+":"+(i=r.end?"\\left("+i+"\\right)":i)},o}},function(e,t,r){"use strict";var i=r(29);t.name="SymbolNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,a,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');this.name=e}function u(e){throw new Error("Undefined symbol "+e)}var c=n(r(271)),f=n(r(73));return(s.prototype=new c).type="SymbolNode",s.prototype.isSymbolNode=!0,s.prototype._compile=function(e,t){return e.undef=u,e.Unit=f,t[this.name]?this.name:this.name in e.math?'("'+this.name+'" in scope ? scope["'+this.name+'"] : math["'+this.name+'"])':'("'+this.name+'" in scope ? scope["'+this.name+'"] : '+(f.isValuelessUnit(this.name)?'new Unit(null, "'+this.name+'")':'undef("'+this.name+'")')+")"},s.prototype.forEach=function(e){},s.prototype.map=function(e){return this.clone()},s.prototype.clone=function(){return new s(this.name)},s.prototype._toString=function(e){return this.name},s.prototype._toTex=function(e){var t=!1,t=(void 0===o[this.name]&&f.isValuelessUnit(this.name)&&(t=!0),i.toSymbol(this.name,t));return"\\"===t[0]?t:" "+t},s}},function(e,t,r){"use strict";var i=r(29),a=r(274);t.name="OperatorNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,o,s){function u(e,t,r){if(!(this instanceof u))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('string expected for parameter "op"');if("string"!=typeof t)throw new TypeError('string expected for parameter "fn"');if(!Array.isArray(r)||!r.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "args"');this.op=e,this.fn=t,this.args=r||[]}function c(e,t,r,n){var s,i=a.getPrecedence(e,t),o=a.getAssociativity(e,t);if("all"===t||2<r.length)return s=[],r.forEach(function(e){switch(e.getContent().type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":s.push(!1);break;default:s.push(!0)}}),s;switch(r.length){case 0:return[];case 1:var u=a.getPrecedence(r[0],t);if(n&&null!==u){if(f=("keep"===t?(c=r[0].getIdentifier(),e):(c=r[0].getContent().getIdentifier(),e.getContent())).getIdentifier(),!1===a.properties[i][f].latexLeftParens)return[!1];if(!1===a.properties[u][c].latexParens)return[!1]}return null!==u&&u<=i?[!0]:[!1];case 2:var f,d,y,c=a.getPrecedence(r[0],t),u=a.isAssociativeWith(e,r[0],t),u=null!==c&&(c===i&&"right"===o&&!u||c<i),g=a.getPrecedence(r[1],t),v=a.isAssociativeWith(e,r[1],t),v=null!==g&&(g===i&&"left"===o&&!v||g<i);return n&&(y=("keep"===t?(f=e.getIdentifier(),d=e.args[0].getIdentifier(),e.args[1]):(f=e.getContent().getIdentifier(),d=e.args[0].getContent().getIdentifier(),e.args[1].getContent())).getIdentifier(),null!==c&&(!1===a.properties[i][f].latexLeftParens&&(u=!1),!1===a.properties[c][d].latexParens)&&(u=!1),null!==g)&&(!1===a.properties[i][f].latexRightParens&&(v=!1),!1===a.properties[g][y].latexParens)&&(v=!1),[u,v]}}var f=n(r(271));return n(r(277)),n(r(281)),n(r(283)),(u.prototype=new f).type="OperatorNode",u.prototype.isOperatorNode=!0,u.prototype._compile=function(e,t){var r;if(e.math[this.fn])return r=this.args.map(function(r){return r._compile(e,t)}),"math."+this.fn+"("+r.join(", ")+")";throw new Error("Function "+this.fn+' missing in provided namespace "math"')},u.prototype.forEach=function(e){for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},u.prototype.map=function(e){for(var t=[],r=0;r<this.args.length;r++)t[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new u(this.op,this.fn,t)},u.prototype.clone=function(){return new u(this.op,this.fn,this.args.slice(0))},u.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=this.args,n=c(this,t,r,!1);switch(r.length){case 1:var i=a.getAssociativity(this,t),o=r[0].toString(e);return n[0]&&(o="("+o+")"),"right"===i?this.op+o:o+this.op;case 2:i=r[0].toString(e),o=r[1].toString(e);return n[0]&&(i="("+i+")"),n[1]&&(o="("+o+")"),i+" "+this.op+" "+o;default:return this.fn+"("+this.args.join(", ")+")"}},u.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",r=this.args,n=c(this,t,r,!0),o=void 0===(o=i.operators[this.fn])?this.op:o;switch(r.length){case 1:var s=a.getAssociativity(this,t),u=r[0].toTex(e);return n[0]&&(u="\\left("+u+"\\right)"),"right"===s?o+u:u+o;case 2:var s=r[0],l=s.toTex(e);n[0]&&(l="\\left("+l+"\\right)");var h,m=r[1].toTex(e);switch(n[1]&&(m="\\left("+m+"\\right)"),h=("keep"===t?s:s.getContent()).getIdentifier(),this.getIdentifier()){case"OperatorNode:divide":return o+"{"+l+"}{"+m+"}";case"OperatorNode:pow":switch(l="{"+l+"}",m="{"+m+"}",h){case"ConditionalNode":case"OperatorNode:divide":l="\\left("+l+"\\right)"}}return l+o+m;default:return"\\mathrm{"+this.fn+"}\\left("+r.map(function(t){return t.toTex(e)}).join(",")+"\\right)"}},u.prototype.getIdentifier=function(){return this.type+":"+this.fn},u}},function(e,t,r){"use strict";var i=r(29);t.name="FunctionNode",t.path="expression.node",t.math=!0,t.factory=function(e,t,n,a,o){function s(e,t){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('string expected for parameter "name"');if(!Array.isArray(t)||!t.every(function(e){return e&&e.isNode}))throw new TypeError('Array containing Nodes expected for parameter "args"');this.name=e,this.args=t||[]}function u(e,t,r){for(var n,i="",a=new RegExp("\\$(?:\\{([a-z_][a-z_0-9]*)(?:\\[([0-9]+)\\])?\\}|\\$)","ig"),o=0;null!==(n=a.exec(e));)if(i+=e.substring(o,n.index),o=n.index,"$$"===n[0])i+="$",o++;else{o+=n[0].length;var s=t[n[1]];if(!s)throw new ReferenceError("Template: Property "+n[1]+" does not exist.");if(void 0===n[2])switch(typeof s){case"string":i+=s;break;case"object":if(s.isNode)i+=s.toTex(r);else{if(!Array.isArray(s))throw new TypeError("Template: "+n[1]+" has to be a Node, String or array of Nodes");i+=s.map(function(e,t){if(e&&e.isNode)return e.toTex(r);throw new TypeError("Template: "+n[1]+"["+t+"] is not a Node.")}).join(",")}break;default:throw new TypeError("Template: "+n[1]+" has to be a Node, String or array of Nodes")}else{if(!s[n[2]]||!s[n[2]].isNode)throw new TypeError("Template: "+n[1]+"["+n[2]+"] is not a Node.");i+=s[n[2]].toTex(r)}}return i+e.slice(o)}var c=n(r(271)),f=n(r(281)),l=((s.prototype=new c).type="FunctionNode",s.prototype.isFunctionNode=!0,s.prototype._compile=function(e,t){var r=e.math[this.name],r="function"==typeof r&&1==r.rawArgs,i=this.args.map(function(r){return r._compile(e,t)});if(r){for(var a,o=0;a="p"+o,o++,a in e;);return e[a]=this.args,'("'+this.name+'" in scope ? scope["'+this.name+'"]('+i.join(", ")+') : math["'+this.name+'"]('+a+", math, scope))"}return new f(this.name)._compile(e,t)+"("+i.join(", ")+")"},s.prototype.forEach=function(e){for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},s.prototype.map=function(e){for(var t=[],r=0;r<this.args.length;r++)t[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new s(this.name,t)},s.prototype.clone=function(){return new s(this.name,this.args.slice(0))},s.prototype.toString),p=(s.prototype.toString=function(e){var t;return void 0!==(t=e&&"object"==typeof e.handler&&e.handler.hasOwnProperty(this.name)?e.handler[this.name](this,e):t)?t:l.call(this,e)},s.prototype._toString=function(e){return this.name+"("+this.args.join(", ")+")"},s.prototype.toTex);return s.prototype.toTex=function(e){var t;return void 0!==(t=e&&"object"==typeof e.handler&&e.handler.hasOwnProperty(this.name)?e.handler[this.name](this,e):t)?t:p.call(this,e)},s.prototype._toTex=function(e){e&&e.parenthesis&&e.parenthesis;var t,n,r=this.args.map(function(t){return t.toTex(e)});switch(typeof(t=!o[this.name]||"function"!=typeof o[this.name].toTex&&"object"!=typeof o[this.name].toTex&&"string"!=typeof o[this.name].toTex?t:o[this.name].toTex)){case"function":n=t(this,e);break;case"string":n=u(t,this,e);break;case"object":switch(typeof t[r.length]){case"function":n=t[r.length](this,e);break;case"string":n=u(t[r.length],this,e)}}return void 0!==n?n:u(i.defaultTemplate,this,e)},s.prototype.getIdentifier=function(){return this.type+":"+this.name},s}},function(e,t,r){"use strict";t.name="ParenthesisNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isNode)throw new TypeError('Node expected for parameter "content"');this.content=e}return n=n(r(271)),(a.prototype=new n).type="ParenthesisNode",a.prototype.isParenthesisNode=!0,a.prototype._compile=function(e,t){return this.content._compile(e,t)},a.prototype.getContent=function(){return this.content.getContent()},a.prototype.forEach=function(e){e(this.content,"content",this)},a.prototype.map=function(e){return new a(e(this.content,"content",this))},a.prototype.clone=function(){return new a(this.content)},a.prototype._toString=function(e){return e&&"keep"!==e.parenthesis?this.content.toString(e):"("+this.content.toString(e)+")"},a.prototype._toTex=function(e){return e&&"keep"!==e.parenthesis?this.content.toTex(e):"\\left("+this.content.toTex(e)+"\\right)"},a}},function(e,t,r){"use strict";t.name="UpdateNode",t.path="expression.node",t.factory=function(e,t,n,i){function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!e||!e.isIndexNode)throw new TypeError('Expected IndexNode for parameter "index"');if(!t||!t.isNode)throw new TypeError('Expected Node for parameter "expr"');this.index=e,this.expr=t}var o=n(r(271));return n(r(279)),(a.prototype=new o).type="UpdateNode",a.prototype.isUpdateNode=!0,a.prototype._compile=function(e,t){return(t[this.index.objectName()]?this.name+" = ":'scope["'+this.index.objectName()+'"]')+" = "+this.index.compileSubset(e,t,this.expr._compile(e,t))},a.prototype.forEach=function(e){e(this.index,"index",this),e(this.expr,"expr",this)},a.prototype.map=function(e){return new a(this._ifNode(e(this.index,"index",this)),this._ifNode(e(this.expr,"expr",this)))},a.prototype.clone=function(){return new a(this.index,this.expr)},a.prototype._toString=function(e){var t=this.expr.toString(e);return e&&"all"===e.parenthesis&&(t="("+t+")"),this.index.toString(e)+" = "+t},a.prototype._toTex=function(e){var t=this.expr.toTex(e);return e&&"all"===e.parenthesis&&(t="\\left("+t+"\\right)"),this.index.toTex(e)+":="+t},a}},function(e,t,r){"use strict";var i=r(19);t.name="eval",t.factory=function(e,t,n,a){var o=n(r(269));return a("compile",{string:function(e){return o(e).compile().eval({})},"string, Object":function(e,t){return o(e).compile().eval(t)},"Array | Matrix":function(e){var t={};return i(e,function(e){return o(e).compile().eval(t)})},"Array | Matrix, Object":function(e,t){return i(e,function(e){return o(e).compile().eval(t)})}})}},function(e,t,r){"use strict";t.math=!0,t.name="help",t.factory=function(e,t,n,i,a){var o=n(r(97));return i("help",{any:function(t){var r,n=t;if("string"!=typeof t)for(r in a)if(a.hasOwnProperty(r)&&t===a[r]){n=r;break}var i=o[n];if(i)return new e.Help(i);throw new Error('No documentation found on "'+n+'"')}})}},function(e,t,r){"use strict";t.name="parse",t.factory=function(e,t,n,i){return n=n(r(269)),i("parse",{"string | Array | Matrix":n,"string | Array | Matrix, Object":n})}},function(e,t,r){"use strict";t.name="parser",t.factory=function(e,t,n,i,a){var o=n(r(290));return i("parser",{"":function(){return new o(a)}})},t.math=!0},function(e,t,r){"use strict";t.name="Parser",t.path="expression",t.factory=function(e,t,n,i,a){function o(){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");this.scope={}}var s=n(r(269));return o.prototype.type="Parser",o.prototype.isParser=!0,o.prototype.parse=function(e){throw new Error("Parser.parse is deprecated. Use math.parse instead.")},o.prototype.compile=function(e){throw new Error("Parser.compile is deprecated. Use math.compile instead.")},o.prototype.eval=function(e){return s(e).compile().eval(this.scope)},o.prototype.get=function(e){return this.scope[e]},o.prototype.set=function(e,t){return this.scope[e]=t},o.prototype.remove=function(e){delete this.scope[e]},o.prototype.clear=function(){for(var e in this.scope)this.scope.hasOwnProperty(e)&&delete this.scope[e]},o},t.math=!0},function(e,t,r){e.exports=[r(270),r(273),r(275),r(276),r(277),r(279),r(278),r(283),r(271),r(282),r(284),r(280),r(281),r(285)]},function(e,t,r){e.exports=[r(293),r(296),r(298),r(300),r(301),r(303),r(308),r(313),r(315),r(317)]},function(e,t,r){"use strict";var i=r(294).transform;t.name="concat",t.path="expression.transform",t.factory=function(e,t,n,a){var o=n(r(295));return a("concat",{"...any":function(e){var t=e.length-1,r=e[t];"number"==typeof r?e[t]=r-1:r&&!0===r.isBigNumber&&(e[t]=r.minus(1));try{return o.apply(null,e)}catch(n){throw i(n)}}})}},function(e,t,r){var n=r(42);t.transform=function(e){return e&&e.isIndexError?new n(e.index+1,e.min+1,e.max+1):e}},function(e,t,r){"use strict";var a=r(3).clone,o=r(6).isInteger,s=r(39),u=r(42),c=r(41);t.name="concat",t.factory=function(e,t,n,f){var l=n(r(50));return(n=f("concat",{"...Array | Matrix | number | BigNumber":function(e){for(var r,n=e.length,f=-1,p=!1,m=[],t=0;t<n;t++){var h=e[t];if(h&&!0===h.isMatrix&&(p=!0),"number"==typeof h||h&&!0===h.isBigNumber){if(t!==n-1)throw new Error("Dimension must be specified as last argument");if(r=f,f=h.valueOf(),!o(f))throw new TypeError("Integer number expected for dimension");if(f<0)throw new u(f);if(0<t&&r<f)throw new u(f,r+1)}else{var h=a(h).valueOf(),v=s.size(h);if(m[t]=h,r=f,f=v.length-1,0<t&&f!=r)throw new c(r+1,f+1)}}if(0==m.length)throw new SyntaxError("At least one matrix expected");for(var d=m.shift();m.length;)d=function i(e,t,r,n){if(n<r){if(e.length!=t.length)throw new c(e.length,t.length);for(var a=[],o=0;o<e.length;o++)a[o]=i(e[o],t[o],r,n+1);return a}return e.concat(t)}(d,m.shift(),f,0);return p?l(d):d},"...string":function(e){return e.join("")}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="filter",t.path="expression.transform",t.factory=function(e,t,n,i){function a(e,t,r){var n;if(e[0]&&(n=e[0].compile().eval(r)),e[1])if(e[1]&&e[1].isSymbolNode)i=e[1].compile().eval(r);else{var a=r||{},r=e[1].filter(function(e){return e&&e.isSymbolNode&&!(e.name in t)&&!(e.name in a)})[0],u=Object.create(a),c=e[1].compile();if(!r)throw new Error("No undefined variable found in filter equation");var f=r.name,i=function(e){return u[f]=e,c.eval(u)}}return o(n,i)}var o=n(r(297));return n(r(281)),a.rawArgs=!0,a}},function(e,t,r){"use strict";function i(e,t){if(1!==o(e).length)throw new Error("Only one dimensional matrices supported");return e.filter(function(e){return t(e)})}function a(e,t){if(1!==o(e).length)throw new Error("Only one dimensional matrices supported");return e.filter(function(e){return t.test(e)})}var o=r(39).size;t.name="filter",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("filter",{"Array, function":i,"Array, RegExp":a,"Matrix, function":function(e,t){return s(i(e.toArray(),t))},"Matrix, RegExp":function(e,t){return s(a(e.toArray(),t))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="forEach",t.path="expression.transform",t.factory=function(e,t,n,i){return n(r(299)),i("forEach",{"Array | Matrix, function":function(e,t){var r=function(n,i){Array.isArray(n)?n.forEach(function(e,t){r(e,i.concat(t+1))}):t(n,i,e)};r(e.valueOf(),[])}})}},function(e,t){"use strict";function n(e,t){function r(n,i){Array.isArray(n)?n.forEach(function(e,t){r(e,i.concat(t))}):t(n,i,e)}r(e,[])}t.name="forEach",t.factory=function(e,t,r,i){return(i=i("forEach",{"Array, function":n,"Matrix, function":function(e,t){return e.forEach(t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",i}},function(e,t,r){"use strict";Array.isArray,t.name="index",t.path="expression.transform",t.factory=function(e,t,n){return n(r(66)),function(){for(var t=[],r=0,n=arguments.length;r<n;r++){var i=arguments[r];if(i&&!0===i.isRange)i.start--,i.end-=0<i.step?0:2;else if(i&&!0===i.isSet)i=i.map(function(e){return e-1});else if(i&&(!0===i.isArray||i.isMatrix))i=i.map(function(e){return e-1});else if("number"==typeof i)i--;else{if(!i||!0!==i.isBigNumber)throw new TypeError("Ranges must be a Number, Range, Array or Matrix");i=i.toNumber()-1}t[r]=i}var a=new e.Index;return e.Index.apply(a,t),a}}},function(e,t,r){"use strict";function i(e,t,r){return function n(e,i){return Array.isArray(e)?e.map(function(e,t){return n(e,i.concat(t+1))}):t(e,i,r)}(e,[])}t.name="map",t.path="expression.transform",t.factory=function(e,t,n,a){n(r(302));var o=n(r(50));return a("max",{"Array, function":function(e,t){return i(e,t,e)},"Matrix, function":function(e,t){return o(i(e.valueOf(),t,e))}})}},function(e,t){"use strict";function n(e,t){function r(n,i){return Array.isArray(n)?n.map(function(e,t){return r(e,i.concat(t))}):t(n,i,e)}return r(e,[])}t.name="map",t.factory=function(e,t,r,i){return(i=i("map",{"Array, function":n,"Matrix, function":function(e,t){return e.map(t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",i}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="max",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(305));return o("max",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t){"use strict";e.exports=function(e){return Array.isArray(e)||e&&!0===e.isMatrix}},function(e,t,r){"use strict";var i=r(306),a=r(307);t.name="max",t.factory=function(e,t,n,o){function s(e,t){return c(e,t)?e:t}function u(e){var t=void 0;if(i(e,function(e){void 0!==t&&!c(e,t)||(t=e)}),void 0===t)throw new Error("Cannot calculate max of an empty array");return t}var c=n(r(62));return(n=o("max",{"Array | Matrix":u,"Array | Matrix, number | BigNumber":function(e,t){return a(e,t.valueOf(),s)},"...":function(){return u(arguments)}})).toTex="\\max\\left(${args}\\right)",n}},function(e,t){"use strict";e.exports=function r(e,t){for(var n=0,i=(e=e&&!0===e.isMatrix?e.valueOf():e).length;n<i;n++){var a=e[n];Array.isArray(a)?r(a,t):t(a)}}},function(e,t,r){"use strict";function n(e,t,r){var a,o,s,u;if(t<=0){if(Array.isArray(e[0])){for(u=function(e){var t,r,n=e.length,i=e[0].length,a=[];for(r=0;r<i;r++){var o=[];for(t=0;t<n;t++)o.push(e[t][r]);a.push(o)}return a}(e),o=[],a=0;a<u.length;a++)o[a]=n(u[a],t-1,r);return o}for(s=e[0],a=1;a<e.length;a++)s=r(s,e[a]);return s}for(o=[],a=0;a<e.length;a++)o[a]=n(e[a],t-1,r);return o}var a=r(39).size,o=r(42);e.exports=function(e,t,r){var i=Array.isArray(e)?a(e):e.size();if(t<0)throw new o(t);if(t>=i.length)throw new o(t,i.length);return e&&!0===e.isMatrix?e.create(n(e.valueOf(),t,r)):n(e,t,r)}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="mean",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(309));return o("mean",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t,r){"use strict";var i=r(39).size,a=r(306),o=r(307);t.name="mean",t.factory=function(e,t,n,s){function c(e){var t=0,r=0;if(a(e,function(e){t=f(t,e),r++}),0===r)throw new Error("Cannot calculate mean of an empty array");return l(t,r)}var f=n(r(49)),l=n(r(310));return(n=s("mean",{"Array | Matrix":c,"Array | Matrix, number | BigNumber":function(e,t){var r=o(e,t,f),e=Array.isArray(e)?i(e):e.size();return l(r,e[t])},"...":function(){return c(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3).extend;t.name="divide",t.factory=function(e,t,n,a){var o=n(r(78)),s=n(r(83)),u=n(r(311)),c=n(r(50)),f=n(r(84)),l=n(r(56));return(n=a("divide",i({"Array | Matrix, Array | Matrix":function(e,t){return s(e,u(t))},"Matrix, any":function(e,t){var r;switch(e.storage()){case"sparse":r=f(e,t,o,!1);break;case"dense":r=l(e,t,o,!1)}return r},"Array, any":function(e,t){return l(c(e),t,o,!1).valueOf()},"any, Array | Matrix":function(e,t){return s(e,u(t))}},o.signatures))).toTex="\\frac{${args[0]}}{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(38);t.name="inv",t.factory=function(e,t,n,a){function o(e,t,r){var i,a,s;if(1==t){if(0==(o=e[0][0]))throw Error("Cannot calculate inverse, determinant is zero");return[[u(1,o)]]}if(2==t){var o=p(e);if(0==o)throw Error("Cannot calculate inverse, determinant is zero");return[[u(e[1][1],o),u(l(e[0][1]),o)],[u(l(e[1][0]),o),u(e[0][0],o)]]}var g=e.concat();for(n=0;n<t;n++)g[n]=g[n].concat();for(var v=m(t).valueOf(),d=0;d<r;d++){for(n=d;n<t&&0==g[n][d];)n++;if(n==t||0==g[n][d])throw Error("Cannot calculate inverse, determinant is zero");n!=d&&(s=g[d],g[d]=g[n],g[n]=s,s=v[d],v[d]=v[n],v[n]=s);for(var y=g[d],x=v[d],n=0;n<t;n++){var b=g[n],w=v[n];if(n!=d){if(0!=b[d]){for(a=u(l(b[d]),y[d]),i=d;i<r;i++)b[i]=c(b[i],f(a,y[i]));for(i=0;i<r;i++)w[i]=c(w[i],f(a,x[i]))}}else{for(a=y[d],i=d;i<r;i++)b[i]=u(b[i],a);for(i=0;i<r;i++)w[i]=u(w[i],a)}}}return v}var s=n(r(50)),u=n(r(78)),c=n(r(51)),f=n(r(83)),l=n(r(75)),p=n(r(312)),m=n(r(81));return(n=a("inv",{"Array | Matrix":function(e){var t=!0===e.isMatrix?e.size():i.array.size(e);switch(t.length){case 1:if(1==t[0])return!0===e.isMatrix?s([u(1,e.valueOf()[0])]):[u(1,e[0])];throw new RangeError("Matrix must be square (size: "+i.string.format(t)+")");case 2:var r=t[0],n=t[1];if(r==n)return!0===e.isMatrix?s(o(e.valueOf(),r,n),e.storage()):o(e,r,n);throw new RangeError("Matrix must be square (size: "+i.string.format(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+i.string.format(t)+")")}},any:function(e){return u(1,e)}})).toTex="\\left(${args[0]}\\right)^{-1}",n}},function(e,t,r){"use strict";var i=r(38),a=i.object,o=i.string;t.name="det",t.factory=function(e,t,n,i){var u=n(r(50)),c=n(r(49)),f=n(r(74)),l=n(r(83)),p=n(r(75));return(n=i("det",{any:function(e){return a.clone(e)},"Array | Matrix":function(e){var t=e&&!0===e.isMatrix?e.size():Array.isArray(e)?(e=u(e)).size():[];switch(t.length){case 0:return a.clone(e);case 1:if(1==t[0])return a.clone(e.valueOf()[0]);throw new RangeError("Matrix must be square (size: "+o.format(t)+")");case 2:var r=t[0],n=t[1];if(r==n)return function(e,t){if(1==t)return a.clone(e[0][0]);if(2==t)return f(l(e[0][0],e[1][1]),l(e[1][0],e[0][1]));for(var i=e,o=0;o<t-1;o++)i=l(function(e){for(var r,n=new Array(e.length),i=0,t=1;t<e.length;t++)i=c(i,e[t][t]);for(t=0;t<e.length;t++){for(n[t]=new Array(e.length),n[t][t]=p(i),r=0;r<t;r++)n[t][r]=0;for(r=t+1;r<e.length;r++)n[t][r]=e[t][r];t+1<e.length&&(i=f(i,e[t+1][t+1]))}return n}(i),e);return t%2==0?p(i[0][0]):i[0][0]}(e.clone().valueOf(),r);throw new RangeError("Matrix must be square (size: "+o.format(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+o.format(t)+")")}}})).toTex="\\det\\left(${args[0]}\\right)",n}},function(e,t,r){"use strict";var i=r(294).transform,a=r(304);t.name="min",t.path="expression.transform",t.factory=function(e,t,n,o){var s=n(r(314));return o("min",{"...any":function(e){var t;2==e.length&&a(e[0])&&("number"==typeof(t=e[1])?e[1]=t-1:t&&!0===t.isBigNumber&&(e[1]=t.minus(1)));try{return s.apply(null,e)}catch(r){throw i(r)}}})}},function(e,t,r){"use strict";var i=r(306),a=r(307);t.name="min",t.factory=function(e,t,n,o){function s(e,t){return c(e,t)?e:t}function u(e){var t=void 0;if(i(e,function(e){void 0!==t&&!c(e,t)||(t=e)}),void 0===t)throw new Error("Cannot calculate min of an empty array");return t}var c=n(r(58));return(n=o("min",{"Array | Matrix":u,"Array | Matrix, number | BigNumber":function(e,t){return a(e,t.valueOf(),s)},"...":function(){return u(arguments)}})).toTex="\\min\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="range",t.path="expression.transform",t.factory=function(e,t,n,i){var a=n(r(316));return i("range",{"...any":function(e){return"boolean"!=typeof e[e.length-1]&&e.push(!0),a.apply(null,e)}})}},function(e,t,r){"use strict";t.name="range",t.factory=function(e,t,n,i){function a(e){return"array"===t.matrix?e:p(e)}function o(r,n){var i=function(e){var r=e.split(":").map(function(e){return Number(e)});if(r.some(function(e){return isNaN(e)}))return null;switch(r.length){case 2:return{start:r[0],end:r[1],step:1};case 3:return{start:r[0],end:r[2],step:r[1]};default:return null}}(r);if(i)return"bignumber"===t.number?a((n?f:c)(new e.BigNumber(i.start),new e.BigNumber(i.end),new e.BigNumber(i.step))):a((n?u:s)(i.start,i.end,i.step));throw new SyntaxError('String "'+r+'" is no valid range')}function s(e,t,r){var n=[],i=e;if(0<r)for(;i<t;)n.push(i),i+=r;else if(r<0)for(;t<i;)n.push(i),i+=r;return n}function u(e,t,r){var n=[],i=e;if(0<r)for(;i<=t;)n.push(i),i+=r;else if(r<0)for(;t<=i;)n.push(i),i+=r;return n}function c(e,t,r){var n=[],i=e;if(r.gt(m))for(;i.lt(t);)n.push(i),i=i.plus(r);else if(r.lt(m))for(;i.gt(t);)n.push(i),i=i.plus(r);return n}function f(e,t,r){var n=[],i=e;if(r.gt(m))for(;i.lte(t);)n.push(i),i=i.plus(r);else if(r.lt(m))for(;i.gte(t);)n.push(i),i=i.plus(r);return n}var p=n(r(50)),m=new e.BigNumber(0),h=new e.BigNumber(1);return(n=i("range",{string:o,"string, boolean":o,"number, number":function(e,t){return a(s(e,t,1))},"number, number, number":function(e,t,r){return a(s(e,t,r))},"number, number, boolean":function(e,t,r){return a((r?u:s)(e,t,1))},"number, number, number, boolean":function(e,t,r,n){return a((n?u:s)(e,t,r))},"BigNumber, BigNumber":function(e,t){return a(c(e,t,h))},"BigNumber, BigNumber, BigNumber":function(e,t,r){return a(c(e,t,r))},"BigNumber, BigNumber, boolean":function(e,t,r){return a((r?f:c)(e,t,h))},"BigNumber, BigNumber, BigNumber, boolean":function(e,t,r,n){return a((n?f:c)(e,t,r))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(294).transform;t.name="subset",t.path="expression.transform",t.factory=function(e,t,n,a){var o=n(r(318));return a("subset",{"...any":function(e){try{return o.apply(null,e)}catch(t){throw i(t)}}})}},function(e,t,r){"use strict";var i=r(3).clone,a=r(39).validateIndex,o=r(41);t.name="subset",t.factory=function(e,t,n,s){function c(e,t,r,n){if(!t||!0!==t.isIndex)throw new TypeError("Index expected");if(1!=t.size().length)throw new o(t.size().length,1);if(void 0!==n){if("string"!=typeof n||1!==n.length)throw new TypeError("Single character expected as defaultValue")}else n=" ";var s,i=t.dimension(0);if(i.size()[0]!=r.length)throw new o(i.size()[0],r.length);var u=e.length;a(t.min()[0]),a(t.max()[0]);for(var c=[],f=0;f<u;f++)c[f]=e.charAt(f);if(i.forEach(function(e,t){c[e]=r.charAt(t[0])}),u<c.length)for(f=u-1,s=c.length;f<s;f++)c[f]||(c[f]=n);return c.join("")}var f=n(r(50));return(n=s("subset",{"Array, Index":function(e,t){e=f(e).subset(t);return e&&e.valueOf()},"Matrix, Index":function(e,t){return e.subset(t)},"string, Index":function(e,t){if(!t||!0!==t.isIndex)throw new TypeError("Index expected");if(1!=t.size().length)throw new o(t.size().length,1);var r=e.length,r=(a(t.min()[0],r),a(t.max()[0],r),t.dimension(0)),i="";return r.forEach(function(t){i+=e.charAt(t)}),i},"Array, Index, any":function(e,t,r){return f(i(e)).subset(t,r,void 0).valueOf()},"Array, Index, any, any":function(e,t,r,n){return f(i(e)).subset(t,r,n).valueOf()},"Matrix, Index, any":function(e,t,r){return e.clone().subset(t,r)},"Matrix, Index, any, any":function(e,t,r,n){return e.clone().subset(t,r,n)},"string, Index, string":c,"string, Index, string, string":c})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3),a=r(23);t.name="Help",t.path="type",t.factory=function(e,t,n,o){function s(e){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if(!e)throw new Error('Argument "doc" missing');this.doc=e}var u=n(r(289))();return s.prototype.type="Help",s.prototype.isHelp=!0,s.prototype.toString=function(){var e=this.doc||{},t="\n";if(e.name&&(t+="Name: "+e.name+"\n\n"),e.category&&(t+="Category: "+e.category+"\n\n"),e.description&&(t+="Description:\n    "+e.description+"\n\n"),e.syntax&&(t+="Syntax:\n    "+e.syntax.join("\n    ")+"\n\n"),e.examples){t+="Examples:\n";for(var r=0;r<e.examples.length;r++){var i,n=e.examples[r];t+="    "+n+"\n";try{i=u.eval(n)}catch(o){i=o}i&&!i.isHelp&&(t+="        "+a.format(i,{precision:14})+"\n")}t+="\n"}return e.seealso&&(t+="See also: "+e.seealso.join(", ")+"\n"),t},s.prototype.toJSON=function(){var e=i.clone(this.doc);return e.mathjs="Help",e},s.fromJSON=function(e){var r,t={};for(r in e)"mathjs"!==r&&(t[r]=e[r]);return new s(t)},s.prototype.valueOf=s.prototype.toString,s}},function(e,t,r){e.exports=[r(321),r(348),r(378),r(394),r(403),r(408),r(411),r(417),r(426),r(435),r(440),r(448),r(489),r(491)]},function(e,t,r){e.exports=[r(322),r(323),r(343),r(345),r(347)]},function(e,t,r){"use strict";var a=r(38).object;t.name="lup",t.factory=function(e,t,n,i){var o=n(r(50)),s=n(r(85)),u=n(r(51)),c=n(r(78)),f=n(r(77)),l=n(r(74)),p=n(r(62)),m=n(r(47)),h=n(r(75)),g=e.SparseMatrix,v=e.DenseMatrix,d=e.Spa,n=i("lup",{DenseMatrix:function(e){return x(e)},SparseMatrix:function(e){return b(e)},Array:function(e){e=o(e),e=x(e);return{L:e.L.valueOf(),U:e.U.valueOf(),p:e.p}}}),x=function(e){var r,i=e._size[0],o=e._size[1],h=Math.min(i,o),g=a.clone(e._data),d=[],e=[i,h],x=[],b=[h,o],w=[];for(t=0;t<i;t++)w[t]=t;for(r=0;r<o;r++){if(0<r)for(t=0;t<i;t++){for(var N=Math.min(t,r),E=0,n=0;n<N;n++)E=u(E,f(g[t][n],g[n][r]));g[t][r]=l(g[t][r],E)}for(var M=r,A=0,_=0,t=r;t<i;t++){var O=g[t][r],T=s(O);p(T,A)&&(M=t,A=T,_=O)}if(r!==M&&(w[r]=[w[M],w[M]=w[r]][0],v._swapRows(r,M,g)),r<i)for(t=r+1;t<i;t++){var C=g[t][r];m(C,0)||(g[t][r]=c(g[t][r],_))}}for(r=0;r<o;r++)for(t=0;t<i;t++)0===r&&(t<o&&(x[t]=[]),d[t]=[]),t<r?(t<o&&(x[t][r]=g[t][r]),r<i&&(d[t][r]=0)):t!==r?(t<o&&(x[t][r]=0),r<i&&(d[t][r]=g[t][r])):(t<o&&(x[t][r]=g[t][r]),r<i&&(d[t][r]=1));var e=new v({data:d,size:e}),b=new v({data:x,size:b}),B=[];for(t=0,h=w.length;t<h;t++)B[w[t]]=t;return{L:e,U:b,p:B,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}},b=function(e){for(var i=e._size[0],a=e._size[1],o=Math.min(i,a),u=e._values,l=e._index,v=e._ptr,y=[],x=[],b=[],w=[i,o],N=[],E=[],M=[],A=[o,a],_=[],O=[],t=0;t<i;t++)O[_[t]=t]=t;for(var r=0;r<a;r++){for(var C=new d,S=(r<i&&(b.push(y.length),y.push(1),x.push(r)),M.push(N.length),v[r]),z=v[r+1],n=S;n<z;n++)t=l[n],C.set(_[t],u[n]);0<r&&C.forEach(0,r-1,function(e,t){g._forEachRow(e,y,x,b,function(r,n){e<r&&C.accumulate(r,h(f(n,t)))})});var B=r,k=C.get(r),I=s(k);C.forEach(r+1,i-1,function(e,t){var r=s(t);p(r,I)&&(B=e,I=r,k=t)}),r!==B&&(g._swapRows(r,B,w[1],y,x,b),g._swapRows(r,B,A[1],N,E,M),C.swap(r,B),function(e,t){var r=O[e],n=O[t];_[r]=t,O[_[n]=e]=n,O[t]=r}(r,B)),C.forEach(0,i-1,function(e,t){e<=r?(N.push(t),E.push(e)):(t=c(t,k),m(t,0)||(y.push(t),x.push(e)))})}return M.push(N.length),b.push(y.length),{L:new g({values:y,index:x,ptr:b,size:w}),U:new g({values:N,index:E,ptr:M,size:A}),p:_,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}};return n}},function(e,t,r){"use strict";var o=r(38).number.isInteger;t.name="slu",t.factory=function(e,t,n,i){var a=n(r(324)),s=n(r(335));return i("slu",{"SparseMatrix, number, number":function(e,t,r){if(!o(t)||t<0||3<t)throw new Error("Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]");if(r<0||1<r)throw new Error("Partial pivoting threshold must be a number from 0 to 1");t=a(t,e,!1),e=s(e,t,r);return{L:e.L,U:e.U,p:e.pinv,q:t.q,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\np: "+this.p.toString()+(this.q?"\nq: "+this.q.toString():"")+"\n"}}}})}},function(e,t,r){"use strict";t.name="cs_sqr",t.path="sparse",t.factory=function(e,t,n){var i=n(r(325)),a=n(r(330)),o=n(r(331)),s=n(r(332)),u=n(r(333));return function(e,t,r){var n,c=t._ptr,p=t._size[1],m={};if(m.q=i(e,t),e&&!m.q)return null;if(r){r=e?a(t,null,m.q,0):t,e=(m.parent=o(r,1),s(m.parent,p));if(m.cp=u(r,m.parent,e,1),r&&m.parent&&m.cp&&function(e,t){var r=e._ptr,n=e._index,i=e._size,a=i[0],o=i[1];t.pinv=[],t.leftmost=[];for(var s,u,c,f,l,p=t.parent,m=t.pinv,h=t.leftmost,g=[],v=0,d=a,y=a+o,x=a+2*o,u=0;o>u;u++)g[d+u]=-1,g[y+u]=-1,g[x+u]=0;for(s=0;a>s;s++)h[s]=-1;for(u=o-1;u>=0;u--)for(f=r[u],l=r[u+1],c=f;l>c;c++)h[n[c]]=u;for(s=a-1;s>=0;s--)(m[s]=-1)!=(u=h[s])&&(0===g[x+u]++&&(g[y+u]=s),g[v+s]=g[d+u],g[d+u]=s);for(t.lnz=0,t.m2=a,u=0;o>u;u++)if(s=g[d+u],t.lnz++,!(--x[m[s=0>s?t.m2++:s]=u]<=0)){t.lnz+=g[x+u];var b=p[u];-1!=b&&(0===g[x+b]&&(g[y+b]=g[y+u]),g[v+g[y+u]]=g[d+b],g[d+b]=g[v+s],g[x+b]+=g[x+u])}for(s=0;a>s;s++)m[s]<0&&(m[s]=u++);return!0}(r,m))for(n=m.unz=0;n<p;n++)m.unz+=m.cp[n]}else m.unz=4*c[p]+p,m.lnz=m.unz;return m}}},function(e,t,r){"use strict";t.name="cs_amd",t.path="sparse",t.factory=function(e,t,n){function l(e,t,r,n,i){var a=c(t);if(1===e&&n===r)return s(t,a);if(2==e){for(var o=a._index,f=a._ptr,l=0,p=0;p<r;p++){var m=f[p];if(f[p]=l,!(f[p+1]-m>i))for(var h=f[p+1];m<h;m++)o[l++]=o[m]}f[r]=l,t=c(a)}return u(a,t)}function g(e,t){return e!=t}var i=n(r(326)),a=n(r(327)),o=n(r(328)),s=n(r(49)),u=n(r(83)),c=n(r(329)),h=function(e,t,r,n,i){if(e<2||e+t<0){for(var a=0;a<i;a++)0!==r[n+a]&&(r[n+a]=1);e=2}return e};return function(e,t){if(!t||e<=0||3<e)return null;var r=t._size,n=r[0],s=r[1],u=0,r=Math.max(16,10*Math.sqrt(s)),r=Math.min(s-2,r),e=l(e,t,n,s,r);a(e,g,null);for(var v,y,b,N,E,A,_,T,C,S,z,B=e._index,k=e._ptr,I=k[s],R=[],P=[],q=s+1,L=2*(s+1),F=3*(s+1),D=4*(s+1),$=5*(s+1),j=6*(s+1),G=7*(s+1),H=R,V=function(e,t,r,n,i,a,o,s,u,c,f,l){for(var p=0;e>p;p++)r[n+p]=t[p+1]-t[p];for(var m=r[n+e]=0;e>=m;m++)r[i+m]=-1,a[m]=-1,r[o+m]=-1,r[s+m]=-1,r[u+m]=1,r[c+m]=1,r[f+m]=0,r[l+m]=r[n+m];var g=h(0,0,r,c,e);return r[f+e]=-2,t[e]=-1,r[c+e]=0,g}(s,k,P,0,F,H,L,G,q,j,D,$),Z=function(e,t,r,n,a,o,s,u,c,f,l){for(var p=0,m=0;e>m;m++){var h=r[n+m];if(0===h)r[a+m]=-2,p++,t[m]=-1,r[o+m]=0;else if(h>s)r[u+m]=0,r[a+m]=-1,p++,t[m]=i(e),r[u+e]++;else{var g=r[c+h];-1!=g&&(f[g]=m),r[l+m]=r[c+h],r[c+h]=m}}return p}(s,k,P,$,D,j,r,q,F,H,L),Y=0;Z<s;){for(y=-1;Y<s&&-1==(y=P[F+Y]);Y++);-1!=P[L+y]&&(H[P[L+y]]=-1),P[F+Y]=P[L+y];for(var re,w,W=P[D+y],X=P[q+y],J=(Z+=X,0),Q=(P[q+y]=-X,k[y]),K=0===W?Q:I,ee=K,x=1;x<=W+1;x++){for(E=W<x?(N=Q,P[0+(w=y)]-W):(N=k[w=B[Q++]],P[0+w]),b=1;b<=E;b++)(M=P[q+(v=B[N++])])<=0||(J+=M,P[q+v]=-M,-1!=P[L+(B[ee++]=v)]&&(H[P[L+v]]=H[v]),-1!=H[v]?P[L+H[v]]=P[L+v]:P[F+P[$+v]]=P[L+v]);w!=y&&(k[w]=i(y),P[j+w]=0)}for(0!==W&&(I=ee),P[$+y]=J,k[y]=K,P[0+y]=ee-K,P[D+y]=-2,V=h(V,u,P,j,s),A=K;A<ee;A++)if(!((_=P[D+(v=B[A])])<=0))for(var M,te=V-(M=-P[q+v]),Q=k[v],O=k[v]+_-1;Q<=O;Q++)P[j+(w=B[Q])]>=V?P[j+w]-=M:0!==P[j+w]&&(P[j+w]=P[$+w]+te);for(A=K;A<ee;A++){for(T=(O=k[v=B[A]])+P[D+v]-1,z=S=0,Q=C=O;Q<=T;Q++)0!==P[j+(w=B[Q])]&&(0<(re=P[j+w]-V)?(z+=re,S+=B[C++]=w):(k[w]=i(y),P[j+w]=0));P[D+v]=C-O+1;var ne=C,ie=O+P[0+v];for(Q=1+T;Q<ie;Q++){var d,ae=P[q+(d=B[Q])];ae<=0||(z+=ae,S+=B[C++]=d)}0===z?(k[v]=i(y),J-=M=-P[q+v],X+=M,Z+=M,P[q+v]=0,P[D+v]=-1):(P[$+v]=Math.min(P[$+v],z),B[C]=B[ne],B[ne]=B[O],B[O]=y,P[0+v]=C-O+1,P[L+v]=P[G+(S=(S<0?-S:S)%s)],H[P[G+S]=v]=S)}for(P[$+y]=J,u=Math.max(u,J),V=h(V+u,u,P,j,s),A=K;A<ee;A++)if(!(0<=P[q+(v=B[A])]))for(v=P[G+(S=H[v])],P[G+S]=-1;-1!=v&&-1!=P[L+v];v=P[L+v],V++){for(E=P[0+v],_=P[D+v],Q=k[v]+1;Q<=k[v]+E-1;Q++)P[j+B[Q]]=V;var oe=v;for(d=P[L+v];-1!=d;){var se=P[0+d]===E&&P[D+d]===_;for(Q=k[d]+1;se&&Q<=k[d]+E-1;Q++)P[j+B[Q]]!=V&&(se=0);se?(k[d]=i(v),P[q+v]+=P[q+d],P[q+d]=0,P[D+d]=-1,d=P[L+d],P[L+oe]=d):d=P[L+(oe=d)]}}for(A=Q=K;A<ee;A++)(M=-P[q+(v=B[A])])<=0||(P[q+v]=M,z=P[$+v]+J-M,-1!=P[F+(z=Math.min(z,s-Z-M))]&&(H[P[F+z]]=v),P[L+v]=P[F+z],H[v]=-1,P[F+z]=v,Y=Math.min(Y,z),P[$+v]=z,B[Q++]=v);P[q+y]=X,0==(P[0+y]=Q-K)&&(k[y]=-1,P[j+y]=0),0!==W&&(I=Q)}for(v=0;v<s;v++)k[v]=i(k[v]);for(d=0;d<=s;d++)P[F+d]=-1;for(d=s;0<=d;d--)0<P[q+d]||(P[L+d]=P[F+k[d]],P[F+k[d]]=d);for(w=s;0<=w;w--)P[q+w]<=0||-1!=k[w]&&(P[L+w]=P[F+k[w]],P[F+k[w]]=w);for(v=y=0;v<=s;v++)-1==k[v]&&(y=o(v,y,P,F,L,R,j));return R.splice(R.length-1,1),R}}},function(e,t){"use strict";t.name="cs_flip",t.path="sparse",t.factory=function(){return function(e){return-e-2}}},function(e,t){"use strict";t.name="cs_fkeep",t.path="sparse",t.factory=function(){return function(e,t,r){for(var n=e._values,i=e._index,a=e._ptr,s=e._size[1],u=0,c=0;c<s;c++){var f=a[c];for(a[c]=u;f<a[c+1];f++)t(i[f],c,n?n[f]:1,r)&&(i[u]=i[f],n&&(n[u]=n[f]),u++)}return a[s]=u,i.splice(u,i.length-u),n&&n.splice(u,n.length-u),u}}},function(e,t){"use strict";t.name="cs_tdfs",t.path="sparse",t.factory=function(){return function(e,t,r,n,i,a,o){var s=0;for(r[o]=e;0<=s;){var u=r[o+s],c=r[n+u];-1==c?(s--,a[t++]=u):(r[n+u]=r[i+c],r[o+ ++s]=c)}return t}}},function(e,t,r){"use strict";var i=r(3).clone,a=r(23).format;t.name="transpose",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=e.DenseMatrix,f=e.SparseMatrix,l=o("transpose",{Array:function(e){return l(u(e)).valueOf()},Matrix:function(e){var t,r=e.size();switch(r.length){case 1:t=e.clone();break;case 2:var n=r[0],i=r[1];if(0===i)throw new RangeError("Cannot transpose a 2D matrix with no columns (size: "+a(r)+")");switch(e.storage()){case"dense":t=p(e,n,i);break;case"sparse":t=m(e,n,i)}break;default:throw new RangeError("Matrix must be a vector or two dimensional (size: "+a(this._size)+")")}return t},any:function(e){return i(e)}}),p=function(e,t,r){for(var a=e._data,o=[],s=0;s<r;s++)for(var n=o[s]=[],u=0;u<t;u++)n[u]=i(a[u][s]);return new c({data:o,size:[r,t],datatype:e._datatype})},m=function(e,t,r){for(var m,h,g,n=e._values,a=e._index,o=e._ptr,s=n?[]:void 0,u=[],c=[],l=[],p=0;p<t;p++)l[p]=0;for(m=0,h=a.length;m<h;m++)l[a[m]]++;for(var v=0,d=0;d<t;d++)c.push(v),v+=l[d],l[d]=c[d];for(c.push(v),g=0;g<r;g++)for(var y=o[g],x=o[g+1],b=y;b<x;b++){var w=l[a[b]]++;u[w]=g,n&&(s[w]=i(n[b]))}return new f({values:s,index:u,ptr:c,size:[r,t],datatype:e._datatype})};return l.toTex="\\left(${args[0]}\\right)"+s.operators.transpose,l}},function(e,t){"use strict";t.name="cs_permute",t.path="sparse",t.factory=function(e){var t=e.SparseMatrix;return function(e,r,n,i){for(var a=e._values,o=e._index,s=e._ptr,u=e._size,c=e._datatype,f=u[0],l=u[1],p=i&&e._values?[]:null,m=[],h=[],g=0,v=0;v<l;v++){h[v]=g;for(var d=n?n[v]:v,y=s[d],x=s[d+1],b=y;b<x;b++){var w=r?r[o[b]]:o[b];m[g]=w,p&&(p[g]=a[b]),g++}}return h[l]=g,new t({values:p,index:m,ptr:h,size:[f,l],datatype:c})}}},function(e,t){"use strict";t.name="cs_etree",t.path="sparse",t.factory=function(){return function(e,t){if(!e)return null;var n,i=e._index,a=e._ptr,e=e._size,s=e[0],u=e[1],c=[],f=[],p=u;if(t)for(r=0;r<s;r++)f[p+r]=-1;for(var m=0;m<u;m++){f[0+m]=c[m]=-1;for(var h=a[m],g=a[m+1],v=h;v<g;v++){for(var d=i[v],r=t?f[p+d]:d;-1!=r&&r<m;r=n)n=f[0+r],f[0+r]=m,-1==n&&(c[r]=m);t&&(f[p+d]=m)}}return c}}},function(e,t,r){"use strict";t.name="cs_post",t.path="sparse",t.factory=function(e,t,n){var i=n(r(328));return function(e,t){if(!e)return null;for(var n=0,a=[],o=[],u=t,c=2*t,r=0;r<t;r++)o[0+r]=-1;for(r=t-1;0<=r;r--)-1!=e[r]&&(o[u+r]=o[0+e[r]],o[0+e[r]]=r);for(r=0;r<t;r++)-1==e[r]&&(n=i(r,n,o,0,u,a,c));return a}}},function(e,t,r){"use strict";t.name="cs_counts",t.path="sparse",t.factory=function(e,t,n){var i=n(r(329)),a=n(r(334));return function(e,t,r,n){if(!e||!t||!r)return null;for(var s,c,f,l,p,m=e._size,h=m[0],g=m[1],v=4*g+(n?g+h+1:0),d=[],x=g,b=2*g,w=3*g,N=4*g,E=5*g+1,u=0;u<v;u++)d[u]=-1;var M=[],m=i(e),_=m._index,O=m._ptr;for(u=0;u<g;u++)for(M[s=r[u]]=-1==d[w+s]?1:0;-1!=s&&-1==d[w+s];s=t[s])d[w+s]=u;if(n){for(u=0;u<g;u++)d[r[u]]=u;for(o=0;o<h;o++){for(u=g,l=O[o],p=O[o+1],f=l;f<p;f++)u=Math.min(u,d[_[f]]);d[E+o]=d[N+u],d[N+u]=o}}for(o=0;o<g;o++)d[0+o]=o;for(u=0;u<g;u++){for(-1!=t[s=r[u]]&&M[t[s]]--,c=n?d[N+u]:s;-1!=c;c=n?d[E+c]:-1)for(f=O[c];f<O[c+1];f++){var o=_[f],T=a(o,s,d,w,x,b,0);1<=T.jleaf&&M[s]++,2==T.jleaf&&M[T.q]--}-1!=t[s]&&(d[0+s]=t[s])}for(s=0;s<g;s++)-1!=t[s]&&(M[t[s]]+=M[s]);return M}}},function(e,t){"use strict";t.name="cs_leaf",t.path="sparse",t.factory=function(){return function(e,t,r,n,i,a,o){var s,u,f,l=0;if(e<=t||r[n+t]<=r[i+e])return-1;if(r[i+e]=r[n+t],i=r[a+e],r[a+e]=t,-1===i)l=1,f=e;else{for(l=2,f=i;f!=r[o+f];f=r[o+f]);for(s=i;s!=f;s=u)u=r[o+s],r[o+s]=f}return{jleaf:l,q:f}}}},function(e,t,r){"use strict";t.name="cs_lu",t.path="sparse",t.factory=function(e,t,n){var i=n(r(85)),a=n(r(78)),o=n(r(83)),s=n(r(62)),u=n(r(336)),c=n(r(337)),f=e.SparseMatrix;return function(e,t,r){if(!e)return null;var n,p=e._size[1],m=100,h=100;t&&(n=t.q,m=t.lnz||m,h=t.unz||h);for(var d=[],y=[],x=[],b=new f({values:d,index:y,ptr:x,size:[p,p]}),w=[],N=[],E=[],t=new f({values:w,index:N,ptr:E,size:[p,p]}),A=[],_=[],O=[],g=0;g<p;g++)_[g]=0,A[g]=-1,x[g+1]=0;for(var m=0,h=0,T=0;T<p;T++){x[T]=m,E[T]=h;for(var k,C=n?n[T]:T,S=c(b,e,C,O,_,A,1),z=-1,B=-1,v=S;v<p;v++)A[g=O[v]]<0?(k=i(_[g]),s(k,B)&&(B=k,z=g)):(N[h]=A[g],w[h++]=_[g]);if(-1==z||B<=0)return null;var I=_[z=A[C]<0&&u(i(_[C]),o(B,r))?C:z];for(N[h]=T,w[h++]=I,A[z]=T,y[m]=z,d[m++]=1,v=S;v<p;v++)A[g=O[v]]<0&&(y[m]=g,d[m++]=a(_[g],I)),_[g]=0}for(x[p]=m,E[p]=h,v=0;v<m;v++)y[v]=A[y[v]];return d.splice(m,d.length-m),y.splice(m,y.length-m),w.splice(h,w.length-h),N.splice(h,N.length-h),{L:b,U:t,pinv:A}}}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="largerEq",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("largerEq",{"boolean, boolean":function(e,t){return t<=e},"number, number":function(e,r){return r<=e||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gte(t)},"Fraction, Fraction":function(e,t){return-1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return t<=e},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.largerEq+"${args[1]}\\right)",m}},function(e,t,r){"use strict";t.name="cs_spsolve",t.path="sparse",t.factory=function(e,t,n){var i=n(r(78)),a=n(r(83)),o=n(r(74)),s=n(r(338));return function(e,t,r,n,u,c,f){for(var p,m,h,g=e._values,v=e._index,d=e._ptr,x=e._size[1],b=t._values,w=t._index,N=t._ptr,e=s(e,t,r,n,c),l=e;l<x;l++)u[n[l]]=0;for(p=N[r],m=N[r+1],l=p;l<m;l++)u[w[l]]=b[l];for(var M=e;M<x;M++){var A=n[M],_=c?c[A]:A;if(!(_<0))for(p=d[_],m=d[_+1],u[A]=i(u[A],g[f?p:m-1]),l=f?p+1:p,h=f?m:m-1;l<h;l++){var O=v[l];u[O]=o(u[O],a(g[l],u[A]))}}return e}}},function(e,t,r){"use strict";t.name="cs_reach",t.path="sparse",t.factory=function(e,t,n){var i=n(r(339)),a=n(r(340)),o=n(r(341));return function(e,t,r,n,s){for(var l=e._ptr,p=e._size,m=t._index,t=t._ptr,g=p[1],v=g,p=t[r],f=t[r+1],u=p;u<f;u++){var d=m[u];a(l,d)||(v=i(d,e,v,n,s))}for(u=v;u<g;u++)o(l,n[u]);return v}}},function(e,t,r){"use strict";t.name="cs_dfs",t.path="sparse",t.factory=function(e,t,n){var i=n(r(340)),a=n(r(341)),o=n(r(342));return function(e,t,r,n,s){var u,l=t._index,p=t._ptr,h=t._size[1],g=0;for(n[0]=e;0<=g;){e=n[g];for(var v=s?s[e]:e,d=(i(p,e)||(a(p,e),n[h+g]=v<0?0:o(p[v])),1),c=n[h+g],f=v<0?0:o(p[v+1]);c<f;c++)if(u=l[c],!i(p,u)){n[h+g]=c,n[++g]=u,d=0;break}d&&(g--,n[--r]=e)}return r}}},function(e,t){"use strict";t.name="cs_marked",t.path="sparse",t.factory=function(){return function(e,t){return e[t]<0}}},function(e,t,r){"use strict";t.name="cs_mark",t.path="sparse",t.factory=function(e,t,n){var i=n(r(326));return function(e,t){e[t]=i(e[t])}}},function(e,t,r){"use strict";t.name="cs_unflip",t.path="sparse",t.factory=function(e,t,n){var i=n(r(326));return function(e){return e<0?i(e):e}}},function(e,t,r){"use strict";t.name="lsolve",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=n(r(77)),u=n(r(74)),c=n(r(47)),f=n(r(344)),l=e.DenseMatrix,n=i("lsolve",{"SparseMatrix, Array | Matrix":function(e,t){return h(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return m(e,t)},"Array, Array | Matrix":function(e,t){e=a(e);return m(e,t).valueOf()}}),m=function(e,t){for(var r=(t=f(e,t,!0))._data,n=e._size[0],i=e._size[1],a=[],p=e._data,m=0;m<i;m++){var g=r[m][0]||0;if(c(g,0))h=0;else{var v=p[m][m];if(c(v,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var h=o(g,v),d=m+1;d<n;d++)r[d]=[u(r[d][0]||0,s(h,p[d][m]))]}a[m]=[h]}return new l({data:a,size:[n,1]})},h=function(e,t){for(var r,i=(t=f(e,t,!0))._data,t=e._size[0],p=e._size[1],m=e._values,h=e._index,g=e._ptr,v=[],d=0;d<p;d++){var y=i[d][0]||0;if(c(y,0))v[d]=[0];else{for(var x=0,b=[],w=[],N=g[d+1],n=g[d];n<N;n++)(r=h[n])===d?x=m[n]:d<r&&(b.push(m[n]),w.push(r));if(c(x,0))throw new Error("Linear system cannot be solved since matrix is singular");var E=o(y,x);for(n=0,N=w.length;n<N;n++)i[r=w[n]]=[u(i[r][0]||0,s(E,b[n]))];v[d]=[E]}}return new l({data:v,size:[t,1]})};return n}},function(e,t,r){"use strict";var r=r(38),a=r.string,o=r.array,s=Array.isArray;t.factory=function(e){var t=e.DenseMatrix;return function(e,r,n){e=e.size();if(2!==e.length)throw new RangeError("Matrix must be two dimensional (size: "+a.format(e)+")");var f,l,p,u=e[0];if(u!==e[1])throw new RangeError("Matrix must be square (size: "+a.format(e)+")");if(r&&!0===r.isMatrix){e=r.size();if(1===e.length){if(e[0]!==u)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],p=r._data,l=0;l<u;l++)f[l]=[p[l]]}else{if(2!==e.length)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(e[0]!==u||1!==e[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(!0===r.isDenseMatrix){if(n){for(f=[],p=r._data,l=0;l<u;l++)f[l]=[p[l][0]];return new t({data:f,size:[u,1],datatype:r._datatype})}return r}for(f=[],l=0;l<u;l++)f[l]=[0];for(var h=r._values,g=r._index,e=r._ptr,d=e[1],y=e[0];y<d;y++)f[l=g[y]][0]=h[y]}return new t({data:f,size:[u,1],datatype:r._datatype})}if(s(r)){n=o.size(r);if(1===n.length){if(n[0]!==u)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],l=0;l<u;l++)f[l]=[r[l]]}else{if(2!==n.length)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(n[0]!==u||1!==n[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(f=[],l=0;l<u;l++)f[l]=[r[l][0]]}return new t({data:f,size:[u,1]})}}}},function(e,t,r){"use strict";var i=Array.isArray;t.name="lusolve",t.factory=function(e,t,n,a){function h(e){if(e&&!0===e.isMatrix)return e;if(i(e))return o(e);throw new TypeError("Invalid Matrix LU decomposition")}var o=n(r(50)),s=n(r(322)),u=n(r(323)),c=n(r(346)),f=n(r(344)),l=n(r(347)),p=n(r(343)),n=a("lusolve",{"Array, Array | Matrix":function(e,t){e=o(e);e=s(e);return g(e.L,e.U,e.p,null,t).valueOf()},"DenseMatrix, Array | Matrix":function(e,t){e=s(e);return g(e.L,e.U,e.p,null,t)},"SparseMatrix, Array | Matrix":function(e,t){e=s(e);return g(e.L,e.U,e.p,null,t)},"SparseMatrix, Array | Matrix, number, number":function(e,t,r,n){e=u(e,r,n);return g(e.L,e.U,e.p,e.q,t)},"Object, Array | Matrix":function(e,t){return g(e.L,e.U,e.p,e.q,t)}}),g=function(e,t,r,n,i){e=h(e),t=h(t),i=f(e,i,!1),r&&(i._data=c(r,i._data));r=p(e,i),e=l(t,r);return n&&(e._data=c(n,e._data)),e};return n}},function(e,t){"use strict";t.name="cs_ipvec",t.path="sparse",t.factory=function(){return function(e,t,r){var n,r=t.length,i=[];if(e)for(n=0;n<r;n++)i[e[n]]=t[n];else for(n=0;n<r;n++)i[n]=t[n];return i}}},function(e,t,r){"use strict";t.name="usolve",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=n(r(77)),u=n(r(74)),c=n(r(47)),f=n(r(344)),l=e.DenseMatrix,n=i("usolve",{"SparseMatrix, Array | Matrix":function(e,t){return h(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return m(e,t)},"Array, Array | Matrix":function(e,t){e=a(e);return m(e,t).valueOf()}}),m=function(e,t){for(var r=(t=f(e,t,!0))._data,t=e._size[0],i=e._size[1],a=[],p=e._data,m=i-1;0<=m;m--){var g=r[m][0]||0;if(c(g,0))h=0;else{var v=p[m][m];if(c(v,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var h=o(g,v),d=m-1;0<=d;d--)r[d]=[u(r[d][0]||0,s(h,p[d][m]))]}a[m]=[h]}return new l({data:a,size:[t,1]})},h=function(e,t){for(var r,i=(t=f(e,t,!0))._data,t=e._size[0],p=e._size[1],m=e._values,h=e._index,g=e._ptr,v=[],d=p-1;0<=d;d--){var y=i[d][0]||0;if(c(y,0))v[d]=[0];else{for(var E,x=0,b=[],w=[],N=g[d],n=g[d+1]-1;N<=n;n--)(r=h[n])===d?x=m[n]:r<d&&(b.push(m[n]),w.push(r));if(c(x,0))throw new Error("Linear system cannot be solved since matrix is singular");var M=o(y,x);for(n=0,E=w.length;n<E;n++)i[r=w[n]]=[u(i[r][0],s(M,b[n]))];v[d]=[M]}}return new l({data:v,size:[t,1]})};return n}},function(e,t,r){e.exports=[r(85),r(49),r(51),r(349),r(351),r(352),r(310),r(353),r(355),r(357),r(80),r(358),r(359),r(360),r(361),r(364),r(82),r(367),r(368),r(83),r(369),r(371),r(79),r(372),r(374),r(362),r(375),r(74),r(75),r(376),r(377)]},function(e,t,r){"use strict";var i=r(19);t.name="cbrt",t.factory=function(e,t,n,a){function o(e){var t,r;return 0===e?e:((r=e<0)&&(e=-e),t=isFinite(e)?(e/((t=Math.exp(Math.log(e)/3))*t)+2*t)/3:e,r?-t:t)}function s(r,n){var r=r.toPolar(),a=m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3)));return n?(n=[a,m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3+2*Math.PI/3))),m(new e.Complex(o(r.r),0),h(new e.Complex(0,r.phi/3-2*Math.PI/3)))],"array"===t.matrix?n:p(n)):a}var f=n(r(75)),l=n(r(350)),p=n(r(50)),m=a.find(n(r(77)),["Complex,Complex"]),h=a.find(n(r(80)),["Complex"]),g=a("cbrt",{number:o,Complex:s,"Complex, boolean":s,BigNumber:function(e){var r,t;return e.isZero()?e:(t=(e=(r=e.isNegative())?e.neg():e).isFinite()?(t=e.ln().div(3).exp(),e.div(t.times(t)).plus(t.times(2)).div(3)):1/0,r?t.neg():t)},Unit:function(t){var n,i,r;return t.value&&t.value.isComplex?((r=t.clone()).value=1,(r=r.pow(1/3)).value=s(t.value)):(r=((n=l(t.value))&&(t.value=f(t.value)),i=t.value&&t.value.isBigNumber?new e.BigNumber(1).div(3):t.value&&t.value.isFraction?new e.Fraction(1,3):1/3,t.pow(i)),n&&(r.value=f(r.value))),r},"Array | Matrix":function(e){return i(e,g,!0)}});return g.toTex="\\sqrt[3]{${args[0]}}",g}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isNegative",t.factory=function(e,t,r,n){var a=n("isNegative",{number:function(e){return e<0},BigNumber:function(e){return e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return e.s<0&&0<e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";var i=r(19);t.name="ceil",t.factory=function(e,t,r,n){var a=n("ceil",{number:Math.ceil,Complex:function(t){return new e.Complex(Math.ceil(t.re),Math.ceil(t.im))},BigNumber:function(e){return e.ceil()},Fraction:function(e){return e.ceil()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\left\\lceil${args[0]}\\right\\rceil",a}},function(e,t,r){"use strict";var i=r(19);t.name="cube",t.factory=function(e,t,n,a){var o=a.find(n(r(77)),["Complex,Complex"]),s=a("cube",{number:function(e){return e*e*e},Complex:function(e){return o(o(e,e),e)},BigNumber:function(e){return e.times(e).times(e)},Fraction:function(e){return e.mul(e).mul(e)},"Array | Matrix":function(e){return i(e,s,!0)},Unit:function(e){return e.pow(3)}});return s.toTex="\\left(${args[0]}\\right)^3",s}},function(e,t,r){"use strict";t.name="dotDivide",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(78)),s=r(29),u=n(r(354)),c=n(r(59)),f=n(r(60)),l=n(r(84)),p=n(r(61)),m=n(r(55)),h=n(r(56)),g=i("dotDivide",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?c(e,t,o,!1):m(e,t,o);return e},"Array, Array":function(e,t){return g(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return g(a(e),t)},"Matrix, Array":function(e,t){return g(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:h)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?p:h)(t,e,o,!0);return t},"Array, any":function(e,t){return h(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return h(a(t),e,o,!0).valueOf()}});return g.toTex="\\left(${args[0]}"+s.operators.dotDivide+"${args[1]}\\right)",g}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm02",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r,n){var u=e._data,c=e._size,e=e._datatype,l=t._values,p=t._index,m=t._ptr,h=t._size,t=t._datatype;if(c.length!==h.length)throw new i(c.length,h.length);if(c[0]!==h[0]||c[1]!==h[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+h+")");if(!l)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var v,h=c[0],y=c[1],x=o,b=0,w=r;"string"==typeof e&&e===t&&(x=a.find(o,[v=e,v]),b=a.convert(0,v),w=a.find(r,[v,v]));for(var N=[],E=[],M=[],A=0;A<y;A++){M[A]=E.length;for(var _=m[A],O=m[A+1],T=_;T<O;T++){var C=p[T],S=n?w(l[T],u[C][A]):w(u[C][A],l[T]);x(S,b)||(E.push(C),N.push(S))}}return M[y]=E.length,new s({values:N,index:E,ptr:M,size:[h,y],datatype:v})}}},function(e,t,r){"use strict";t.name="dotMultiply",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(77)),s=r(29),u=n(r(354)),c=n(r(356)),f=n(r(84)),l=n(r(55)),p=n(r(56)),m=i("dotMultiply",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?u(e,t,o,!1):l(e,t,o);return e},"Array, Array":function(e,t){return m(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return m(a(e),t)},"Matrix, Array":function(e,t){return m(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,o,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,o,!0);return t},"Array, any":function(e,t){return p(a(e),t,o,!1).valueOf()},"any, Array":function(e,t){return p(a(t),e,o,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+s.operators.dotMultiply+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm09",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var E,A,_,O,T=n&&p?[]:void 0,C=[],S=[],f=new s({values:T,index:C,ptr:S,size:[g,x],datatype:d}),B=T?[]:void 0,k=[],M=0;M<x;M++){S[M]=C.length;var R,I=M+1;if(B)for(_=h[M],O=h[M+1],A=_;A<O;A++)k[E=m[A]]=I,B[E]=p[A];for(_=c[M],O=c[M+1],A=_;A<O;A++)E=u[A],B?(R=k[E]===I?B[E]:w,b(R=N(n[A],R),w)||(C.push(E),T.push(R))):C.push(E)}return S[x]=C.length,f}}},function(e,t,r){"use strict";t.name="dotPow",t.factory=function(e,t,n,i){var a=n(r(50)),o=n(r(79)),s=r(29),u=n(r(59)),c=n(r(60)),f=n(r(84)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=i("dotPow",{"any, any":o,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,o,!1):u(t,e,o,!0):"sparse"===t.storage()?u(e,t,o,!1):p(e,t,o);return e},"Array, Array":function(e,t){return h(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return h(a(e),t)},"Matrix, Array":function(e,t){return h(e,a(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?f:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(a(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(a(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.dotPow+"${args[1]}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="fix",t.factory=function(e,t,r,n){var a=n("fix",{number:function(e){return 0<e?Math.floor(e):Math.ceil(e)},Complex:function(t){return new e.Complex(0<t.re?Math.floor(t.re):Math.ceil(t.re),0<t.im?Math.floor(t.im):Math.ceil(t.im))},BigNumber:function(e){return e.isNegative()?e.ceil():e.floor()},Fraction:function(e){return e.s<0?e.ceil():e.floor()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\mathrm{${name}}\\left(${args}\\right)",a}},function(e,t,r){"use strict";var i=r(19);t.name="floor",t.factory=function(e,t,r,n){var a=n("floor",{number:Math.floor,Complex:function(t){return new e.Complex(Math.floor(t.re),Math.floor(t.im))},BigNumber:function(e){return e.floor()},Fraction:function(e){return e.floor()},"Array | Matrix":function(e){return i(e,a,!0)}});return a.toTex="\\left\\lfloor${args[0]}\\right\\rfloor",a}},function(e,t,r){"use strict";function i(e,t){if(!a(e)||!a(t))throw new Error("Parameters in function gcd must be integer numbers");for(var r;0!=t;)r=e%t,e=t,t=r;return e<0?-e:e}var a=r(6).isInteger;t.name="gcd",t.factory=function(e,t,n,a){var s=n(r(50)),u=n(r(52)),c=n(r(53)),f=n(r(54)),l=n(r(55)),p=n(r(56)),m=a("gcd",{"number, number":i,"BigNumber, BigNumber":function(t,r){if(!t.isInt()||!r.isInt())throw new Error("Parameters in function gcd must be integer numbers");for(var n=new e.BigNumber(0);!r.isZero();){var i=t.mod(r);t=r,r=i}return t.lt(n)?t.neg():t},"Fraction, Fraction":function(e,t){return e.gcd(t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,m):u(t,e,m,!0):"sparse"===t.storage()?u(e,t,m,!1):l(e,t,m);return e},"Array, Array":function(e,t){return m(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return m(s(e),t)},"Matrix, Array":function(e,t){return m(e,s(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,m,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,m,!0);return t},"Array, number | BigNumber":function(e,t){return p(s(e),t,m,!1).valueOf()},"number | BigNumber, Array":function(e,t){return p(s(t),e,m,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,r){for(var n=m(e,t),i=0;i<r.length;i++)n=m(n,r[i]);return n}});return m.toTex="\\gcd\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(39).flatten;t.name="hypot",t.factory=function(e,t,n,a){var s=n(r(85)),u=n(r(51)),c=n(r(78)),f=n(r(77)),l=n(r(362)),p=n(r(58)),m=n(r(363)),h=a("hypot",{"... number | BigNumber":function(e){for(var t=0,r=0,n=0;n<e.length;n++){var i=s(e[n]);p(r,i)?(t=f(t,f(c(r,i),c(r,i))),t=u(t,1),r=i):t=u(t,m(i)?f(c(i,r),c(i,r)):i)}return f(r,l(t))},Array:function(e){return h.apply(h,i(e))},Matrix:function(e){return h.apply(h,i(e.toArray()))}});return h.toTex="\\hypot\\left(${args}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="sqrt",t.factory=function(e,t,r,n){function a(r){return 0<=r||t.predictable?Math.sqrt(r):o(new e.Complex(r,0))}function o(t){var i=Math.sqrt(t.re*t.re+t.im*t.im),r=0<=t.re?.5*Math.sqrt(2*(i+t.re)):Math.abs(t.im)/Math.sqrt(2*(i-t.re)),i=t.re<=0?.5*Math.sqrt(2*(i-t.re)):Math.abs(t.im)/Math.sqrt(2*(i+t.re));return 0<=t.im?new e.Complex(r,i):new e.Complex(r,-i)}var s=n("sqrt",{number:a,Complex:o,BigNumber:function(e){return!e.isNegative()||t.predictable?e.sqrt():a(e.toNumber())},"Array | Matrix":function(e){return i(e,s,!0)},Unit:function(e){return e.pow(.5)}});return s.toTex="\\sqrt{${args[0]}}",s}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isPositive",t.factory=function(e,t,r,n){var a=n("isPositive",{number:function(e){return 0<e},BigNumber:function(e){return!e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return 0<e.s&&0<e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";function i(e,t){if(!a(e)||!a(t))throw new Error("Parameters in function lcm must be integer numbers");if(0==e||0==t)return 0;for(var r,n=e*t;0!=t;)t=e%(r=t),e=r;return Math.abs(n/e)}var a=r(6).isInteger;t.name="lcm",t.factory=function(e,t,n,a){var s=n(r(50)),u=n(r(354)),c=n(r(365)),f=n(r(84)),l=n(r(55)),p=n(r(56)),m=a("lcm",{"number, number":i,"BigNumber, BigNumber":function(t,r){if(!t.isInt()||!r.isInt())throw new Error("Parameters in function lcm must be integer numbers");if(t.isZero()||r.isZero())return new e.BigNumber(0);for(var n=t.times(r);!r.isZero();){var i=r;r=t.mod(i),t=i}return n.div(t).abs()},"Fraction, Fraction":function(t,r){return 0===t.n&&0===r.n?new e.Fraction(0):t.mul(r).abs().div(t.gcd(r))},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,m):u(t,e,m,!0):"sparse"===t.storage()?u(e,t,m,!1):l(e,t,m);return e},"Array, Array":function(e,t){return m(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return m(s(e),t)},"Matrix, Array":function(e,t){return m(e,s(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:p)(e,t,m,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?f:p)(t,e,m,!0);return t},"Array, number | BigNumber":function(e,t){return p(s(e),t,m,!1).valueOf()},"number | BigNumber, Array":function(e,t){return p(s(t),e,m,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,r){for(var n=m(e,t),i=0;i<r.length;i++)n=m(n,r[i]);return n}});return m.toTex="\\mathrm{${name}}\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(366),a=r(41);t.name="algorithm06",t.factory=function(e,t,n,o){var s=n(r(47)),u=e.SparseMatrix;return function(e,t,r){var n=e._values,c=e._size,f=e._datatype,l=t._values,p=t._size,m=t._datatype;if(c.length!==p.length)throw new a(c.length,p.length);if(c[0]!==p[0]||c[1]!==p[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+p+")");var h,p=c[0],v=c[1],d=s,y=0,x=r;"string"==typeof f&&f===m&&(d=o.find(s,[h=f,h]),y=o.convert(0,h),x=o.find(r,[h,h]));for(var b=n&&l?[]:void 0,w=[],N=[],E=new u({values:b,index:w,ptr:N,size:[p,v],datatype:h}),M=b?[]:void 0,A=[],_=[],O=0;O<v;O++){N[O]=w.length;var T=O+1;if(i(e,O,A,M,_,T,E,x),i(t,O,A,M,_,T,E,x),M)for(var C=N[O];C<w.length;){var S=w[C];_[S]!==T||d(S=M[S],y)?w.splice(C,1):(b.push(S),C++)}else for(var B=N[O];B<w.length;)_[w[B]]!==T?w.splice(B,1):B++}return N[v]=w.length,E}}},function(e,t){"use strict";e.exports=function(e,t,r,n,i,a,o,s,u,c,f){var l,p,m,h,g=e._values,v=e._index,e=e._ptr,y=o._index;if(n)for(p=e[t],m=e[t+1],l=p;l<m;l++)r[h=v[l]]!==a?(r[h]=a,y.push(h),c?(n[h]=u?s(g[l],f):s(f,g[l]),i[h]=a):n[h]=g[l]):(n[h]=u?s(g[l],n[h]):s(n[h],g[l]),i[h]=a);else for(p=e[t],m=e[t+1],l=p;l<m;l++)r[h=v[l]]!==a?(r[h]=a,y.push(h)):i[h]=a}},function(e,t,r){"use strict";var i=r(19);t.name="log10",t.factory=function(e,t,r,n){function a(t){return new e.Complex(Math.log(Math.sqrt(t.re*t.re+t.im*t.im))/Math.LN10,Math.atan2(t.im,t.re)/Math.LN10)}var o=n("log10",{number:function(r){return 0<=r||t.predictable?Math.log(r)/Math.LN10:o(new e.Complex(r,0))},Complex:a,BigNumber:function(r){return!r.isNegative()||t.predictable?r.log():a(new e.Complex(r.toNumber(),0))},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\log_{10}\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";t.name="mod",t.factory=function(e,t,n,i){var o=n(r(50)),s=r(29),u=n(r(354)),c=n(r(59)),f=n(r(76)),l=n(r(84)),p=n(r(61)),m=n(r(55)),h=n(r(56)),g=i("mod",{"number, number":function(e,t){if(0<t)return e-t*Math.floor(e/t);if(0===t)return e;throw new Error("Cannot calculate mod for a negative divisor")},"BigNumber, BigNumber":function(e,t){return t.isZero()?e:e.mod(t)},"Fraction, Fraction":function(e,t){return e.mod(t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,g,!1):u(t,e,g,!0):"sparse"===t.storage()?c(e,t,g,!1):m(e,t,g);return e},"Array, Array":function(e,t){return g(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return g(o(e),t)},"Matrix, Array":function(e,t){return g(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:h)(e,t,g,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?p:h)(t,e,g,!0);return t},"Array, any":function(e,t){return h(o(e),t,g,!1).valueOf()},"any, Array":function(e,t){return h(o(t),e,g,!0).valueOf()}});return g.toTex="\\left(${args[0]}"+s.operators.mod+"${args[1]}\\right)",g}},function(e,t,r){"use strict";t.name="norm",t.factory=function(e,t,n,i){function a(e,t){var n,i,h,d,y,x,b,r=e.size();if(1==r.length){if(t===Number.POSITIVE_INFINITY||"inf"===t)return n=0,e.forEach(function(e){e=o(e);p(e,n)&&(n=e)},!0),n;if(t===Number.NEGATIVE_INFINITY||"-inf"===t)return e.forEach(function(e){e=o(e);i&&!m(e,i)||(i=e)},!0),i||0;if("fro"===t)return a(e,2);if("number"!=typeof t||isNaN(t))throw new Error("Unsupported parameter value");return l(t,0)?Number.POSITIVE_INFINITY:(h=0,e.forEach(function(e){h=s(u(o(e),t),h)},!0),u(h,1/t))}if(2==r.length){if(1===t)return d=[],y=0,e.forEach(function(e,t){t=t[1],e=s(d[t]||0,o(e));p(e,y)&&(y=e),d[t]=e},!0),y;if(t===Number.POSITIVE_INFINITY||"inf"===t)return x=[],b=0,e.forEach(function(e,t){t=t[0],e=s(x[t]||0,o(e));p(e,b)&&(b=e),x[t]=e},!0),b;if("fro"===t)return c(g(f(v(e),e)));if(2===t)throw new Error("Unsupported parameter value, missing implementation of matrix singular value decomposition");throw new Error("Unsupported parameter value")}}var o=n(r(85)),s=n(r(49)),u=n(r(79)),c=n(r(362)),f=n(r(83)),l=n(r(47)),p=n(r(62)),m=n(r(58)),h=n(r(50)),g=n(r(370)),v=n(r(329)),n=i.find(o,["Complex"]),y=i("norm",{number:Math.abs,Complex:n,BigNumber:function(e){return e.abs()},"boolean | null":function(e){return Math.abs(e)},Array:function(e){return a(h(e),2)},Matrix:function(e){return a(e,2)},"number | Complex | BigNumber | boolean | null, number | BigNumber | string":function(e){return y(e)},"Array, number | BigNumber | string":function(e,t){return a(h(e),t)},"Matrix, number | BigNumber | string":a});return y.toTex={1:"\\left\\|${args[0]}\\right\\|",2:"\\mathrm{${name}}\\left(${args}\\right)"},y}},function(e,t,r){"use strict";var i=r(3).clone,a=r(23).format;t.name="trace",t.factory=function(e,t,n,o){var s=n(r(50)),u=n(r(49)),c=o("trace",{Array:function(e){return c(s(e))},Matrix:function(e){var t;switch(e.storage()){case"dense":t=f(e);break;case"sparse":t=l(e)}return t},any:i}),f=function(e){var t=e._size,r=e._data;switch(t.length){case 1:if(1==t[0])return i(r[0]);throw new RangeError("Matrix must be square (size: "+a(t)+")");case 2:var n=t[0];if(n!==t[1])throw new RangeError("Matrix must be square (size: "+a(t)+")");for(var s=0,c=0;c<n;c++)s=u(s,r[c][c]);return s;default:throw new RangeError("Matrix must be two dimensional (size: "+a(t)+")")}},l=function(e){var t=e._values,r=e._index,n=e._ptr,e=e._size,o=e[0],s=e[1];if(o!==s)throw new RangeError("Matrix must be square (size: "+a(e)+")");var c=0;if(0<t.length)for(var f=0;f<s;f++)for(var l=n[f],p=n[f+1],m=l;m<p;m++){var h=r[m];if(h===f){c=u(c,t[m]);break}if(f<h)break}return c};return c.toTex="\\mathrm{tr}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";function i(e,t){var r=t<0;if(0===(t=r?-t:t))throw new Error("Root must be non-zero");if(e<0&&Math.abs(t)%2!=1)throw new Error("Root must be odd when a is negative.");return 0==e?0:isFinite(e)?(t=Math.pow(Math.abs(e),1/t),t=e<0?-t:t,r?1/t:t):r?0:e}function a(e,t){if(t<0)throw new Error("Root must be greater than zero");if(0===t)throw new Error("Root must be non-zero");if(t%1!=0)throw new Error("Root must be an integer");for(var r=e.toPolar(),n=[],i=Math.pow(r.r,1/t),a=0;a<t;a++)n.push({r:i,phi:(r.phi+2*Math.PI*a)/t});return n}t.name="nthRoot",t.factory=function(e,t,n,o){function s(t,r){var n=e.BigNumber.precision,i=e.BigNumber.constructor({precision:n+2}),a=new e.BigNumber(0),i=new i(1),s=r.isNegative();if((r=s?r.neg():r).isZero())throw new Error("Root must be non-zero");if(t.isNegative()&&!r.abs().mod(2).equals(1))throw new Error("Root must be odd when a is negative.");return t.isZero()?a:t.isFinite()?(r=t.abs().pow(i.div(r)),r=t.isNeg()?r.neg():r,new e.BigNumber((s?i.div(r):r).toPrecision(n))):s?a:t}var u=n(r(50)),c=n(r(52)),f=n(r(354)),l=n(r(365)),p=n(r(84)),m=n(r(55)),h=n(r(56)),g=o("nthRoot",{number:function(e){return i(e,2)},"number, number":i,BigNumber:function(t){return s(t,new e.BigNumber(2))},Complex:function(e){return a(e,2)},"Complex, number":a,"BigNumber, BigNumber":s,"Array | Matrix":function(e){return g(e,2)},"Matrix, Matrix":function(e,t){var r;if("sparse"===e.storage())if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=l(e,t,g)}else r=f(t,e,g,!0);else if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=c(e,t,g,!1)}else r=m(e,t,g);return r},"Array, Array":function(e,t){return g(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return g(u(e),t)},"Matrix, Array":function(e,t){return g(e,u(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?p:h)(e,t,g,!1);return e},"number | BigNumber, Matrix":function(e,t){var r;if("sparse"===t.storage()){if(1!==t.density())throw new Error("Root must be non-zero");r=p(t,e,g,!0)}else r=h(t,e,g,!0);return r},"Array, number | BigNumber":function(e,t){return g(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return g(e,u(t)).valueOf()}});return g.toTex="\\sqrt[${args[1]}]{${args[0]}}",g}},function(e,t,r){"use strict";function i(e,t){return parseFloat(o(e,t))}var a=r(6).isInteger,o=r(6).toFixed,s=r(19),u="Number of decimals in function round must be an integer";t.name="round",t.factory=function(e,t,n,o){var c=n(r(50)),f=n(r(47)),l=n(r(373)),p=n(r(84)),m=n(r(61)),h=n(r(56)),g=o("round",{number:Math.round,"number, number":function(e,t){if(!a(t))throw new TypeError(u);if(t<0||15<t)throw new Error("Number of decimals in function round must be in te range of 0-15");return i(e,t)},Complex:function(t){return new e.Complex(Math.round(t.re),Math.round(t.im))},"Complex, number":function(t,r){return new e.Complex(i(t.re,r),i(t.im,r))},"Complex, BigNumber":function(t,r){if(r.isInteger())return r=r.toNumber(),new e.Complex(i(t.re,r),i(t.im,r));throw new TypeError(u)},"number, BigNumber":function(t,r){if(r.isInteger())return new e.BigNumber(t).toDecimalPlaces(r.toNumber());throw new TypeError(u)},BigNumber:function(e){return e.toDecimalPlaces(0)},"BigNumber, BigNumber":function(e,t){if(t.isInteger())return e.toDecimalPlaces(t.toNumber());throw new TypeError(u)},Fraction:function(e){return e.round()},"Array | Matrix":function(e){return s(e,g,!0)},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?p:h)(e,t,g,!1);return e},"number | Complex | BigNumber, Matrix":function(e,t){return f(e,0)?l(t.size(),t.storage()):("sparse"===t.storage()?m:h)(t,e,g,!0)},"Array, number | BigNumber":function(e,t){return h(c(e),t,g,!1).valueOf()},"number | Complex | BigNumber, Array":function(e,t){return h(c(t),e,g,!0).valueOf()}});return g.toTex={1:"\\left\\lfloor${args[0]}\\right\\rceil",2:"\\mathrm{${name}}\\left(${args}\\right)"},g}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).resize;t.name="zeros",t.factory=function(e,t,n,o){function s(t,r){var i=function(e){var t=!1;return e.forEach(function(e,r,n){e&&!0===e.isBigNumber&&(t=!0,n[r]=e.toNumber())}),t}(t)?new e.BigNumber(0):0;return c(t),r?(r=f(r),0<t.length?r.resize(t,i):r):(r=[],0<t.length?a(r,t,i):r)}function c(e){e.forEach(function(e){if("number"!=typeof e||!i(e)||e<0)throw new Error("Parameters in function zeros must be positive integers")})}var f=n(r(50));return(n=o("zeros",{"":function(){return"array"===t.matrix?s([]):s([],"default")},"...number | BigNumber | string":function(e){var n;return"string"==typeof e[e.length-1]?(n=e.pop(),s(e,n)):"array"===t.matrix?s(e):s(e,"default")},Array:s,Matrix:function(e){var t=e.storage();return s(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6),a=r(19);t.name="sign",t.factory=function(e,t,r,n){var o=n("sign",{number:i.sign,Complex:function(t){var r=Math.sqrt(t.re*t.re+t.im*t.im);return new e.Complex(t.re/r,t.im/r)},BigNumber:function(t){return new e.BigNumber(t.cmp(0))},Fraction:function(t){return new e.Fraction(t.s)},"Array | Matrix":function(e){return a(e,o,!0)},Unit:function(e){return o(e.value)}});return o.toTex="\\mathrm{${name}}\\left(${args}\\right)",o}},function(e,t,r){"use strict";var i=r(19);t.name="square",t.factory=function(e,t,r,n){var a=n("square",{number:function(e){return e*e},Complex:function(t){return new e.Complex(t.re*t.re-t.im*t.im,t.re*t.im+t.im*t.re)},BigNumber:function(e){return e.times(e)},Fraction:function(e){return e.mul(e)},"Array | Matrix":function(e){return i(e,a,!0)},Unit:function(e){return e.pow(2)}});return a.toTex="\\left(${args[0]}\\right)^2",a}},function(e,t,r){"use strict";var i=r(19);t.name="unaryPlus",t.factory=function(e,t,n,a){var o=r(29),s=a("unaryPlus",{number:function(e){return e},Complex:function(e){return e.clone()},BigNumber:function(e){return e},Fraction:function(e){return e},Unit:function(e){return e.clone()},"Array | Matrix":function(e){return i(e,s,!0)},"boolean | string | null":function(r){return"bignumber"==t.number?new e.BigNumber(+r):+r}});return s.toTex=o.operators.unaryPlus+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="xgcd",t.factory=function(e,t,n,a){var u=n(r(50));return(n=a("xgcd",{"number, number":function(e,r){var n,a,o,p,s=0,c=1,f=1,l=0;if(!i(e)||!i(r))throw new Error("Parameters in function xgcd must be integer numbers");for(;r;)o=e%r,s=c-(a=Math.floor(e/r))*(n=s),c=n,f=l-a*(n=f),l=n,e=r,r=o;return p=e<0?[-e,-c,-l]:[e,e?c:0,l],"array"===t.matrix?p:u(p)},"BigNumber, BigNumber":function(r,n){var i,a,o,s=new e.BigNumber(0),c=new e.BigNumber(0),f=new e.BigNumber(1),l=new e.BigNumber(1),p=new e.BigNumber(0);if(!r.isInt()||!n.isInt())throw new Error("Parameters in function xgcd must be integer numbers");for(;!n.isZero();)a=r.div(n).floor(),o=r.mod(n),i=c,c=f.minus(a.times(c)),f=i,i=l,l=p.minus(a.times(l)),p=i,r=n,n=o;return s=r.lt(s)?[r.neg(),f.neg(),p.neg()]:[r,r.isZero()?0:f,p],"array"===t.matrix?s:u(s)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(379),r(383),r(384),r(386),r(388),r(391),r(393)]},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(380);t.name="bitAnd",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(354)),f=n(r(365)),l=n(r(84)),p=n(r(55)),m=n(r(56)),h=o("bitAnd",{"number, number":function(e,t){if(i(e)&&i(t))return e&t;throw new Error("Integers expected in function bitAnd")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h,!1):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitAnd+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitAnd");var r=e.constructor;if(e.isNaN()||t.isNaN())return new r(NaN);if(e.isZero()||t.eq(-1)||e.eq(t))return e;if(t.isZero()||e.eq(-1))return t;if(!e.isFinite()||!t.isFinite()){if(!e.isFinite()&&!t.isFinite())return e.isNegative()==t.isNegative()?e:new r(0);if(!e.isFinite())return t.isNegative()?e:e.isNegative()?new r(0):t;if(!t.isFinite())return e.isNegative()?t:t.isNegative()?new r(0):e}return n(e,t,function(e,t){return e&t})}},function(e,t,r){function n(e){for(var t=e.c,r=t[0]+"",n=1;n<t.length;++n){for(var i=t[n]+"",a=7-i.length;a--;)i="0"+i;r+=i}for(o=r.length-1;"0"==r.charAt(o);--o);var s=e.e,u=r.slice(0,o+1||1),e=u.length;if(0<s)if(++s>e)for(s-=e;s--;u+="0");else s<e&&(u=u.slice(0,s)+"."+u.slice(s));for(var f=[0],n=0;n<u.length;){for(var l=f.length;l--;f[l]*=10);f[0]+=u.charAt(n++)<<0;for(var o=0;o<f.length;++o)1<f[o]&&(null==f[o+1]&&(f[o+1]=0),f[o+1]+=f[o]>>1,f[o]&=1)}return f.reverse()}var i=r(382);e.exports=function(e,t,r){var l,p,s=e.constructor,u=+(e.s<0),c=+(t.s<0);if(u)for(var a=n(i(e)),f=0;f<a.length;++f)a[f]^=1;else a=n(e);if(c)for(var o=n(i(t)),f=0;f<o.length;++f)o[f]^=1;else o=n(t);var m=a.length<=o.length?(l=a,p=o,u):(l=o,p=a,c),h=l.length,g=p.length,v=1^r(u,c),d=new s(1^v),y=s.ONE,x=new s(2),e=s.precision;for(s.config({precision:1e9});0<h;)r(l[--h],p[--g])==v&&(d=d.plus(y)),y=y.times(x);for(;0<g;)r(m,p[--g])==v&&(d=d.plus(y)),y=y.times(x);return s.config({precision:e}),0==v&&(d.s=-d.s),d}},function(e,t){e.exports=function(e){if(e.isFinite()&&!e.isInteger())throw new Error("Integer expected in function bitNot");var t=e.constructor,r=t.precision;return t.config({precision:1e9}),(e=e.plus(t.ONE)).s=-e.s||null,t.config({precision:r}),e}},function(e,t,r){"use strict";var i=r(19),a=r(382),o=r(6).isInteger;t.name="bitNot",t.factory=function(e,t,n,s){var u=r(29),c=s("bitNot",{number:function(e){if(o(e))return~e;throw new Error("Integer expected in function bitNot")},BigNumber:a,"Array | Matrix":function(e){return i(e,c)}});return c.toTex=u.operators.bitNot+"\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(385);t.name="bitOr",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(52)),f=n(r(53)),l=n(r(54)),p=n(r(55)),m=n(r(56)),h=o("bitOr",{"number, number":function(e,t){if(i(e)&&i(t))return e|t;throw new Error("Integers expected in function bitOr")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitOr+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitOr");var r=e.constructor;return e.isNaN()||t.isNaN()?new r(NaN):(r=new r(-1),e.isZero()||t.eq(r)||e.eq(t)?t:t.isZero()||e.eq(r)?e:e.isFinite()&&t.isFinite()?n(e,t,function(e,t){return e|t}):!e.isFinite()&&!e.isNegative()&&t.isNegative()||e.isNegative()&&!t.isNegative()&&!t.isFinite()?r:e.isNegative()&&t.isNegative()?e.isFinite()?e:t:e.isFinite()?t:e)}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(387);t.name="bitXor",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(59)),f=n(r(60)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=o("bitXor",{"number, number":function(e,t){if(i(e)&&i(t))return e^t;throw new Error("Integers expected in function bitXor")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return h(u(e),t)},"Matrix, Array":function(e,t){return h(e,u(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?l:m)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, any":function(e,t){return m(u(e),t,h,!1).valueOf()},"any, Array":function(e,t){return m(u(t),e,h,!0).valueOf()}});return h.toTex="\\left(${args[0]}"+s.operators.bitXor+"${args[1]}\\right)",h}},function(e,t,r){var n=r(381),i=r(382);e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitXor");var a,r=e.constructor;return e.isNaN()||t.isNaN()?new r(NaN):e.isZero()?t:t.isZero()?e:e.eq(t)?new r(0):(a=new r(-1),e.eq(a)?i(t):t.eq(a)?i(e):e.isFinite()&&t.isFinite()?n(e,t,function(e,t){return e^t}):e.isFinite()||t.isFinite()?new r(e.isNegative()==t.isNegative()?1/0:-1/0):a)}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(389);t.name="leftShift",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(47)),f=n(r(373)),l=n(r(52)),p=n(r(354)),m=n(r(390)),h=n(r(54)),g=n(r(84)),v=n(r(55)),d=n(r(56)),y=o("leftShift",{"number, number":function(e,t){if(i(e)&&i(t))return e<<t;throw new Error("Integers expected in function leftShift")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?m(e,t,y,!1):p(t,e,y,!0):"sparse"===t.storage()?l(e,t,y,!1):v(e,t,y);return e},"Array, Array":function(e,t){return y(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return y(u(e),t)},"Matrix, Array":function(e,t){return y(e,u(t))},"Matrix, number | BigNumber":function(e,t){return c(t,0)?e.clone():("sparse"===e.storage()?g:d)(e,t,y,!1)},"number | BigNumber, Matrix":function(e,t){return c(e,0)?f(t.size(),t.storage()):("sparse"===t.storage()?h:d)(t,e,y,!0)},"Array, number | BigNumber":function(e,t){return y(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return y(e,u(t)).valueOf()}});return y.toTex="\\left(${args[0]}"+s.operators.leftShift+"${args[1]}\\right)",y}},function(e,t){e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function leftShift");var r=e.constructor;return e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero()?new r(NaN):e.isZero()||t.isZero()?e:e.isFinite()||t.isFinite()?t.lt(55)?e.times(Math.pow(2,t.toNumber())+""):e.times(new r(2).pow(t)):new r(NaN)}},function(e,t,r){"use strict";var i=r(41);t.name="algorithm08",t.factory=function(e,t,n,a){var o=n(r(47)),s=e.SparseMatrix;return function(e,t,r){var n=e._values,u=e._index,c=e._ptr,f=e._size,e=e._datatype,p=t._values,m=t._index,h=t._ptr,g=t._size,t=t._datatype;if(f.length!==g.length)throw new i(f.length,g.length);if(f[0]!==g[0]||f[1]!==g[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+g+")");if(!n||!p)throw new Error("Cannot perform operation on Pattern Sparse Matrices");var d,g=f[0],x=f[1],b=o,w=0,N=r;"string"==typeof e&&e===t&&(b=a.find(o,[d=e,d]),w=a.convert(0,d),N=a.find(r,[d,d]));for(var O=[],T=[],C=[],f=new s({values:O,index:T,ptr:C,size:[g,x],datatype:d}),z=[],B=[],k=0;k<x;k++){C[k]=T.length;for(var I=k+1,M=c[k],A=c[k+1],E=M;E<A;E++)B[_=u[E]]=I,z[_]=n[E],T.push(_);for(M=h[k],A=h[k+1],E=M;E<A;E++)B[_=m[E]]===I&&(z[_]=N(z[_],p[E]));for(E=C[k];E<T.length;){var _,R=z[_=T[E]];b(R,w)?T.splice(E,1):(O.push(R),E++)}}return C[x]=T.length,f}}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(392);t.name="rightArithShift",t.factory=function(e,t,n,o){var s=r(29),u=n(r(50)),c=n(r(47)),f=n(r(373)),l=n(r(52)),p=n(r(354)),m=n(r(390)),h=n(r(54)),g=n(r(84)),v=n(r(55)),d=n(r(56)),y=o("rightArithShift",{"number, number":function(e,t){if(i(e)&&i(t))return e>>t;throw new Error("Integers expected in function rightArithShift")},"BigNumber, BigNumber":a,"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?m(e,t,y,!1):p(t,e,y,!0):"sparse"===t.storage()?l(e,t,y,!1):v(e,t,y);return e},"Array, Array":function(e,t){return y(u(e),u(t)).valueOf()},"Array, Matrix":function(e,t){return y(u(e),t)},"Matrix, Array":function(e,t){return y(e,u(t))},"Matrix, number | BigNumber":function(e,t){return c(t,0)?e.clone():("sparse"===e.storage()?g:d)(e,t,y,!1)},"number | BigNumber, Matrix":function(e,t){return c(e,0)?f(t.size(),t.storage()):("sparse"===t.storage()?h:d)(t,e,y,!0)},"Array, number | BigNumber":function(e,t){return y(u(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return y(e,u(t)).valueOf()}});return y.toTex="\\left(${args[0]}"+s.operators.rightArithShift+"${args[1]}\\right)",y}},function(e,t){e.exports=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function rightArithShift");var r=e.constructor;return e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero()?new r(NaN):e.isZero()||t.isZero()?e:t.isFinite()?(t.lt(55)?e.div(Math.pow(2,t.toNumber())+""):e.div(new r(2).pow(t))).floor():new r(e.isNegative()?-1:e.isFinite()?0:NaN)}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="rightLogShift",t.factory=function(e,t,n,a){var o=r(29),s=n(r(50)),u=n(r(47)),c=n(r(373)),f=n(r(52)),l=n(r(354)),p=n(r(390)),m=n(r(54)),h=n(r(84)),g=n(r(55)),v=n(r(56)),d=a("rightLogShift",{"number, number":function(e,t){if(i(e)&&i(t))return e>>>t;throw new Error("Integers expected in function rightLogShift")},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?p(e,t,d,!1):l(t,e,d,!0):"sparse"===t.storage()?f(e,t,d,!1):g(e,t,d);return e},"Array, Array":function(e,t){return d(s(e),s(t)).valueOf()},"Array, Matrix":function(e,t){return d(s(e),t)},"Matrix, Array":function(e,t){return d(e,s(t))},"Matrix, number | BigNumber":function(e,t){return u(t,0)?e.clone():("sparse"===e.storage()?h:v)(e,t,d,!1)},"number | BigNumber, Matrix":function(e,t){return u(e,0)?c(t.size(),t.storage()):("sparse"===t.storage()?m:v)(t,e,d,!0)},"Array, number | BigNumber":function(e,t){return d(s(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return d(e,s(t)).valueOf()}});return d.toTex="\\left(${args[0]}"+o.operators.rightLogShift+"${args[1]}\\right)",d}},function(e,t,r){e.exports=[r(395),r(401),r(396),r(402)]},function(e,t,r){"use strict";t.name="bellNumbers",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(396)),s=n(r(350)),u=n(r(400));return(n=i("bellNumbers",{"number | BigNumber":function(e){if(!u(e)||s(e))throw new TypeError("Non-negative integer value expected in function bellNumbers");for(var t=0,r=0;r<=e;r++)t=a(t,o(e,r));return t}})).toTex="\\mathrm{B}_{${args[0]}}",n}},function(e,t,r){"use strict";t.name="stirlingS2",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(74)),s=n(r(83)),u=n(r(310)),c=n(r(79)),f=n(r(397)),l=n(r(399)),p=n(r(350)),m=n(r(400)),h=n(r(62));return(n=i("stirlingS2",{"number | BigNumber, number | BigNumber":function(e,t){if(!m(e)||p(e)||!m(t)||p(t))throw new TypeError("Non-negative integer value expected in function stirlingS2");if(h(t,e))throw new TypeError("k must be less than or equal to n in function stirlingS2");for(var r=f(t),n=0,i=0;i<=t;i++)var g=c(-1,o(t,i)),v=l(t,i),d=c(i,e),n=a(n,s(s(v,d),g));return u(n,r)}})).toTex="\\mathrm{S}\\left(${args[0]},${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(19);r(93),t.name="factorial",t.factory=function(e,t,n,a){var o=n(r(398)),n=r(29),u=a("factorial",{number:function(e){if(e<0)throw new Error("Value must be non-negative");return o(e+1)},BigNumber:function(e){if(e.isNegative())throw new Error("Value must be non-negative");return o(e.plus(1))},"Array | Matrix":function(e){return i(e,u)}});return u.toTex="\\left(${args[0]}\\right)"+n.operators.factorial,u}},function(e,t,r){"use strict";var i=r(19),a=r(6).isInteger,o=4.7421875,s=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3399464998481189e-20,4652362892704858e-20,-9837447530487956e-20,.0001580887032249125,-.00021026444172410488,.00021743961811521265,-.0001643181065367639,8441822398385275e-20,-26190838401581408e-21,36899182659531625e-22];t.name="gamma",t.factory=function(e,t,n,u){function c(r){if(r.isZero())return new e.BigNumber(1);for(var n=t.precision+(0|Math.log(r.toNumber())),a=new(e.BigNumber.constructor({precision:n}))(r),o=r.toNumber()-1;1<o;)a=a.times(o),o--;return new e.BigNumber(a.toPrecision(e.BigNumber.precision))}var f=n(r(83)),l=n(r(79)),p=u("gamma",{number:function(e){var u,c,f,l;if(a(e)){if(e<=0)return isFinite(e)?1/0:NaN;if(171<e)return 1/0;for(var n=e-2,i=e-1;1<n;)i*=n,n--;return i=0==i?1:i}if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*p(1-e));if(171.35<=e)return 1/0;if(85<e)return l=(f=(c=(u=e*e)*e)*e)*e,Math.sqrt(2*Math.PI/e)*Math.pow(e/Math.E,e)*(1+1/(12*e)+1/(288*u)-139/(51840*c)-571/(2488320*f)+163879/(209018880*l)+5246819/(75246796800*l*e));--e;for(var r=s[0],m=1;m<s.length;++m)r+=s[m]/(e+m);return u=e+o+.5,Math.sqrt(2*Math.PI)*Math.pow(u,e+.5)*Math.exp(-u)*r},Complex:function(t){if(0==t.im)return p(t.re);t=new e.Complex(t.re-1,t.im);for(var n=new e.Complex(s[0],0),i=1;i<s.length;++i){var a=t.re+i,u=a*a+t.im*t.im;0!=u?(n.re+=s[i]*a/u,n.im+=-(s[i]*t.im)/u):n.re=s[i]<0?-1/0:1/0}var r=new e.Complex(t.re+o+.5,t.im),c=Math.sqrt(2*Math.PI),m=(t.re+=.5,l(r,t)),c=(0==m.im?m.re*=c:(0!=m.re&&(m.re*=c),m.im*=c),Math.exp(-r.re));return r.re=c*Math.cos(-r.im),r.im=c*Math.sin(-r.im),f(f(m,r),n)},BigNumber:function(t){if(t.isInteger())return t.isNegative()||t.isZero()?new e.BigNumber(1/0):c(t.minus(1));if(t.isFinite())throw new Error("Integer BigNumber expected");return new e.BigNumber(t.isNegative()?NaN:1/0)},"Array | Matrix":function(e){return i(e,p)}});return p.toTex="\\Gamma\\left(${args[0]}\\right)",p}},function(e,t,r){"use strict";function i(e){return e.isInteger()&&e.gte(0)}var a=r(6).isInteger;t.name="combinations",t.factory=function(e,t,r,n){return(n=n("combinations",{"number, number":function(e,t){var r,n,i;if(!a(e)||e<0)throw new TypeError("Positive integer value expected in function combinations");if(!a(t)||t<0)throw new TypeError("Positive integer value expected in function combinations");if(e<t)throw new TypeError("k must be less than or equal to n");for(r=Math.max(t,e-t),i=n=1;i<=e-r;i++)n=n*(r+i)/i;return n},"BigNumber, BigNumber":function(t,r){var n,a,o,s,u=new e.BigNumber(1);if(!i(t)||!i(r))throw new TypeError("Positive integer value expected in function combinations");if(r.gt(t))throw new TypeError("k must be less than n in function combinations");for(n=t.minus(r),r.lt(n)&&(n=r),o=a=u,s=t.minus(n);o.lte(s);o=o.plus(1))a=a.times(n.plus(o)).dividedBy(o);return a}})).toTex="\\binom{${args[0]}}{${args[1]}}",n}},function(e,t,r){"use strict";var i=r(19),a=r(6);t.name="isInteger",t.factory=function(e,t,r,n){var o=n("isInteger",{number:a.isInteger,BigNumber:function(e){return e.isInt()},Fraction:function(e){return 1===e.d&&isFinite(e.n)},"Array | Matrix":function(e){return i(e,o)}});return o}},function(e,t,r){"use strict";t.name="composition",t.factory=function(e,t,n,i){var a=n(r(399)),o=n(r(51)),s=n(r(363)),u=n(r(400)),c=n(r(62));return(n=i("composition",{"number | BigNumber, number | BigNumber":function(e,t){if(!(u(e)&&s(e)&&u(t)&&s(t)))throw new TypeError("Positive integer value expected in function composition");if(c(t,e))throw new TypeError("k must be less than or equal to n in function composition");return a(o(e,-1),o(t,-1))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="catalan",t.factory=function(e,t,n,i){var a=n(r(49)),o=n(r(310)),s=n(r(83)),u=n(r(399)),c=n(r(350)),f=n(r(400));return(n=i("catalan",{"number | BigNumber":function(e){if(!f(e)||c(e))throw new TypeError("Non-negative integer value expected in function catalan");return o(u(s(e,2),e),a(e,1))}})).toTex="\\mathrm{C}_{${args[0]}}",n}},function(e,t,r){e.exports=[r(404),r(405),r(406),r(407)]},function(e,t,r){"use strict";var i=r(19);t.name="arg",t.factory=function(e,t,r,n){var a=n("arg",{number:function(e){return Math.atan2(0,e)},Complex:function(e){return Math.atan2(e.im,e.re)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\arg\\left(${args[0]}\\right)",a}},function(e,t,r){"use strict";var i=r(19);t.name="conj",t.factory=function(e,t,r,n){var a=n("conj",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(t){return new e.Complex(t.re,-t.im)},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\left(${args[0]}\\right)^*",a}},function(e,t,r){"use strict";var i=r(19);t.name="im",t.factory=function(e,t,r,n){var a=n("im",{number:function(e){return 0},BigNumber:function(t){return new e.BigNumber(0)},Complex:function(e){return e.im},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\Im\\left\\lbrace${args[0]}\\right\\rbrace",a}},function(e,t,r){"use strict";var i=r(19);t.name="re",t.factory=function(e,t,r,n){var a=n("re",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(e){return e.re},"Array | Matrix":function(e){return i(e,a)}});return a.toTex="\\Re\\left\\lbrace${args[0]}\\right\\rbrace",a}},function(e,t,r){e.exports=[r(409),r(410)]},function(e,t,r){"use strict";function i(e){return 2===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]}function a(e){return 3===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]&&"number"==typeof e[2]}t.name="intersect",t.factory=function(e,t,n,f){var l=n(r(50)),p=f("intersect",{"Array, Array, Array":function(e,t,r){if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(!a(t))throw new TypeError("Array with 3 numbers expected for second argument");if(function(e){return 4===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]&&"number"==typeof e[2]&&"number"==typeof e[3]}(r))return function(e,t,r,n,i,a,o,s,u,c){c=(c-e*o-t*s-r*u)/(n*o+i*s+a*u-e-t-r);return[e+c*(n-e),t+c*(i-t),r+c*(a-r)]}(e[0],e[1],e[2],t[0],t[1],t[2],r[0],r[1],r[2],r[3]);throw new TypeError("Array with 4 numbers expected as third argument")},"Array, Array, Array, Array":function(e,t,r,n){if(2===e.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(!i(t))throw new TypeError("Array with 2 numbers expected for second argument");if(!i(r))throw new TypeError("Array with 2 numbers expected for third argument");if(i(n))return function(e,t,r,n,i,a,o,s){var u=(e-i)*(o-i)+(t-a)*(s-a),c=(o-i)*(r-e)+(s-a)*(n-t),l=(o-i)*(o-i)+(s-a)*(s-a),m=(u*c-((e-i)*(r-e)+(t-a)*(n-t))*l)/(((r-e)*(r-e)+(n-t)*(n-t))*l-c*c),u=(u+m*c)/l,c=e+m*(r-e),l=t+m*(n-t),r=a+u*(s-a);return c===i+u*(o-i)&&l===r?[c,l]:null}(e[0],e[1],t[0],t[1],r[0],r[1],n[0],n[1]);throw new TypeError("Array with 2 numbers expected for fourth argument")}if(3!==e.length)throw new TypeError("Arrays with two or thee dimensional points expected");if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(!a(t))throw new TypeError("Array with 3 numbers expected for second argument");if(!a(r))throw new TypeError("Array with 3 numbers expected for third argument");if(a(n))return function(e,t,r,n,i,a,o,s,u,c,f,l){var p=(e-o)*(c-o)+(t-s)*(f-s)+(r-u)*(l-u),m=(c-o)*(n-e)+(f-s)*(i-t)+(l-u)*(a-r),g=(c-o)*(c-o)+(f-s)*(f-s)+(l-u)*(l-u),d=(p*m-((e-o)*(n-e)+(t-s)*(i-t)+(r-u)*(a-r))*g)/(((n-e)*(n-e)+(i-t)*(i-t)+(a-r)*(a-r))*g-m*m),p=(p+d*m)/g,m=e+d*(n-e),g=t+d*(i-t),n=r+d*(a-r),e=s+p*(f-s),i=u+p*(l-u);return m===o+p*(c-o)&&g===e&&n===i?[m,g,n]:null}(e[0],e[1],e[2],t[0],t[1],t[2],r[0],r[1],r[2],n[0],n[1],n[2]);throw new TypeError("Array with 3 numbers expected for fourth argument")},"Matrix, Matrix, Matrix":function(e,t,r){return l(p(e.valueOf(),t.valueOf(),r.valueOf()))},"Matrix, Matrix, Matrix, Matrix":function(e,t,r,n){return l(p(e.valueOf(),t.valueOf(),r.valueOf(),n.valueOf()))}});return p}},function(e,t,r){"use strict";function i(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]}function a(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]&&"number"==typeof e[2]}function o(e){return"number"==typeof(e=e.constructor!==Array?s(e):e)[0]&&"number"==typeof e[1]&&"number"==typeof e[2]&&"number"==typeof e[3]&&"number"==typeof e[4]&&"number"==typeof e[5]}function s(e){for(var t=Object.keys(e),r=[],n=0;n<t.length;n++)r.push(e[t[n]]);return r}function c(e,t,r,n,i){return Math.abs(r*e+n*t+i)/Math.pow(r*r+n*n,.5)}function f(e,t,r,n,i,a,o,s,u){a=[(i-t)*u-(a-r)*s,(a-r)*o-(n-e)*u,(n-e)*s-(i-t)*o];return Math.pow(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],.5)/Math.pow(o*o+s*s+u*u,.5)}function l(e,t,r,n){n-=t,t=r-e;return Math.pow(n*n+t*t,.5)}function p(e,t,r,n,i,a){a-=r,r=i-t,i=n-e;return Math.pow(a*a+r*r+i*i,.5)}t.name="distance",t.factory=function(e,t,n,s){return n(r(50)),s("distance",{"Array, Array, Array":function(e,t,r){if(2!=e.length||2!=t.length||2!=r.length)throw new TypeError("Invalid Arguments: Try again");if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(!i(t))throw new TypeError("Array with 2 numbers expected for second argument");var a;if(i(r))return a=(r=(r[1]-r[0])/(t[1]-t[0]))*r*t[0],r=r*t[0]*-1,t=e[1],c(e[0],e[1],a,r,t);throw new TypeError("Array with 2 numbers expected for third argument")},"Object, Object, Object":function(e,t,r){if(2!=Object.keys(e).length||2!=Object.keys(t).length||2!=Object.keys(r).length)throw new TypeError("Invalid Arguments: Try again");if(!i(e))throw new TypeError("Values of pointX and pointY should be numbers");if(!i(t))throw new TypeError("Values of lineOnePtX and lineOnePtY should be numbers");if(!i(r))throw new TypeError("Values of lineTwoPtX and lineTwoPtY should be numbers");var a;if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("lineOnePtX")&&t.hasOwnProperty("lineOnePtY")&&r.hasOwnProperty("lineTwoPtX")&&r.hasOwnProperty("lineTwoPtY"))return a=(r=(r.lineTwoPtY-r.lineTwoPtX)/(t.lineOnePtY-t.lineOnePtX))*r*t.lineOnePtX,r=r*t.lineOnePtX*-1,t=e.pointX,c(e.pointX,e.pointY,a,r,t);throw new TypeError("Key names do not match")},"Array, Array":function(e,t){if(2==e.length&&3==t.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(a(t))return c(e[0],e[1],t[0],t[1],t[2])}else{if(3==e.length&&6==t.length){if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(o(t))return f(e[0],e[1],e[2],t[0],t[1],t[2],t[3],t[4],t[5]);throw new TypeError("Array with 6 numbers expected for second argument")}if(2==e.length&&2==t.length){if(!i(e))throw new TypeError("Array with 2 numbers expected for first argument");if(i(t))return l(e[0],e[1],t[0],t[1]);throw new TypeError("Array with 2 numbers expected for second argument")}if(3!=e.length||3!=t.length)throw new TypeError("Invalid Arguments: Try again");if(!a(e))throw new TypeError("Array with 3 numbers expected for first argument");if(a(t))return p(e[0],e[1],e[2],t[0],t[1],t[2])}throw new TypeError("Array with 3 numbers expected for second argument")},"Object, Object":function(e,t){if(2==Object.keys(e).length&&3==Object.keys(t).length){if(!i(e))throw new TypeError("Values of pointX and pointY should be numbers");if(!a(t))throw new TypeError("Values of xCoeffLine, yCoeffLine and constant should be numbers");if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("xCoeffLine")&&t.hasOwnProperty("yCoeffLine")&&t.hasOwnProperty("yCoeffLine"))return c(e.pointX,e.pointY,t.xCoeffLine,t.yCoeffLine,t.constant)}else if(3==Object.keys(e).length&&6==Object.keys(t).length){if(!a(e))throw new TypeError("Values of pointX, pointY and pointZ should be numbers");if(!o(t))throw new TypeError("Values of x0, y0, z0, a, b and c should be numbers");if(e.hasOwnProperty("pointX")&&e.hasOwnProperty("pointY")&&t.hasOwnProperty("x0")&&t.hasOwnProperty("y0")&&t.hasOwnProperty("z0")&&t.hasOwnProperty("a")&&t.hasOwnProperty("b")&&t.hasOwnProperty("c"))return f(e.pointX,e.pointY,e.pointZ,t.x0,t.y0,t.z0,t.a,t.b,t.c)}else if(2==Object.keys(e).length&&2==Object.keys(t).length){if(!i(e))throw new TypeError("Values of pointOneX and pointOneY should be numbers");if(!i(t))throw new TypeError("Values of pointTwoX and pointTwoY should be numbers");if(e.hasOwnProperty("pointOneX")&&e.hasOwnProperty("pointOneY")&&t.hasOwnProperty("pointTwoX")&&t.hasOwnProperty("pointTwoY"))return l(e.pointOneX,e.pointOneY,t.pointTwoX,t.pointTwoY)}else{if(3!=Object.keys(e).length||3!=Object.keys(t).length)throw new TypeError("Invalid Arguments: Try again");if(!a(e))throw new TypeError("Values of pointOneX, pointOneY and pointOneZ should be numbers");if(!a(t))throw new TypeError("Values of pointTwoX, pointTwoY and pointTwoZ should be numbers");if(e.hasOwnProperty("pointOneX")&&e.hasOwnProperty("pointOneY")&&e.hasOwnProperty("pointOneZ")&&t.hasOwnProperty("pointTwoX")&&t.hasOwnProperty("pointTwoY")&&t.hasOwnProperty("pointTwoZ"))return p(e.pointOneX,e.pointOneY,e.pointOneZ,t.pointTwoX,t.pointTwoY,t.pointTwoZ)}throw new TypeError("Key names do not match")},Array:function(e){if(function(e){if(2==e[0].length&&"number"==typeof e[0][0]&&"number"==typeof e[0][1]){for(var t in e)if(2!=e[t].length||"number"!=typeof e[t][0]||"number"!=typeof e[t][1])return}else{if(3!=e[0].length||"number"!=typeof e[0][0]||"number"!=typeof e[0][1]||"number"!=typeof e[0][2])return;for(var t in e)if(3!=e[t].length||"number"!=typeof e[t][0]||"number"!=typeof e[t][1]||"number"!=typeof e[t][2])return}return 1}(e))return function(e){for(var t=[],r=0;r<e.length-1;r++)for(var n=r+1;n<e.length;n++)2==e[0].length?t.push(l(e[r][0],e[r][1],e[n][0],e[n][1])):3==e[0].length&&t.push(p(e[r][0],e[r][1],e[r][2],e[n][0],e[n][1],e[n][2]));return t}(e);throw new TypeError("Incorrect array format entered for pairwise distance calculation")}})}},function(e,t,r){e.exports=[r(412),r(413),r(415),r(416)]},function(e,t,r){"use strict";t.name="and",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(373)),u=n(r(413)),c=(n(r(414)),n(r(354))),f=n(r(365)),l=n(r(84)),p=n(r(55)),m=n(r(56)),h=i("and",{"number, number":function(e,t){return!(!e||!t)},"Complex, Complex":function(e,t){return!(0===e.re&&0===e.im||0===t.re&&0===t.im)},"BigNumber, BigNumber":function(e,t){return!(e.isZero()||t.isZero()||e.isNaN()||t.isNaN())},"Unit, Unit":function(e,t){return h(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?f(e,t,h,!1):c(t,e,h,!0):"sparse"===t.storage()?c(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, any":function(e,t){return u(t)?s(e.size(),e.storage()):("sparse"===e.storage()?l:m)(e,t,h,!1)},"any, Matrix":function(e,t){return u(e)?s(e.size(),e.storage()):("sparse"===t.storage()?l:m)(t,e,h,!0)},"Array, any":function(e,t){return h(o(e),t).valueOf()},"any, Array":function(e,t){return h(e,o(t)).valueOf()}});return h.toTex="\\left(${args[0]}"+a.operators.and+"${args[1]}\\right)",h}},function(e,t,r){"use strict";var i=r(19);t.name="not",t.factory=function(e,t,n,a){var o=r(29),s=a("not",{number:function(e){return!e},Complex:function(e){return 0===e.re&&0===e.im},BigNumber:function(e){return e.isZero()||e.isNaN()},Unit:function(e){return s(e.value)},"Array | Matrix":function(e){return i(e,s)}});return s.toTex=o.operators.not+"\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19);r(6),t.name="isZero",t.factory=function(e,t,r,n){var a=n("isZero",{number:function(e){return 0===e},BigNumber:function(e){return e.isZero()},Complex:function(e){return 0===e.re&&0===e.im},Fraction:function(e){return 1===e.d&&0===e.n},Unit:function(e){return a(e.value)},"Array | Matrix":function(e){return i(e,a)}});return a}},function(e,t,r){"use strict";t.name="or",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(59)),u=n(r(76)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=i("or",{"number, number":function(e,t){return!(!e&&!t)},"Complex, Complex":function(e,t){return 0!==e.re||0!==e.im||0!==t.re||0!==t.im},"BigNumber, BigNumber":function(e,t){return!e.isZero()&&!e.isNaN()||!t.isZero()&&!t.isNaN()},"Unit, Unit":function(e,t){return p(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\left(${args[0]}"+a.operators.or+"${args[1]}\\right)",p}},function(e,t,r){"use strict";t.name="xor",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=i("xor",{"number, number":function(e,t){return!!(!!e^!!t)},"Complex, Complex":function(e,t){return!!((0!==e.re||0!==e.im)^(0!==t.re||0!==t.im))},"BigNumber, BigNumber":function(e,t){return!!((!e.isZero()&&!e.isNaN())^(!t.isZero()&&!t.isNaN()))},"Unit, Unit":function(e,t){return p(e.value,t.value)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\left(${args[0]}"+a.operators.xor+"${args[1]}\\right)",p}},function(e,t,r){e.exports=[r(295),r(418),r(312),r(419),r(420),r(81),r(421),r(311),r(422),r(316),r(423),r(424),r(425),r(318),r(370),r(329),r(373)]},function(e,t,r){"use strict";var i=r(39).size;t.name="cross",t.factory=function(e,t,n,a){function o(e,t){var r=i(e),n=i(t);if(1!=r.length||1!=n.length||3!=r[0]||3!=n[0])throw new RangeError("Vectors with length 3 expected (Size A = ["+r.join(", ")+"], B = ["+n.join(", ")+"])");return[u(c(e[1],t[2]),c(e[2],t[1])),u(c(e[2],t[0]),c(e[0],t[2])),u(c(e[0],t[1]),c(e[1],t[0]))]}var s=n(r(50)),u=n(r(74)),c=n(r(83));return(n=a("cross",{"Matrix, Matrix":function(e,t){return s(o(e.toArray(),t.toArray()))},"Matrix, Array":function(e,t){return s(o(e.toArray(),t))},"Array, Matrix":function(e,t){return s(o(e,t.toArray()))},"Array, Array":o})).toTex="\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(39),a=r(3).clone,o=r(6).isInteger;t.name="diag",t.factory=function(e,t,n,s){function u(e,t,r,n){if(!o(t))throw new TypeError("Second parameter in function diag must be an integer");var i=0<t?t:0,a=t<0?-t:0;switch(r.length){case 1:return c(e,t,n,r[0],a,i);case 2:return f(e,t,n,r,a,i)}throw new RangeError("Matrix for function diag must be 2 dimensional")}function c(t,r,n,i,a,o){a=[i+a,i+o],i=e.Matrix.storage(n||"dense").diagonal(a,t,r);return null!==n?i:i.valueOf()}function f(e,t,r,n,i,o){if(e&&!0===e.isMatrix)return t=e.diagonal(t),null!==r?r!==t.storage()?l(t,r):t:t.valueOf();for(var u=Math.min(n[0]-i,n[1]-o),c=[],f=0;f<u;f++)c[f]=a(e[f+i][f+o]);return null!==r?l(c):c}var l=n(r(50));return(n=s("diag",{Array:function(e){return u(e,0,i.size(e),null)},"Array, number":function(e,t){return u(e,t,i.size(e),null)},"Array, BigNumber":function(e,t){return u(e,t.toNumber(),i.size(e),null)},"Array, string":function(e,t){return u(e,0,i.size(e),t)},"Array, number, string":function(e,t,r){return u(e,t,i.size(e),r)},"Array, BigNumber, string":function(e,t,r){return u(e,t.toNumber(),i.size(e),r)},Matrix:function(e){return u(e,0,e.size(),e.storage())},"Matrix, number":function(e,t){return u(e,t,e.size(),e.storage())},"Matrix, BigNumber":function(e,t){return u(e,t.toNumber(),e.size(),e.storage())},"Matrix, string":function(e,t){return u(e,0,e.size(),t)},"Matrix, number, string":function(e,t,r){return u(e,t,e.size(),r)},"Matrix, BigNumber, string":function(e,t,r){return u(e,t.toNumber(),e.size(),r)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(39).size;t.name="dot",t.factory=function(e,t,n,a){function o(e,t){var r=i(e),n=i(t),a=r[0];if(1!==r.length||1!==n.length)throw new RangeError("Vector expected");if(r[0]!=n[0])throw new RangeError("Vectors must have equal length ("+r[0]+" != "+n[0]+")");if(0==a)throw new RangeError("Cannot calculate the dot product of empty vectors");for(var o=0,c=0;c<a;c++)o=s(o,u(e[c],t[c]));return o}var s=n(r(49)),u=n(r(83));return(n=a("dot",{"Matrix, Matrix":function(e,t){return o(e.toArray(),t.toArray())},"Matrix, Array":function(e,t){return o(e.toArray(),t)},"Array, Matrix":function(e,t){return o(e,t.toArray())},"Array, Array":o})).toTex="\\left(${args[0]}\\cdot${args[1]}\\right)",n}},function(e,t,r){"use strict";var i=r(3).clone,a=r(39).flatten;t.name="flatten",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("flatten",{Array:function(e){return a(i(e))},Matrix:function(e){e=a(i(e.toArray()));return s(e)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(39).resize;t.name="ones",t.factory=function(e,t,n,o){function s(t,r){var i=function(e){var t=!1;return e.forEach(function(e,r,n){e&&!0===e.isBigNumber&&(t=!0,n[r]=e.toNumber())}),t}(t)?new e.BigNumber(1):1;return c(t),r?(r=f(r),0<t.length?r.resize(t,i):r):(r=[],0<t.length?a(r,t,i):r)}function c(e){e.forEach(function(e){if("number"!=typeof e||!i(e)||e<0)throw new Error("Parameters in function ones must be positive integers")})}var f=n(r(50));return(n=o("ones",{"":function(){return"array"===t.matrix?s([]):s([],"default")},"...number | BigNumber | string":function(e){var n;return"string"==typeof e[e.length-1]?(n=e.pop(),s(e,n)):"array"===t.matrix?s(e):s(e,"default")},Array:s,Matrix:function(e){var t=e.storage();return s(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return s(e.valueOf(),t)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(41),a=r(11),o=r(6).isInteger,s=r(23).format,u=r(3).clone,c=r(39);t.name="resize",t.factory=function(e,t,n,f){function l(e,t,r){if(void 0!==r){if("string"!=typeof r||1!==r.length)throw new TypeError("Single character expected as defaultValue")}else r=" ";if(1!==t.length)throw new i(t.length,1);var n=t[0];if("number"!=typeof n||!o(n))throw new TypeError("Invalid size, must contain positive integers (size: "+s(t)+")");if(e.length>n)return e.substring(0,n);if(e.length<n){for(var a=e,u=0,c=n-e.length;u<c;u++)a+=r;return a}return e}function m(e,r,n){if(2!=arguments.length&&3!=arguments.length)throw new a("resize",arguments.length,2,3);if((r=r&&!0===r.isMatrix?r.valueOf():r).length&&r[0]&&!0===r[0].isBigNumber&&(r=r.map(function(e){return e&&!0===e.isBigNumber?e.toNumber():e})),e&&!0===e.isMatrix)return e.resize(r,n,!0);if("string"==typeof e)return l(e,r,n);var i=!Array.isArray(e)&&"array"!==t.matrix;if(0!=r.length)return Array.isArray(e)||(e=[e]),e=u(e),r=c.resize(e,r,n),i?p(r):r;for(;Array.isArray(e);)e=e[0];return u(e)}var p=n(r(50));return m.toTex="\\mathrm{${name}}\\left(${args}\\right)",m}},function(e,t,r){"use strict";var i=r(39);t.name="size",t.factory=function(e,t,n,a){var o=n(r(50));return(n=a("size",{Matrix:function(e){return o(e.size())},Array:i.size,string:function(e){return"array"===t.matrix?[e.length]:o([e.length])},"number | Complex | BigNumber | Unit | boolean | null":function(e){return"array"===t.matrix?[]:o([])}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(3),a=r(39);t.name="squeeze",t.factory=function(e,t,n,o){var s=n(r(50));return(n=o("squeeze",{Array:function(e){return a.squeeze(i.clone(e))},Matrix:function(e){e=a.squeeze(e.toArray());return Array.isArray(e)?s(e):e},any:function(e){return i.clone(e)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(399),r(397),r(398),r(427),r(429),r(430),r(431),r(433),r(434)]},function(e,t,r){"use strict";t.name="kldivergence",t.factory=function(e,t,n,i){function a(e,t){var r=t.size().length,n=e.size().length;if(1<r)throw new Error("first object must be one dimensional");if(1<n)throw new Error("second object must be one dimensional");if(r!==n)throw new Error("Length of two vectors must be equal");if(0===u(e))throw new Error("Sum of elements in first object must be non zero");if(0===u(t))throw new Error("Sum of elements in second object must be non zero");r=s(e,u(e)),n=s(t,u(t)),e=u(c(r,l(f(r,n))));return p(e)?e:Number.NaN}var o=n(r(50)),s=n(r(310)),u=n(r(428)),c=n(r(83)),f=n(r(353)),l=n(r(82)),p=n(r(87));return i("kldivergence",{"Array, Array":function(e,t){return a(o(e),o(t))},"Matrix, Array":function(e,t){return a(e,o(t))},"Array, Matrix":function(e,t){return a(o(e),t)},"Matrix, Matrix":a})}},function(e,t,r){"use strict";var i=r(306);t.name="sum",t.factory=function(e,t,n,a){function o(r){var n=void 0;if(i(r,function(e){n=void 0===n?e:s(n,e)}),void 0===n)switch(t.number){case"number":return 0;case"bignumber":return new e.BigNumber(0);case"fraction":return new e.Fraction(0);default:return 0}return n}var s=n(r(51));return(n=a("sum",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(){throw new Error("sum(A, dim) is not yet supported")},"...":function(){return o(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(306);t.name="multinomial",t.factory=function(e,t,n,a){var o=n(r(49)),s=n(r(83)),u=n(r(310)),c=n(r(397)),f=n(r(400)),l=n(r(363));return a("multinomial",{"Array | Matrix":function(e){var t=0,r=1;return i(e,function(e){if(!f(e)||!l(e))throw new TypeError("Positive integer value expected in function multinomial");t=o(t,e),r=s(r,c(e))}),u(c(t),r)}})}},function(e,t,r){"use strict";function i(e){return e.isInteger()&&e.gte(0)}var a=r(6).isInteger;t.name="permutations",t.factory=function(e,t,n,o){return(o=o("permutations",{"number | BigNumber":n(r(397)),"number, number":function(e,t){var r,n;if(!a(e)||e<0)throw new TypeError("Positive integer value expected in function permutations");if(!a(t)||t<0)throw new TypeError("Positive integer value expected in function permutations");if(e<t)throw new TypeError("second argument k must be less than or equal to first argument n");for(n=e-t+(r=1);n<=e;n++)r*=n;return r},"BigNumber, BigNumber":function(t,r){var n,a;if(!i(t)||!i(r))throw new TypeError("Positive integer value expected in function permutations");if(r.gt(t))throw new TypeError("second argument k must be less than or equal to first argument n");for(n=new e.BigNumber(1),a=t.minus(r).plus(1);a.lte(t);a=a.plus(1))n=n.times(a);return n}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",o}},function(e,t,r){"use strict";t.name="pickRandom",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").pickRandom).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(11),a=r(304);t.name="distribution",t.factory=function(e,t,n,o){function s(e){var t;if(f.hasOwnProperty(e))return t=Array.prototype.slice.call(arguments,1),function(e){var r=function(t,r){return t+e()*(r-t)},n=function(t,r){return Math.floor(t+e()*(r-t))},o=function(e,t,r,n){var i,a,s=[];if(1<(e=e.slice(0)).length)for(a=0,i=e.shift();a<i;a++)s.push(o(e,t,r,n));else for(a=0,i=e.shift();a<i;a++)s.push(n(t,r));return s};return{random:function(e,t,n){var s,c,f;if(3<arguments.length)throw new i("random",arguments.length,0,3);return 1===arguments.length?a(e)?s=e:f=e:f=2===arguments.length?(a(e)?s=e:c=e,t):(s=e,c=t,n),void 0===f&&(f=1),void 0===c&&(c=0),void 0!==s?(e=o(s.valueOf(),c,f,r),s&&!0===s.isMatrix?u(e):e):r(c,f)},randomInt:function(e,t,r){var s,c,f;if(3<arguments.length||arguments.length<1)throw new i("randomInt",arguments.length,1,3);return 1===arguments.length?a(e)?s=e:f=e:f=2===arguments.length?(a(e)?s=e:c=e,t):(s=e,c=t,r),void 0===c&&(c=0),void 0!==s?(e=o(s.valueOf(),c,f,n),s&&!0===s.isMatrix?u(e):e):n(c,f)},pickRandom:function(e){if(1!==arguments.length)throw new i("pickRandom",arguments.length,1);if(e&&!0===e.isMatrix)e=e.valueOf();else if(!Array.isArray(e))throw new TypeError("Unsupported type of value in function pickRandom");if(1<c.size(e).length)throw new Error("Only one dimensional vectors supported");return e[Math.floor(Math.random()*e.length)]}}}(f[e].apply(this,t));throw new Error("Unknown distribution "+e)}var u=n(r(50)),c=r(39),f={uniform:function(){return Math.random},normal:function(){return function(){for(var e,t,r=-1;r<0||1<r;)e=Math.random(),t=Math.random(),r=1/6*Math.pow(-2*Math.log(e),.5)*Math.cos(2*Math.PI*t)+.5;return r}}};return s.toTex="\\mathrm{${name}}\\left(${args}\\right)",s}},function(e,t,r){"use strict";t.name="random",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").random).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";t.name="randomInt",t.factory=function(e,t,n,i){return(n=n(r(432))("uniform").randomInt).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(436),r(437),r(86),r(62),r(336),r(58),r(438),r(439)]},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="compare",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(76)),c=n(r(61)),f=n(r(55)),l=n(r(56)),p=a("compare",{"boolean, boolean":function(e,t){return e===t?0:t<e?1:-1},"number, number":function(e,r){return e===r||i(e,r,t.epsilon)?0:r<e?1:-1},"BigNumber, BigNumber":function(t,r){return new e.BigNumber(t.cmp(r))},"Fraction, Fraction":function(t,r){return new e.Fraction(t.compare(r))},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return p(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e===t?0:t<e?1:-1},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,p):s(t,e,p,!0):"sparse"===t.storage()?s(e,t,p,!1):f(e,t,p);return e},"Array, Array":function(e,t){return p(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return p(o(e),t)},"Matrix, Array":function(e,t){return p(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,p,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,p,!0);return t},"Array, any":function(e,t){return l(o(e),t,p,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,p,!0).valueOf()}});return p.toTex="\\mathrm{${name}}\\left(${args}\\right)",p}},function(e,t,r){"use strict";t.name="deepEqual",t.factory=function(e,t,n,i){var o=n(r(86));return(n=i("deepEqual",{"any, any":function(e,t){return function a(e,t){if(Array.isArray(e)){if(Array.isArray(t)){var r=e.length;if(r!==t.length)return!1;for(var n=0;n<r;n++)if(!a(e[n],t[n]))return!1;return!0}return!1}return!Array.isArray(t)&&o(e,t)}(e.valueOf(),t.valueOf())}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="smallerEq",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("smallerEq",{"boolean, boolean":function(e,t){return e<=t},"number, number":function(e,r){return e<=r||i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lte(t)},"Fraction, Fraction":function(e,t){return 1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e<=t},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,m):s(t,e,m,!0):"sparse"===t.storage()?s(e,t,m,!1):f(e,t,m);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,m,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,m,!0);return t},"Array, any":function(e,t){return l(o(e),t,m,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,m,!0).valueOf()}});return m.toTex="\\left(${args[0]}"+n.operators.smallerEq+"${args[1]}\\right)",m}},function(e,t,r){"use strict";var i=r(6).nearlyEqual;t.name="unequal",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(59)),u=n(r(60)),c=n(r(61)),f=n(r(55)),l=n(r(56)),n=r(29),m=a("unequal",{"any, any":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:h(e,t)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?u(e,t,h):s(t,e,h,!0):"sparse"===t.storage()?s(e,t,h,!1):f(e,t,h);return e},"Array, Array":function(e,t){return m(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return m(o(e),t)},"Matrix, Array":function(e,t){return m(e,o(t))},"Matrix, any":function(e,t){e=("sparse"===e.storage()?c:l)(e,t,h,!1);return e},"any, Matrix":function(e,t){t=("sparse"===t.storage()?c:l)(t,e,h,!0);return t},"Array, any":function(e,t){return l(o(e),t,h,!1).valueOf()},"any, Array":function(e,t){return l(o(t),e,h,!0).valueOf()}}),h=a("_unequal",{"boolean, boolean":function(e,t){return e!==t},"number, number":function(e,r){return!i(e,r,t.epsilon)},"BigNumber, BigNumber":function(e,t){return!e.eq(t)},"Fraction, Fraction":function(e,t){return 0!==e.compare(t)},"Complex, Complex":function(e,r){return!i(e.re,r.re,t.epsilon)||!i(e.im,r.im,t.epsilon)},"Unit, Unit":function(e,t){if(e.equalBase(t))return m(e.value,t.value);throw new Error("Cannot compare units with different base")},"string, string":function(e,t){return e!==t}});return m.toTex="\\left(${args[0]}"+n.operators.unequal+"${args[1]}\\right)",m}},function(e,t,r){e.exports=[r(305),r(309),r(441),r(314),r(443),r(444),r(445),r(446),r(428),r(447)]},function(e,t,r){"use strict";var i=r(39).flatten;t.name="median",t.factory=function(e,t,n,a){function o(e){var t=(e=i(e.valueOf())).length;if(0==t)throw new Error("Cannot calculate median of an empty array");if(t%2==0){for(var r=t/2-1,n=f(e,1+r),a=e[r],o=0;o<r;++o)0<c(e[o],a)&&(a=e[o]);return m(a,n)}n=f(e,(t-1)/2);return p(n)}var s=n(r(51)),u=n(r(78)),c=n(r(436)),f=n(r(442)),n=a("median",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("median(A, dim) is not yet supported")},"...":function(){return o(Array.prototype.slice.call(arguments))}}),p=a({"number | BigNumber | Unit":function(e){return e}}),m=a({"number | BigNumber | Unit, number | BigNumber | Unit":function(e,t){return u(s(e,t),2)}});return n.toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger;t.name="partitionSelect",t.factory=function(e,t,n,a){function o(e,t){return-c(e,t)}function s(e,t,r){if(!i(t)||t<0)throw new Error("k must be a non-negative integer");if(e&&e.isMatrix){if(1<e.size().length)throw new Error("Only one dimensional matrices supported");return u(e.valueOf(),t,r)}return Array.isArray(e)?u(e,t,r):void 0}function u(e,t,r){if(t>=e.length)throw new Error("k out of bounds");for(var n=0,i=e.length-1;n<i;){for(var u,a=n,o=i,s=e[Math.floor(Math.random()*(i-n+1))+n];a<o;)0<=r(e[a],s)?(u=e[o],e[o]=e[a],e[a]=u,--o):++a;0<r(e[a],s)&&--a,t<=a?i=a:n=a+1}return e[t]}var c=n(r(436));return a("partitionSelect",{"Array | Matrix, number":function(e,t){return s(e,t,c)},"Array | Matrix, number, string":function(e,t,r){if("asc"===r)return s(e,t,c);if("desc"===r)return s(e,t,o);throw new Error('Compare string must be "asc" or "desc"')},"Array | Matrix, number, function":s})}},function(e,t,r){"use strict";var i=r(39).flatten;t.name="mode",t.factory=function(e,t,r,n){function a(e){if(0==(e=i(e.valueOf())).length)throw new Error("Cannot calculate mode of an empty array");var o,r={},n=[],a=0;for(o in e)e[o]in r||(r[e[o]]=0),r[e[o]]++,r[e[o]]==a?n.push(e[o]):r[e[o]]>a&&(a=r[e[o]],n=[e[o]]);return n}return n("mode",{"Array | Matrix":a,"...":function(){return a(Array.prototype.slice.call(arguments))}})}},function(e,t,r){"use strict";var i=r(306);t.name="prod",t.factory=function(e,t,n,a){function o(e){var t=void 0;if(i(e,function(e){t=void 0===t?e:s(t,e)}),void 0===t)throw new Error("Cannot calculate prod of an empty array");return t}var s=n(r(77));return(n=a("prod",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("prod(A, dim) is not yet supported")},"...":function(){return o(arguments)}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(6).isInteger,a=r(6).isNumber,o=r(39).flatten,s=r(304);t.name="quantileSeq",t.factory=function(e,t,n,u){function f(e,t,r){var s,c,n=o(e),e=n.length;if(0===e)throw new Error("Cannot calculate quantile of an empty sequence");if(a(t)){if(0===(u=(s=t*(e-1))%1))return c=r?n[s]:m(n,s),g(c),c;var d=Math.floor(s);if(r)f=n[d],v=n[d+1];else{v=m(n,d+1),f=n[d];for(var y=0;y<d;++y)0<h(n[y],f)&&(f=n[y])}return g(f),g(v),l(p(f,1-u),p(v,u))}if((s=t.times(e-1)).isInteger())return s=s.toNumber(),c=r?n[s]:m(n,s),g(c),c;var f,v,d=s.floor(),u=s.minus(d),x=d.toNumber();if(r)f=n[x],v=n[x+1];else{v=m(n,x+1),f=n[x];for(y=0;y<x;++y)0<h(n[y],f)&&(f=n[y])}g(f),g(v);t=u.constructor.ONE;return l(p(f,t.minus(u)),p(v,u))}var l=n(r(49)),p=n(r(83)),m=n(r(442)),h=n(r(436)),g=u({"number | BigNumber | Unit":function(e){return e}});return function(t,r,n){var u,c;if(arguments.length<2||3<arguments.length)throw new SyntaxError("Function quantileSeq requires two or three parameters");if(s(t)&&"boolean"==typeof(n=n||!1)){if(u=t.valueOf(),a(r)){if(r<0)throw new Error("N/prob must be non-negative");if(r<=1)return f(u,r,n);if(1<r){if(!i(r))throw new Error("N must be a positive integer");for(var l=r+1,o=new Array(r),p=0;p<r;)o[p]=f(u,++p/l,n);return o}}if(r&&r.isBigNumber){if(r.isNegative())throw new Error("N/prob must be non-negative");if(c=r.constructor.ONE,r.lte(c))return f(u,r,n);if(r.gt(c)){if(!r.isInteger())throw new Error("N must be a positive integer");var m=r.toNumber();if(4294967295<m)throw new Error("N must be less than or equal to 2^32-1, as that is the maximum length of an Array");l=new e.BigNumber(m+1);o=new Array(m);for(p=0;p<m;)o[p]=f(u,new e.BigNumber(++p).div(l),n);return o}}if(Array.isArray(r)){o=new Array(r.length);for(p=0;p<o.length;++p){var h=r[p];if(a(h)){if(h<0||1<h)throw new Error("Probability must be between 0 and 1, inclusive")}else{if(!h||!h.isBigNumber)throw new TypeError("Unexpected type of argument in function quantileSeq");if(c=h.constructor.ONE,h.isNegative()||h.gt(c))throw new Error("Probability must be between 0 and 1, inclusive")}o[p]=f(u,h,n)}return o}}throw new TypeError("Unexpected type of argument in function quantileSeq")}}},function(e,t,r){"use strict";t.name="std",t.factory=function(e,t,n,i){function a(e,t){if(0==e.length)throw new SyntaxError("Function std requires one or more parameters (0 provided)");return o(s.apply(null,arguments))}var o=n(r(362)),s=n(r(447));return(n=i("std",{"Array | Matrix":a,"Array | Matrix, string":a,"...":function(){return a(Array.prototype.slice.call(arguments))}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i="unbiased",a=r(306);t.name="var",t.factory=function(e,t,n,o){function s(t,r){var n=0,i=0;if(0==t.length)throw new SyntaxError("Function var requires one or more parameters (0 provided)");if(a(t,function(e){n=u(n,e),i++}),0===i)throw new Error("Cannot calculate var of an empty array");var o=l(n,i),n=0;switch(a(t,function(e){e=c(e,o);n=u(n,f(e,e))}),r){case"uncorrected":return l(n,i);case"biased":return l(n,i+1);case"unbiased":var s=n&&!0===n.isBigNumber?new e.BigNumber(0):0;return 1==i?s:l(n,i-1);default:throw new Error('Unknown normalization "'+r+'". Choose "unbiased" (default), "uncorrected", or "biased".')}}var u=n(r(51)),c=n(r(74)),f=n(r(77)),l=n(r(78));return(n=o("variance",{"Array | Matrix":function(e){return s(e,i)},"Array | Matrix, string":s,"...":function(){return s(arguments,i)}})).toTex="\\mathrm{Var}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(449),r(459),r(461),r(463),r(466),r(468),r(470),r(471),r(467),r(469),r(462),r(472),r(465),r(474),r(475),r(478),r(480),r(482),r(483),r(484),r(485),r(486),r(477),r(487),r(488)]},function(e,t,r){"use strict";var i=r(19),a=r(450);t.name="acos",t.factory=function(e,t,n,o){function s(t){var r=new e.Complex(t.im*t.im-t.re*t.re+1,-2*t.re*t.im),r=u(r),r=new e.Complex(r.re-t.im,r.im+t.re),t=c(r);return new e.Complex(1.5707963267948966-t.im,t.re)}var u=o.find(n(r(362)),["Complex"]),c=o.find(n(r(82)),["Complex"]),f=o("acos",{number:function(r){return-1<=r&&r<=1||t.predictable?Math.acos(r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\cos^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){var n=r(93).pi,i=r(451);e.exports=function(e,t,r){if(r){if(e.abs().lt(t.ONE))throw new Error("asec() only has non-complex values for |x| >= 1.")}else if(e.abs().gt(t.ONE))throw new Error("acos() only has non-complex values for |x| <= 1.");var a;return e.eq(-1)?n(t):(a=t.precision,t.config({precision:a+4}),r&&(e=t.ONE.div(e)),r=i(t.ONE.minus(e.times(e)).sqrt().div(e.plus(t.ONE)),t).times(2),t.config({precision:a}),r.toDP(a-1))}},function(e,t,r){var n=r(93),i=r(452),a=r(94);e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);if(!r&&e.isZero()||r&&!e.isFinite())return new t(0);var o=t.precision;if(!r&&!e.isFinite()||r&&e.isZero())return(s=n.pi(t.constructor({precision:o+2})).div(2).toDP(o-1)).constructor=t,s.s=e.s,s;t.config({precision:o+4});var s,c,r=(e=r?t.ONE.div(e):e).abs();return r.lte(.875)?(((c=a(e)).constructor=t).config({precision:o}),c.toDP(t.precision-1)):r.gte(1.143)?((c=(s=n.pi(t.constructor({precision:o+4})).div(2)).minus(a(t.ONE.div(r)))).s=e.s,(c.constructor=t).config({precision:o}),c.toDP(t.precision-1)):(e=e.div(e.times(e).plus(1).sqrt()),t.config({precision:o}),i(e,t))}},function(e,t,r){var n=r(93).pi,i=r(453),a=r(454);e.exports=function o(e,t,r){if(e.isNaN())return new t(NaN);var s=t.precision,u=e.abs();if(r){if(u.lt(t.ONE))throw new Error("acsc() only has non-complex values for |x| >= 1.");t.config({precision:s+2}),e=t.ONE.div(e),t.config({precision:s}),u=e.abs()}else if(u.gt(t.ONE))throw new Error("asin() only has non-complex values for |x| <= 1.");return u.gt(.8)?(t.config({precision:s+4}),r=e.s,(e=n(t.constructor({precision:s+4})).div(2).minus(o(t.ONE.minus(e.times(e)).sqrt(),t))).s=r,(e.constructor=t).config({precision:s}),e.toDP(s-1)):((r=u.gt(.58))&&(t.config({precision:s+8}),e=e.div(new t(2).sqrt().times(t.ONE.minus(e.times(e)).sqrt().plus(t.ONE).sqrt())),t.config({precision:s})),u=s<=60||e.dp()<=Math.log(s)&&e.lt(.05)?i(e,s):a(e,t),r?u.times(2):u)}},function(e,t){e.exports=function(e,t){var r=e.constructor;r.config({precision:t+Math.log(t)|4});for(var n=new r(1),i=e,a=NaN,o=e.times(e),s=e,u=new r(n),c=new r(n),f=new r(n),l=3;!i.equals(a);l+=2)s=s.times(o),u=u.times(f),c=c.times(f.plus(n)),a=i,f=new r(l),i=i.plus(s.times(u).div(f.times(c)));return r.config({precision:t}),i.toDP(t-1)}},function(e,t,r){var n=r(455),i=r(458);e.exports=function(e,t){var r=t.precision,a=-(r+4),o=r+8-e.e,s=25-e.e,u=Math.max(1.442695*Math.log(r+2)|5,5),c=(t.config({precision:s}),0),f=new t(Math.asin(e.toNumber())+"");do{var l=n(f,t,1,!1),p=i(l),l=(l.isZero()||(l.s=f.s),l.minus(e).div(p)),f=f.minus(l),s=Math.min(2*s,o)}while(t.config({precision:s}),2*l.e>=a&&!l.isZero()&&++c<=u);if(c==u)throw new Error("asin() failed to converge to the requested accuracy.Try with a higher precision.");return t.config({precision:r}),f.toDP(r-1)}},function(e,t,r){var n=r(456),i=r(457);e.exports=function(e,t,r,a){if(e.isNaN()||!e.isFinite())return new t(NaN);var o=t.precision,e=new t(e),u=e.isNegative(),c=(u&&(e.s=-e.s),o+(0|Math.log(o))+3);if(t.config({precision:c}),(e=n(e,t.constructor({precision:c}),r))[0].constructor=t,e[1])return e=e[0],a&&e.isZero()&&(e=new t(1/0)),t.config({precision:o}),e;if(e=e[0],r){f=i(e.div(3125),r),t.config({precision:Math.min(c,o+15)});for(var l=new t(5),p=new t(16),m=new t(20),h=0;h<5;++h)var v=(g=f.times(f)).times(f),d=v.times(g),f=p.times(d).minus(m.times(v)).plus(l.times(f));u&&(f.s=-f.s)}else{var y,x=e.abs().lt(t.ONE)?(y=64,3):(y=256,4);f=i(e.div(y),r),t.config({precision:Math.min(c,o+8)});for(var b=new t(8);0<x;--x){var g,w=(g=f.times(f)).times(g);f=b.times(w.minus(g)).plus(t.ONE)}}return a&&(f=f.e<=-o?new t(1/0):t.ONE.div(f)),t.config({precision:o}),f.toDP(o-1)}},function(e,t,r){var n=r(93);e.exports=function(e,t,r){var o,i=n.pi(t.constructor({precision:t.precision+2})),a=n.tau(t);return e.abs().lte(i.toDP(e.dp()))?[e,!1]:0<e.dp()&&e.div(i.toDP(e.dp())).toNumber()%2==0||(o=e.mod(a),0<e.dp()&&o.toDP(e.dp(),1).isZero())?[new t(1^r),!0]:(o.gt(i)&&(r?(o=o.minus(i)).s=-o.s:o=a.minus(o)),o.constructor=e.constructor,[o,!1])}},function(e,t){e.exports=function(e,t){for(var r=e.constructor.ONE,n=e,i=NaN,a=e.times(e),o=t?n:n=r,s=r,u=!0,c=t;!n.equals(i);c+=2)o=o.times(a),s=s.times(c+1).times(c+2),i=n,n=(u=!u)?n.plus(o.div(s)):n.minus(o.div(s));return n}},function(e,t){e.exports=function(e){var t=e.constructor,r=t.precision,e=(t.config({precision:r+2}),t.ONE.minus(e.times(e)).sqrt());return t.config({precision:r}),e.toDP(r-1)}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="acosh",t.factory=function(e,t,n,o){function s(e){var t,e=u(e);return e.im<=0?(t=e.re,e.re=-e.im,e.im=t):(t=e.im,e.im=-e.re,e.re=t),e}var u=o.find(n(r(449)),["Complex"]),c=o("acosh",{number:function(r){return 1<=r||t.predictable?Math.log(Math.sqrt(r*r-1)+r):r<=-1?new e.Complex(Math.log(Math.sqrt(r*r-1)-r),Math.PI):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1,!1)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cosh^{-1}\\left(${args[0]}\\right)",c}},function(e,t){e.exports=function(e,t,r,n){if(e.isNaN())return new t(NaN);if(n&&e.isZero())return new t(1/0);if(!r)if(n){if(e.isNegative()||e.gt(t.ONE))throw new Error("asech() only has non-complex values for 0 <= x <= 1.")}else if(e.lt(t.ONE))throw new Error("acosh() only has non-complex values for x >= 1.");var i=t.precision,e=(t.config({precision:i+4}),new t(e)),n=(e.constructor=t,n&&(e=t.ONE.div(e)),r?e.times(e).plus(t.ONE):e.times(e).minus(t.ONE)),r=e.plus(n.sqrt()).ln();return t.config({precision:i}),new t(r.toPrecision(i))}},function(e,t,r){"use strict";var i=r(19),a=r(451),o=1.5707963267948966;t.name="acot",t.factory=function(e,t,n,s){var u=s.find(n(r(462)),["Complex"]),c=s("acot",{number:function(e){return e?Math.atan(1/e):o},Complex:function(t){var r;return 0==t.im?new e.Complex(t.re?Math.atan(1/t.re):o,0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))},BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cot^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(451);t.name="atan",t.factory=function(e,t,n,o){var s=o.find(n(r(82)),["Complex"]),u=o("atan",{number:function(e){return Math.atan(e)},Complex:function(t){if(0==t.re){if(1==t.im)return new e.Complex(0,1/0);if(-1==t.im)return new e.Complex(0,-1/0)}var r=t.re,t=t.im,i=r*r+(1-t)*(1-t),t=new e.Complex((1-t*t-r*r)/i,-2*r/i),r=s(t);return new e.Complex(-.5*r.im,.5*r.re)},BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,u,!0)}});return u.toTex="\\tan^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(464),o=1.5707963267948966;t.name="acoth",t.factory=function(e,t,n,s){function u(t){var r;return 0==t.re&&0==t.im?new e.Complex(0,o):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),c(t))}var c=s.find(n(r(465)),["Complex"]),f=s("acoth",{number:function(r){return 1<=r||r<=-1||t.predictable?isFinite(r)?(Math.log((r+1)/r)+Math.log(r/(r-1)))/2:0:0!==r?u(new e.Complex(r,0)):new e.Complex(0,o)},Complex:u,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\coth^{-1}\\left(${args[0]}\\right)",f}},function(e,t){e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);var n=e.abs();if(n.eq(t.ONE))return new t(e.isNegative()?-1/0:1/0);if(n.gt(t.ONE)){if(!r)throw new Error("atanh() only has non-complex values for |x| <= 1.")}else if(r)throw new Error("acoth() has complex values for |x| < 1.");return e.isZero()?new t(0):(n=t.precision,t.config({precision:n+4}),(e=new t(e)).constructor=t,r&&(e=t.ONE.div(e)),r=t.ONE.plus(e).div(t.ONE.minus(e)).ln().div(2),t.config({precision:n}),new t(r.toPrecision(n)))}},function(e,t,r){"use strict";var i=r(19),a=r(464);t.name="atanh",t.factory=function(e,t,r,n){function o(t){var r=1<t.re&&0==t.im,n=1-t.re,i=1+t.re,a=n*n+t.im*t.im,n=(t=0!=a?new e.Complex((i*n-t.im*t.im)/a,(t.im*n+i*t.im)/a):new e.Complex(-1!=t.re?t.re/0:0,0!=t.im?t.im/0:0)).re;return t.re=Math.log(Math.sqrt(t.re*t.re+t.im*t.im))/2,t.im=Math.atan2(t.im,n)/2,r&&(t.im=-t.im),t}var s=n("atanh",{number:function(r){return r<=1&&-1<=r||t.predictable?Math.log((1+r)/(1-r))/2:o(new e.Complex(r,0))},Complex:o,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,s,!0)}});return s.toTex="\\tanh^{-1}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(452);t.name="acsc",t.factory=function(e,t,n,s){function u(t){var r;return 0==t.re&&0==t.im?new e.Complex(1.5707963267948966,1/0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),c(t))}var c=s.find(n(r(467)),["Complex"]),f=s("acsc",{number:function(r){return r<=-1||1<=r||t.predictable?Math.asin(1/r):u(new e.Complex(r,0))},Complex:u,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,f)}});return f.toTex="\\csc^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){"use strict";var i=r(19),a=r(452);t.name="asin",t.factory=function(e,t,n,o){function s(t){var r=t.re,t=t.im,i=new e.Complex(t*t-r*r+1,-2*r*t),i=u(i),t=new e.Complex(i.re-t,i.im+r),i=c(t);return new e.Complex(i.im,-i.re)}var u=o.find(n(r(362)),["Complex"]),c=o.find(n(r(82)),["Complex"]),f=o("asin",{number:function(r){return-1<=r&&r<=1||t.predictable?Math.asin(r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1)},"Array | Matrix":function(e){return i(e,f,!0)}});return f.toTex="\\sin^{-1}\\left(${args[0]}\\right)",f}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="acsch",t.factory=function(e,t,n,o){var s=o.find(n(r(469)),["Complex"]),u=o("acsch",{number:function(e){return e=1/e,Math.log(e+Math.sqrt(e*e+1))},Complex:function(t){var r;return 0==t.im?(t=0!=t.re?Math.log(t.re+Math.sqrt(t.re*t.re+1)):1/0,new e.Complex(t,0)):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),s(t))},BigNumber:function(t){return a(t,e.BigNumber,!0,!0)},"Array | Matrix":function(e){return i(e,u)}});return u.toTex="\\mathrm{csch}^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="asinh",t.factory=function(e,t,n,o){var s=o.find(n(r(467)),["Complex"]),u=o("asinh",{number:function(e){return Math.log(Math.sqrt(e*e+1)+e)},Complex:function(e){var t=e.im,r=(e.im=-e.re,e.re=t,s(e));return e.re=-e.im,e.im=t,t=r.re,r.re=-r.im,r.im=t,r},BigNumber:function(t){return a(t,e.BigNumber,!0,!1)},"Array | Matrix":function(e){return i(e,u,!0)}});return u.toTex="\\sinh^{-1}\\left(${args[0]}\\right)",u}},function(e,t,r){"use strict";var i=r(19),a=r(450);t.name="asec",t.factory=function(e,t,n,o){function s(t){var r;return 0==t.re&&0==t.im?new e.Complex(0,1/0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re=t.re/r,t.im=-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))}var u=o.find(n(r(449)),["Complex"]),c=o("asec",{number:function(r){return r<=-1||1<=r||t.predictable?Math.acos(1/r):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\sec^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(460);t.name="asech",t.factory=function(e,t,n,o){function s(t){var r;return 0==t.re&&0==t.im?new e.Complex(1/0,0):(t=0!=(r=t.re*t.re+t.im*t.im)?new e.Complex(t.re/r,-t.im/r):new e.Complex(0!=t.re?t.re/0:0,0!=t.im?-t.im/0:0),u(t))}var u=o.find(n(r(459)),["Complex"]),c=o("asech",{number:function(r){var n;return r<=1&&-1<=r||t.predictable?(r=1/r,n=Math.sqrt(r*r-1),0<r||t.predictable?Math.log(n+r):new e.Complex(Math.log(n-r),Math.PI)):s(new e.Complex(r,0))},Complex:s,BigNumber:function(t){return a(t,e.BigNumber,!1,!0)},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\mathrm{sech}^{-1}\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(473);t.name="atan2",t.factory=function(e,t,n,a){var o=n(r(50)),s=n(r(354)),u=n(r(59)),c=n(r(356)),f=n(r(84)),l=n(r(61)),p=n(r(55)),m=n(r(56)),h=a("atan2",{"number, number":Math.atan2,"BigNumber, BigNumber":function(t,r){return i(t,r,e.BigNumber)},"Matrix, Matrix":function(e,t){e="sparse"===e.storage()?"sparse"===t.storage()?c(e,t,h,!1):s(t,e,h,!0):"sparse"===t.storage()?u(e,t,h,!1):p(e,t,h);return e},"Array, Array":function(e,t){return h(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return h(o(e),t)},"Matrix, Array":function(e,t){return h(e,o(t))},"Matrix, number | BigNumber":function(e,t){e=("sparse"===e.storage()?f:m)(e,t,h,!1);return e},"number | BigNumber, Matrix":function(e,t){t=("sparse"===t.storage()?l:m)(t,e,h,!0);return t},"Array, number | BigNumber":function(e,t){return m(o(e),t,h,!1).valueOf()},"number | BigNumber, Array":function(e,t){return m(o(t),e,h,!0).valueOf()}});return h.toTex="\\mathrm{atan2}\\left(${args}\\right)",h}},function(e,t,r){var n=r(93),i=r(451);e.exports=function(e,t,r){var a=r.precision;if(t.isZero())return e.isZero()?new r(NaN):((o=n.pi(r.constructor({precision:a+2})).div(2).toDP(a-1)).constructor=r,o.s=e.s,o);r.config({precision:a+2});var o=i(e.div(t),r,!1);return t.isNegative()&&(t=n.pi(r),o=e.isNegative()?o.minus(t):o.plus(t)),(o.constructor=r).config({precision:a}),o.toDP(a-1)}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="cos",t.factory=function(e,t,n,o){var s=o.find(n(r(475)),["number"]),u=o.find(n(r(477)),["number"]),c=o("cos",{number:Math.cos,Complex:function(t){return new e.Complex(Math.cos(t.re)*s(-t.im),Math.sin(t.re)*u(-t.im))},BigNumber:function(t){return a(t,e.BigNumber,0,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return c(t.value);throw new TypeError("Unit in function cos is no angle")},"Array | Matrix":function(e){return i(e,c)}});return c.toTex="\\cos\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";function i(e){return(Math.exp(e)+Math.exp(-e))/2}var a=r(19),o=r(476);t.name="cosh",t.factory=function(e,t,r,n){var s=n("cosh",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re);return new e.Complex(Math.cos(t.im)*(r+n)/2,Math.sin(t.im)*(r-n)/2)},BigNumber:function(t){return o(t,e.BigNumber,!1,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function cosh is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\cosh\\left(${args[0]}\\right)",s}},function(e,t){e.exports=function(e,t,r,n){var i,a;return e.isNaN()?new t(NaN):e.isFinite()?(i=t.precision,t.config({precision:i+4}),(a=new t(e)).constructor=t,a=a.exp(),a=r?a.minus(t.ONE.div(a)):a.plus(t.ONE.div(a)),a=n?new t(2).div(a):a.div(2),t.config({precision:i}),new t(a.toPrecision(i))):new t(n?0:r?e:1/0)}},function(e,t,r){"use strict";function i(e){return Math.abs(e)<1?e+e*e*e/6+e*e*e*e*e/120:(Math.exp(e)-Math.exp(-e))/2}var a=r(19),o=r(476);t.name="sinh",t.factory=function(e,t,r,n){var s=n("sinh",{number:i,Complex:function(t){var r=Math.cos(t.im),n=Math.sin(t.im),i=Math.exp(t.re),t=Math.exp(-t.re);return new e.Complex(r*(i-t)/2,n*(i+t)/2)},BigNumber:function(t){return o(t,e.BigNumber,!0,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function sinh is no angle")},"Array | Matrix":function(e){return a(e,s,!0)}});return s.toTex="\\sinh\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(479);t.name="cot",t.factory=function(e,t,r,n){var o=n("cot",{number:function(e){return 1/Math.tan(e)},Complex:function(t){var r=Math.exp(-4*t.im)-2*Math.exp(-2*t.im)*Math.cos(2*t.re)+1;return new e.Complex(2*Math.exp(-2*t.im)*Math.sin(2*t.re)/r,(Math.exp(-4*t.im)-1)/r)},BigNumber:function(t){return a(t,e.BigNumber,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function cot is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\cot\\left(${args[0]}\\right)",o}},function(e,t,r){var n=r(93),i=r(455),a=r(458),o=r(456);e.exports=function(e,t,r){if(e.isNaN())return new t(NaN);var s=t.precision,c=(u=n.pi(t.constructor({precision:s+2}))).div(2).toDP(s-1),u=u.toDP(s-1),f=o(e,t,1)[0];if(f.abs().eq(u))return new t(1/0);t.config({precision:s+4});var l=i(f,t,1,!1),p=a(l),l=l.toDP(s),p=p.toDP(s),e=(f.eq(e)?f.gt(c)&&(p.s=-p.s):u.minus(f.abs()).gt(c)&&(p.s=-p.s),r?p.div(l):l.div(p));return t.config({precision:s}),new t(e.toPrecision(s))}},function(e,t,r){"use strict";function i(e){e=Math.exp(2*e);return(e+1)/(e-1)}var a=r(19),o=r(481);t.name="coth",t.factory=function(e,t,r,n){var s=n("coth",{number:i,Complex:function(t){var r=Math.exp(2*t.re),n=r*Math.cos(2*t.im),r=r*Math.sin(2*t.im),t=(n-1)*(n-1)+r*r;return new e.Complex(((1+n)*(n-1)+r*r)/t,-2*r/t)},BigNumber:function(t){return o(t,e.BigNumber,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function coth is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\coth\\left(${args[0]}\\right)",s}},function(e,t){e.exports=function(e,t,r){var n,i,o,s;return e.isNaN()?new t(NaN):e.isFinite()?(n=t.precision,t.config({precision:n+4}),(i=new t(e)).constructor=t,i=i.exp(),o=t.ONE.div(i),s=i.minus(o),s=r?i.plus(o).div(s):s.div(i.plus(o)),t.config({precision:n}),s.toDP(n-1)):new t(e.s)}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="csc",t.factory=function(e,t,r,n){var o=n("csc",{number:function(e){return 1/Math.sin(e)},Complex:function(t){var r=.25*(Math.exp(-2*t.im)+Math.exp(2*t.im))-.5*Math.cos(2*t.re);return new e.Complex(.5*Math.sin(t.re)*(Math.exp(-t.im)+Math.exp(t.im))/r,.5*Math.cos(t.re)*(Math.exp(-t.im)-Math.exp(t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,1,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function csc is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\csc\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){return 0==e?Number.POSITIVE_INFINITY:Math.abs(2/(Math.exp(e)-Math.exp(-e)))*s(e)}var a=r(19),o=r(476),s=r(6).sign;t.name="csch",t.factory=function(e,t,r,n){var s=n("csch",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re),i=Math.cos(t.im)*(r-n),t=Math.sin(t.im)*(r+n),r=i*i+t*t;return new e.Complex(2*i/r,-2*t/r)},BigNumber:function(t){return o(t,e.BigNumber,!0,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function csch is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\mathrm{csch}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="sec",t.factory=function(e,t,r,n){var o=n("sec",{number:function(e){return 1/Math.cos(e)},Complex:function(t){var r=.25*(Math.exp(-2*t.im)+Math.exp(2*t.im))+.5*Math.cos(2*t.re);return new e.Complex(.5*Math.cos(t.re)*(Math.exp(-t.im)+Math.exp(t.im))/r,.5*Math.sin(t.re)*(Math.exp(t.im)-Math.exp(-t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,0,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function sec is no angle")},"Array | Matrix":function(e){return i(e,o)}});return o.toTex="\\sec\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){return 2/(Math.exp(e)+Math.exp(-e))}var a=r(19),o=r(476);t.name="sech",t.factory=function(e,t,r,n){var s=n("sech",{number:i,Complex:function(t){var r=Math.exp(t.re),n=Math.exp(-t.re),i=Math.cos(t.im)*(r+n),t=Math.sin(t.im)*(r-n),r=i*i+t*t;return new e.Complex(2*i/r,-2*t/r)},BigNumber:function(t){return o(t,e.BigNumber,!1,!0)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function sech is no angle")},"Array | Matrix":function(e){return a(e,s)}});return s.toTex="\\mathrm{sech}\\left(${args[0]}\\right)",s}},function(e,t,r){"use strict";var i=r(19),a=r(455);t.name="sin",t.factory=function(e,t,n,o){var s=o.find(n(r(475)),["number"]),u=o.find(n(r(477)),["number"]),c=o("sin",{number:Math.sin,Complex:function(t){return new e.Complex(Math.sin(t.re)*s(-t.im),Math.cos(t.re)*u(t.im))},BigNumber:function(t){return a(t,e.BigNumber,1,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return c(t.value);throw new TypeError("Unit in function sin is no angle")},"Array | Matrix":function(e){return i(e,c,!0)}});return c.toTex="\\sin\\left(${args[0]}\\right)",c}},function(e,t,r){"use strict";var i=r(19),a=r(479);t.name="tan",t.factory=function(e,t,r,n){var o=n("tan",{number:Math.tan,Complex:function(t){var r=Math.exp(-4*t.im)+2*Math.exp(-2*t.im)*Math.cos(2*t.re)+1;return new e.Complex(2*Math.exp(-2*t.im)*Math.sin(2*t.re)/r,(1-Math.exp(-4*t.im))/r)},BigNumber:function(t){return a(t,e.BigNumber,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return o(t.value);throw new TypeError("Unit in function tan is no angle")},"Array | Matrix":function(e){return i(e,o,!0)}});return o.toTex="\\tan\\left(${args[0]}\\right)",o}},function(e,t,r){"use strict";function i(e){e=Math.exp(2*e);return(e-1)/(e+1)}var a=r(19),o=r(481);t.name="tanh",t.factory=function(e,t,r,n){var s=n("tanh",{number:i,Complex:function(t){var r=Math.exp(2*t.re),n=r*Math.cos(2*t.im),r=r*Math.sin(2*t.im),t=(1+n)*(1+n)+r*r;return new e.Complex(((n-1)*(1+n)+r*r)/t,2*r/t)},BigNumber:function(t){return o(t,e.BigNumber,!1)},Unit:function(t){if(t.hasBase(e.Unit.BASE_UNITS.ANGLE))return s(t.value);throw new TypeError("Unit in function tanh is no angle")},"Array | Matrix":function(e){return a(e,s,!0)}});return s.toTex="\\tanh\\left(${args[0]}\\right)",s}},function(e,t,r){e.exports=[r(490)]},function(e,t,r){"use strict";t.name="to",t.factory=function(e,t,n,i){var a=r(29),o=n(r(50)),s=n(r(55)),u=n(r(56)),c=i("to",{"Unit, Unit | string":function(e,t){return e.to(t)},"Matrix, Matrix":function(e,t){return s(e,t,c)},"Array, Array":function(e,t){return c(o(e),o(t)).valueOf()},"Array, Matrix":function(e,t){return c(o(e),t)},"Matrix, Array":function(e,t){return c(e,o(t))},"Matrix, any":function(e,t){return u(e,t,c,!1)},"any, Matrix":function(e,t){return u(t,e,c,!0)},"Array, any":function(e,t){return u(o(e),t,c,!1).valueOf()},"any, Array":function(e,t){return u(o(t),e,c,!0).valueOf()}});return c.toTex="\\left(${args[0]}"+a.operators.to+"${args[1]}\\right)",c}},function(e,t,r){e.exports=[r(492),r(297),r(88),r(400),r(350),r(87),r(363),r(414),r(302),r(442),r(493),r(494),r(89),r(299)]},function(e,t,r){"use strict";var i=r(3);t.name="clone",t.factory=function(e,t,r,n){return(n=n("clone",{any:i.clone})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";function i(e,t,r){return e.replace(/\$([\w\.]+)/g,function(e,n){for(var i=n.split("."),s=t[i.shift()];i.length&&void 0!==s;)var u=i.shift(),s=u?s[u]:s+".";return void 0!==s?a(s)?s:o(s,r):e})}var a=r(23).isString,o=r(23).format;t.name="print",t.factory=function(e,t,r,n){return(n=n("print",{"string, Object":i,"string, Object, number":i})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){"use strict";var i=r(39).size;t.name="sort",t.factory=function(e,t,n,a){function o(e){if("asc"===e)return f;if("desc"===e)return l;throw new Error('String "asc" or "desc" expected')}function s(e){if(1!==i(e).length)throw new Error("One dimensional array expected")}function u(e){if(1!==e.size().length)throw new Error("One dimensional matrix expected")}function l(e,t){return-f(e,t)}var c=n(r(50)),f=n(r(436));return(n=a("sort",{Array:function(e){return s(e),e.sort(f)},Matrix:function(e){return u(e),c(e.toArray().sort(f),e.storage())},"Array, function":function(e,t){return s(e),e.sort(t)},"Matrix, function":function(e,t){return u(e),c(e.toArray().sort(t),e.storage())},"Array, string":function(e,t){return s(e),e.sort(o(t))},"Matrix, string":function(e,t){return u(e),c(e.toArray().sort(o(t)),e.storage())}})).toTex="\\mathrm{${name}}\\left(${args}\\right)",n}},function(e,t,r){e.exports=[r(496)]},function(e,t){"use strict";t.name="reviver",t.path="json",t.factory=function(e,t,r,n){return function(t,r){var n=e[r&&r.mathjs];return n&&"function"==typeof n.fromJSON?n.fromJSON(r):r}}},function(e,t,r){"use strict";var n=r(11),i=r(41),a=r(42);e.exports=[{name:"ArgumentsError",path:"error",factory:function(){return n}},{name:"DimensionError",path:"error",factory:function(){return i}},{name:"IndexError",path:"error",factory:function(){return a}}]}],r={},t.m=e,t.c=r,t.p="",t(0);function t(n){var i;return(r[n]||(i=r[n]={exports:{},id:n,loaded:!1},e[n].call(i.exports,i,i.exports,t),i.loaded=!0,i)).exports}var e,r}),!function(){function n(n){return function(r,e,u,i){e=b(e,i,4);var o=!k(r)&&m.keys(r),a=(o||r).length,c=0<n?0:a-1;return arguments.length<3&&(u=r[o?o[c]:c],c+=n),function(t,r,e,u,i,o){for(;0<=i&&i<o;i+=n){var a=u?u[i]:i;e=r(e,t[a],a,t)}return e}(r,e,u,o,c,a)}}function t(n){return function(t,r,e){r=x(r,e);for(var u=O(t),i=0<n?0:u-1;0<=i&&i<u;i+=n)if(r(t[i],i,t))return i;return-1}}function r(n,t,r){return function(e,u,i){var o=0,a=O(e);if("number"==typeof i)0<n?o=0<=i?i:Math.max(i+a,o):a=0<=i?Math.min(i+1,a):i+a+1;else if(r&&i&&a)return e[i=r(e,u)]===u?i:-1;if(u!=u)return 0<=(i=t(l.call(e,o,a),m.isNaN))?i+o:-1;for(i=0<n?o:a-1;0<=i&&i<a;i+=n)if(e[i]===u)return i;return-1}}function e(n,t){var r=I.length,e=n.constructor,u=m.isFunction(e)&&e.prototype||a,i="constructor";for(m.has(n,i)&&!m.contains(t,i)&&t.push(i);r--;)(i=I[r])in n&&n[i]!==u[i]&&!m.contains(t,i)&&t.push(i)}function _(n,t){return function(r){var e=arguments.length;if(!(e<2||null==r))for(var u=1;u<e;u++)for(var i=arguments[u],o=n(i),a=o.length,c=0;c<a;c++){var f=o[c];t&&void 0!==r[f]||(r[f]=i[f])}return r}}function w(n){return function(t){return null==t?void 0:t[n]}}function F(n){return function(t,r,e){var u={};return r=x(r,e),m.each(t,function(e,i){i=r(e,i,t);n(u,e,i)}),u}}function E(n,t,r,e,u){return e instanceof t?(e=j(n.prototype),t=n.apply(e,u),m.isObject(t)?t:e):n.apply(r,u)}function R(n){function t(t){return n[t]}var r="(?:"+m.keys(n).join("|")+")",e=RegExp(r),u=RegExp(r,"g");return function(n){return e.test(n=null==n?"":""+n)?n.replace(u,t):n}}function L(n){return"\\"+z[n]}function P(n,t){return n._chain?m(t).chain():t}var u=this,i=u._,o=Array.prototype,a=Object.prototype,c=Function.prototype,f=o.push,l=o.slice,s=a.toString,p=a.hasOwnProperty,h=Array.isArray,v=Object.keys,g=c.bind,y=Object.create,d=function(){},m=function(n){return n instanceof m?n:this instanceof m?void(this._wrapped=n):new m(n)},b=("undefined"!=typeof exports?(exports="undefined"!=typeof module&&module.exports?module.exports=m:exports)._=m:u._=m,m.VERSION="1.8.3",function(n,t,r){if(void 0===t)return n;switch(null==r?3:r){case 1:return function(r){return n.call(t,r)};case 2:return function(r,e){return n.call(t,r,e)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)}}return function(){return n.apply(t,arguments)}}),x=function(n,t,r){return null==n?m.identity:m.isFunction(n)?b(n,t,r):m.isObject(n)?m.matcher(n):m.property(n)},j=(m.iteratee=function(n,t){return x(n,t,1/0)},function(n){if(!m.isObject(n))return{};if(y)return y(n);d.prototype=n;n=new d;return d.prototype=null,n}),A=Math.pow(2,53)-1,O=w("length"),k=function(n){n=O(n);return"number"==typeof n&&0<=n&&n<=A},S=(m.each=m.forEach=function(n,t,r){if(t=b(t,r),k(n))for(e=0,u=n.length;e<u;e++)t(n[e],e,n);else for(var i=m.keys(n),e=0,u=i.length;e<u;e++)t(n[i[e]],i[e],n);return n},m.map=m.collect=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=Array(u),o=0;o<u;o++){var a=e?e[o]:o;i[o]=t(n[a],a,n)}return i},m.reduce=m.foldl=m.inject=n(1),m.reduceRight=m.foldr=n(-1),m.find=m.detect=function(n,t,r){t=k(n)?m.findIndex(n,t,r):m.findKey(n,t,r);return void 0!==t&&-1!==t?n[t]:void 0},m.filter=m.select=function(n,t,r){var e=[];return t=x(t,r),m.each(n,function(n,r,u){t(n,r,u)&&e.push(n)}),e},m.reject=function(n,t,r){return m.filter(n,m.negate(x(t)),r)},m.every=m.all=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(!t(n[o],o,n))return!1}return!0},m.some=m.any=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(t(n[o],o,n))return!0}return!1},m.contains=m.includes=m.include=function(n,t,r,e){return k(n)||(n=m.values(n)),0<=m.indexOf(n,t,r="number"==typeof r&&!e?r:0)},m.invoke=function(n,t){var r=l.call(arguments,2),e=m.isFunction(t);return m.map(n,function(n){var u=e?t:n[t];return null==u?u:u.apply(n,r)})},m.pluck=function(n,t){return m.map(n,m.property(t))},m.where=function(n,t){return m.filter(n,m.matcher(t))},m.findWhere=function(n,t){return m.find(n,m.matcher(t))},m.max=function(n,t,r){var e,u,i=-1/0,o=-1/0;if(null==t&&null!=n)for(var a=0,c=(n=k(n)?n:m.values(n)).length;a<c;a++)e=n[a],i<e&&(i=e);else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(o<u||u===-1/0&&i===-1/0)&&(i=n,o=u)});return i},m.min=function(n,t,r){var e,u,i=1/0,o=1/0;if(null==t&&null!=n)for(var a=0,c=(n=k(n)?n:m.values(n)).length;a<c;a++)(e=n[a])<i&&(i=e);else t=x(t,r),m.each(n,function(n,r,e){((u=t(n,r,e))<o||1/0===u&&1/0===i)&&(i=n,o=u)});return i},m.shuffle=function(n){for(var t,r=k(n)?n:m.values(n),e=r.length,u=Array(e),i=0;i<e;i++)(t=m.random(0,i))!==i&&(u[i]=u[t]),u[t]=r[i];return u},m.sample=function(n,t,r){return null==t||r?(n=k(n)?n:m.values(n))[m.random(n.length-1)]:m.shuffle(n).slice(0,Math.max(0,t))},m.sortBy=function(n,t,r){return t=x(t,r),m.pluck(m.map(n,function(n,r,e){return{value:n,index:r,criteria:t(n,r,e)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(e<r||void 0===r)return 1;if(r<e||void 0===e)return-1}return n.index-t.index}),"value")},m.groupBy=F(function(n,t,r){m.has(n,r)?n[r].push(t):n[r]=[t]}),m.indexBy=F(function(n,t,r){n[r]=t}),m.countBy=F(function(n,t,r){m.has(n,r)?n[r]++:n[r]=1}),m.toArray=function(n){return n?m.isArray(n)?l.call(n):k(n)?m.map(n,m.identity):m.values(n):[]},m.size=function(n){return null==n?0:(k(n)?n:m.keys(n)).length},m.partition=function(n,t,r){t=x(t,r);var e=[],u=[];return m.each(n,function(n,r,i){(t(n,r,i)?e:u).push(n)}),[e,u]},m.first=m.head=m.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:m.initial(n,n.length-t)},m.initial=function(n,t,r){return l.call(n,0,Math.max(0,n.length-(null==t||r?1:t)))},m.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:m.rest(n,Math.max(0,n.length-t))},m.rest=m.tail=m.drop=function(n,t,r){return l.call(n,null==t||r?1:t)},m.compact=function(n){return m.filter(n,m.identity)},function(n,t,r,e){for(var u=[],i=0,o=e||0,a=O(n);o<a;o++){var c=n[o];if(k(c)&&(m.isArray(c)||m.isArguments(c))){var f=0,l=(c=t?c:S(c,t,r)).length;for(u.length+=l;f<l;)u[i++]=c[f++]}else r||(u[i++]=c)}return u}),M=(m.flatten=function(n,t){return S(n,t,!1)},m.without=function(n){return m.difference(n,l.call(arguments,1))},m.uniq=m.unique=function(n,t,r,e){m.isBoolean(t)||(e=r,r=t,t=!1),null!=r&&(r=x(r,e));for(var u=[],i=[],o=0,a=O(n);o<a;o++){var c=n[o],f=r?r(c,o,n):c;t?(o&&i===f||u.push(c),i=f):r?m.contains(i,f)||(i.push(f),u.push(c)):m.contains(u,c)||u.push(c)}return u},m.union=function(){return m.uniq(S(arguments,!0,!0))},m.intersection=function(n){for(var t=[],r=arguments.length,e=0,u=O(n);e<u;e++){var i=n[e];if(!m.contains(t,i)){for(var o=1;o<r&&m.contains(arguments[o],i);o++);o===r&&t.push(i)}}return t},m.difference=function(n){var t=S(arguments,!0,!0,1);return m.filter(n,function(n){return!m.contains(t,n)})},m.zip=function(){return m.unzip(arguments)},m.unzip=function(n){for(var t=n&&m.max(n,O).length||0,r=Array(t),e=0;e<t;e++)r[e]=m.pluck(n,e);return r},m.object=function(n,t){for(var r={},e=0,u=O(n);e<u;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},m.findIndex=t(1),m.findLastIndex=t(-1),m.sortedIndex=function(n,t,r,e){for(var u=(r=x(r,e,1))(t),i=0,o=O(n);i<o;){var a=Math.floor((i+o)/2);r(n[a])<u?i=a+1:o=a}return i},m.indexOf=r(1,m.findIndex,m.sortedIndex),m.lastIndexOf=r(-1,m.findLastIndex),m.range=function(n,t,r){null==t&&(t=n||0,n=0),r=r||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=Array(e),i=0;i<e;i++,n+=r)u[i]=n;return u},m.bind=function(n,t){if(g&&n.bind===g)return g.apply(n,l.call(arguments,1));var r,e;if(m.isFunction(n))return r=l.call(arguments,2),e=function(){return E(n,e,t,this,r.concat(l.call(arguments)))};throw new TypeError("Bind must be called on a function")},m.partial=function(n){function r(){for(var e=0,u=t.length,i=Array(u),o=0;o<u;o++)i[o]=t[o]===m?arguments[e++]:t[o];for(;e<arguments.length;)i.push(arguments[e++]);return E(n,r,this,this,i)}var t=l.call(arguments,1);return r},m.bindAll=function(n){var t,r,e=arguments.length;if(e<=1)throw new Error("bindAll must be passed function names");for(t=1;t<e;t++)n[r=arguments[t]]=m.bind(n[r],n);return n},m.memoize=function(n,t){function r(e){var u=r.cache,i=""+(t?t.apply(this,arguments):e);return m.has(u,i)||(u[i]=n.apply(this,arguments)),u[i]}return r.cache={},r},m.delay=function(n,t){var r=l.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},m.defer=m.partial(m.delay,m,1),m.throttle=function(n,t,r){function c(){a=!1===r.leading?0:m.now(),o=null,i=n.apply(e,u),o||(e=u=null)}var e,u,i,o=null,a=0;r=r||{};return function(){var f=m.now(),l=(a||!1!==r.leading||(a=f),t-(f-a));return e=this,u=arguments,l<=0||t<l?(o&&(clearTimeout(o),o=null),a=f,i=n.apply(e,u),o||(e=u=null)):o||!1===r.trailing||(o=setTimeout(c,l)),i}},m.debounce=function(n,t,r){function c(){var f=m.now()-o;f<t&&0<=f?e=setTimeout(c,t-f):(e=null,r||(a=n.apply(i,u),e)||(i=u=null))}var e,u,i,o,a;return function(){i=this,u=arguments,o=m.now();var f=r&&!e;return e=e||setTimeout(c,t),f&&(a=n.apply(i,u),i=u=null),a}},m.wrap=function(n,t){return m.partial(t,n)},m.negate=function(n){return function(){return!n.apply(this,arguments)}},m.compose=function(){var n=arguments,t=n.length-1;return function(){for(var r=t,e=n[t].apply(this,arguments);r--;)e=n[r].call(this,e);return e}},m.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},m.before=function(n,t){var r;return function(){return 0<--n&&(r=t.apply(this,arguments)),n<=1&&(t=null),r}},m.once=m.partial(m.before,2),!{toString:null}.propertyIsEnumerable("toString")),I=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],N=(m.keys=function(n){if(!m.isObject(n))return[];if(v)return v(n);var r,t=[];for(r in n)m.has(n,r)&&t.push(r);return M&&e(n,t),t},m.allKeys=function(n){if(!m.isObject(n))return[];var r,t=[];for(r in n)t.push(r);return M&&e(n,t),t},m.values=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;u<r;u++)e[u]=n[t[u]];return e},m.mapObject=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=u.length,o={},a=0;a<i;a++)o[e=u[a]]=t(n[e],e,n);return o},m.pairs=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;u<r;u++)e[u]=[t[u],n[t[u]]];return e},m.invert=function(n){for(var t={},r=m.keys(n),e=0,u=r.length;e<u;e++)t[n[r[e]]]=r[e];return t},m.functions=m.methods=function(n){var r,t=[];for(r in n)m.isFunction(n[r])&&t.push(r);return t.sort()},m.extend=_(m.allKeys),m.extendOwn=m.assign=_(m.keys),m.findKey=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=0,o=u.length;i<o;i++)if(t(n[e=u[i]],e,n))return e},m.pick=function(n,t,r){var e,u,i={},o=n;if(null!=o){m.isFunction(t)?(u=m.allKeys(o),e=b(t,r)):(u=S(arguments,!1,!1,1),e=function(n,t,r){return t in r},o=Object(o));for(var a=0,c=u.length;a<c;a++){var f=u[a],l=o[f];e(l,f,o)&&(i[f]=l)}}return i},m.omit=function(n,t,r){var e;return t=m.isFunction(t)?m.negate(t):(e=m.map(S(arguments,!1,!1,1),String),function(n,t){return!m.contains(e,t)}),m.pick(n,t,r)},m.defaults=_(m.allKeys,!0),m.create=function(n,t){n=j(n);return t&&m.extendOwn(n,t),n},m.clone=function(n){return m.isObject(n)?m.isArray(n)?n.slice():m.extend({},n):n},m.tap=function(n,t){return t(n),n},m.isMatch=function(n,t){var r=m.keys(t),e=r.length;if(null==n)return!e;for(var u=Object(n),i=0;i<e;i++){var o=r[i];if(t[o]!==u[o]||!(o in u))return!1}return!0},function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof m&&(n=n._wrapped),t instanceof m&&(t=t._wrapped);var u=s.call(n);if(u!==s.call(t))return!1;switch(u){case"[object RegExp]":case"[object String]":return""+n==""+t;case"[object Number]":return+n!=+n?+t!=+t:0==+n?1/+n==1/t:+n==+t;case"[object Date]":case"[object Boolean]":return+n==+t}u="[object Array]"===u;if(!u){if("object"!=typeof n||"object"!=typeof t)return!1;var o=n.constructor,a=t.constructor;if(o!==a&&!(m.isFunction(o)&&o instanceof o&&m.isFunction(a)&&a instanceof a)&&"constructor"in n&&"constructor"in t)return!1}e=e||[];for(var c=(r=r||[]).length;c--;)if(r[c]===n)return e[c]===t;if(r.push(n),e.push(t),u){if((c=n.length)!==t.length)return!1;for(;c--;)if(!N(n[c],t[c],r,e))return!1}else{var f,l=m.keys(n),c=l.length;if(m.keys(t).length!==c)return!1;for(;c--;)if(f=l[c],!m.has(t,f)||!N(n[f],t[f],r,e))return!1}return r.pop(),e.pop(),!0}),c=(m.isEqual=function(n,t){return N(n,t)},m.isEmpty=function(n){return null==n||(k(n)&&(m.isArray(n)||m.isString(n)||m.isArguments(n))?0===n.length:0===m.keys(n).length)},m.isElement=function(n){return!(!n||1!==n.nodeType)},m.isArray=h||function(n){return"[object Array]"===s.call(n)},m.isObject=function(n){var t=typeof n;return"function"==t||"object"==t&&!!n},m.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(n){m["is"+n]=function(t){return s.call(t)==="[object "+n+"]"}}),m.isArguments(arguments)||(m.isArguments=function(n){return m.has(n,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(m.isFunction=function(n){return"function"==typeof n||!1}),m.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},m.isNaN=function(n){return m.isNumber(n)&&n!==+n},m.isBoolean=function(n){return!0===n||!1===n||"[object Boolean]"===s.call(n)},m.isNull=function(n){return null===n},m.isUndefined=function(n){return void 0===n},m.has=function(n,t){return null!=n&&p.call(n,t)},m.noConflict=function(){return u._=i,this},m.identity=function(n){return n},m.constant=function(n){return function(){return n}},m.noop=function(){},m.property=w,m.propertyOf=function(n){return null==n?function(){}:function(t){return n[t]}},m.matcher=m.matches=function(n){return n=m.extendOwn({},n),function(t){return m.isMatch(t,n)}},m.times=function(n,t,r){var e=Array(Math.max(0,n));t=b(t,r,1);for(var u=0;u<n;u++)e[u]=t(u);return e},m.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},m.now=Date.now||function(){return(new Date).getTime()},{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"}),h=m.invert(c),q=(m.escape=R(c),m.unescape=R(h),m.result=function(n,t,r){t=null==n?void 0:n[t];return m.isFunction(t=void 0===t?r:t)?t.call(n):t},0),K=(m.uniqueId=function(n){var t=++q+"";return n?n+t:t},m.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g},/(.)^/),z={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\u2028|\u2029/g;m.template=function(n,t,r){t=m.defaults({},t=!t&&r?r:t,m.templateSettings);var r=RegExp([(t.escape||K).source,(t.interpolate||K).source,(t.evaluate||K).source].join("|")+"|$","g"),u=0,i="__p+='";n.replace(r,function(t,r,e,o,a){return i+=n.slice(u,a).replace(D,L),u=a+t.length,r?i+="'+\n((__t=("+r+"))==null?'':_underscore.escape(__t))+\n'":e?i+="'+\n((__t=("+e+"))==null?'':__t)+\n'":o&&(i+="';\n"+o+"\n__p+='"),t}),i+="';\n",i="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+(i=t.variable?i:"with(obj||{}){\n"+i+"}\n")+"return __p;\n";try{var o=new Function(t.variable||"obj","_",i)}catch(a){throw a.source=i,a}function c(n){return o.call(this,n,m)}r=t.variable||"obj";return c.source="function("+r+"){\n"+i+"}",c},m.chain=function(n){n=m(n);return n._chain=!0,n};m.mixin=function(n){m.each(m.functions(n),function(t){var r=m[t]=n[t];m.prototype[t]=function(){var n=[this._wrapped];return f.apply(n,arguments),P(this,r.apply(m,n))}})},m.mixin(m),m.each(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=o[n];m.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!==n&&"splice"!==n||0!==r.length||delete r[0],P(this,r)}}),m.each(["concat","join","slice"],function(n){var t=o[n];m.prototype[n]=function(){return P(this,t.apply(this._wrapped,arguments))}}),m.prototype.value=function(){return this._wrapped},m.prototype.valueOf=m.prototype.toJSON=m.prototype.value,m.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return m})}.call(this);var VBacktest=(()=>{var _scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(moduleArg={}){var Module=moduleArg,readyPromiseResolve,readyPromiseReject,Std=(Module.ready=new Promise((resolve,reject)=>{readyPromiseResolve=resolve,readyPromiseReject=reject}),{_skip:function(arr,period){for(var j=0,k=0;j<arr.length&&(isNaN(arr[j])||k++,k!=period);j++);return j},_sum:function(arr,num){for(var sum=0,i=0;i<num;i++)isNaN(arr[i])||(sum+=arr[i]);return sum},_avg:function(arr,num){for(var n=0,sum=0,i=0;i<num;i++)isNaN(arr[i])||(sum+=arr[i],n++);return sum/n},_zeros:function(len){for(var n=[],i=0;i<len;i++)n.push(0);return n},_set:function(arr,start,end,value){for(var e=Math.min(arr.length,end),i=start;i<e;i++)arr[i]=value},_diff:function(a,b){for(var d=[],i=0;i<b.length;i++)isNaN(a[i])||isNaN(b[i])?d.push(NaN):d.push(a[i]-b[i]);return d},_move_diff:function(a){for(var d=[],i=1;i<a.length;i++)d.push(a[i]-a[i-1]);return d},_sma:function(S,period){var R=Std._zeros(S.length),j=Std._skip(S,period);if(Std._set(R,0,j,NaN),j<S.length)for(var sum=0,i=j;i<S.length;i++)i==j?sum=Std._sum(S,i+1):sum+=S[i]-S[i-period],R[i]=sum/period;return R},_smma:function(S,period){var R=Std._zeros(S.length),j=Std._skip(S,period);if(Std._set(R,0,j,NaN),j<S.length){R[j]=Std._avg(S,j+1);for(var i=j+1;i<S.length;i++)R[i]=(R[i-1]*(period-1)+S[i])/period}return R},_ema:function(S,period){var R=Std._zeros(S.length),multiplier=2/(period+1),period=Std._skip(S,period);if(Std._set(R,0,period,NaN),period<S.length){R[period]=Std._avg(S,period+1);for(var i=period+1;i<S.length;i++)R[i]=(S[i]-R[i-1])*multiplier+R[i-1]}return R},_cmp:function(arr,start,end,cmpFunc){for(var v=arr[start],i=start;i<end;i++)v=cmpFunc(arr[i],v);return v},_filt:function(records,n,attr,iv,cmpFunc){if(records.length<2)return NaN;for(var v=iv,pos=0!==n?records.length-Math.min(records.length-1,n)-1:0,i=records.length-2;pos<=i;i--)v=cmpFunc(v,void 0!==attr?records[i][attr]:records[i]);return v},_ticks:function(records){if(0===records.length)return[];var ticks=[];if(void 0!==records[0].Close)for(var i=0;i<records.length;i++)ticks.push(records[i].Close);else ticks=records;return ticks}});function TAInstance(logPtr){var self={_log:logPtr="function"!=typeof logPtr?function(){}:logPtr,Highest:function(records,n,attr){return Std._filt(records,n,attr,Number.MIN_VALUE,Math.max)},Lowest:function(records,n,attr){return Std._filt(records,n,attr,Number.MAX_VALUE,Math.min)},MA:function(records,period){return self._log("MA",period=void 0===period?9:period),Std._sma(Std._ticks(records),period)},SMA:function(records,period){return self._log("SMA",period=void 0===period?9:period),Std._sma(Std._ticks(records),period)},EMA:function(records,period){return self._log("EMA",period=void 0===period?9:period),Std._ema(Std._ticks(records),period)},MACD:function(records,fastEMA,slowEMA,signalEMA){self._log("MACD",fastEMA=void 0===fastEMA?12:fastEMA,slowEMA=void 0===slowEMA?26:slowEMA,signalEMA=void 0===signalEMA?9:signalEMA);records=Std._ticks(records),slowEMA=Std._ema(records,slowEMA),records=Std._ema(records,fastEMA),fastEMA=Std._diff(records,slowEMA),records=Std._ema(fastEMA,signalEMA);return[fastEMA,records,Std._diff(fastEMA,records)]},BOLL:function(records,period,multiplier){self._log("BOLL",period=void 0===period?20:period,multiplier=void 0===multiplier?2:multiplier);for(var S=Std._ticks(records),j=period-1;j<S.length&&isNaN(S[j]);j++);for(var UP=Std._zeros(S.length),MB=Std._zeros(S.length),DN=Std._zeros(S.length),sum=(Std._set(UP,0,j,NaN),Std._set(MB,0,j,NaN),Std._set(DN,0,j,NaN),0),i=j;i<S.length;i++){if(i==j)for(var k=0;k<period;k++)sum+=S[k];else sum=sum+S[i]-S[i-period];for(var ma=sum/period,d=0,m=i+1-period;m<=i;m++)d+=(S[m]-ma)*(S[m]-ma);var stdev=Math.sqrt(d/period),dn=ma-multiplier*stdev;UP[i]=ma+multiplier*stdev,MB[i]=ma,DN[i]=dn}return[UP,MB,DN]},KDJ:function(records,n,k,d){self._log("KDJ",n=void 0===n?9:n,k=void 0===k?3:k,d=void 0===d?3:d);for(var RSV=Std._zeros(records.length),K=(Std._set(RSV,0,n-1,NaN),Std._zeros(records.length)),D=Std._zeros(records.length),J=Std._zeros(records.length),hs=Std._zeros(records.length),ls=Std._zeros(records.length),j=0;j<records.length;j++)hs[j]=records[j].High,ls[j]=records[j].Low;for(var c,h,l,i=0;i<records.length;i++)n-1<=i?(c=records[i].Close,h=Std._cmp(hs,i-(n-1),i+1,Math.max),l=Std._cmp(ls,i-(n-1),i+1,Math.min),RSV[i]=h!=l?(c-l)/(h-l)*100:100,K[i]=(+RSV[i]+(k-1)*K[i-1])/k,D[i]=(+K[i]+(d-1)*D[i-1])/d):(K[i]=D[i]=50,RSV[i]=0),J[i]=3*K[i]-2*D[i];for(var m=0;m<n-1;m++)K[m]=D[m]=J[m]=NaN;return[K,D,J]},RSI:function(records,period){self._log("RSI",period=void 0===period?14:period);var n=period,rsi=Std._zeros(records.length);if(Std._set(rsi,0,rsi.length,NaN),!(records.length<n)){for(var ticks=Std._ticks(records),deltas=Std._move_diff(ticks),seed=deltas.slice(0,n),up=0,down=0,i=0;i<seed.length;i++)0<=seed[i]?up+=seed[i]:down+=seed[i];up/=n;var delta,down=-down/n,upval=(rsi[n]=100-100/(1+(0!=down?up/down:0)),0),downval=0;for(i=n+1;i<ticks.length;i++)downval=0<(delta=deltas[i-1])?(upval=delta,0):(upval=0,-delta),rsi[i]=100-100/(1+(up=(up*(n-1)+upval)/n)/(down=(down*(n-1)+downval)/n))}return rsi},OBV:function(records){if(self._log("OBV"),0===records.length)return[];if(void 0===records[0].Close)throw"argument must KLine";for(var R=[],i=0;i<records.length;i++)0===i?R[i]=records[i].Volume:records[i].Close>=records[i-1].Close?R[i]=R[i-1]+records[i].Volume:R[i]=R[i-1]-records[i].Volume;return R},ATR:function(records,period){if(self._log("ATR",period=void 0===period?14:period),0===records.length)return[];if(void 0===records[0].Close)throw"argument must KLine";for(var R=Std._zeros(records.length),sum=0,n=0,i=0;i<records.length;i++){var TR=0;sum+=TR=0==i?records[i].High-records[i].Low:Math.max(records[i].High-records[i].Low,Math.abs(records[i].High-records[i-1].Close),Math.abs(records[i-1].Close-records[i].Low)),R[i]=n=i<period?sum/(i+1):((period-1)*n+TR)/period}return R},Alligator:function(records,jawLength,teethLength,lipsLength){self._log("Alligator",jawLength=void 0===jawLength?13:jawLength,teethLength=void 0===teethLength?8:teethLength,lipsLength=void 0===lipsLength?5:lipsLength);for(var ticks=[],i=0;i<records.length;i++)ticks.push((records[i].High+records[i].Low)/2);return[[NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN].concat(Std._smma(ticks,jawLength)),[NaN,NaN,NaN,NaN,NaN].concat(Std._smma(ticks,teethLength)),[NaN,NaN,NaN].concat(Std._smma(ticks,lipsLength))]},CMF:function(records,periods){self._log("CMF",periods=periods||20);for(var ret=[],sumD=0,sumV=0,arrD=[],arrV=[],i=0;i<records.length;i++){var d=records[i].High==records[i].Low?0:(2*records[i].Close-records[i].Low-records[i].High)/(records[i].High-records[i].Low)*records[i].Volume;arrD.push(d),arrV.push(records[i].Volume),sumD+=d,sumV+=records[i].Volume,periods<=i&&(sumD-=arrD.shift(),sumV-=arrV.shift()),ret.push(sumD/sumV)}return ret}};return self}var TA=TAInstance();function init_pako(){"use strict";function zswap32(q){return(q>>>24&255)+(q>>>8&65280)+((65280&q)<<8)+((255&q)<<24)}var exports={},adler32_1=function(adler,buf,len,pos){for(var s1=65535&adler|0,s2=adler>>>16&65535|0,n=0;0!==len;){for(len-=n=2e3<len?2e3:len;s2=s2+(s1=s1+buf[pos++]|0)|0,--n;);s1%=65521,s2%=65521}return s1|s2<<16|0},crcTable=new Uint32Array(function(){for(var table=[],n=0;n<256;n++){for(var c=n,k=0;k<8;k++)c=1&c?3988292384^c>>>1:c>>>1;table[n]=c}return table}()),crc32_1=function(crc,buf,len,pos){var t=crcTable,end=pos+len;crc^=-1;for(var i=pos;i<end;i++)crc=crc>>>8^t[255&(crc^buf[i])];return-1^crc},BAD$1=16209,TYPE$1=16191,lbase=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),lext=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dbase=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),dext=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),inftrees=function(type,lens,lens_index,codes,table,table_index,work,opts){for(var incr,fill,low,mask,next,match,here_bits,here_op,here_val,bits=opts.bits,len=0,sym=0,min=0,max=0,root=0,curr=0,drop=0,left=0,used=0,huff=0,base=null,count=new Uint16Array(16),offs=new Uint16Array(16),extra=null,len=0;len<=15;len++)count[len]=0;for(sym=0;sym<codes;sym++)count[lens[lens_index+sym]]++;for(root=bits,max=15;1<=max&&0===count[max];max--);if(max<root&&(root=max),0===max)table[table_index++]=20971520,table[table_index++]=20971520,opts.bits=1;else{for(min=1;min<max&&0===count[min];min++);for(root<min&&(root=min),len=left=1;len<=15;len++)if((left=(left<<=1)-count[len])<0)return-1;if(0<left&&(0===type||1!==max))return-1;for(offs[1]=0,len=1;len<15;len++)offs[len+1]=offs[len]+count[len];for(sym=0;sym<codes;sym++)0!==lens[lens_index+sym]&&(work[offs[lens[lens_index+sym]]++]=sym);if(match=0===type?(base=extra=work,20):1===type?(base=lbase,extra=lext,257):(base=dbase,extra=dext,0),len=min,next=table_index,drop=sym=huff=0,low=-1,mask=(used=1<<(curr=root))-1,1===type&&852<used||2===type&&592<used)return 1;for(;;){for(here_val=work[sym]+1<match?(here_op=0,work[sym]):work[sym]>=match?(here_op=extra[work[sym]-match],base[work[sym]-match]):(here_op=96,0),incr=1<<(here_bits=len-drop),min=fill=1<<curr;table[next+(huff>>drop)+(fill-=incr)]=here_bits<<24|here_op<<16|here_val|0,0!==fill;);for(incr=1<<len-1;huff&incr;)incr>>=1;if(huff=0!==incr?(huff&incr-1)+incr:0,sym++,0==--count[len]){if(len===max)break;len=lens[lens_index+work[sym]]}if(root<len&&(huff&mask)!==low){for(next+=min,left=1<<(curr=len-(drop=0===drop?root:drop));curr+drop<max&&!((left-=count[curr+drop])<=0);)curr++,left<<=1;if(used+=1<<curr,1===type&&852<used||2===type&&592<used)return 1;table[low=huff&mask]=root<<24|curr<<16|next-table_index|0}}0!==huff&&(table[next+huff]=len-drop<<24|64<<16|0),opts.bits=root}return 0},constants$1={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8},LENS=1,DISTS=2,Z_FINISH$1=constants$1.Z_FINISH,Z_BLOCK=constants$1.Z_BLOCK,Z_TREES=constants$1.Z_TREES,Z_OK$1=constants$1.Z_OK,Z_STREAM_END$1=constants$1.Z_STREAM_END,Z_NEED_DICT$1=constants$1.Z_NEED_DICT,Z_STREAM_ERROR$1=constants$1.Z_STREAM_ERROR,Z_DATA_ERROR$1=constants$1.Z_DATA_ERROR,Z_MEM_ERROR$1=constants$1.Z_MEM_ERROR,Z_BUF_ERROR=constants$1.Z_BUF_ERROR,Z_DEFLATED=constants$1.Z_DEFLATED,HEAD=16180,BAD=16209,SYNC=16211,ENOUGH_LENS=852,ENOUGH_DISTS=592;function InflateState(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function inflateResetKeep(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:(state=strm.state,strm.total_in=strm.total_out=state.total=0,strm.msg="",state.wrap&&(strm.adler=1&state.wrap),state.mode=HEAD,state.last=0,state.havedict=0,state.flags=-1,state.dmax=32768,state.head=null,state.hold=0,state.bits=0,state.lencode=state.lendyn=new Int32Array(ENOUGH_LENS),state.distcode=state.distdyn=new Int32Array(ENOUGH_DISTS),state.sane=1,state.back=-1,Z_OK$1)}function inflateReset(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:((state=strm.state).wsize=0,state.whave=0,state.wnext=0,inflateResetKeep(strm))}function inflateInit2(strm,windowBits){var state;return strm?(state=new InflateState,(strm.state=state).strm=strm,state.window=null,state.mode=HEAD,(state=inflateReset2(strm,windowBits))!==Z_OK$1&&(strm.state=null),state):Z_STREAM_ERROR$1}function updatewindow(strm,src,end,copy){var dist;return null===(strm=strm.state).window&&(strm.wsize=1<<strm.wbits,strm.wnext=0,strm.whave=0,strm.window=new Uint8Array(strm.wsize)),copy>=strm.wsize?(strm.window.set(src.subarray(end-strm.wsize,end),0),strm.wnext=0,strm.whave=strm.wsize):(copy<(dist=strm.wsize-strm.wnext)&&(dist=copy),strm.window.set(src.subarray(end-copy,end-copy+dist),strm.wnext),(copy-=dist)?(strm.window.set(src.subarray(end-copy,end),0),strm.wnext=copy,strm.whave=strm.wsize):(strm.wnext+=dist,strm.wnext===strm.wsize&&(strm.wnext=0),strm.whave<strm.wsize&&(strm.whave+=dist))),0}var lenfix,distfix,inflateStateCheck=function(strm){var state;return!strm||!(state=strm.state)||state.strm!==strm||state.mode<HEAD||state.mode>SYNC?1:0},inflateReset2=function(strm,windowBits){var wrap,state;return inflateStateCheck(strm)||(state=strm.state,windowBits<0?(wrap=0,windowBits=-windowBits):(wrap=5+(windowBits>>4),windowBits<48&&(windowBits&=15)),windowBits&&(windowBits<8||15<windowBits))?Z_STREAM_ERROR$1:(null!==state.window&&state.wbits!==windowBits&&(state.window=null),state.wrap=wrap,state.wbits=windowBits,inflateReset(strm))},virgin=!0,inflate_1$1={inflateReset:inflateReset,inflateReset2:inflateReset2,inflateResetKeep:inflateResetKeep,inflateInit:function(strm){return inflateInit2(strm,15)},inflateInit2:inflateInit2,inflate:function(strm,flush){var state,input,output,next,put,have,left,hold,bits,_in,_out,copy,from,from_source,here_bits,here_op,here_val,last_bits,last_op,last_val,len,ret,opts,n,here=0,hbuf=new Uint8Array(4),order=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(inflateStateCheck(strm)||!strm.output||!strm.input&&0!==strm.avail_in)return Z_STREAM_ERROR$1;16191===(state=strm.state).mode&&(state.mode=16192),put=strm.next_out,output=strm.output,left=strm.avail_out,next=strm.next_in,input=strm.input,have=strm.avail_in,hold=state.hold,bits=state.bits,_in=have,_out=left,ret=Z_OK$1;inf_leave:for(;;)switch(state.mode){case HEAD:if(0===state.wrap)state.mode=16192;else{for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}2&state.wrap&&35615===hold?(0===state.wbits&&(state.wbits=15),hbuf[state.check=0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0),bits=hold=0,state.mode=16181):(state.head&&(state.head.done=!1),!(1&state.wrap)||(((255&hold)<<8)+(hold>>8))%31?(strm.msg="incorrect header check",state.mode=BAD):(15&hold)!==Z_DEFLATED?(strm.msg="unknown compression method",state.mode=BAD):(bits-=4,len=8+(15&(hold>>>=4)),0===state.wbits&&(state.wbits=len),15<len||len>state.wbits?(strm.msg="invalid window size",state.mode=BAD):(state.dmax=1<<state.wbits,state.flags=0,strm.adler=state.check=1,state.mode=512&hold?16189:16191,bits=hold=0)))}break;case 16181:for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(state.flags=hold,(255&state.flags)!==Z_DEFLATED){strm.msg="unknown compression method",state.mode=BAD;break}if(57344&state.flags){strm.msg="unknown header flags set",state.mode=BAD;break}state.head&&(state.head.text=hold>>8&1),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0,state.mode=16182;case 16182:for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.head&&(state.head.time=hold),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,hbuf[2]=hold>>>16&255,hbuf[3]=hold>>>24&255,state.check=crc32_1(state.check,hbuf,4,0)),bits=hold=0,state.mode=16183;case 16183:for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.head&&(state.head.xflags=255&hold,state.head.os=hold>>8),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0,state.mode=16184;case 16184:if(1024&state.flags){for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.length=hold,state.head&&(state.head.extra_len=hold),512&state.flags&&4&state.wrap&&(hbuf[0]=255&hold,hbuf[1]=hold>>>8&255,state.check=crc32_1(state.check,hbuf,2,0)),bits=hold=0}else state.head&&(state.head.extra=null);state.mode=16185;case 16185:if(1024&state.flags&&((copy=have<(copy=state.length)?have:copy)&&(state.head&&(len=state.head.extra_len-state.length,state.head.extra||(state.head.extra=new Uint8Array(state.head.extra_len)),state.head.extra.set(input.subarray(next,next+copy),len)),512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,state.length-=copy),state.length))break inf_leave;state.length=0,state.mode=16186;case 16186:if(2048&state.flags){if(0===have)break inf_leave;for(copy=0;len=input[next+copy++],state.head&&len&&state.length<65536&&(state.head.name+=String.fromCharCode(len)),len&&copy<have;);if(512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,len)break inf_leave}else state.head&&(state.head.name=null);state.length=0,state.mode=16187;case 16187:if(4096&state.flags){if(0===have)break inf_leave;for(copy=0;len=input[next+copy++],state.head&&len&&state.length<65536&&(state.head.comment+=String.fromCharCode(len)),len&&copy<have;);if(512&state.flags&&4&state.wrap&&(state.check=crc32_1(state.check,input,copy,next)),have-=copy,next+=copy,len)break inf_leave}else state.head&&(state.head.comment=null);state.mode=16188;case 16188:if(512&state.flags){for(;bits<16;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(4&state.wrap&&hold!==(65535&state.check)){strm.msg="header crc mismatch",state.mode=BAD;break}bits=hold=0}state.head&&(state.head.hcrc=state.flags>>9&1,state.head.done=!0),strm.adler=state.check=0,state.mode=16191;break;case 16189:for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}strm.adler=state.check=zswap32(hold),bits=hold=0,state.mode=16190;case 16190:if(0===state.havedict)return strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,Z_NEED_DICT$1;strm.adler=state.check=1,state.mode=16191;case 16191:if(flush===Z_BLOCK||flush===Z_TREES)break inf_leave;case 16192:if(state.last)hold>>>=7&bits,bits-=7&bits,state.mode=16206;else{for(;bits<3;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}switch(state.last=1&hold,--bits,3&(hold>>>=1)){case 0:state.mode=16193;break;case 1:if(!function(state){if(virgin){lenfix=new Int32Array(512),distfix=new Int32Array(32);for(var sym=0;sym<144;)state.lens[sym++]=8;for(;sym<256;)state.lens[sym++]=9;for(;sym<280;)state.lens[sym++]=7;for(;sym<288;)state.lens[sym++]=8;for(inftrees(LENS,state.lens,0,288,lenfix,0,state.work,{bits:9}),sym=0;sym<32;)state.lens[sym++]=5;inftrees(DISTS,state.lens,0,32,distfix,0,state.work,{bits:5}),virgin=!1}state.lencode=lenfix,state.lenbits=9,state.distcode=distfix,state.distbits=5}(state),state.mode=16199,flush!==Z_TREES)break;hold>>>=2,bits-=2;break inf_leave;case 2:state.mode=16196;break;case 3:strm.msg="invalid block type",state.mode=BAD}hold>>>=2,bits-=2}break;case 16193:for(hold>>>=7&bits,bits-=7&bits;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if((65535&hold)!=(hold>>>16^65535)){strm.msg="invalid stored block lengths",state.mode=BAD;break}if(state.length=65535&hold,bits=hold=0,state.mode=16194,flush===Z_TREES)break inf_leave;case 16194:state.mode=16195;case 16195:if(copy=state.length){if(0===(copy=left<(copy=have<copy?have:copy)?left:copy))break inf_leave;output.set(input.subarray(next,next+copy),put),have-=copy,next+=copy,left-=copy,put+=copy,state.length-=copy}else state.mode=16191;break;case 16196:for(;bits<14;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(state.nlen=257+(31&hold),hold>>>=5,bits-=5,state.ndist=1+(31&hold),hold>>>=5,bits-=5,state.ncode=4+(15&hold),hold>>>=4,bits-=4,286<state.nlen||30<state.ndist){strm.msg="too many length or distance symbols",state.mode=BAD;break}state.have=0,state.mode=16197;case 16197:for(;state.have<state.ncode;){for(;bits<3;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.lens[order[state.have++]]=7&hold,hold>>>=3,bits-=3}for(;state.have<19;)state.lens[order[state.have++]]=0;if(state.lencode=state.lendyn,state.lenbits=7,opts={bits:state.lenbits},ret=inftrees(0,state.lens,0,19,state.lencode,0,state.work,opts),state.lenbits=opts.bits,ret){strm.msg="invalid code lengths set",state.mode=BAD;break}state.have=0,state.mode=16198;case 16198:for(;state.have<state.nlen+state.ndist;){for(;here_op=(here=state.lencode[hold&(1<<state.lenbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(here_val<16)hold>>>=here_bits,bits-=here_bits,state.lens[state.have++]=here_val;else{if(16===here_val){for(n=here_bits+2;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(hold>>>=here_bits,bits-=here_bits,0===state.have){strm.msg="invalid bit length repeat",state.mode=BAD;break}len=state.lens[state.have-1],copy=3+(3&hold),hold>>>=2,bits-=2}else if(17===here_val){for(n=here_bits+3;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}len=0,copy=3+(7&(hold>>>=here_bits)),hold>>>=3,bits=bits-here_bits-3}else{for(n=here_bits+7;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}len=0,copy=11+(127&(hold>>>=here_bits)),hold>>>=7,bits=bits-here_bits-7}if(state.have+copy>state.nlen+state.ndist){strm.msg="invalid bit length repeat",state.mode=BAD;break}for(;copy--;)state.lens[state.have++]=len}}if(state.mode===BAD)break;if(0===state.lens[256]){strm.msg="invalid code -- missing end-of-block",state.mode=BAD;break}if(state.lenbits=9,opts={bits:state.lenbits},ret=inftrees(LENS,state.lens,0,state.nlen,state.lencode,0,state.work,opts),state.lenbits=opts.bits,ret){strm.msg="invalid literal/lengths set",state.mode=BAD;break}if(state.distbits=6,state.distcode=state.distdyn,opts={bits:state.distbits},ret=inftrees(DISTS,state.lens,state.nlen,state.ndist,state.distcode,0,state.work,opts),state.distbits=opts.bits,ret){strm.msg="invalid distances set",state.mode=BAD;break}if(state.mode=16199,flush===Z_TREES)break inf_leave;case 16199:state.mode=16200;case 16200:if(6<=have&&258<=left){strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,!function(strm,start){var here,op,len,dist,from,from_source,state=strm.state,_in=strm.next_in,input=strm.input,last=_in+(strm.avail_in-5),_out=strm.next_out,output=strm.output,beg=_out-(start-strm.avail_out),end=_out+(strm.avail_out-257),dmax=state.dmax,wsize=state.wsize,whave=state.whave,wnext=state.wnext,s_window=state.window,hold=state.hold,bits=state.bits,lcode=state.lencode,dcode=state.distcode,lmask=(1<<state.lenbits)-1,dmask=(1<<state.distbits)-1;top:do{for(bits<15&&(hold+=input[_in++]<<bits,bits+=8,hold+=input[_in++]<<bits,bits+=8),here=lcode[hold&lmask];;){if(hold>>>=op=here>>>24,bits-=op,0===(op=here>>>16&255))output[_out++]=65535&here;else{if(!(16&op)){if(0==(64&op)){here=lcode[(65535&here)+(hold&(1<<op)-1)];continue}if(32&op){state.mode=TYPE$1;break top}strm.msg="invalid literal/length code",state.mode=BAD$1;break top}for(len=65535&here,(op&=15)&&(bits<op&&(hold+=input[_in++]<<bits,bits+=8),len+=hold&(1<<op)-1,hold>>>=op,bits-=op),bits<15&&(hold+=input[_in++]<<bits,bits+=8,hold+=input[_in++]<<bits,bits+=8),here=dcode[hold&dmask];;){if(hold>>>=op=here>>>24,bits-=op,!(16&(op=here>>>16&255))){if(0==(64&op)){here=dcode[(65535&here)+(hold&(1<<op)-1)];continue}strm.msg="invalid distance code",state.mode=BAD$1;break top}if(dist=65535&here,bits<(op&=15)&&(hold+=input[_in++]<<bits,(bits+=8)<op)&&(hold+=input[_in++]<<bits,bits+=8),dmax<(dist+=hold&(1<<op)-1)){strm.msg="invalid distance too far back",state.mode=BAD$1;break top}if(hold>>>=op,bits-=op,(op=_out-beg)<dist){if(whave<(op=dist-op)&&state.sane){strm.msg="invalid distance too far back",state.mode=BAD$1;break top}if(from_source=s_window,(from=0)===wnext){if(from+=wsize-op,op<len){for(len-=op;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}}else if(wnext<op){if(from+=wsize+wnext-op,(op-=wnext)<len){for(len-=op;output[_out++]=s_window[from++],--op;);if(from=0,wnext<len){for(len-=op=wnext;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}}}else if(from+=wnext-op,op<len){for(len-=op;output[_out++]=s_window[from++],--op;);from=_out-dist,from_source=output}for(;2<len;)output[_out++]=from_source[from++],output[_out++]=from_source[from++],output[_out++]=from_source[from++],len-=3;len&&(output[_out++]=from_source[from++],1<len)&&(output[_out++]=from_source[from++])}else{for(from=_out-dist;output[_out++]=output[from++],output[_out++]=output[from++],output[_out++]=output[from++],2<(len-=3););len&&(output[_out++]=output[from++],1<len)&&(output[_out++]=output[from++])}break}}break}}while(_in<last&&_out<end);hold&=(1<<(bits-=(len=bits>>3)<<3))-1,strm.next_in=_in-=len,strm.next_out=_out,strm.avail_in=_in<last?last-_in+5:5-(_in-last),strm.avail_out=_out<end?end-_out+257:257-(_out-end),state.hold=hold,state.bits=bits}(strm,_out),put=strm.next_out,output=strm.output,left=strm.avail_out,next=strm.next_in,input=strm.input,have=strm.avail_in,hold=state.hold,bits=state.bits,16191===state.mode&&(state.back=-1);break}for(state.back=0;here_op=(here=state.lencode[hold&(1<<state.lenbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(here_op&&0==(240&here_op)){for(last_bits=here_bits,last_op=here_op,last_val=here_val;here_op=(here=state.lencode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)])>>>16&255,here_val=65535&here,!(last_bits+(here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}hold>>>=last_bits,bits-=last_bits,state.back+=last_bits}if(hold>>>=here_bits,bits-=here_bits,state.back+=here_bits,state.length=here_val,0===here_op){state.mode=16205;break}if(32&here_op){state.back=-1,state.mode=16191;break}if(64&here_op){strm.msg="invalid literal/length code",state.mode=BAD;break}state.extra=15&here_op,state.mode=16201;case 16201:if(state.extra){for(n=state.extra;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.length+=hold&(1<<state.extra)-1,hold>>>=state.extra,bits-=state.extra,state.back+=state.extra}state.was=state.length,state.mode=16202;case 16202:for(;here_op=(here=state.distcode[hold&(1<<state.distbits)-1])>>>16&255,here_val=65535&here,!((here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(0==(240&here_op)){for(last_bits=here_bits,last_op=here_op,last_val=here_val;here_op=(here=state.distcode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)])>>>16&255,here_val=65535&here,!(last_bits+(here_bits=here>>>24)<=bits);){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}hold>>>=last_bits,bits-=last_bits,state.back+=last_bits}if(hold>>>=here_bits,bits-=here_bits,state.back+=here_bits,64&here_op){strm.msg="invalid distance code",state.mode=BAD;break}state.offset=here_val,state.extra=15&here_op,state.mode=16203;case 16203:if(state.extra){for(n=state.extra;bits<n;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}state.offset+=hold&(1<<state.extra)-1,hold>>>=state.extra,bits-=state.extra,state.back+=state.extra}if(state.offset>state.dmax){strm.msg="invalid distance too far back",state.mode=BAD;break}state.mode=16204;case 16204:if(0===left)break inf_leave;if(state.offset>(copy=_out-left)){if((copy=state.offset-copy)>state.whave&&state.sane){strm.msg="invalid distance too far back",state.mode=BAD;break}from=copy>state.wnext?(copy-=state.wnext,state.wsize-copy):state.wnext-copy,copy>state.length&&(copy=state.length),from_source=state.window}else from_source=output,from=put-state.offset,copy=state.length;for(left-=copy=left<copy?left:copy,state.length-=copy;output[put++]=from_source[from++],--copy;);0===state.length&&(state.mode=16200);break;case 16205:if(0===left)break inf_leave;output[put++]=state.length,left--,state.mode=16200;break;case 16206:if(state.wrap){for(;bits<32;){if(0===have)break inf_leave;have--,hold|=input[next++]<<bits,bits+=8}if(_out-=left,strm.total_out+=_out,state.total+=_out,4&state.wrap&&_out&&(strm.adler=state.check=(state.flags?crc32_1:adler32_1)(state.check,output,_out,put-_out)),_out=left,4&state.wrap&&(state.flags?hold:zswap32(hold))!==state.check){strm.msg="incorrect data check",state.mode=BAD;break}bits=hold=0}state.mode=16207;case 16207:if(state.wrap&&state.flags){for(;bits<32;){if(0===have)break inf_leave;have--,hold+=input[next++]<<bits,bits+=8}if(4&state.wrap&&hold!==(4294967295&state.total)){strm.msg="incorrect length check",state.mode=BAD;break}bits=hold=0}state.mode=16208;case 16208:ret=Z_STREAM_END$1;break inf_leave;case BAD:ret=Z_DATA_ERROR$1;break inf_leave;case 16210:return Z_MEM_ERROR$1;default:return Z_STREAM_ERROR$1}return strm.next_out=put,strm.avail_out=left,strm.next_in=next,strm.avail_in=have,state.hold=hold,state.bits=bits,(state.wsize||_out!==strm.avail_out&&state.mode<BAD&&(state.mode<16206||flush!==Z_FINISH$1))&&updatewindow(strm,strm.output,strm.next_out,_out-strm.avail_out),_in-=strm.avail_in,_out-=strm.avail_out,strm.total_in+=_in,strm.total_out+=_out,state.total+=_out,4&state.wrap&&_out&&(strm.adler=state.check=(state.flags?crc32_1:adler32_1)(state.check,output,_out,strm.next_out-_out)),strm.data_type=state.bits+(state.last?64:0)+(16191===state.mode?128:0)+(16199===state.mode||16194===state.mode?256:0),ret=(0==_in&&0===_out||flush===Z_FINISH$1)&&ret===Z_OK$1?Z_BUF_ERROR:ret},inflateEnd:function(strm){var state;return inflateStateCheck(strm)?Z_STREAM_ERROR$1:((state=strm.state).window&&(state.window=null),strm.state=null,Z_OK$1)},inflateGetHeader:function(strm,head){return inflateStateCheck(strm)||0==(2&(strm=strm.state).wrap)?Z_STREAM_ERROR$1:((strm.head=head).done=!1,Z_OK$1)},inflateSetDictionary:function(strm,dictionary){var state,dictLength=dictionary.length;return inflateStateCheck(strm)||0!==(state=strm.state).wrap&&16190!==state.mode?Z_STREAM_ERROR$1:16190===state.mode&&adler32_1(1,dictionary,dictLength,0)!==state.check?Z_DATA_ERROR$1:updatewindow(strm,dictionary,dictLength,dictLength)?(state.mode=16210,Z_MEM_ERROR$1):(state.havedict=1,Z_OK$1)},inflateInfo:"pako inflate (from Nodeca project)"};function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}var common_assign=function(obj){for(var sources=Array.prototype.slice.call(arguments,1);sources.length;){var source=sources.shift();if(source){if("object"!==_typeof(source))throw new TypeError(source+"must be non-object");for(var p in source)!function(obj,key){return Object.prototype.hasOwnProperty.call(obj,key)}(source,p)||(obj[p]=source[p])}}return obj},common_flattenChunks=function(chunks){for(var len=0,i=0,l=chunks.length;i<l;i++)len+=chunks[i].length;for(var result=new Uint8Array(len),_i=0,pos=0,_l=chunks.length;_i<_l;_i++){var chunk=chunks[_i];result.set(chunk,pos),pos+=chunk.length}return result},STR_APPLY_UIA_OK=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(__){STR_APPLY_UIA_OK=!1}for(var _utf8len=new Uint8Array(256),q=0;q<256;q++)_utf8len[q]=252<=q?6:248<=q?5:240<=q?4:224<=q?3:192<=q?2:1;_utf8len[254]=_utf8len[254]=1;var strings_string2buf=function(str){if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(str);for(var buf,c,c2,i,str_len=str.length,buf_len=0,m_pos=0;m_pos<str_len;m_pos++)55296==(64512&(c=str.charCodeAt(m_pos)))&&m_pos+1<str_len&&56320==(64512&(c2=str.charCodeAt(m_pos+1)))&&(c=65536+(c-55296<<10)+(c2-56320),m_pos++),buf_len+=c<128?1:c<2048?2:c<65536?3:4;for(buf=new Uint8Array(buf_len),m_pos=i=0;i<buf_len;m_pos++)55296==(64512&(c=str.charCodeAt(m_pos)))&&m_pos+1<str_len&&56320==(64512&(c2=str.charCodeAt(m_pos+1)))&&(c=65536+(c-55296<<10)+(c2-56320),m_pos++),c<128?buf[i++]=c:(c<2048?buf[i++]=192|c>>>6:(c<65536?buf[i++]=224|c>>>12:(buf[i++]=240|c>>>18,buf[i++]=128|c>>>12&63),buf[i++]=128|c>>>6&63),buf[i++]=128|63&c);return buf},strings_buf2string=function(buf,max){var len=max||buf.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(buf.subarray(0,max));for(var utf16buf=new Array(2*len),out=0,i=0;i<len;){var c=buf[i++];if(c<128)utf16buf[out++]=c;else{var c_len=_utf8len[c];if(4<c_len)utf16buf[out++]=65533,i+=c_len-1;else{for(c&=2===c_len?31:3===c_len?15:7;1<c_len&&i<len;)c=c<<6|63&buf[i++],c_len--;1<c_len?utf16buf[out++]=65533:c<65536?utf16buf[out++]=c:(c-=65536,utf16buf[out++]=55296|c>>10&1023,utf16buf[out++]=56320|1023&c)}}}return function(buf,len){if(len<65534&&buf.subarray&&STR_APPLY_UIA_OK)return String.fromCharCode.apply(null,buf.length===len?buf:buf.subarray(0,len));for(var result="",i=0;i<len;i++)result+=String.fromCharCode(buf[i]);return result}(utf16buf,out)},strings_utf8border=function(buf,max){for(var pos=(max=(max=max||buf.length)>buf.length?buf.length:max)-1;0<=pos&&128==(192&buf[pos]);)pos--;return!(pos<0)&&0!==pos&&pos+_utf8len[buf[pos]]>max?pos:max},messages={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"};var zstream=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};var gzheader=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1},toString=Object.prototype.toString,Z_NO_FLUSH=constants$1.Z_NO_FLUSH,Z_FINISH=constants$1.Z_FINISH,Z_OK=constants$1.Z_OK,Z_STREAM_END=constants$1.Z_STREAM_END,Z_NEED_DICT=constants$1.Z_NEED_DICT,Z_STREAM_ERROR=constants$1.Z_STREAM_ERROR,Z_DATA_ERROR=constants$1.Z_DATA_ERROR,Z_MEM_ERROR=constants$1.Z_MEM_ERROR;function Inflate(options){this.options=common_assign({chunkSize:65536,windowBits:15,to:""},options||{});var opt=this.options,options=(opt.raw&&0<=opt.windowBits&&opt.windowBits<16&&(opt.windowBits=-opt.windowBits,0===opt.windowBits)&&(opt.windowBits=-15),!(0<=opt.windowBits&&opt.windowBits<16)||options&&options.windowBits||(opt.windowBits+=32),15<opt.windowBits&&opt.windowBits<48&&0==(15&opt.windowBits)&&(opt.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0,inflate_1$1.inflateInit2(this.strm,opt.windowBits));if(options!==Z_OK)throw new Error(messages[options]);if(this.header=new gzheader,inflate_1$1.inflateGetHeader(this.strm,this.header),opt.dictionary&&("string"==typeof opt.dictionary?opt.dictionary=strings_string2buf(opt.dictionary):"[object ArrayBuffer]"===toString.call(opt.dictionary)&&(opt.dictionary=new Uint8Array(opt.dictionary)),opt.raw)&&(options=inflate_1$1.inflateSetDictionary(this.strm,opt.dictionary))!==Z_OK)throw new Error(messages[options])}function inflate(input,options){options=new Inflate(options);if(options.push(input),options.err)throw options.msg||messages[options.err];return options.result}Inflate.prototype.push=function(data,flush_mode){var status,_flush_mode,strm=this.strm,chunkSize=this.options.chunkSize,dictionary=this.options.dictionary;if(this.ended)return!1;for(_flush_mode=flush_mode===~~flush_mode?flush_mode:!0===flush_mode?Z_FINISH:Z_NO_FLUSH,"[object ArrayBuffer]"===toString.call(data)?strm.input=new Uint8Array(data):strm.input=data,strm.next_in=0,strm.avail_in=strm.input.length;;){for(0===strm.avail_out&&(strm.output=new Uint8Array(chunkSize),strm.next_out=0,strm.avail_out=chunkSize),(status=inflate_1$1.inflate(strm,_flush_mode))===Z_NEED_DICT&&dictionary&&((status=inflate_1$1.inflateSetDictionary(strm,dictionary))===Z_OK?status=inflate_1$1.inflate(strm,_flush_mode):status===Z_DATA_ERROR&&(status=Z_NEED_DICT));0<strm.avail_in&&status===Z_STREAM_END&&0<strm.state.wrap&&0!==data[strm.next_in];)inflate_1$1.inflateReset(strm),status=inflate_1$1.inflate(strm,_flush_mode);switch(status){case Z_STREAM_ERROR:case Z_DATA_ERROR:case Z_NEED_DICT:case Z_MEM_ERROR:return this.onEnd(status),!(this.ended=!0)}var next_out_utf8,tail,utf8str,last_avail_out=strm.avail_out;if(!strm.next_out||0!==strm.avail_out&&status!==Z_STREAM_END||("string"===this.options.to?(next_out_utf8=strings_utf8border(strm.output,strm.next_out),tail=strm.next_out-next_out_utf8,utf8str=strings_buf2string(strm.output,next_out_utf8),strm.next_out=tail,strm.avail_out=chunkSize-tail,tail&&strm.output.set(strm.output.subarray(next_out_utf8,next_out_utf8+tail),0),this.onData(utf8str)):this.onData(strm.output.length===strm.next_out?strm.output:strm.output.subarray(0,strm.next_out))),status!==Z_OK||0!==last_avail_out){if(status===Z_STREAM_END)return status=inflate_1$1.inflateEnd(this.strm),this.onEnd(status),this.ended=!0;if(0===strm.avail_in)break}}return!0},Inflate.prototype.onData=function(chunk){this.chunks.push(chunk)},Inflate.prototype.onEnd=function(status){status===Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=common_flattenChunks(this.chunks)),this.chunks=[],this.err=status,this.msg=this.strm.msg};function inflateRaw_1(input,options){return(options=options||{}).raw=!0,inflate(input,options)}var inflate_2=inflate,ungzip=inflate,inflate_1={Inflate:Inflate,inflate:inflate_2,inflateRaw:inflateRaw_1,ungzip:ungzip,constants:constants$1};return exports.Inflate=Inflate,exports.constants=constants$1,exports.default=inflate_1,exports.inflate=inflate_2,exports.inflateRaw=inflateRaw_1,exports.ungzip=ungzip,exports}void 0!==Module&&(Module.TA=TA);var browserFix=browserFix||{},wasmString;function inflateBase64(base64){var binaryString=function(string){var b64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",string=String(string).replace(/[\t\n\f\r ]+/g,"");string+="==".slice(2-(3&string.length));for(var bitmap,r1,r2,result="",i=0;i<string.length;)bitmap=b64.indexOf(string.charAt(i++))<<18|b64.indexOf(string.charAt(i++))<<12|(r1=b64.indexOf(string.charAt(i++)))<<6|(r2=b64.indexOf(string.charAt(i++))),result+=64===r1?String.fromCharCode(bitmap>>16&255):64===r2?String.fromCharCode(bitmap>>16&255,bitmap>>8&255):String.fromCharCode(bitmap>>16&255,bitmap>>8&255,255&bitmap);return result}(base64),length=binaryString.length,bytes=new Uint8Array(length);for(let i=0;i<length;i++)bytes[i]=binaryString.charCodeAt(i);return init_pako().inflate(bytes)}browserFix.sliceTypedArray=function(array,sliceBegin,sliceEnd){var bpe=array.BYTES_PER_ELEMENT,boff=array.byteOffset,len=array.length;return(sliceBegin=0|sliceBegin||0)<0&&(sliceBegin+=len),(sliceEnd=void 0===sliceEnd?len:0|sliceEnd)<0&&(sliceEnd+=len),new array.constructor(array.buffer.slice(boff+bpe*sliceBegin,boff+bpe*sliceEnd))},void 0===Uint8Array.prototype.slice&&(console.warn("The TypedArray.slice method is not supported in this browser. This may impair performance. "),Uint16Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Int16Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Uint8Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)},Int8Array.prototype.slice=function(begin,end){return browserFix.sliceTypedArray(this,begin,end)}),void 0!==Module&&(wasmString="",100<wasmString.length)&&(Module.wasmBinary=inflateBase64(wasmString),Module.__haswasmBinary__=!0),"undefined"!=typeof __ctx&&void 0!==__ctx.INITIAL_MEMORY&&(Module.INITIAL_MEMORY=__ctx.INITIAL_MEMORY),"undefined"==typeof print&&(print=console.log);var JSHttpGet=null,crypto,fs,os,process,CLUSTER_IP,CLUSTER_DOMAIN,JSHttpGet;function md5(text){return crypto.createHash("md5").update(text).digest("hex")}JSHttpGet="undefined"!=typeof self&&void 0!==self.onmessage?function(path){var r=XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");return r.open("GET","https://www.fmz.com"+path,!1),r.send(null),r.responseText}:(crypto=require("crypto"),fs=require("fs"),os=require("os"),process=require("process"),CLUSTER_IP=process.env.CLUSTER_IP||"q.fmz.com",CLUSTER_DOMAIN=process.env.CLUSTER_DOMAIN||"q.fmz.com",function(url){var tmpCache=os.tmpdir()+"/cache",tmpCache=(fs.existsSync(tmpCache)||fs.mkdirSync(tmpCache),tmpCache+"/botvs_kline_"+md5(url="http://"+CLUSTER_IP+url));return fs.existsSync(tmpCache)?fs.readFileSync(tmpCache,"utf-8"):((url=require("sync-request")("GET",url,{headers:{Host:CLUSTER_DOMAIN}}).getBody("utf8"))&&-1!==url.indexOf(",")&&fs.writeFileSync(tmpCache,url,"utf-8"),url)});var moduleOverrides=Object.assign({},Module),arguments_=[],thisProgram="./this.program",quit_=(status,toThrow)=>{throw toThrow},ENVIRONMENT_IS_WEB="object"==typeof window,ENVIRONMENT_IS_WORKER="function"==typeof importScripts,ENVIRONMENT_IS_NODE="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,scriptDirectory="",read_,readAsync,readBinary,setWindowTitle,fs,nodePath,scriptDirectory,read_,readBinary,readAsync;function locateFile(path){return Module.locateFile?Module.locateFile(path,scriptDirectory):scriptDirectory+path}ENVIRONMENT_IS_NODE?(fs=require("fs"),nodePath=require("path"),scriptDirectory=ENVIRONMENT_IS_WORKER?nodePath.dirname(scriptDirectory)+"/":__dirname+"/",read_=(filename,binary)=>(filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename),fs.readFileSync(filename,binary?void 0:"utf8")),readBinary=filename=>{filename=read_(filename,!0);return filename=filename.buffer?filename:new Uint8Array(filename)},readAsync=(filename,onload,onerror,binary=!0)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename),fs.readFile(filename,binary?void 0:"utf8",(err,data)=>{err?onerror(err):onload(binary?data.buffer:data)})},!Module.thisProgram&&1<process.argv.length&&(thisProgram=process.argv[1].replace(/\\/g,"/")),arguments_=process.argv.slice(2),quit_=(status,toThrow)=>{throw process.exitCode=status,toThrow},Module.inspect=()=>"[Emscripten Module object]"):(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&(ENVIRONMENT_IS_WORKER?scriptDirectory=self.location.href:"undefined"!=typeof document&&document.currentScript&&(scriptDirectory=document.currentScript.src),_scriptDir&&(scriptDirectory=_scriptDir),scriptDirectory=0!==scriptDirectory.indexOf("blob:")?scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1):"",read_=url=>{var xhr=new XMLHttpRequest;return xhr.open("GET",url,!1),xhr.send(null),xhr.responseText},ENVIRONMENT_IS_WORKER&&(readBinary=url=>{var xhr=new XMLHttpRequest;return xhr.open("GET",url,!1),xhr.responseType="arraybuffer",xhr.send(null),new Uint8Array(xhr.response)}),readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,!0),xhr.responseType="arraybuffer",xhr.onload=()=>{200==xhr.status||0==xhr.status&&xhr.response?onload(xhr.response):onerror()},xhr.onerror=onerror,xhr.send(null)},setWindowTitle=title=>document.title=title);var out=Module.print||console.log.bind(console),err=Module.printErr||console.error.bind(console),wasmBinary,noExitRuntime=(Object.assign(Module,moduleOverrides),moduleOverrides=null,Module.arguments&&(arguments_=Module.arguments),Module.thisProgram&&(thisProgram=Module.thisProgram),Module.quit&&(quit_=Module.quit),Module.wasmBinary&&(wasmBinary=Module.wasmBinary),Module.noExitRuntime||!0),wasmMemory,wasmExports,ABORT=("object"!=typeof WebAssembly&&abort("no native wasm support detected"),!1),EXITSTATUS,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function assert(condition,text){condition||abort(text)}function updateMemoryViews(){var b=wasmMemory.buffer;Module.HEAP8=HEAP8=new Int8Array(b),Module.HEAP16=HEAP16=new Int16Array(b),Module.HEAP32=HEAP32=new Int32Array(b),Module.HEAPU8=HEAPU8=new Uint8Array(b),Module.HEAPU16=HEAPU16=new Uint16Array(b),Module.HEAPU32=HEAPU32=new Uint32Array(b),Module.HEAPF32=HEAPF32=new Float32Array(b),Module.HEAPF64=HEAPF64=new Float64Array(b)}var INITIAL_MEMORY=Module.INITIAL_MEMORY||314572800,wasmTable,__ATPRERUN__=(assert(5242880<=INITIAL_MEMORY,"INITIAL_MEMORY should be larger than STACK_SIZE, was "+INITIAL_MEMORY+"! (STACK_SIZE=5242880)"),wasmMemory=Module.wasmMemory||new WebAssembly.Memory({initial:INITIAL_MEMORY/65536,maximum:65536}),updateMemoryViews(),INITIAL_MEMORY=wasmMemory.buffer.byteLength,[]),__ATINIT__=[],__ATPOSTRUN__=[],runtimeInitialized=!1;function preRun(){if(Module.preRun)for("function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);Module.preRun.length;)addOnPreRun(Module.preRun.shift());callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=!0,Module.noFSInit||FS.init.initialized||FS.init(),FS.ignorePermissions=!1,TTY.init(),callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module.postRun)for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);Module.postRun.length;)addOnPostRun(Module.postRun.shift());callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0,runDependencyWatcher=null,dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies)}function removeRunDependency(id){var callback;runDependencies--,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies),0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),dependenciesFulfilled)&&(callback=dependenciesFulfilled,dependenciesFulfilled=null,callback())}function abort(what){Module.onAbort&&Module.onAbort(what),err(what="Aborted("+what+")"),ABORT=!0,EXITSTATUS=1,what+=". Build with -sASSERTIONS for more info.";what=new WebAssembly.RuntimeError(what);throw readyPromiseReject(what),what}var dataURIPrefix="data:application/octet-stream;base64,",wasmBinaryFile,tempDouble,tempI64;function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith("file://")}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary)return new Uint8Array(wasmBinary);if(readBinary)return readBinary(file);throw"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)"}function instantiateSync(file,info){file=getBinarySync(file),file=new WebAssembly.Module(file);return[new WebAssembly.Instance(file,info),file]}function createWasm(){var info={a:wasmImports};function receiveInstance(instance,module){instance=applySignatureConversions(instance.exports);return wasmTable=(wasmExports=instance).S,addOnInit(wasmExports.O),removeRunDependency("wasm-instantiate"),instance}if(addRunDependency("wasm-instantiate"),Module.instantiateWasm)try{return Module.instantiateWasm(info,receiveInstance)}catch(e){err("Module.instantiateWasm callback failed with error: "+e),readyPromiseReject(e)}return receiveInstance(instantiateSync(wasmBinaryFile,info)[0])}wasmBinaryFile="sandbox_cpp_wasm.wasm",isDataURI(wasmBinaryFile)||(wasmBinaryFile=locateFile(wasmBinaryFile));var callRuntimeCallbacks=callbacks=>{for(;0<callbacks.length;)callbacks.shift()(Module)};function getValue(ptr,type="i8"){switch(type=type.endsWith("*")?"*":type){case"i1":case"i8":return HEAP8[ptr>>>0];case"i16":return HEAP16[ptr>>>1];case"i32":return HEAP32[ptr>>>2];case"i64":abort("to do getValue(i64) use WASM_BIGINT");case"float":return HEAPF32[ptr>>>2];case"double":return HEAPF64[ptr>>>3];case"*":return HEAPU32[ptr>>>2];default:abort("invalid type for getValue: "+type)}}function setValue(ptr,value,type="i8"){switch(type=type.endsWith("*")?"*":type){case"i1":case"i8":HEAP8[ptr>>>0]=value;break;case"i16":HEAP16[ptr>>>1]=value;break;case"i32":HEAP32[ptr>>>2]=value;break;case"i64":abort("to do setValue(i64) use WASM_BIGINT");case"float":HEAPF32[ptr>>>2]=value;break;case"double":HEAPF64[ptr>>>3]=value;break;case"*":HEAPU32[ptr>>>2]=value;break;default:abort("invalid type for setValue: "+type)}}function convertI32PairToI53Checked(lo,hi){return hi+2097152>>>0<4194305-!!lo?(lo>>>0)+4294967296*hi:NaN}var UTF8Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{for(var endIdx=(idx>>>=0)+maxBytesToRead,endPtr=idx;heapOrArray[endPtr]&&!(endIdx<=endPtr);)++endPtr;if(16<endPtr-idx&&heapOrArray.buffer&&UTF8Decoder)return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr));for(var str="";idx<endPtr;){var u2,u1,u0=heapOrArray[idx++];128&u0?(u1=63&heapOrArray[idx++],192==(224&u0)?str+=String.fromCharCode((31&u0)<<6|u1):(u2=63&heapOrArray[idx++],(u0=224==(240&u0)?(15&u0)<<12|u1<<6|u2:(7&u0)<<18|u1<<12|u2<<6|63&heapOrArray[idx++])<65536?str+=String.fromCharCode(u0):(u1=u0-65536,str+=String.fromCharCode(55296|u1>>10,56320|1023&u1)))):str+=String.fromCharCode(u0)}return str},UTF8ToString=(ptr,maxBytesToRead)=>(ptr>>>=0)?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):"";function ___assert_fail(condition,filename,line,func){filename>>>=0,func>>>=0,abort(`Assertion failed: ${UTF8ToString(condition>>>=0)}, at: `+[filename?UTF8ToString(filename):"unknown filename",line,func?UTF8ToString(func):"unknown function"])}function ExceptionInfo(excPtr){this.excPtr=excPtr,this.ptr=excPtr-24,this.set_type=function(type){HEAPU32[this.ptr+4>>>2]=type},this.get_type=function(){return HEAPU32[this.ptr+4>>>2]},this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>>2]=destructor},this.get_destructor=function(){return HEAPU32[this.ptr+8>>>2]},this.set_caught=function(caught){HEAP8[this.ptr+12>>>0]=caught=caught?1:0},this.get_caught=function(){return 0!=HEAP8[this.ptr+12>>>0]},this.set_rethrown=function(rethrown){HEAP8[this.ptr+13>>>0]=rethrown=rethrown?1:0},this.get_rethrown=function(){return 0!=HEAP8[this.ptr+13>>>0]},this.init=function(type,destructor){this.set_adjusted_ptr(0),this.set_type(type),this.set_destructor(destructor)},this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>>2]=adjustedPtr},this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>>2]},this.get_exception_ptr=function(){var adjusted;return ___cxa_is_pointer_type(this.get_type())?HEAPU32[this.excPtr>>>2]:0!==(adjusted=this.get_adjusted_ptr())?adjusted:this.excPtr}}var exceptionLast=0,uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){throw type>>>=0,destructor>>>=0,new ExceptionInfo(ptr>>>=0).init(type,destructor),uncaughtExceptionCount++,ptr}var structRegistrations={};function runDestructors(destructors){for(;destructors.length;){var ptr=destructors.pop();destructors.pop()(ptr)}}function simpleReadValueFromPointer(pointer){return this.fromWireType(HEAP32[pointer>>>2])}var awaitingDependencies={},registeredTypes={},typeDependencies={},InternalError=void 0;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);myTypeConverters.length!==myTypes.length&&throwInternalError("Mismatched type converter count");for(var i=0;i<myTypes.length;++i)registerType(myTypes[i],myTypeConverters[i])}myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});var typeConverters=new Array(dependentTypes.length),unregisteredTypes=[],registered=0;dependentTypes.forEach((dt,i)=>{registeredTypes.hasOwnProperty(dt)?typeConverters[i]=registeredTypes[dt]:(unregisteredTypes.push(dt),awaitingDependencies.hasOwnProperty(dt)||(awaitingDependencies[dt]=[]),awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt],++registered===unregisteredTypes.length&&onComplete(typeConverters)}))}),0===unregisteredTypes.length&&onComplete(typeConverters)}var __embind_finalize_value_object=function(structType){var reg=structRegistrations[structType>>>=0],rawConstructor=(delete structRegistrations[structType],reg.rawConstructor),rawDestructor=reg.rawDestructor,fieldRecords=reg.fields;whenDependentTypesAreResolved([structType],fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType)),fieldTypes=>{var fields={};return fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName,getterReturnType=fieldTypes[i],getter=field.getter,getterContext=field.getterContext,setterArgumentType=fieldTypes[i+fieldRecords.length],setter=field.setter,setterContext=field.setterContext;fields[fieldName]={read:ptr=>getterReturnType.fromWireType(getter(getterContext,ptr)),write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType.toWireType(destructors,o)),runDestructors(destructors)}}}),[{name:reg.name,fromWireType:function(ptr){var i,rv={};for(i in fields)rv[i]=fields[i].read(ptr);return rawDestructor(ptr),rv},toWireType:function(destructors,o){for(var fieldName in fields)if(!(fieldName in o))throw new TypeError(`Missing field: "${fieldName}"`);var ptr=rawConstructor();for(fieldName in fields)fields[fieldName].write(ptr,o[fieldName]);return null!==destructors&&destructors.push(rawDestructor,ptr),ptr},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:rawDestructor}]})};function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+size)}}function embind_init_charCodes(){for(var codes=new Array(256),i=0;i<256;++i)codes[i]=String.fromCharCode(i);embind_charCodes=codes}var embind_charCodes=void 0;function readLatin1String(ptr){for(var ret="",c=ptr;HEAPU8[c>>>0];)ret+=embind_charCodes[HEAPU8[c++>>>0]];return ret}var BindingError=void 0;function throwBindingError(message){throw new BindingError(message)}function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(rawType||throwBindingError(`type "${name}" must have a positive integer typeid pointer`),registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations)return;throwBindingError(`Cannot register type '${name}' twice`)}registeredTypes[rawType]=registeredInstance,delete typeDependencies[rawType],awaitingDependencies.hasOwnProperty(rawType)&&(options=awaitingDependencies[rawType],delete awaitingDependencies[rawType],options.forEach(cb=>cb()))}function registerType(rawType,registeredInstance,options={}){if(!("argPackAdvance"in registeredInstance))throw new TypeError("registerType registeredInstance requires argPackAdvance");sharedRegisterType(rawType,registeredInstance,options)}function __embind_register_bool(rawType,name,size,trueValue,falseValue){rawType>>>=0,name>>>=0;var shift=getShiftFromSize(size>>>=0);registerType(rawType,{name:name=readLatin1String(name),fromWireType:function(wt){return!!wt},toWireType:function(destructors,o){return o?trueValue:falseValue},argPackAdvance:8,readValueFromPointer:function(pointer){var heap;if(1===size)heap=HEAP8;else if(2===size)heap=HEAP16;else{if(4!==size)throw new TypeError("Unknown boolean type size: "+name);heap=HEAP32}return this.fromWireType(heap[pointer>>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle))return!1;if(!(other instanceof ClassHandle))return!1;for(var leftClass=this.$$.ptrType.registeredClass,left=this.$$.ptr,rightClass=other.$$.ptrType.registeredClass,right=other.$$.ptr;leftClass.baseClass;)left=leftClass.upcast(left),leftClass=leftClass.baseClass;for(;rightClass.baseClass;)right=rightClass.upcast(right),rightClass=rightClass.baseClass;return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){throwBindingError(obj.$$.ptrType.registeredClass.name+" instance already deleted")}var finalizationRegistry=!1;function detachFinalizer(handle){}function runDestructor($$){$$.smartPtr?$$.smartPtrType.rawDestructor($$.smartPtr):$$.ptrType.registeredClass.rawDestructor($$.ptr)}function releaseClassHandle($$){--$$.count.value,0===$$.count.value&&runDestructor($$)}function downcastPointer(ptr,ptrClass,desiredClass){return ptrClass===desiredClass?ptr:void 0===desiredClass.baseClass||null===(ptr=downcastPointer(ptr,ptrClass,desiredClass.baseClass))?null:desiredClass.downcast(ptr)}var registeredPointers={};function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var k,rv=[];for(k in registeredInstances)registeredInstances.hasOwnProperty(k)&&rv.push(registeredInstances[k]);return rv}var deletionQueue=[];function flushPendingDeletes(){for(;deletionQueue.length;){var obj=deletionQueue.pop();obj.$$.deleteScheduled=!1,obj.delete()}}var delayFunction=void 0;function setDelayFunction(fn){delayFunction=fn,deletionQueue.length&&delayFunction&&delayFunction(flushPendingDeletes)}function init_embind(){Module.getInheritedInstanceCount=getInheritedInstanceCount,Module.getLiveInheritedInstances=getLiveInheritedInstances,Module.flushPendingDeletes=flushPendingDeletes,Module.setDelayFunction=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){for(void 0===ptr&&throwBindingError("ptr should not be undefined");class_.baseClass;)ptr=class_.upcast(ptr),class_=class_.baseClass;return ptr}function getInheritedInstance(class_,ptr){return ptr=getBasestPointer(class_,ptr),registeredInstances[ptr]}function makeClassHandle(prototype,record){return record.ptrType&&record.ptr||throwInternalError("makeClassHandle requires ptr and ptrType"),!!record.smartPtrType!=!!record.smartPtr&&throwInternalError("Both smartPtrType and smartPtr must be specified"),record.count={value:1},attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var registeredInstance,dp,rawPointer=this.getPointee(ptr);return rawPointer?void 0!==(registeredInstance=getInheritedInstance(this.registeredClass,rawPointer))?0===registeredInstance.$$.count.value?(registeredInstance.$$.ptr=rawPointer,registeredInstance.$$.smartPtr=ptr,registeredInstance.clone()):(registeredInstance=registeredInstance.clone(),this.destructor(ptr),registeredInstance):(registeredInstance=this.registeredClass.getActualType(rawPointer),!(registeredInstance=registeredPointers[registeredInstance])||(registeredInstance=this.isConst?registeredInstance.constPointerType:registeredInstance.pointerType,null===(dp=downcastPointer(rawPointer,this.registeredClass,registeredInstance.registeredClass)))?makeDefaultHandle.call(this):this.isSmartPointer?makeClassHandle(registeredInstance.registeredClass.instancePrototype,{ptrType:registeredInstance,ptr:dp,smartPtrType:this,smartPtr:ptr}):makeClassHandle(registeredInstance.registeredClass.instancePrototype,{ptrType:registeredInstance,ptr:dp})):(this.destructor(ptr),null);function makeDefaultHandle(){return this.isSmartPointer?makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr}):makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var attachFinalizer=function(handle){return"undefined"==typeof FinalizationRegistry?(attachFinalizer=handle=>handle,handle):(finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)}),detachFinalizer=handle=>finalizationRegistry.unregister(handle),(attachFinalizer=handle=>{var $$=handle.$$;return!!$$.smartPtr&&finalizationRegistry.register(handle,{$$:$$},handle),handle})(handle))};function ClassHandle_clone(){var clone;return this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.preservePointerOnDelete?(this.$$.count.value+=1,this):((clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}))).$$.count.value+=1,clone.$$.deleteScheduled=!1,clone)}function ClassHandle_delete(){this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&throwBindingError("Object already scheduled for deletion"),detachFinalizer(this),releaseClassHandle(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){return this.$$.ptr||throwInstanceAlreadyDeleted(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&throwBindingError("Object already scheduled for deletion"),deletionQueue.push(this),1===deletionQueue.length&&delayFunction&&delayFunction(flushPendingDeletes),this.$$.deleteScheduled=!0,this}function init_ClassHandle(){ClassHandle.prototype.isAliasOf=ClassHandle_isAliasOf,ClassHandle.prototype.clone=ClassHandle_clone,ClassHandle.prototype.delete=ClassHandle_delete,ClassHandle.prototype.isDeleted=ClassHandle_isDeleted,ClassHandle.prototype.deleteLater=ClassHandle_deleteLater}function ClassHandle(){}var char_0=48,char_9=57;function makeLegalFunctionName(name){var f;return void 0===name?"_unknown":(f=(name=name.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0),char_0<=f&&f<=char_9?"_"+name:name)}function createNamedFunction(name,body){return{[name=makeLegalFunctionName(name)]:function(){return body.apply(this,arguments)}}[name]}function ensureOverloadTable(proto,methodName,humanName){var prevFunc;void 0===proto[methodName].overloadTable&&(prevFunc=proto[methodName],proto[methodName]=function(){return proto[methodName].overloadTable.hasOwnProperty(arguments.length)||throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${arguments.length}) - expects one of (${proto[methodName].overloadTable})!`),proto[methodName].overloadTable[arguments.length].apply(this,arguments)},proto[methodName].overloadTable=[],proto[methodName].overloadTable[prevFunc.argCount]=prevFunc)}function exposePublicSymbol(name,value,numArguments){Module.hasOwnProperty(name)?((void 0===numArguments||void 0!==Module[name].overloadTable&&void 0!==Module[name].overloadTable[numArguments])&&throwBindingError(`Cannot register public name '${name}' twice`),ensureOverloadTable(Module,name,name),Module.hasOwnProperty(numArguments)&&throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`),Module[name].overloadTable[numArguments]=value):(Module[name]=value,void 0!==numArguments&&(Module[name].numArguments=numArguments))}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name,this.constructor=constructor,this.instancePrototype=instancePrototype,this.rawDestructor=rawDestructor,this.baseClass=baseClass,this.getActualType=getActualType,this.upcast=upcast,this.downcast=downcast,this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){for(;ptrClass!==desiredClass;)ptrClass.upcast||throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of `+ptrClass.name),ptr=ptrClass.upcast(ptr),ptrClass=ptrClass.baseClass;return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name);var handleClass=handle.$$.ptrType.registeredClass;return upcastPointer(handle.$$.ptr,handleClass,this.registeredClass)}function genericPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),this.isSmartPointer?(ptr=this.rawConstructor(),null!==destructors&&destructors.push(this.rawDestructor,ptr),ptr):0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&handle.$$.ptrType.isConst&&throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType||handle.$$.ptrType).name} to parameter type `+this.name);var clonedHandle,ptr,handleClass=handle.$$.ptrType.registeredClass;if(ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass),this.isSmartPointer)switch(void 0===handle.$$.smartPtr&&throwBindingError("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:handle.$$.smartPtrType===this?ptr=handle.$$.smartPtr:throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType||handle.$$.ptrType).name} to parameter type `+this.name);break;case 1:ptr=handle.$$.smartPtr;break;case 2:handle.$$.smartPtrType===this?ptr=handle.$$.smartPtr:(clonedHandle=handle.clone(),ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle.delete()})),null!==destructors&&destructors.push(this.rawDestructor,ptr));break;default:throwBindingError("Unsupporting sharing policy")}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(null===handle)return this.isReference&&throwBindingError("null is not a valid "+this.name),0;handle.$$||throwBindingError(`Cannot pass "${embindRepr(handle)}" as a `+this.name),handle.$$.ptr||throwBindingError("Cannot pass deleted object as a pointer of type "+this.name),handle.$$.ptrType.isConst&&throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type `+this.name);var handleClass=handle.$$.ptrType.registeredClass;return upcastPointer(handle.$$.ptr,handleClass,this.registeredClass)}function RegisteredPointer_getPointee(ptr){return ptr=this.rawGetPointee?this.rawGetPointee(ptr):ptr}function RegisteredPointer_destructor(ptr){this.rawDestructor&&this.rawDestructor(ptr)}function RegisteredPointer_deleteObject(handle){null!==handle&&handle.delete()}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee,RegisteredPointer.prototype.destructor=RegisteredPointer_destructor,RegisteredPointer.prototype.argPackAdvance=8,RegisteredPointer.prototype.readValueFromPointer=simpleReadValueFromPointer,RegisteredPointer.prototype.deleteObject=RegisteredPointer_deleteObject,RegisteredPointer.prototype.fromWireType=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name,this.registeredClass=registeredClass,this.isReference=isReference,this.isConst=isConst,this.isSmartPointer=isSmartPointer,this.pointeeType=pointeeType,this.sharingPolicy=sharingPolicy,this.rawGetPointee=rawGetPointee,this.rawConstructor=rawConstructor,this.rawShare=rawShare,this.rawDestructor=rawDestructor,isSmartPointer||void 0!==registeredClass.baseClass?this.toWireType=genericPointerToWireType:(this.toWireType=isConst?constNoSmartPtrRawPointerToWireType:nonConstNoSmartPtrRawPointerToWireType,this.destructorFunction=null)}function replacePublicSymbol(name,value,numArguments){Module.hasOwnProperty(name)||throwInternalError("Replacing nonexistant public symbol"),void 0!==Module[name].overloadTable&&void 0!==numArguments?Module[name].overloadTable[numArguments]=value:(Module[name]=value,Module[name].argCount=numArguments)}var dynCallLegacy=(sig,ptr,args)=>{sig=Module["dynCall_"+sig];return args&&args.length?sig.apply(null,[ptr].concat(args)):sig.call(null,ptr)},wasmTableMirror=[],getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];return func||(funcPtr>=wasmTableMirror.length&&(wasmTableMirror.length=funcPtr+1),wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)),func},dynCall=(sig,ptr,args)=>{return sig.includes("j")?dynCallLegacy(sig,ptr,args):getWasmTableEntry(ptr).apply(null,args)},getDynCaller=(sig,ptr)=>{var argCache=[];return function(){return argCache.length=0,Object.assign(argCache,arguments),dynCall(sig,ptr,argCache)}};function embind__requireFunction(signature,rawFunction){var fp=(signature=readLatin1String(signature)).includes("j")?getDynCaller(signature,rawFunction):getWasmTableEntry(rawFunction);return"function"!=typeof fp&&throwBindingError(`unknown function pointer with signature ${signature}: `+rawFunction),fp}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName,this.message=message;message=new Error(message).stack;void 0!==message&&(this.stack=this.toString()+"\n"+message.replace(/^Error(:[^\n]*)?\n/,""))});return errorClass.prototype=Object.create(baseErrorType.prototype),(errorClass.prototype.constructor=errorClass).prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},errorClass}var UnboundTypeError=void 0;function getTypeName(type){var type=___getTypeName(type),rv=readLatin1String(type);return _free(type),rv}function throwUnboundTypeError(message,types){var unboundTypes=[],seen={};throw types.forEach(function visit(type){seen[type]||registeredTypes[type]||(typeDependencies[type]?typeDependencies[type].forEach(visit):(unboundTypes.push(type),seen[type]=!0))}),new UnboundTypeError(message+": "+unboundTypes.map(getTypeName).join([", "]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){rawType>>>=0,rawPointerType>>>=0,rawConstPointerType>>>=0,baseClassRawType>>>=0,getActualTypeSignature>>>=0,getActualType>>>=0,upcastSignature>>>=0,upcast>>>=0,downcastSignature>>>=0,downcast>>>=0,destructorSignature>>>=0,rawDestructor>>>=0,name=readLatin1String(name>>>=0),getActualType=embind__requireFunction(getActualTypeSignature,getActualType),upcast=upcast&&embind__requireFunction(upcastSignature,upcast),downcast=downcast&&embind__requireFunction(downcastSignature,downcast),rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(`Cannot construct ${name} due to unbound types`,[baseClassRawType])}),whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0],base=baseClassRawType?(baseClass=base.registeredClass).instancePrototype:ClassHandle.prototype;var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype)throw new BindingError("Use 'new' to construct "+name);if(void 0===registeredClass.constructor_body)throw new BindingError(name+" has no accessible constructor");var body=registeredClass.constructor_body[arguments.length];if(void 0===body)throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`);return body.apply(this,arguments)}),instancePrototype=Object.create(base,{constructor:{value:constructor}}),registeredClass=(constructor.prototype=instancePrototype,new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast)),base=(registeredClass.baseClass&&(void 0===registeredClass.baseClass.__derivedClasses&&(registeredClass.baseClass.__derivedClasses=[]),registeredClass.baseClass.__derivedClasses.push(registeredClass)),new RegisteredPointer(name,registeredClass,!0,!1,!1)),baseClass=new RegisteredPointer(name+"*",registeredClass,!1,!1,!1),constPointerConverter=new RegisteredPointer(name+" const*",registeredClass,!1,!0,!1);return registeredPointers[rawType]={pointerType:baseClass,constPointerType:constPointerConverter},replacePublicSymbol(legalFunctionName,constructor),[base,baseClass,constPointerConverter]})}function heap32VectorToArray(count,firstElement){for(var array=[],i=0;i<count;i++)array.push(HEAPU32[firstElement+4*i>>>2]);return array}function newFunc(constructor,argumentList){var dummy;if(constructor instanceof Function)return(dummy=createNamedFunction(constructor.name||"unknownFunctionName",function(){})).prototype=constructor.prototype,dummy=new dummy,(argumentList=constructor.apply(dummy,argumentList))instanceof Object?argumentList:dummy;throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`)}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){for(var argCount=argTypes.length,isClassMethodFunc=(argCount<2&&throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!"),null!==argTypes[1]&&null!==classType),needsDestructorStack=!1,i=1;i<argTypes.length;++i)if(null!==argTypes[i]&&void 0===argTypes[i].destructorFunction){needsDestructorStack=!0;break}for(var returns="void"!==argTypes[0].name,argsList="",argsListWired="",i=0;i<argCount-2;++i)argsList+=(0!==i?", ":"")+"arg"+i,argsListWired+=(0!==i?", ":"")+"arg"+i+"Wired";var invokerFnBody=`
        return function ${makeLegalFunctionName(humanName)}(${argsList}) {
        if (arguments.length !== ${argCount-2}) {
          throwBindingError('function ${humanName} called with ${arguments.length} arguments, expected ${argCount-2} args!');
        }`,dtorStack=(needsDestructorStack&&(invokerFnBody+="var destructors = [];\n"),needsDestructorStack?"destructors":"null"),args1=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];isClassMethodFunc&&(invokerFnBody+="var thisWired = classParam.toWireType("+dtorStack+", this);\n");for(i=0;i<argCount-2;++i)invokerFnBody+="var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n",args1.push("argType"+i),args2.push(argTypes[i+2]);if(invokerFnBody+=(returns||isAsync?"var rv = ":"")+"invoker(fn"+(0<(argsListWired=isClassMethodFunc?"thisWired"+(0<argsListWired.length?", ":"")+argsListWired:argsListWired).length?", ":"")+argsListWired+");\n",needsDestructorStack)invokerFnBody+="runDestructors(destructors);\n";else for(i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=1===i?"thisWired":"arg"+(i-2)+"Wired";null!==argTypes[i].destructorFunction&&(invokerFnBody+=paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n",args1.push(paramName+"_dtor"),args2.push(argTypes[i].destructorFunction))}return returns&&(invokerFnBody+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),args1.push(invokerFnBody+="}\n"),newFunc(Function,args1).apply(null,args2)}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){rawClassType>>>=0,invokerSignature>>>=0,invoker>>>=0,rawConstructor>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);invoker=embind__requireFunction(invokerSignature,invoker),whenDependentTypesAreResolved([],[rawClassType],function(classType){var humanName="constructor "+(classType=classType[0]).name;if(void 0===classType.registeredClass.constructor_body&&(classType.registeredClass.constructor_body=[]),void 0!==classType.registeredClass.constructor_body[argCount-1])throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`,rawArgTypes)},whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){return argTypes.splice(1,0,null),classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor),[]}),[]})}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual,isAsync){rawClassType>>>=0,methodName>>>=0,invokerSignature>>>=0,rawInvoker>>>=0,context>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);methodName=readLatin1String(methodName),rawInvoker=embind__requireFunction(invokerSignature,rawInvoker),whenDependentTypesAreResolved([],[rawClassType],function(classType){var humanName=(classType=classType[0]).name+"."+methodName;function unboundTypesHandler(){throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`,rawArgTypes)}methodName.startsWith("@@")&&(methodName=Symbol[methodName.substring(2)]),isPureVirtual&&classType.registeredClass.pureVirtualFunctions.push(methodName);var proto=classType.registeredClass.instancePrototype,method=proto[methodName];return void 0===method||void 0===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2?(unboundTypesHandler.argCount=argCount-2,unboundTypesHandler.className=classType.name,proto[methodName]=unboundTypesHandler):(ensureOverloadTable(proto,methodName,humanName),proto[methodName].overloadTable[argCount-2]=unboundTypesHandler),whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context,isAsync);return void 0===proto[methodName].overloadTable?(argTypes.argCount=argCount-2,proto[methodName]=argTypes):proto[methodName].overloadTable[argCount-2]=argTypes,[]}),[]})}function handleAllocatorInit(){Object.assign(HandleAllocator.prototype,{get(id){return this.allocated[id]},has(id){return void 0!==this.allocated[id]},allocate(handle){var id=this.freelist.pop()||this.allocated.length;return this.allocated[id]=handle,id},free(id){this.allocated[id]=void 0,this.freelist.push(id)}})}function HandleAllocator(){this.allocated=[void 0],this.freelist=[]}var emval_handles=new HandleAllocator;function __emval_decref(handle){(handle>>>=0)>=emval_handles.reserved&&0==--emval_handles.get(handle).refcount&&emval_handles.free(handle)}function count_emval_handles(){for(var count=0,i=emval_handles.reserved;i<emval_handles.allocated.length;++i)void 0!==emval_handles.allocated[i]&&++count;return count}function init_emval(){emval_handles.allocated.push({value:void 0},{value:null},{value:!0},{value:!1}),emval_handles.reserved=emval_handles.allocated.length,Module.count_emval_handles=count_emval_handles}var Emval={toValue:handle=>(handle||throwBindingError("Cannot use deleted val. handle = "+handle),emval_handles.get(handle).value),toHandle:value=>{switch(value){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return emval_handles.allocate({refcount:1,value:value})}}};function __embind_register_emval(rawType,name){registerType(rawType>>>=0,{name:name=readLatin1String(name>>>=0),fromWireType:function(handle){var rv=Emval.toValue(handle);return __emval_decref(handle),rv},toWireType:function(destructors,value){return Emval.toHandle(value)},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:null})}function embindRepr(v){var t;return null===v?"null":"object"==(t=typeof v)||"array"==t||"function"==t?v.toString():""+v}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this.fromWireType(HEAPF32[pointer>>>2])};case 3:return function(pointer){return this.fromWireType(HEAPF64[pointer>>>3])};default:throw new TypeError("Unknown float type: "+name)}}function __embind_register_float(rawType,name,size){rawType>>>=0,name>>>=0;size=getShiftFromSize(size>>>=0);registerType(rawType,{name:name=readLatin1String(name),fromWireType:function(value){return value},toWireType:function(destructors,value){return value},argPackAdvance:8,readValueFromPointer:floatReadValueFromPointer(name,size),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync){name>>>=0,signature>>>=0,rawInvoker>>>=0,fn>>>=0;var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr>>>=0);name=readLatin1String(name),rawInvoker=embind__requireFunction(signature,rawInvoker),exposePublicSymbol(name,function(){throwUnboundTypeError(`Cannot call ${name} due to unbound types`,argTypes)},argCount-1),whenDependentTypesAreResolved([],argTypes,function(argTypes){argTypes=[argTypes[0],null].concat(argTypes.slice(1));return replacePublicSymbol(name,craftInvokerFunction(name,argTypes,null,rawInvoker,fn,isAsync),argCount-1),[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function(pointer){return HEAP8[pointer>>>0]}:function(pointer){return HEAPU8[pointer>>>0]};case 1:return signed?function(pointer){return HEAP16[pointer>>>1]}:function(pointer){return HEAPU16[pointer>>>1]};case 2:return signed?function(pointer){return HEAP32[pointer>>>2]}:function(pointer){return HEAPU32[pointer>>>2]};default:throw new TypeError("Unknown integer type: "+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){primitiveType>>>=0,size>>>=0,name=readLatin1String(name>>>=0),-1===maxRange&&(maxRange=4294967295);var bitshift,maxRange=getShiftFromSize(size),fromWireType=value=>value,size=(0===minRange&&(bitshift=32-8*size,fromWireType=value=>value<<bitshift>>>bitshift),name.includes("unsigned")),size=size?function(destructors,value){return this.name,value>>>0}:function(destructors,value){return this.name,value};registerType(primitiveType,{name:name,fromWireType:fromWireType,toWireType:size,argPackAdvance:8,readValueFromPointer:integerReadValueFromPointer(name,maxRange,0!==minRange),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){rawType>>>=0,name>>>=0;var TA=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][dataTypeIndex];function decodeMemoryView(handle){var heap=HEAPU32,size=heap[(handle>>=2)>>>0],handle=heap[handle+1>>>0];return new TA(heap.buffer,handle,size)}registerType(rawType,{name:name=readLatin1String(name),fromWireType:decodeMemoryView,argPackAdvance:8,readValueFromPointer:decodeMemoryView},{ignoreDuplicateRegistrations:!0})}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(0<maxBytesToWrite))return 0;for(var startIdx=outIdx>>>=0,endIdx=outIdx+maxBytesToWrite-1,i=0;i<str.length;++i){var u=str.charCodeAt(i);if((u=55296<=u&&u<=57343?65536+((1023&u)<<10)|1023&str.charCodeAt(++i):u)<=127){if(endIdx<=outIdx)break;heap[outIdx++>>>0]=u}else{if(u<=2047){if(endIdx<=outIdx+1)break;heap[outIdx++>>>0]=192|u>>6}else{if(u<=65535){if(endIdx<=outIdx+2)break;heap[outIdx++>>>0]=224|u>>12}else{if(endIdx<=outIdx+3)break;heap[outIdx++>>>0]=240|u>>18,heap[outIdx++>>>0]=128|u>>12&63}heap[outIdx++>>>0]=128|u>>6&63}heap[outIdx++>>>0]=128|63&u}}return heap[outIdx>>>0]=0,outIdx-startIdx},stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite),lengthBytesUTF8=str=>{for(var len=0,i=0;i<str.length;++i){var c=str.charCodeAt(i);c<=127?len++:c<=2047?len+=2:55296<=c&&c<=57343?(len+=4,++i):len+=3}return len};function __embind_register_std_string(rawType,name){rawType>>>=0;var stdStringIsUTF8="std::string"===(name=readLatin1String(name>>>=0));registerType(rawType,{name:name,fromWireType:function(value){var length=HEAPU32[value>>>2],payload=value+4;if(stdStringIsUTF8)for(var decodeStartPtr=payload,i=0;i<=length;++i){var stringSegment,str,currentBytePtr=payload+i;i!=length&&0!=HEAPU8[currentBytePtr>>>0]||(stringSegment=UTF8ToString(decodeStartPtr,currentBytePtr-decodeStartPtr),str=void 0===str?stringSegment:str+String.fromCharCode(0)+stringSegment,decodeStartPtr=currentBytePtr+1)}else{for(var a=new Array(length),i=0;i<length;++i)a[i]=String.fromCharCode(HEAPU8[payload+i>>>0]);str=a.join("")}return _free(value),str},toWireType:function(destructors,value){var length,valueIsOfTypeString="string"==typeof(value=value instanceof ArrayBuffer?new Uint8Array(value):value),base=(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array||throwBindingError("Cannot pass non-string to std::string"),length=stdStringIsUTF8&&valueIsOfTypeString?lengthBytesUTF8(value):value.length,_malloc(4+length+1)),ptr=base+4;if(HEAPU32[base>>>2]=length,stdStringIsUTF8&&valueIsOfTypeString)stringToUTF8(value,ptr,length+1);else if(valueIsOfTypeString)for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);255<charCode&&(_free(ptr),throwBindingError("String has UTF-16 code units that do not fit in 8 bits")),HEAPU8[ptr+i>>>0]=charCode}else for(i=0;i<length;++i)HEAPU8[ptr+i>>>0]=value[i];return null!==destructors&&destructors.push(_free,base),base},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0,UTF16ToString=(ptr,maxBytesToRead)=>{for(var endPtr,idx=ptr>>1,maxIdx=idx+maxBytesToRead/2;!(maxIdx<=idx)&&HEAPU16[idx>>>0];)++idx;if(32<(endPtr=idx<<1)-ptr&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr>>>0,endPtr>>>0));for(var str="",i=0;!(maxBytesToRead/2<=i);++i){var codeUnit=HEAP16[ptr+2*i>>>1];if(0==codeUnit)break;str+=String.fromCharCode(codeUnit)}return str},stringToUTF16=(str,outPtr,maxBytesToWrite)=>{if((maxBytesToWrite=void 0===maxBytesToWrite?2147483647:maxBytesToWrite)<2)return 0;for(var startPtr=outPtr,numCharsToWrite=(maxBytesToWrite-=2)<2*str.length?maxBytesToWrite/2:str.length,i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>>1]=codeUnit,outPtr+=2}return HEAP16[outPtr>>>1]=0,outPtr-startPtr},lengthBytesUTF16=str=>2*str.length,UTF32ToString=(ptr,maxBytesToRead)=>{for(var i=0,str="";!(maxBytesToRead/4<=i);){var ch,utf32=HEAP32[ptr+4*i>>>2];if(0==utf32)break;++i,65536<=utf32?(ch=utf32-65536,str+=String.fromCharCode(55296|ch>>10,56320|1023&ch)):str+=String.fromCharCode(utf32)}return str},stringToUTF32=(str,outPtr,maxBytesToWrite)=>{if((maxBytesToWrite=void 0===maxBytesToWrite?2147483647:maxBytesToWrite)<4)return 0;for(var startPtr=outPtr>>>=0,endPtr=startPtr+maxBytesToWrite-4,i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(55296<=codeUnit&&codeUnit<=57343&&(codeUnit=65536+((1023&codeUnit)<<10)|1023&str.charCodeAt(++i)),HEAP32[outPtr>>>2]=codeUnit,endPtr<(outPtr+=4)+4)break}return HEAP32[outPtr>>>2]=0,outPtr-startPtr},lengthBytesUTF32=str=>{for(var len=0,i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);55296<=codeUnit&&codeUnit<=57343&&++i,len+=4}return len},__embind_register_std_wstring=function(rawType,charSize,name){var decodeString,encodeString,getHeap,lengthBytesUTF,shift;rawType>>>=0,charSize>>>=0,name=readLatin1String(name>>>=0),2===charSize?(decodeString=UTF16ToString,encodeString=stringToUTF16,lengthBytesUTF=lengthBytesUTF16,getHeap=()=>HEAPU16,shift=1):4===charSize&&(decodeString=UTF32ToString,encodeString=stringToUTF32,lengthBytesUTF=lengthBytesUTF32,getHeap=()=>HEAPU32,shift=2),registerType(rawType,{name:name,fromWireType:function(value){for(var length=HEAPU32[value>>>2],HEAP=getHeap(),decodeStartPtr=value+4,i=0;i<=length;++i){var stringSegment,str,currentBytePtr=value+4+i*charSize;i!=length&&0!=HEAP[currentBytePtr>>>shift]||(stringSegment=decodeString(decodeStartPtr,currentBytePtr-decodeStartPtr),str=void 0===str?stringSegment:str+String.fromCharCode(0)+stringSegment,decodeStartPtr=currentBytePtr+charSize)}return _free(value),str},toWireType:function(destructors,value){"string"!=typeof value&&throwBindingError("Cannot pass non-string to C++ string type "+name);var length=lengthBytesUTF(value),ptr=_malloc(4+length+charSize);return HEAPU32[ptr>>>2]=length>>shift,encodeString(value,ptr+4,length+charSize),null!==destructors&&destructors.push(_free,ptr),ptr},argPackAdvance:8,readValueFromPointer:simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})};function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){constructorSignature>>>=0,rawConstructor>>>=0,destructorSignature>>>=0,rawDestructor>>>=0,structRegistrations[rawType>>>=0]={name:readLatin1String(name>>>=0),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){getterReturnType>>>=0,getterSignature>>>=0,getter>>>=0,getterContext>>>=0,setterArgumentType>>>=0,setterSignature>>>=0,setter>>>=0,setterContext>>>=0,structRegistrations[structType>>>=0].fields.push({fieldName:readLatin1String(fieldName>>>=0),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){registerType(rawType>>>=0,{isVoid:!0,name:name=readLatin1String(name>>>=0),argPackAdvance:0,fromWireType:function(){},toWireType:function(destructors,o){}})}function __emval_incref(handle){4<(handle>>>=0)&&(emval_handles.get(handle).refcount+=1)}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];return void 0===symbol?readLatin1String(address):symbol}function __emval_new_cstring(v){return Emval.toHandle(getStringOrSymbol(v>>>=0))}function __emval_new_object(){return Emval.toHandle({})}function __emval_set_property(handle,key,value){key>>>=0,value>>>=0,handle=Emval.toValue(handle>>>=0),key=Emval.toValue(key),value=Emval.toValue(value),handle[key]=value}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];return void 0===impl&&throwBindingError(humanName+" has unknown type "+getTypeName(rawType)),impl}function __emval_take_value(type,arg){arg>>>=0;type=(type=requireRegisteredType(type>>>=0,"_emval_take_value")).readValueFromPointer(arg);return Emval.toHandle(type)}var isLeapYear=year=>year%4==0&&(year%100!=0||year%400==0),MONTH_DAYS_LEAP_CUMULATIVE=[0,31,60,91,121,152,182,213,244,274,305,335],MONTH_DAYS_REGULAR_CUMULATIVE=[0,31,59,90,120,151,181,212,243,273,304,334],ydayFromDate=date=>{return(isLeapYear(date.getFullYear())?MONTH_DAYS_LEAP_CUMULATIVE:MONTH_DAYS_REGULAR_CUMULATIVE)[date.getMonth()]+date.getDate()-1};function __localtime_js(time_low,time_high,tmPtr){var time_low=convertI32PairToI53Checked(time_low,time_high),time_high=(tmPtr>>>=0,new Date(1e3*time_low)),time_low=(HEAP32[tmPtr>>>2]=time_high.getSeconds(),HEAP32[tmPtr+4>>>2]=time_high.getMinutes(),HEAP32[tmPtr+8>>>2]=time_high.getHours(),HEAP32[tmPtr+12>>>2]=time_high.getDate(),HEAP32[tmPtr+16>>>2]=time_high.getMonth(),HEAP32[tmPtr+20>>>2]=time_high.getFullYear()-1900,HEAP32[tmPtr+24>>>2]=time_high.getDay(),0|ydayFromDate(time_high)),time_low=(HEAP32[tmPtr+28>>>2]=time_low,HEAP32[tmPtr+36>>>2]=-60*time_high.getTimezoneOffset(),new Date(time_high.getFullYear(),0,1)),summerOffset=new Date(time_high.getFullYear(),6,1).getTimezoneOffset(),time_low=time_low.getTimezoneOffset(),time_high=0|(summerOffset!=time_low&&time_high.getTimezoneOffset()==Math.min(time_low,summerOffset));HEAP32[tmPtr+32>>>2]=time_high}var stringToNewUTF8=str=>{var size=lengthBytesUTF8(str)+1,ret=_malloc(size);return ret&&stringToUTF8(str,ret,size),ret};function __tzset_js(timezone,daylight,tzname){timezone>>>=0,daylight>>>=0,tzname>>>=0;var currentYear=(new Date).getFullYear(),winter=new Date(currentYear,0,1),currentYear=new Date(currentYear,6,1),winterOffset=winter.getTimezoneOffset(),summerOffset=currentYear.getTimezoneOffset(),stdTimezoneOffset=Math.max(winterOffset,summerOffset);function extractZone(date){date=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return date?date[1]:"GMT"}HEAPU32[timezone>>>2]=60*stdTimezoneOffset,HEAP32[daylight>>>2]=Number(winterOffset!=summerOffset);timezone=extractZone(winter),stdTimezoneOffset=extractZone(currentYear),daylight=stringToNewUTF8(timezone),winter=stringToNewUTF8(stdTimezoneOffset);summerOffset<winterOffset?(HEAPU32[tzname>>>2]=daylight,HEAPU32[tzname+4>>>2]=winter):(HEAPU32[tzname>>>2]=winter,HEAPU32[tzname+4>>>2]=daylight)}var _abort=()=>{abort("")};function _emscripten_date_now(){return Date.now()}function _emscripten_memcpy_big(dest,src,num){return HEAPU8.copyWithin((dest>>>=0)>>>0,(src>>>=0)>>>0,src+(num>>>=0)>>>0)}var getHeapMax=()=>4294901760,growMemory=size=>{size=size-wasmMemory.buffer.byteLength+65535>>>16;try{return wasmMemory.grow(size),updateMemoryViews(),1}catch(e){}};function _emscripten_resize_heap(requestedSize){requestedSize>>>=0;var oldSize=HEAPU8.length,maxHeapSize=getHeapMax();if(!(maxHeapSize<requestedSize))for(var multiple,cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown),overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296),overGrownHeapSize=Math.min(maxHeapSize,(overGrownHeapSize=Math.max(requestedSize,overGrownHeapSize))+((multiple=65536)-overGrownHeapSize%multiple)%multiple);if(growMemory(overGrownHeapSize))return!0}return!1}function _emscripten_run_script(ptr){ptr>>>=0,eval(UTF8ToString(ptr))}var ENV={},getExecutableName=()=>thisProgram||"./this.program",getEnvStrings=()=>{if(!getEnvStrings.strings){var env={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:getExecutableName()};for(x in ENV)void 0===ENV[x]?delete env[x]:env[x]=ENV[x];var x,strings=[];for(x in env)strings.push(x+"="+env[x]);getEnvStrings.strings=strings}return getEnvStrings.strings},stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i)HEAP8[buffer++>>>0]=str.charCodeAt(i);HEAP8[buffer>>>0]=0},PATH={isAbs:path=>"/"===path.charAt(0),splitPath:filename=>{return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{for(var up=0,i=parts.length-1;0<=i;i--){var last=parts[i];"."===last?parts.splice(i,1):".."===last?(parts.splice(i,1),up++):up&&(parts.splice(i,1),up--)}if(allowAboveRoot)for(;up;up--)parts.unshift("..");return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash="/"===path.substr(-1);return(path=(path=PATH.normalizeArray(path.split("/").filter(p=>!!p),!isAbsolute).join("/"))||isAbsolute?path:".")&&trailingSlash&&(path+="/"),(isAbsolute?"/":"")+path},dirname:path=>{var path=PATH.splitPath(path),root=path[0],path=path[1];return root||path?root+(path=path&&path.substr(0,path.length-1)):"."},basename:path=>{var lastSlash;return"/"===path?"/":-1===(lastSlash=(path=(path=PATH.normalize(path)).replace(/\/$/,"")).lastIndexOf("/"))?path:path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join("/"))},join2:(l,r)=>PATH.normalize(l+"/"+r)},initRandomFill=()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return view=>crypto.getRandomValues(view);if(ENVIRONMENT_IS_NODE)try{var randomBytes,crypto_module=require("crypto");return crypto_module.randomFillSync?view=>crypto_module.randomFillSync(view):(randomBytes=crypto_module.randomBytes,view=>(view.set(randomBytes(view.byteLength)),view))}catch(e){}abort("initRandomDevice")},randomFill=view=>(randomFill=initRandomFill())(view),PATH_FS={resolve:function(){for(var resolvedPath="",resolvedAbsolute=!1,i=arguments.length-1;-1<=i&&!resolvedAbsolute;i--){var path=0<=i?arguments[i]:FS.cwd();if("string"!=typeof path)throw new TypeError("Arguments to path.resolve must be strings");if(!path)return"";resolvedPath=path+"/"+resolvedPath,resolvedAbsolute=PATH.isAbs(path)}return(resolvedAbsolute?"/":"")+(resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(p=>!!p),!resolvedAbsolute).join("/"))||"."},relative:(from,to)=>{function trim(arr){for(var start=0;start<arr.length&&""===arr[start];start++);for(var end=arr.length-1;0<=end&&""===arr[end];end--);return end<start?[]:arr.slice(start,end-start+1)}from=PATH_FS.resolve(from).substr(1),to=PATH_FS.resolve(to).substr(1);for(var fromParts=trim(from.split("/")),toParts=trim(to.split("/")),length=Math.min(fromParts.length,toParts.length),samePartsLength=length,i=0;i<length;i++)if(fromParts[i]!==toParts[i]){samePartsLength=i;break}for(var outputParts=[],i=samePartsLength;i<fromParts.length;i++)outputParts.push("..");return(outputParts=outputParts.concat(toParts.slice(samePartsLength))).join("/")}},FS_stdin_getChar_buffer=[];function intArrayFromString(stringy,dontAddNull,length){length=0<length?length:lengthBytesUTF8(stringy)+1,length=new Array(length),stringy=stringToUTF8Array(stringy,length,0,length.length);return dontAddNull&&(length.length=stringy),length}var FS_stdin_getChar=()=>{if(!FS_stdin_getChar_buffer.length){var result=null;if(ENVIRONMENT_IS_NODE){var buf=Buffer.alloc(256),bytesRead=0,fd=process.stdin.fd;try{bytesRead=fs.readSync(fd,buf,0,256,-1)}catch(e){if(!e.toString().includes("EOF"))throw e;bytesRead=0}result=0<bytesRead?buf.slice(0,bytesRead).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(result=window.prompt("Input: "))&&(result+="\n"):"function"==typeof readline&&null!==(result=readline())&&(result+="\n");if(!result)return null;FS_stdin_getChar_buffer=intArrayFromString(result,!0)}return FS_stdin_getChar_buffer.shift()},TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops},FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty)throw new FS.ErrnoError(43);stream.tty=tty,stream.seekable=!1},close:function(stream){stream.tty.ops.fsync(stream.tty)},fsync:function(stream){stream.tty.ops.fsync(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char)throw new FS.ErrnoError(60);for(var result,bytesRead=0,i=0;i<length;i++){try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(void 0===result&&0===bytesRead)throw new FS.ErrnoError(6);if(null==result)break;bytesRead++,buffer[offset+i]=result}return bytesRead&&(stream.node.timestamp=Date.now()),bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char)throw new FS.ErrnoError(60);try{for(var i=0;i<length;i++)stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}return length&&(stream.node.timestamp=Date.now()),i}},default_tty_ops:{get_char:function(tty){return FS_stdin_getChar()},put_char:function(tty,val){null===val||10===val?(out(UTF8ArrayToString(tty.output,0)),tty.output=[]):0!=val&&tty.output.push(val)},fsync:function(tty){tty.output&&0<tty.output.length&&(out(UTF8ArrayToString(tty.output,0)),tty.output=[])},ioctl_tcgets:function(tty){return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ioctl_tcsets:function(tty,optional_actions,data){return 0},ioctl_tiocgwinsz:function(tty){return[24,80]}},default_tty1_ops:{put_char:function(tty,val){null===val||10===val?(err(UTF8ArrayToString(tty.output,0)),tty.output=[]):0!=val&&tty.output.push(val)},fsync:function(tty){tty.output&&0<tty.output.length&&(err(UTF8ArrayToString(tty.output,0)),tty.output=[])}}},mmapAlloc=size=>{abort()},MEMFS={ops_table:null,mount(mount){return MEMFS.createNode(null,"/",16895,0)},createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode))throw new FS.ErrnoError(63);MEMFS.ops_table||(MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}});mode=FS.createNode(parent,name,mode,dev);return FS.isDir(mode.mode)?(mode.node_ops=MEMFS.ops_table.dir.node,mode.stream_ops=MEMFS.ops_table.dir.stream,mode.contents={}):FS.isFile(mode.mode)?(mode.node_ops=MEMFS.ops_table.file.node,mode.stream_ops=MEMFS.ops_table.file.stream,mode.usedBytes=0,mode.contents=null):FS.isLink(mode.mode)?(mode.node_ops=MEMFS.ops_table.link.node,mode.stream_ops=MEMFS.ops_table.link.stream):FS.isChrdev(mode.mode)&&(mode.node_ops=MEMFS.ops_table.chrdev.node,mode.stream_ops=MEMFS.ops_table.chrdev.stream),mode.timestamp=Date.now(),parent&&(parent.contents[name]=mode,parent.timestamp=mode.timestamp),mode},getFileDataAsTypedArray(node){return node.contents?node.contents.subarray?node.contents.subarray(0,node.usedBytes):new Uint8Array(node.contents):new Uint8Array(0)},expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;newCapacity<=prevCapacity||(newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<1048576?2:1.125)>>>0),0!=prevCapacity&&(newCapacity=Math.max(newCapacity,256)),prevCapacity=node.contents,node.contents=new Uint8Array(newCapacity),0<node.usedBytes&&node.contents.set(prevCapacity.subarray(0,node.usedBytes),0))},resizeFileStorage(node,newSize){var oldContents;node.usedBytes!=newSize&&(0==newSize?(node.contents=null,node.usedBytes=0):(oldContents=node.contents,node.contents=new Uint8Array(newSize),oldContents&&node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes))),node.usedBytes=newSize))},node_ops:{getattr(node){var attr={};return attr.dev=FS.isChrdev(node.mode)?node.id:1,attr.ino=node.id,attr.mode=node.mode,attr.nlink=1,attr.uid=0,attr.gid=0,attr.rdev=node.rdev,FS.isDir(node.mode)?attr.size=4096:FS.isFile(node.mode)?attr.size=node.usedBytes:FS.isLink(node.mode)?attr.size=node.link.length:attr.size=0,attr.atime=new Date(node.timestamp),attr.mtime=new Date(node.timestamp),attr.ctime=new Date(node.timestamp),attr.blksize=4096,attr.blocks=Math.ceil(attr.size/attr.blksize),attr},setattr(node,attr){void 0!==attr.mode&&(node.mode=attr.mode),void 0!==attr.timestamp&&(node.timestamp=attr.timestamp),void 0!==attr.size&&MEMFS.resizeFileStorage(node,attr.size)},lookup(parent,name){throw FS.genericErrors[44]},mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node)for(var i in new_node.contents)throw new FS.ErrnoError(55)}delete old_node.parent.contents[old_node.name],old_node.parent.timestamp=Date.now(),old_node.name=new_name,new_dir.contents[new_name]=old_node,new_dir.timestamp=old_node.parent.timestamp,old_node.parent=new_dir},unlink(parent,name){delete parent.contents[name],parent.timestamp=Date.now()},rmdir(parent,name){for(var i in FS.lookupNode(parent,name).contents)throw new FS.ErrnoError(55);delete parent.contents[name],parent.timestamp=Date.now()},readdir(node){var key,entries=[".",".."];for(key in node.contents)node.contents.hasOwnProperty(key)&&entries.push(key);return entries},symlink(parent,newname,oldpath){parent=MEMFS.createNode(parent,newname,41471,0);return parent.link=oldpath,parent},readlink(node){if(FS.isLink(node.mode))return node.link;throw new FS.ErrnoError(28)}},stream_ops:{read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(8<size&&contents.subarray)buffer.set(contents.subarray(position,position+size),offset);else for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i];return size},write(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer&&(canOwn=!1),!length)return 0;var node=stream.node;if(node.timestamp=Date.now(),buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn)return node.contents=buffer.subarray(offset,offset+length),node.usedBytes=length;if(0===node.usedBytes&&0===position)return node.contents=buffer.slice(offset,offset+length),node.usedBytes=length;if(position+length<=node.usedBytes)return node.contents.set(buffer.subarray(offset,offset+length),position),length}if(MEMFS.expandFileStorage(node,position+length),node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else for(var i=0;i<length;i++)node.contents[position+i]=buffer[offset+i];return node.usedBytes=Math.max(node.usedBytes,position+length),length},llseek(stream,offset,whence){if(1===whence?offset+=stream.position:2===whence&&FS.isFile(stream.node.mode)&&(offset+=stream.node.usedBytes),offset<0)throw new FS.ErrnoError(28);return offset},allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length),stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode))throw new FS.ErrnoError(43);var ptr,allocated,stream=stream.node.contents;if(2&flags||stream.buffer!==HEAP8.buffer){if((0<position||position+length<stream.length)&&(stream=stream.subarray?stream.subarray(position,position+length):Array.prototype.slice.call(stream,position,position+length)),allocated=!0,!(ptr=mmapAlloc(length)))throw new FS.ErrnoError(48);HEAP8.set(stream,ptr>>>0)}else allocated=!1,ptr=stream.byteOffset;return{ptr:ptr,allocated:allocated}},msync(stream,buffer,offset,length,mmapFlags){return MEMFS.stream_ops.write(stream,buffer,0,length,offset,!1),0}}},asyncLoad=(url,onload,onerror,noRunDep)=>{var dep=noRunDep?"":getUniqueRunDependency("al "+url);readAsync(url,arrayBuffer=>{assert(arrayBuffer,`Loading data file "${url}" failed (no arrayBuffer).`),onload(new Uint8Array(arrayBuffer)),dep&&removeRunDependency(dep)},event=>{if(!onerror)throw`Loading data file "${url}" failed.`;onerror()}),dep&&addRunDependency(dep)},preloadPlugins=Module.preloadPlugins||[];function FS_handledByPreloadPlugin(byteArray,fullname,finish,onerror){"undefined"!=typeof Browser&&Browser.init();var handled=!1;return preloadPlugins.forEach(function(plugin){handled||plugin.canHandle(fullname)&&(plugin.handle(byteArray,fullname,finish,onerror),handled=!0)}),handled}function FS_createPreloadedFile(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent,dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){preFinish&&preFinish(),dontCreateFile||FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn),onload&&onload(),removeRunDependency(dep)}FS_handledByPreloadPlugin(byteArray,fullname,finish,()=>{onerror&&onerror(),removeRunDependency(dep)})||finish(byteArray)}addRunDependency(dep),"string"==typeof url?asyncLoad(url,byteArray=>processData(byteArray),onerror):processData(url)}function FS_modeStringToFlags(str){var flags={r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090}[str];if(void 0===flags)throw new Error("Unknown file open mode: "+str);return flags}function FS_getMode(canRead,canWrite){var mode=0;return canRead&&(mode|=365),canWrite&&(mode|=146),mode}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path,opts={})=>{if(!(path=PATH_FS.resolve(path)))return{path:"",node:null};if(8<(opts=Object.assign({follow_mount:!0,recurse_count:0},opts)).recurse_count)throw new FS.ErrnoError(32);for(var parts=path.split("/").filter(p=>!!p),current=FS.root,current_path="/",i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent)break;if(current=FS.lookupNode(current,parts[i]),current_path=PATH.join2(current_path,parts[i]),!FS.isMountpoint(current)||islast&&!opts.follow_mount||(current=current.mounted.root),!islast||opts.follow)for(var count=0;FS.isLink(current.mode);){var link=FS.readlink(current_path),current_path=PATH_FS.resolve(PATH.dirname(current_path),link),current=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1}).node;if(40<count++)throw new FS.ErrnoError(32)}}return{path:current_path,node:current}},getPath:node=>{for(var path,mount;;){if(FS.isRoot(node))return mount=node.mount.mountpoint,path?"/"!==mount[mount.length-1]?mount+"/"+path:mount+path:mount;path=path?node.name+"/"+path:node.name,node=node.parent}},hashName:(parentid,name)=>{for(var hash=0,i=0;i<name.length;i++)hash=(hash<<5)-hash+name.charCodeAt(i)|0;return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:node=>{var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash],FS.nameTable[hash]=node},hashRemoveNode:node=>{var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node)FS.nameTable[hash]=node.name_next;else for(var current=FS.nameTable[hash];current;){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}},lookupNode:(parent,name)=>{var errCode=FS.mayLookup(parent);if(errCode)throw new FS.ErrnoError(errCode,parent);for(var errCode=FS.hashName(parent.id,name),node=FS.nameTable[errCode];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name)return node}return FS.lookup(parent,name)},createNode:(parent,name,mode,rdev)=>{parent=new FS.FSNode(parent,name,mode,rdev);return FS.hashAddNode(parent),parent},destroyNode:node=>{FS.hashRemoveNode(node)},isRoot:node=>node===node.parent,isMountpoint:node=>!!node.mounted,isFile:mode=>32768==(61440&mode),isDir:mode=>16384==(61440&mode),isLink:mode=>40960==(61440&mode),isChrdev:mode=>8192==(61440&mode),isBlkdev:mode=>24576==(61440&mode),isFIFO:mode=>4096==(61440&mode),isSocket:mode=>49152==(49152&mode),flagsToPermissionString:flag=>{var perms=["r","w","rw"][3&flag];return 512&flag&&(perms+="w"),perms},nodePermissions:(node,perms)=>FS.ignorePermissions||(!perms.includes("r")||292&node.mode)&&(!perms.includes("w")||146&node.mode)&&(!perms.includes("x")||73&node.mode)?0:2,mayLookup:dir=>{var errCode=FS.nodePermissions(dir,"x");return errCode||(dir.node_ops.lookup?0:2)},mayCreate:(dir,name)=>{try{FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete:(dir,name,isdir)=>{var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}name=FS.nodePermissions(dir,"wx");if(name)return name;if(isdir){if(!FS.isDir(node.mode))return 54;if(FS.isRoot(node)||FS.getPath(node)===FS.cwd())return 10}else if(FS.isDir(node.mode))return 31;return 0},mayOpen:(node,flags)=>node?FS.isLink(node.mode)?32:FS.isDir(node.mode)&&("r"!==FS.flagsToPermissionString(flags)||512&flags)?31:FS.nodePermissions(node,FS.flagsToPermissionString(flags)):44,MAX_OPEN_FDS:4096,nextfd:()=>{for(var fd=0;fd<=FS.MAX_OPEN_FDS;fd++)if(!FS.streams[fd])return fd;throw new FS.ErrnoError(33)},getStreamChecked:fd=>{fd=FS.getStream(fd);if(fd)return fd;throw new FS.ErrnoError(8)},getStream:fd=>FS.streams[fd],createStream:(stream,fd=-1)=>(FS.FSStream||(FS.FSStream=function(){this.shared={}},FS.FSStream.prototype={},Object.defineProperties(FS.FSStream.prototype,{object:{get(){return this.node},set(val){this.node=val}},isRead:{get(){return 1!=(2097155&this.flags)}},isWrite:{get(){return 0!=(2097155&this.flags)}},isAppend:{get(){return 1024&this.flags}},flags:{get(){return this.shared.flags},set(val){this.shared.flags=val}},position:{get(){return this.shared.position},set(val){this.shared.position=val}}})),stream=Object.assign(new FS.FSStream,stream),-1==fd&&(fd=FS.nextfd()),stream.fd=fd,FS.streams[fd]=stream),closeStream:fd=>{FS.streams[fd]=null},chrdev_stream_ops:{open:stream=>{var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops,stream.stream_ops.open&&stream.stream_ops.open(stream)},llseek:()=>{throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>255&dev,makedev:(ma,mi)=>ma<<8|mi,registerDevice:(dev,ops)=>{FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts:mount=>{for(var mounts=[],check=[mount];check.length;){var m=check.pop();mounts.push(m),check.push.apply(check,m.mounts)}return mounts},syncfs:(populate,callback)=>{"function"==typeof populate&&(callback=populate,populate=!1),FS.syncFSRequests++,1<FS.syncFSRequests&&err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);var mounts=FS.getMounts(FS.root.mount),completed=0;function doCallback(errCode){return FS.syncFSRequests--,callback(errCode)}function done(errCode){if(errCode)return done.errored?void 0:(done.errored=!0,doCallback(errCode));++completed>=mounts.length&&doCallback(null)}mounts.forEach(mount=>{if(!mount.type.syncfs)return done(null);mount.type.syncfs(mount,populate,done)})},mount:(type,opts,mountpoint)=>{var node,root="/"===mountpoint,pseudo=!mountpoint;if(root&&FS.root)throw new FS.ErrnoError(10);if(!root&&!pseudo){pseudo=FS.lookupPath(mountpoint,{follow_mount:!1});if(mountpoint=pseudo.path,node=pseudo.node,FS.isMountpoint(node))throw new FS.ErrnoError(10);if(!FS.isDir(node.mode))throw new FS.ErrnoError(54)}pseudo={type:type,opts:opts,mountpoint:mountpoint,mounts:[]},opts=type.mount(pseudo);return(opts.mount=pseudo).root=opts,root?FS.root=opts:node&&(node.mounted=pseudo,node.mount)&&node.mount.mounts.push(pseudo),opts},unmount:mountpoint=>{mountpoint=FS.lookupPath(mountpoint,{follow_mount:!1});if(!FS.isMountpoint(mountpoint.node))throw new FS.ErrnoError(28);var mountpoint=mountpoint.node,mount=mountpoint.mounted,mounts=FS.getMounts(mount),mount=(Object.keys(FS.nameTable).forEach(hash=>{for(var current=FS.nameTable[hash];current;){var next=current.name_next;mounts.includes(current.mount)&&FS.destroyNode(current),current=next}}),mountpoint.mounted=null,mountpoint.mount.mounts.indexOf(mount));mountpoint.mount.mounts.splice(mount,1)},lookup:(parent,name)=>parent.node_ops.lookup(parent,name),mknod:(path,mode,dev)=>{var parent=FS.lookupPath(path,{parent:!0}).node,path=PATH.basename(path);if(!path||"."===path||".."===path)throw new FS.ErrnoError(28);var errCode=FS.mayCreate(parent,path);if(errCode)throw new FS.ErrnoError(errCode);if(parent.node_ops.mknod)return parent.node_ops.mknod(parent,path,mode,dev);throw new FS.ErrnoError(63)},create:(path,mode)=>FS.mknod(path,mode=(mode=void 0!==mode?mode:438)&4095|32768,0),mkdir:(path,mode)=>FS.mknod(path,mode=(mode=void 0!==mode?mode:511)&1023|16384,0),mkdirTree:(path,mode)=>{for(var dirs=path.split("/"),d="",i=0;i<dirs.length;++i)if(dirs[i]){d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(20!=e.errno)throw e}}},mkdev:(path,mode,dev)=>(void 0===dev&&(dev=mode,mode=438),FS.mknod(path,mode|=8192,dev)),symlink:(oldpath,newpath)=>{if(!PATH_FS.resolve(oldpath))throw new FS.ErrnoError(44);var parent=FS.lookupPath(newpath,{parent:!0}).node;if(!parent)throw new FS.ErrnoError(44);var newpath=PATH.basename(newpath),errCode=FS.mayCreate(parent,newpath);if(errCode)throw new FS.ErrnoError(errCode);if(parent.node_ops.symlink)return parent.node_ops.symlink(parent,newpath,oldpath);throw new FS.ErrnoError(63)},rename:(old_path,new_path)=>{var old_dirname=PATH.dirname(old_path),new_dirname=PATH.dirname(new_path),old_name=PATH.basename(old_path),new_name=PATH.basename(new_path),lookup=FS.lookupPath(old_path,{parent:!0}),lookup=lookup.node,new_dir=FS.lookupPath(new_path,{parent:!0}).node;if(!lookup||!new_dir)throw new FS.ErrnoError(44);if(lookup.mount!==new_dir.mount)throw new FS.ErrnoError(75);var new_node,old_node=FS.lookupNode(lookup,old_name),old_path=PATH_FS.relative(old_path,new_dirname);if("."!==old_path.charAt(0))throw new FS.ErrnoError(28);if("."!==(old_path=PATH_FS.relative(new_path,old_dirname)).charAt(0))throw new FS.ErrnoError(55);try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node!==new_node){new_dirname=FS.isDir(old_node.mode),new_path=FS.mayDelete(lookup,old_name,new_dirname);if(new_path)throw new FS.ErrnoError(new_path);if(new_path=new_node?FS.mayDelete(new_dir,new_name,new_dirname):FS.mayCreate(new_dir,new_name))throw new FS.ErrnoError(new_path);if(!lookup.node_ops.rename)throw new FS.ErrnoError(63);if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node))throw new FS.ErrnoError(10);if(new_dir!==lookup&&(new_path=FS.nodePermissions(lookup,"w")))throw new FS.ErrnoError(new_path);FS.hashRemoveNode(old_node);try{lookup.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}}},rmdir:path=>{var parent=FS.lookupPath(path,{parent:!0}).node,path=PATH.basename(path),node=FS.lookupNode(parent,path),errCode=FS.mayDelete(parent,path,!0);if(errCode)throw new FS.ErrnoError(errCode);if(!parent.node_ops.rmdir)throw new FS.ErrnoError(63);if(FS.isMountpoint(node))throw new FS.ErrnoError(10);parent.node_ops.rmdir(parent,path),FS.destroyNode(node)},readdir:path=>{path=FS.lookupPath(path,{follow:!0}).node;if(path.node_ops.readdir)return path.node_ops.readdir(path);throw new FS.ErrnoError(54)},unlink:path=>{var parent=FS.lookupPath(path,{parent:!0}).node;if(!parent)throw new FS.ErrnoError(44);var path=PATH.basename(path),node=FS.lookupNode(parent,path),errCode=FS.mayDelete(parent,path,!1);if(errCode)throw new FS.ErrnoError(errCode);if(!parent.node_ops.unlink)throw new FS.ErrnoError(63);if(FS.isMountpoint(node))throw new FS.ErrnoError(10);parent.node_ops.unlink(parent,path),FS.destroyNode(node)},readlink:path=>{path=FS.lookupPath(path).node;if(!path)throw new FS.ErrnoError(44);if(path.node_ops.readlink)return PATH_FS.resolve(FS.getPath(path.parent),path.node_ops.readlink(path));throw new FS.ErrnoError(28)},stat:(path,dontFollow)=>{path=FS.lookupPath(path,{follow:!dontFollow}).node;if(!path)throw new FS.ErrnoError(44);if(path.node_ops.getattr)return path.node_ops.getattr(path);throw new FS.ErrnoError(63)},lstat:path=>FS.stat(path,!0),chmod:(path,mode,dontFollow)=>{if(!(dontFollow="string"==typeof path?FS.lookupPath(path,{follow:!dontFollow}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);dontFollow.node_ops.setattr(dontFollow,{mode:4095&mode|-4096&dontFollow.mode,timestamp:Date.now()})},lchmod:(path,mode)=>{FS.chmod(path,mode,!0)},fchmod:(fd,mode)=>{fd=FS.getStreamChecked(fd);FS.chmod(fd.node,mode)},chown:(path,uid,gid,dontFollow)=>{if(!(dontFollow="string"==typeof path?FS.lookupPath(path,{follow:!dontFollow}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);dontFollow.node_ops.setattr(dontFollow,{timestamp:Date.now()})},lchown:(path,uid,gid)=>{FS.chown(path,uid,gid,!0)},fchown:(fd,uid,gid)=>{fd=FS.getStreamChecked(fd);FS.chown(fd.node,uid,gid)},truncate:(path,len)=>{if(len<0)throw new FS.ErrnoError(28);if(!(path="string"==typeof path?FS.lookupPath(path,{follow:!0}).node:path).node_ops.setattr)throw new FS.ErrnoError(63);if(FS.isDir(path.mode))throw new FS.ErrnoError(31);if(!FS.isFile(path.mode))throw new FS.ErrnoError(28);var errCode=FS.nodePermissions(path,"w");if(errCode)throw new FS.ErrnoError(errCode);path.node_ops.setattr(path,{size:len,timestamp:Date.now()})},ftruncate:(fd,len)=>{fd=FS.getStreamChecked(fd);if(0==(2097155&fd.flags))throw new FS.ErrnoError(28);FS.truncate(fd.node,len)},utime:(path,atime,mtime)=>{path=FS.lookupPath(path,{follow:!0}).node;path.node_ops.setattr(path,{timestamp:Math.max(atime,mtime)})},open:(path,flags,mode)=>{if(""===path)throw new FS.ErrnoError(44);if(mode=void 0===mode?438:mode,mode=64&(flags="string"==typeof flags?FS_modeStringToFlags(flags):flags)?4095&mode|32768:0,"object"==typeof path)node=path;else{path=PATH.normalize(path);try{var node=FS.lookupPath(path,{follow:!(131072&flags)}).node}catch(e){}}var created=!1;if(64&flags)if(node){if(128&flags)throw new FS.ErrnoError(20)}else node=FS.mknod(path,mode,0),created=!0;if(!node)throw new FS.ErrnoError(44);if(FS.isChrdev(node.mode)&&(flags&=-513),65536&flags&&!FS.isDir(node.mode))throw new FS.ErrnoError(54);if(!created){mode=FS.mayOpen(node,flags);if(mode)throw new FS.ErrnoError(mode)}512&flags&&!created&&FS.truncate(node,0),flags&=-131713;mode=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:!0,position:0,stream_ops:node.stream_ops,ungotten:[],error:!1});return mode.stream_ops.open&&mode.stream_ops.open(mode),!Module.logReadFiles||1&flags||(FS.readFiles||(FS.readFiles={}),path in FS.readFiles)||(FS.readFiles[path]=1),mode},close:stream=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);stream.getdents&&(stream.getdents=null);try{stream.stream_ops.close&&stream.stream_ops.close(stream)}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:stream=>null===stream.fd,llseek:(stream,offset,whence)=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(!stream.seekable||!stream.stream_ops.llseek)throw new FS.ErrnoError(70);if(0!=whence&&1!=whence&&2!=whence)throw new FS.ErrnoError(28);return stream.position=stream.stream_ops.llseek(stream,offset,whence),stream.ungotten=[],stream.position},read:(stream,buffer,offset,length,position)=>{if(length<0||position<0)throw new FS.ErrnoError(28);if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(1==(2097155&stream.flags))throw new FS.ErrnoError(8);if(FS.isDir(stream.node.mode))throw new FS.ErrnoError(31);if(!stream.stream_ops.read)throw new FS.ErrnoError(28);var seeking=void 0!==position;if(seeking){if(!stream.seekable)throw new FS.ErrnoError(70)}else position=stream.position;buffer=stream.stream_ops.read(stream,buffer,offset,length,position);return seeking||(stream.position+=buffer),buffer},write:(stream,buffer,offset,length,position,canOwn)=>{if(length<0||position<0)throw new FS.ErrnoError(28);if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(0==(2097155&stream.flags))throw new FS.ErrnoError(8);if(FS.isDir(stream.node.mode))throw new FS.ErrnoError(31);if(!stream.stream_ops.write)throw new FS.ErrnoError(28);stream.seekable&&1024&stream.flags&&FS.llseek(stream,0,2);var seeking=void 0!==position;if(seeking){if(!stream.seekable)throw new FS.ErrnoError(70)}else position=stream.position;buffer=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);return seeking||(stream.position+=buffer),buffer},allocate:(stream,offset,length)=>{if(FS.isClosed(stream))throw new FS.ErrnoError(8);if(offset<0||length<=0)throw new FS.ErrnoError(28);if(0==(2097155&stream.flags))throw new FS.ErrnoError(8);if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode))throw new FS.ErrnoError(43);if(!stream.stream_ops.allocate)throw new FS.ErrnoError(138);stream.stream_ops.allocate(stream,offset,length)},mmap:(stream,length,position,prot,flags)=>{if(0!=(2&prot)&&0==(2&flags)&&2!=(2097155&stream.flags))throw new FS.ErrnoError(2);if(1==(2097155&stream.flags))throw new FS.ErrnoError(2);if(stream.stream_ops.mmap)return stream.stream_ops.mmap(stream,length,position,prot,flags);throw new FS.ErrnoError(43)},msync:(stream,buffer,offset,length,mmapFlags)=>stream.stream_ops.msync?stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags):0,munmap:stream=>0,ioctl:(stream,cmd,arg)=>{if(stream.stream_ops.ioctl)return stream.stream_ops.ioctl(stream,cmd,arg);throw new FS.ErrnoError(59)},readFile:(path,opts={})=>{if(opts.flags=opts.flags||0,opts.encoding=opts.encoding||"binary","utf8"!==opts.encoding&&"binary"!==opts.encoding)throw new Error(`Invalid encoding type "${opts.encoding}"`);var ret,stream=FS.open(path,opts.flags),path=FS.stat(path).size,buf=new Uint8Array(path);return FS.read(stream,buf,0,path,0),"utf8"===opts.encoding?ret=UTF8ArrayToString(buf,0):"binary"===opts.encoding&&(ret=buf),FS.close(stream),ret},writeFile:(path,data,opts={})=>{opts.flags=opts.flags||577;path=FS.open(path,opts.flags,opts.mode);if("string"==typeof data){var buf=new Uint8Array(lengthBytesUTF8(data)+1),actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(path,buf,0,actualNumBytes,void 0,opts.canOwn)}else{if(!ArrayBuffer.isView(data))throw new Error("Unsupported data type");FS.write(path,data,0,data.byteLength,void 0,opts.canOwn)}FS.close(path)},cwd:()=>FS.currentPath,chdir:path=>{path=FS.lookupPath(path,{follow:!0});if(null===path.node)throw new FS.ErrnoError(44);if(!FS.isDir(path.node.mode))throw new FS.ErrnoError(54);var errCode=FS.nodePermissions(path.node,"x");if(errCode)throw new FS.ErrnoError(errCode);FS.currentPath=path.path},createDefaultDirectories:()=>{FS.mkdir("/tmp"),FS.mkdir("/home"),FS.mkdir("/home/web_user")},createDefaultDevices:()=>{FS.mkdir("/dev"),FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length}),FS.mkdev("/dev/null",FS.makedev(1,3)),TTY.register(FS.makedev(5,0),TTY.default_tty_ops),TTY.register(FS.makedev(6,0),TTY.default_tty1_ops),FS.mkdev("/dev/tty",FS.makedev(5,0)),FS.mkdev("/dev/tty1",FS.makedev(6,0));var randomBuffer=new Uint8Array(1024),randomLeft=0,randomByte=()=>(0===randomLeft&&(randomLeft=randomFill(randomBuffer).byteLength),randomBuffer[--randomLeft]);FS.createDevice("/dev","random",randomByte),FS.createDevice("/dev","urandom",randomByte),FS.mkdir("/dev/shm"),FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{FS.mkdir("/proc");var proc_self=FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd"),FS.mount({mount:()=>{var node=FS.createNode(proc_self,"fd",16895,73);return node.node_ops={lookup:(parent,name)=>{var stream=FS.getStreamChecked(+name),name={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>stream.path}};return name.parent=name}},node}},{},"/proc/self/fd")},createStandardStreams:()=>{Module.stdin?FS.createDevice("/dev","stdin",Module.stdin):FS.symlink("/dev/tty","/dev/stdin"),Module.stdout?FS.createDevice("/dev","stdout",null,Module.stdout):FS.symlink("/dev/tty","/dev/stdout"),Module.stderr?FS.createDevice("/dev","stderr",null,Module.stderr):FS.symlink("/dev/tty1","/dev/stderr");FS.open("/dev/stdin",0),FS.open("/dev/stdout",1),FS.open("/dev/stderr",1)},ensureErrnoError:()=>{FS.ErrnoError||(FS.ErrnoError=function(errno,node){this.name="ErrnoError",this.node=node,this.setErrno=function(errno){this.errno=errno},this.setErrno(errno),this.message="FS error"},FS.ErrnoError.prototype=new Error,FS.ErrnoError.prototype.constructor=FS.ErrnoError,[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code),FS.genericErrors[code].stack="<generic error, no stack>"}))},staticInit:()=>{FS.ensureErrnoError(),FS.nameTable=new Array(4096),FS.mount(MEMFS,{},"/"),FS.createDefaultDirectories(),FS.createDefaultDevices(),FS.createSpecialDirectories(),FS.filesystems={MEMFS:MEMFS}},init:(input,output,error)=>{FS.init.initialized=!0,FS.ensureErrnoError(),Module.stdin=input||Module.stdin,Module.stdout=output||Module.stdout,Module.stderr=error||Module.stderr,FS.createStandardStreams()},quit:()=>{FS.init.initialized=!1;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];stream&&FS.close(stream)}},findObject:(path,dontResolveLastLink)=>{path=FS.analyzePath(path,dontResolveLastLink);return path.exists?path.object:null},analyzePath:(path,dontResolveLastLink)=>{try{path=(lookup=FS.lookupPath(path,{follow:!dontResolveLastLink})).path}catch(e){}var ret={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:!0});ret.parentExists=!0,ret.parentPath=lookup.path,ret.parentObject=lookup.node,ret.name=PATH.basename(path),lookup=FS.lookupPath(path,{follow:!dontResolveLastLink}),ret.exists=!0,ret.path=lookup.path,ret.object=lookup.node,ret.name=lookup.node.name,ret.isRoot="/"===lookup.path}catch(e){ret.error=e.errno}return ret},createPath:(parent,path,canRead,canWrite)=>{parent="string"==typeof parent?parent:FS.getPath(parent);for(var parts=path.split("/").reverse();parts.length;){var part=parts.pop();if(part){var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}}return current},createFile:(parent,name,properties,canRead,canWrite)=>{parent=PATH.join2("string"==typeof parent?parent:FS.getPath(parent),name),name=FS_getMode(canRead,canWrite);return FS.create(parent,name)},createDataFile:(parent,name,data,canRead,canWrite,canOwn)=>{var path=name,name=(parent&&(parent="string"==typeof parent?parent:FS.getPath(parent),path=name?PATH.join2(parent,name):parent),FS_getMode(canRead,canWrite)),parent=FS.create(path,name);if(data){if("string"==typeof data){for(var arr=new Array(data.length),i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(parent,146|name);canRead=FS.open(parent,577);FS.write(canRead,data,0,data.length,0,canOwn),FS.close(canRead),FS.chmod(parent,name)}return parent},createDevice:(parent,name,input,output)=>{var parent=PATH.join2("string"==typeof parent?parent:FS.getPath(parent),name),name=FS_getMode(!!input,!!output),dev=(FS.createDevice.major||(FS.createDevice.major=64),FS.makedev(FS.createDevice.major++,0));return FS.registerDevice(dev,{open:stream=>{stream.seekable=!1},close:stream=>{output&&output.buffer&&output.buffer.length&&output(10)},read:(stream,buffer,offset,length,pos)=>{for(var result,bytesRead=0,i=0;i<length;i++){try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(void 0===result&&0===bytesRead)throw new FS.ErrnoError(6);if(null==result)break;bytesRead++,buffer[offset+i]=result}return bytesRead&&(stream.node.timestamp=Date.now()),bytesRead},write:(stream,buffer,offset,length,pos)=>{for(var i=0;i<length;i++)try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}return length&&(stream.node.timestamp=Date.now()),i}}),FS.mkdev(parent,name,dev)},forceLoadFile:obj=>{if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!read_)throw new Error("Cannot load without read() or XMLHttpRequest.");try{obj.contents=intArrayFromString(read_(obj.url),!0),obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}},createLazyFile:(parent,name,url,canRead,canWrite)=>{function LazyUint8Array(){this.lengthKnown=!1,this.chunks=[]}if(LazyUint8Array.prototype.get=function(idx){var chunkOffset;if(!(idx>this.length-1||idx<0))return chunkOffset=idx%this.chunkSize,idx=idx/this.chunkSize|0,this.getter(idx)[chunkOffset]},LazyUint8Array.prototype.setDataGetter=function(getter){this.getter=getter},LazyUint8Array.prototype.cacheLength=function(){var xhr=new XMLHttpRequest;if(xhr.open("HEAD",url,!1),xhr.send(null),!(200<=xhr.status&&xhr.status<300||304===xhr.status))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var header,datalength=Number(xhr.getResponseHeader("Content-length")),hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&"bytes"===header,xhr=(header=xhr.getResponseHeader("Content-Encoding"))&&"gzip"===header,chunkSize=1048576,lazyArray=(hasByteServing||(chunkSize=datalength),this);lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize,end=(chunkNum+1)*chunkSize-1,end=Math.min(end,datalength-1);if(void 0===lazyArray.chunks[chunkNum]&&(lazyArray.chunks[chunkNum]=((from,to)=>{if(to<from)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(datalength-1<to)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;if(xhr.open("GET",url,!1),datalength!==chunkSize&&xhr.setRequestHeader("Range","bytes="+from+"-"+to),xhr.responseType="arraybuffer",xhr.overrideMimeType&&xhr.overrideMimeType("text/plain; charset=x-user-defined"),xhr.send(null),200<=xhr.status&&xhr.status<300||304===xhr.status)return void 0!==xhr.response?new Uint8Array(xhr.response||[]):intArrayFromString(xhr.responseText||"",!0);throw new Error("Couldn't load "+url+". Status: "+xhr.status)})(start,end)),void 0===lazyArray.chunks[chunkNum])throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}),!xhr&&datalength||(chunkSize=datalength=1,datalength=this.getter(0).length,chunkSize=datalength,out("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=datalength,this._chunkSize=chunkSize,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array,lazyArray=(Object.defineProperties(lazyArray,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}}),{isDevice:!1,contents:lazyArray})}else lazyArray={isDevice:!1,url:url};var node=FS.createFile(parent,name,lazyArray,canRead,canWrite),stream_ops=(lazyArray.contents?node.contents=lazyArray.contents:lazyArray.url&&(node.contents=null,node.url=lazyArray.url),Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}}),{});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice)for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i];else for(i=0;i<size;i++)buffer[offset+i]=contents.get(position+i);return size}return Object.keys(node.stream_ops).forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function(){return FS.forceLoadFile(node),fn.apply(null,arguments)}}),stream_ops.read=(stream,buffer,offset,length,position)=>(FS.forceLoadFile(node),writeChunks(stream,buffer,offset,length,position)),stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(ptr)return writeChunks(stream,HEAP8,ptr,length,position),{ptr:ptr,allocated:!0};throw new FS.ErrnoError(48)},node.stream_ops=stream_ops,node}},SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(PATH.isAbs(path))return path;if(dirfd=-100===dirfd?FS.cwd():SYSCALLS.getStreamFromFD(dirfd).path,0!=path.length)return PATH.join2(dirfd,path);if(allowEmpty)return dirfd;throw new FS.ErrnoError(44)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node)))return-54;throw e}HEAP32[buf>>>2]=stat.dev,HEAP32[buf+4>>>2]=stat.mode,HEAPU32[buf+8>>>2]=stat.nlink,HEAP32[buf+12>>>2]=stat.uid,HEAP32[buf+16>>>2]=stat.gid,HEAP32[buf+20>>>2]=stat.rdev,tempI64=[stat.size>>>0,(tempDouble=stat.size,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+24>>>2]=tempI64[0],HEAP32[buf+28>>>2]=tempI64[1],HEAP32[buf+32>>>2]=4096,HEAP32[buf+36>>>2]=stat.blocks;var func=stat.atime.getTime(),path=stat.mtime.getTime(),ctime=stat.ctime.getTime();return tempI64=[Math.floor(func/1e3)>>>0,(tempDouble=Math.floor(func/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>>2]=tempI64[0],HEAP32[buf+44>>>2]=tempI64[1],HEAPU32[buf+48>>>2]=func%1e3*1e3,tempI64=[Math.floor(path/1e3)>>>0,(tempDouble=Math.floor(path/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+56>>>2]=tempI64[0],HEAP32[buf+60>>>2]=tempI64[1],HEAPU32[buf+64>>>2]=path%1e3*1e3,tempI64=[Math.floor(ctime/1e3)>>>0,(tempDouble=Math.floor(ctime/1e3),1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+72>>>2]=tempI64[0],HEAP32[buf+76>>>2]=tempI64[1],HEAPU32[buf+80>>>2]=ctime%1e3*1e3,tempI64=[stat.ino>>>0,(tempDouble=stat.ino,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+88>>>2]=tempI64[0],HEAP32[buf+92>>>2]=tempI64[1],0},doMsync:function(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode))throw new FS.ErrnoError(43);if(2&flags)return 0;addr=HEAPU8.slice(addr,addr+len);FS.msync(stream,addr,offset,len,flags)},varargs:void 0,get(){return SYSCALLS.varargs+=4,HEAP32[SYSCALLS.varargs-4>>>2]},getStr(ptr){return UTF8ToString(ptr)},getStreamFromFD:function(fd){return FS.getStreamChecked(fd)}};function _environ_get(__environ,environ_buf){__environ>>>=0,environ_buf>>>=0;var bufSize=0;return getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+4*i>>>2]=ptr,stringToAscii(string,ptr),bufSize+=string.length+1}),0}function _environ_sizes_get(penviron_count,penviron_buf_size){penviron_count>>>=0,penviron_buf_size>>>=0;var strings=getEnvStrings(),bufSize=(HEAPU32[penviron_count>>>2]=strings.length,0);return strings.forEach(function(string){bufSize+=string.length+1}),HEAPU32[penviron_buf_size>>>2]=bufSize,0}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);return FS.close(stream),0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var doReadv=(stream,iov,iovcnt,offset)=>{for(var ret=0,i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2],len=HEAPU32[iov+4>>>2],ptr=(iov+=8,FS.read(stream,HEAP8,ptr,len,offset));if(ptr<0)return-1;if(ret+=ptr,ptr<len)break;void 0!==offset&&(offset+=ptr)}return ret};function _fd_read(fd,iov,iovcnt,pnum){iov>>>=0,iovcnt>>>=0,pnum>>>=0;try{var stream=SYSCALLS.getStreamFromFD(fd),num=doReadv(stream,iov,iovcnt);return HEAPU32[pnum>>>2]=num,0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var stream,offset_low=convertI32PairToI53Checked(offset_low,offset_high);newOffset>>>=0;try{return isNaN(offset_low)?61:(stream=SYSCALLS.getStreamFromFD(fd),FS.llseek(stream,offset_low,whence),tempI64=[stream.position>>>0,(tempDouble=stream.position,1<=+Math.abs(tempDouble)?0<tempDouble?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>>2]=tempI64[0],HEAP32[newOffset+4>>>2]=tempI64[1],stream.getdents&&0===offset_low&&0===whence&&(stream.getdents=null),0)}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var doWritev=(stream,iov,iovcnt,offset)=>{for(var ret=0,i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2],len=HEAPU32[iov+4>>>2],ptr=(iov+=8,FS.write(stream,HEAP8,ptr,len,offset));if(ptr<0)return-1;ret+=ptr,void 0!==offset&&(offset+=ptr)}return ret};function _fd_write(fd,iov,iovcnt,pnum){iov>>>=0,iovcnt>>>=0,pnum>>>=0;try{var stream=SYSCALLS.getStreamFromFD(fd),num=doWritev(stream,iov,iovcnt);return HEAPU32[pnum>>>2]=num,0}catch(e){if(void 0===FS||"ErrnoError"!==e.name)throw e;return e.errno}}var arraySum=(array,index)=>{for(var sum=0,i=0;i<=index;sum+=array[i++]);return sum},MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31],MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31],addDays=(date,days)=>{for(var newDate=new Date(date.getTime());0<days;){var leap=isLeapYear(newDate.getFullYear()),currentMonth=newDate.getMonth(),leap=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(!(days>leap-newDate.getDate()))return newDate.setDate(newDate.getDate()+days),newDate;days-=leap-newDate.getDate()+1,newDate.setDate(1),currentMonth<11?newDate.setMonth(currentMonth+1):(newDate.setMonth(0),newDate.setFullYear(newDate.getFullYear()+1))}return newDate},writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer>>>0)};function _strftime(s,maxsize,format,tm){s>>>=0,maxsize>>>=0,format>>>=0;var tm_zone=HEAP32[(tm>>>=0)+40>>>2],date={tm_sec:HEAP32[tm>>>2],tm_min:HEAP32[tm+4>>>2],tm_hour:HEAP32[tm+8>>>2],tm_mday:HEAP32[tm+12>>>2],tm_mon:HEAP32[tm+16>>>2],tm_year:HEAP32[tm+20>>>2],tm_wday:HEAP32[tm+24>>>2],tm_yday:HEAP32[tm+28>>>2],tm_isdst:HEAP32[tm+32>>>2],tm_gmtoff:HEAP32[tm+36>>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""},pattern=UTF8ToString(format),EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(rule in EXPANSION_RULES_1)pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule]);var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){for(var str="number"==typeof value?value.toString():value||"";str.length<digits;)str=character[0]+str;return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:0<value?1:0}var compare;return compare=0===(compare=sgn(date1.getFullYear()-date2.getFullYear()))&&0===(compare=sgn(date1.getMonth()-date2.getMonth()))?sgn(date1.getDate()-date2.getDate()):compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var date=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday),janFourthThisYear=new Date(date.getFullYear(),0,4),janFourthNextYear=new Date(date.getFullYear()+1,0,4),janFourthThisYear=getFirstWeekStartDate(janFourthThisYear),janFourthNextYear=getFirstWeekStartDate(janFourthNextYear);return compareByDay(janFourthThisYear,date)<=0?compareByDay(janFourthNextYear,date)<=0?date.getFullYear()+1:date.getFullYear():date.getFullYear()-1}var rule,EXPANSION_RULES_2={"%a":date=>WEEKDAYS[date.tm_wday].substring(0,3),"%A":date=>WEEKDAYS[date.tm_wday],"%b":date=>MONTHS[date.tm_mon].substring(0,3),"%B":date=>MONTHS[date.tm_mon],"%C":date=>{return leadingNulls((date.tm_year+1900)/100|0,2)},"%d":date=>leadingNulls(date.tm_mday,2),"%e":date=>leadingSomething(date.tm_mday,2," "),"%g":date=>getWeekBasedYear(date).toString().substring(2),"%G":date=>getWeekBasedYear(date),"%H":date=>leadingNulls(date.tm_hour,2),"%I":date=>{date=date.tm_hour;return 0==date?date=12:12<date&&(date-=12),leadingNulls(date,2)},"%j":date=>leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3),"%m":date=>leadingNulls(date.tm_mon+1,2),"%M":date=>leadingNulls(date.tm_min,2),"%n":()=>"\n","%p":date=>0<=date.tm_hour&&date.tm_hour<12?"AM":"PM","%S":date=>leadingNulls(date.tm_sec,2),"%t":()=>"\t","%u":date=>date.tm_wday||7,"%U":date=>{date=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(date/7),2)},"%V":date=>{var jan1,val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);return(date.tm_wday+371-date.tm_yday-2)%7<=2&&val++,val?53!=val||4==(jan1=(date.tm_wday+371-date.tm_yday)%7)||3==jan1&&isLeapYear(date.tm_year)||(val=1):(val=52,(4==(jan1=(date.tm_wday+7-date.tm_yday-1)%7)||5==jan1&&isLeapYear(date.tm_year%400-1))&&val++),leadingNulls(val,2)},"%w":date=>date.tm_wday,"%W":date=>{date=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(date/7),2)},"%y":date=>(date.tm_year+1900).toString().substring(2),"%Y":date=>date.tm_year+1900,"%z":date=>{var ahead=0<=(date=date.tm_gmtoff),date=Math.abs(date)/60;return(ahead?"+":"-")+String("0000"+(date/60*100+date%60)).slice(-4)},"%Z":date=>date.tm_zone,"%%":()=>"%"},pattern=pattern.replace(/%%/g,"\0\0");for(rule in EXPANSION_RULES_2)pattern.includes(rule)&&(pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date)));tm=intArrayFromString(pattern=pattern.replace(/\0\0/g,"%"),!1);return tm.length>maxsize?0:(writeArrayToMemory(tm,s),tm.length-1)}function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s>>>=0,maxsize>>>=0,format>>>=0,tm>>>=0)}function uleb128Encode(n,target){n<128?target.push(n):target.push(n%128|128,n>>7)}function sigToWasmTypes(sig){for(var typeNames={i:"i32",j:"i64",f:"f32",d:"f64",p:"i32"},type={parameters:[],results:"v"==sig[0]?[]:[typeNames[sig[0]]]},i=1;i<sig.length;++i)type.parameters.push(typeNames[sig[i]]);return type}function generateFuncType(sig,target){var sigRet=sig.slice(0,1),sigParam=sig.slice(1),typeCodes={i:127,p:127,j:126,f:125,d:124};target.push(96),uleb128Encode(sigParam.length,target);for(var i=0;i<sigParam.length;++i)target.push(typeCodes[sigParam[i]]);"v"==sigRet?target.push(0):target.push(1,typeCodes[sigRet])}function convertJsFunctionToWasm(func,sig){var bytes;return"function"==typeof WebAssembly.Function?new WebAssembly.Function(sigToWasmTypes(sig),func):(generateFuncType(sig,sig=[1]),uleb128Encode(sig.length,bytes=[0,97,115,109,1,0,0,0,1]),bytes.push.apply(bytes,sig),bytes.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0),sig=new WebAssembly.Module(new Uint8Array(bytes)),new WebAssembly.Instance(sig,{e:{f:func}}).exports.f)}function updateTableMap(offset,count){if(functionsInTableMap)for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);item&&functionsInTableMap.set(item,i)}}var functionsInTableMap=void 0;function getFunctionAddress(func){return functionsInTableMap||(functionsInTableMap=new WeakMap,updateTableMap(0,wasmTable.length)),functionsInTableMap.get(func)||0}var freeTableIndexes=[];function getEmptyTableSlot(){if(freeTableIndexes.length)return freeTableIndexes.pop();try{wasmTable.grow(1)}catch(err){if(err instanceof RangeError)throw"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.";throw err}return wasmTable.length-1}var setWasmTableEntry=(idx,func)=>{wasmTable.set(idx,func),wasmTableMirror[idx]=wasmTable.get(idx)};function addFunction(func,sig){var rtn=getFunctionAddress(func);if(rtn)return rtn;rtn=getEmptyTableSlot();try{setWasmTableEntry(rtn,func)}catch(err){if(!(err instanceof TypeError))throw err;sig=convertJsFunctionToWasm(func,sig);setWasmTableEntry(rtn,sig)}return functionsInTableMap.set(func,rtn),rtn}function removeFunction(index){functionsInTableMap.delete(getWasmTableEntry(index)),freeTableIndexes.push(index)}function getCFunc(ident){return Module["_"+ident]}var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1,ret=stackAlloc(size);return stringToUTF8(str,ret,size),ret},ccall=function(ident,returnType,argTypes,args,opts){var toC={string:str=>{var ret=0;return ret=null!=str&&0!==str?stringToUTF8OnStack(str):ret},array:arr=>{var ret=stackAlloc(arr.length);return writeArrayToMemory(arr,ret),ret}};var ident=getCFunc(ident),cArgs=[],stack=0;if(args)for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];converter?(0===stack&&(stack=stackSave()),cArgs[i]=converter(args[i])):cArgs[i]=args[i]}return function(ret){return 0!==stack&&stackRestore(stack),function(ret){return"string"===returnType?UTF8ToString(ret):"boolean"===returnType?Boolean(ret):ret}(ret)}(ident.apply(null,cArgs))},cwrap=function(ident,returnType,argTypes,opts){var numericArgs=!argTypes||argTypes.every(type=>"number"===type||"boolean"===type);return"string"!==returnType&&numericArgs&&!opts?getCFunc(ident):function(){return ccall(ident,returnType,argTypes,arguments,opts)}},InternalError=Module.InternalError=class InternalError extends Error{constructor(message){super(message),this.name="InternalError"}},FSNode=(embind_init_charCodes(),BindingError=Module.BindingError=class BindingError extends Error{constructor(message){super(message),this.name="BindingError"}},init_ClassHandle(),init_embind(),init_RegisteredPointer(),UnboundTypeError=Module.UnboundTypeError=extendError(Error,"UnboundTypeError"),handleAllocatorInit(),init_emval(),function(parent,name,mode,rdev){this.parent=parent=parent||this,this.mount=parent.mount,this.mounted=null,this.id=FS.nextInode++,this.name=name,this.mode=mode,this.node_ops={},this.stream_ops={},this.rdev=rdev}),readMode=365,writeMode=146,wasmImports=(Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}}),FS.FSNode=FSNode,FS.createPreloadedFile=FS_createPreloadedFile,FS.staticInit(),{b:___assert_fail,d:___cxa_throw,n:__embind_finalize_value_object,B:__embind_register_bigint,M:__embind_register_bool,p:__embind_register_class,o:__embind_register_class_constructor,f:__embind_register_class_function,L:__embind_register_emval,y:__embind_register_float,c:__embind_register_function,l:__embind_register_integer,j:__embind_register_memory_view,x:__embind_register_std_string,t:__embind_register_std_wstring,m:__embind_register_value_object,e:__embind_register_value_object_field,N:__embind_register_void,i:__emval_decref,k:__emval_incref,r:__emval_new_cstring,u:__emval_new_object,q:__emval_set_property,h:__emval_take_value,A:__localtime_js,F:__tzset_js,s:_abort,w:_emscripten_date_now,K:_emscripten_memcpy_big,E:_emscripten_resize_heap,g:_emscripten_run_script,I:_environ_get,J:_environ_sizes_get,H:_fd_close,D:_fd_read,z:_fd_seek,v:_fd_write,a:wasmMemory,G:_strftime,C:_strftime_l}),asm=createWasm(),___wasm_call_ctors=asm.O,_backtest=Module._backtest=asm.P,_free=Module._free=asm.Q,_malloc=Module._malloc=asm.R,___errno_location=asm.__errno_location,_TA_ForEachFunc=Module._TA_ForEachFunc=asm.T,_TA_GetFuncHandle=Module._TA_GetFuncHandle=asm.U,_TA_GetFuncInfo=Module._TA_GetFuncInfo=asm.V,_TA_GetInputParameterInfo=Module._TA_GetInputParameterInfo=asm.W,_TA_GetOptInputParameterInfo=Module._TA_GetOptInputParameterInfo=asm.X,_TA_GetOutputParameterInfo=Module._TA_GetOutputParameterInfo=asm.Y,_TA_ParamHolderAlloc=Module._TA_ParamHolderAlloc=asm.Z,_TA_ParamHolderFree=Module._TA_ParamHolderFree=asm._,_TA_SetInputParamIntegerPtr=Module._TA_SetInputParamIntegerPtr=asm.$,_TA_SetInputParamRealPtr=Module._TA_SetInputParamRealPtr=asm.aa,_TA_SetInputParamPricePtr=Module._TA_SetInputParamPricePtr=asm.ba,_TA_SetOptInputParamInteger=Module._TA_SetOptInputParamInteger=asm.ca,_TA_SetOptInputParamReal=Module._TA_SetOptInputParamReal=asm.da,_TA_SetOutputParamIntegerPtr=Module._TA_SetOutputParamIntegerPtr=asm.ea,_TA_SetOutputParamRealPtr=Module._TA_SetOutputParamRealPtr=asm.fa,_TA_CallFunc=Module._TA_CallFunc=asm.ga,_TA_Initialize=Module._TA_Initialize=asm.ha,_TA_Shutdown=Module._TA_Shutdown=asm.ia,_TA_SetRetCodeInfo=Module._TA_SetRetCodeInfo=asm.ja,_TA_GetVersionString=Module._TA_GetVersionString=asm.ka,___getTypeName=asm.la,__embind_initialize_bindings=Module.__embind_initialize_bindings=asm.ma,stackSave=asm.na,stackRestore=asm.oa,stackAlloc=asm.pa,___cxa_is_pointer_type=asm.qa,dynCall_viijii=Module.dynCall_viijii=asm.ra,dynCall_jiji=Module.dynCall_jiji=asm.sa,dynCall_iiiiij=Module.dynCall_iiiiij=asm.ta,dynCall_iiiiijj=Module.dynCall_iiiiijj=asm.ua,dynCall_iiiiiijj=Module.dynCall_iiiiiijj=asm.va,calledRun;function applySignatureConversions(exports){var makeWrapper_pp=f=>a0=>f(a0)>>>0,makeWrapper_p=f=>()=>f()>>>0;return(exports=Object.assign({},exports)).malloc=makeWrapper_pp(exports.malloc),exports.__errno_location=makeWrapper_p(exports.__errno_location),exports.__getTypeName=makeWrapper_pp(exports.__getTypeName),exports.stackSave=makeWrapper_p(exports.stackSave),exports.stackAlloc=makeWrapper_pp(exports.stackAlloc),exports}function run(){function doRun(){calledRun||(calledRun=!0,Module.calledRun=!0,ABORT)||(initRuntime(),readyPromiseResolve(Module),Module.onRuntimeInitialized&&Module.onRuntimeInitialized(),postRun())}0<runDependencies||(preRun(),0<runDependencies)||(Module.setStatus?(Module.setStatus("Running..."),setTimeout(function(){setTimeout(function(){Module.setStatus("")},1),doRun()},1)):doRun())}if(Module.ccall=ccall,Module.cwrap=cwrap,Module.addFunction=addFunction,Module.removeFunction=removeFunction,dependenciesFulfilled=function runCaller(){calledRun||run(),calledRun||(dependenciesFulfilled=runCaller)},Module.preInit)for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);0<Module.preInit.length;)Module.preInit.pop()();function utf8_encode(string){if("undefined"!=typeof TextEncoder)return(new TextEncoder).encode(string);for(var pos=0,len=string.length,at=0,tlen=Math.max(32,len+(len>>1)+7),target=new Uint8Array(tlen>>3<<3);pos<len;){var extra,value=string.charCodeAt(pos++);if(55296<=value&&value<=56319)if(pos<len&&56320==(64512&(extra=string.charCodeAt(pos)))&&(++pos,value=((1023&value)<<10)+(1023&extra)+65536),55296<=value&&value<=56319)continue;if(at+4>target.length&&(tlen=(tlen=(tlen+=8)*(1+pos/string.length*2))>>3<<3,(extra=new Uint8Array(tlen)).set(target),target=extra),0==(4294967168&value))target[at++]=value;else{if(0==(4294965248&value))target[at++]=value>>6&31|192;else{if(0==(4294901760&value))target[at++]=value>>12&15|224;else{if(0!=(4292870144&value))continue;target[at++]=value>>18&7|240,target[at++]=value>>12&63|128}target[at++]=value>>6&63|128}target[at++]=63&value|128}}return target.slice(0,at)}function valuesToString(values,pos,ch){void 0===ch&&(ch=" ");for(var result="",i=pos=void 0===pos?0:pos;i<values.length;i++)pos<i&&(result+=ch),void 0===values[i]||null===values[i]?result+="null":"string"==typeof values[i]?result+=values[i]:"number"==typeof values[i]||"function"==typeof values[i].getFullYear?result+=values[i].toString():void 0!==values[i].cols&&"string"==typeof values[i].type&&"table"==values[i].type?result+="`"+JSON.stringify(values[i])+"`":result+=JSON.stringify(values[i]);return result=0<result.length?utf8_encode(result):result}function Vector2Array(obj){for(var arr=[],arrSize=obj.size(),i=0;i<arrSize;i++)arr.push(obj.get(i));return arr}function toNonExponential(value){var sign,e;return"number"!=typeof value&&(value=parseFloat(value),isNaN(value))?"":(value<0?(sign="-",value=Math.abs(value)):sign="",value<1?(e=parseInt(value.toString().split("e-")[1]))&&(value*=Math.pow(10,e-1),value="0."+new Array(e).join("0")+value.toString().substring(2)):(e=parseInt(value.toString().split("e+")[1]))&&(value=(value/=Math.pow(10,e))+new Array(e+1).join("0")),sign+value)}return run(),Module.talib=function(){function ReadDouble(p,idx){return getValue(p+4*idx,"double")}function ReadInt(p,idx){return getValue(p+4*idx,"i32")}function ReadStr(p,idx){return UTF8ToString(getValue(p+4*idx,"i32"))}function GetArr(arr,attr,isInteger){var ret=[],tmp=0;isInteger=void 0!==isInteger&&isInteger;for(var i=0;i<arr.length;i++)"number"!=typeof(tmp=arr[i])&&(tmp=arr[i][attr]),isInteger?ret.push(parseInt(tmp)):ret.push(tmp);var data=isInteger?new Uint8Array(new Int32Array(ret).buffer):new Uint8Array(new Float64Array(ret).buffer),ret=Module._malloc(data.length);return writeArrayToMemory(data,ret),ret}Module._TA_Initialize();function throwError(errCode){var retCodeInfo;if(0!==errCode)throw retCodeInfo=Module._malloc(8),TA_SetRetCodeInfo(errCode,retCodeInfo),errCode=ReadStr(retCodeInfo,0)+": "+ReadStr(retCodeInfo,1),Module._free(retCodeInfo),current_func+": "+errCode}var obj={help:function(n){return obj["h_"+n]()},list:[]},TA_GetInputParameterInfo=Module._TA_GetInputParameterInfo,TA_GetOptInputParameterInfo=Module._TA_GetOptInputParameterInfo,TA_GetOutputParameterInfo=Module._TA_GetOutputParameterInfo,TA_ParamHolderAlloc=Module._TA_ParamHolderAlloc,TA_ParamHolderFree=Module._TA_ParamHolderFree,TA_SetInputParamRealPtr=Module._TA_SetInputParamRealPtr,TA_SetInputParamIntegerPtr=Module._TA_SetInputParamIntegerPtr,TA_SetInputParamPricePtr=Module._TA_SetInputParamPricePtr,TA_SetOptInputParamReal=Module._TA_SetOptInputParamReal,TA_SetOptInputParamInteger=Module._TA_SetOptInputParamInteger,TA_SetOutputParamIntegerPtr=Module._TA_SetOutputParamIntegerPtr,TA_SetOutputParamRealPtr=Module._TA_SetOutputParamRealPtr,TA_CallFunc=Module._TA_CallFunc,TA_SetRetCodeInfo=Module._TA_SetRetCodeInfo,current_func="obj",funcCallback=addFunction(function(ptr){var name=ReadStr(ptr,0),group=ReadStr(ptr,1),hint=ReadStr(ptr,2),nbInput=(ReadInt(ptr,4),ReadInt(ptr,5));if(!(1<nbInput&&"OBV"!==name)){for(var nbOptInput=ReadInt(ptr,6),nbOutput=ReadInt(ptr,7),funcHandle=ReadInt(ptr,8),pInfo=Module._malloc(4),inputs=[],optInputs=[],outputs=[],i=0;i<nbInput;i++){throwError(TA_GetInputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);inputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2)})}for(i=0;i<nbOptInput;i++){throwError(TA_GetOptInputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);optInputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2),displayName:ReadStr(ptr,3),defaultValue:ReadDouble(ptr,6),hint:ReadStr(ptr,8)})}for(i=0;i<nbOutput;i++){throwError(TA_GetOutputParameterInfo(funcHandle,i,pInfo));ptr=ReadInt(pInfo,0);outputs.push({type:ReadInt(ptr,0),paramName:ReadStr(ptr,1),flags:ReadInt(ptr,2)})}Module._free(pInfo),obj["h_"+name]=function(){for(var args=[],i=0;i<inputs.length;i++){var type=inputs[i].type,flags=inputs[i].flags,paramName=inputs[i].paramName;1===type?args.push(["Array[Real]",paramName]):2===type?args.push(["Array[Integer]",paramName]):0===type&&(type=[],1&flags&&type.push("Open"),2&flags&&type.push("High"),4&flags&&type.push("Low"),8&flags&&type.push("Close"),16&flags&&type.push("Volume"),32&flags&&type.push("OpenInterest"),64&flags&&type.push("Time"),args.push(["Records["+type.join(",")+"]",paramName]))}for(i=0;i<optInputs.length;i++){var optType="NA";0===optInputs[i].type?optType="RealRange":1===optInputs[i].type?optType="RealList":2===optInputs[i].type?optType="IntegerRange":3===optInputs[i].type&&(optType="IntegerList"),args.push([optType,optInputs[i].paramName,optInputs[i].defaultValue])}for(var rets=[],i=0;i<outputs.length;i++){var outType="Real";1===outputs[i].type&&(outType="Integer"),rets.push([outType,outputs[i].paramName])}return[name,args,rets,hint]},obj.list.push(name);for(var needArg=0,i=0;i<inputs.length;i++){var type=inputs[i].type,flags=inputs[i].flags;(1===type||2===type||0===type&&(1&flags&&needArg++,2&flags&&needArg++,4&flags&&needArg++,8&flags&&needArg++,16&flags))&&needArg++}obj[name]=function(records){var info={handle:funcHandle,name:current_func=name,needArg:needArg,hint:hint,group:group,inputs:inputs,optInputs:optInputs,outputs:outputs};if(void 0===records&&throwError(2),0===records.length){if(0===info.outputs.length)return[];for(var outputArr=[],i=0;i<info.outputs.length;i++)outputArr.push([]);return outputArr}var argPos=0,argv=arguments,moveStep="number"==typeof records[0]?1:0,allocatedParams=(1==moveStep&&arguments.length<info.needArg&&throwError(2),Module._malloc(4)),openPrice=(throwError(TA_ParamHolderAlloc(info.handle,allocatedParams)),null),highPrice=null,lowPrice=null,closePrice=null,volume=null,ints=[],paramsPtr=ReadInt(allocatedParams,0);Module._free(allocatedParams);for(var i=0;i<info.inputs.length;i++){var tmp,type=info.inputs[i].type,flags=info.inputs[i].flags;1===type?(closePrice||(closePrice=GetArr(argv[argPos],"Close"),argPos+=moveStep),throwError(TA_SetInputParamRealPtr(paramsPtr,i,closePrice))):2===type?(tmp=GetArr(argv[argPos],"Close",!0),argPos+=moveStep,ints.push(tmp),throwError(TA_SetInputParamIntegerPtr(paramsPtr,i,tmp))):0===type&&(1&flags&&(openPrice||(openPrice=GetArr(argv[argPos],"Open"),argPos+=moveStep)),2&flags&&(highPrice||(highPrice=GetArr(argv[argPos],"High"),argPos+=moveStep)),4&flags&&(lowPrice||(lowPrice=GetArr(argv[argPos],"Low"),argPos+=moveStep)),8&flags&&(closePrice||(closePrice=GetArr(argv[argPos],"Close"),argPos+=moveStep)),16&flags&&(volume||(volume=GetArr(argv[argPos],"Volume"),argPos+=moveStep)),throwError(TA_SetInputParamPricePtr(paramsPtr,i,openPrice,highPrice,lowPrice,closePrice,volume,null)))}for(0==moveStep&&argPos++,i=0;i<info.optInputs.length;i++)switch(v=argPos+i<arguments.length?arguments[i+argPos]:info.optInputs[i].defaultValue,info.optInputs[i].type){case 0:case 1:TA_SetOptInputParamReal(paramsPtr,i,v);break;case 2:case 3:TA_SetOptInputParamInteger(paramsPtr,i,v);break;default:throw"error"}outputArr=[];for(i=0;i<info.outputs.length;i++){var ptr=null;1===info.outputs[i].type?(ptr=Module._malloc(4*records.length),throwError(TA_SetOutputParamIntegerPtr(paramsPtr,i,ptr))):0===info.outputs[i].type&&(ptr=Module._malloc(8*records.length),throwError(TA_SetOutputParamRealPtr(paramsPtr,i,ptr))),outputArr.push(ptr)}var allocatedParams=Module._malloc(4),outNbElement=Module._malloc(4),beg=(TA_CallFunc(paramsPtr,0,records.length-1,allocatedParams,outNbElement),ReadInt(allocatedParams,0)),num=ReadInt(outNbElement,0),ret=(Module._free(allocatedParams),Module._free(outNbElement),[]);for(i=0;i<info.outputs.length;i++){ptr=outputArr[i];ret[i]=[];for(var v,j=0;j<records.length;j++)j<beg||num<=j-beg?ret[i].push(NaN):(1===info.outputs[i].type?v=ReadInt(ptr,j-beg):0===info.outputs[i].type&&(v=ReadDouble(ptr,2*(j-beg))),ret[i].push(v));Module._free(ptr)}for(throwError(TA_ParamHolderFree(paramsPtr)),openPrice&&Module._free(openPrice),highPrice&&Module._free(highPrice),lowPrice&&Module._free(lowPrice),closePrice&&Module._free(closePrice),volume&&Module._free(volume),i=0;i<ints.length;i++)Module._free(ints[i]);return 1===ret.length?ret[0]:ret}}},"vii");if(0!==ccall("TA_ForEachFunc","number",["pointer","number"],[funcCallback,0]))throw"error";return removeFunction(funcCallback),obj},Module.VMain=function(task){for(var exchanges=[],i=0;i<task.Exchanges.length;i++)exchanges[i]=function(eIdx){var self={},idx=eIdx;return self.cache=[],self.ct="",self.period=task.Options.Period,self.currency=Module.js_Exchange_GetCurrency(eIdx),self.maxBarLen=task.Exchanges[idx].MaxBarLen,self.lastRawJSON="",self.GetName=function(){return Module.js_Exchange_GetName(eIdx)},self.SetData=function(pair,detail){return"string"!=typeof detail&&(detail=JSON.stringify(detail)),Module.js_Exchange_SetData(eIdx,pair,detail)},self.GetPeriod=function(){return self.period/1e3},self.GetCurrency=function(){return self.currency},self.GetLabel=function(){return Module.js_Exchange_GetLabel(eIdx)},self.GetUSDCNY=function(){return Module.js_Exchange_GetUSDCNY(eIdx)},self.GetRate=function(){return Module.js_Exchange_GetRate(eIdx)},self.SetRate=function(n){return Module.js_Exchange_SetRate(eIdx,n=void 0===n?1:n)},self.SetCurrency=function(s){Module.js_Exchange_SetCurrency(eIdx,s),self.currency=Module.js_Exchange_GetCurrency(eIdx)},self.SetBase=function(s){return Module.js_Exchange_SetBase(eIdx,s)},self.GetBase=function(){return Module.js_Exchange_GetBase(eIdx)},self.SetTimeout=function(n){},self.IO=function(k,v){return void 0===v&&(v=1),"currency"==k?self.SetCurrency(v):Module.js_Exchange_IO(eIdx,k,v)},self.SetPrecision=function(a,b){Module.js_Exchange_SetPrecision(eIdx,a,b)},self.SetProxy=function(){},self.GetQuoteCurrency=function(){return Module.js_Exchange_GetQuoteCurrency(eIdx)},self.GetBaseCurrency=function(){return Module.js_Exchange_GetBaseCurrency(eIdx)},self.GetDepth=function(symbol){self.lastRawJSON="";var ret=Module.js_Exchange_GetDepth(eIdx,symbol||"");if(!ret)return null;for(var arr=Vector2Array(ret.Orders),d={Asks:[],Bids:[]},i=0;i<arr.length;i++)(i<ret.AsksLen?d.Asks:d.Bids).push(arr[i]);return d},self.GetTickers=function(){self.lastRawJSON="";var ret=Module.js_Exchange_GetTickers(eIdx);return ret?Vector2Array(ret):null},self.GetMarkets=function(){return JSON.parse(Module.js_Exchange_GetMarkets(eIdx))},self.GetTicker=function(symbol){return self.lastRawJSON="",Module.js_Exchange_GetTicker(eIdx,symbol||"")},self.GetData=function(pair,timeout,offset){"number"!=typeof timeout&&(timeout=6e4),"number"!=typeof offset&&(offset=0),self.lastRawJSON="";pair=Module.js_Exchange_GetData(eIdx,pair,timeout,offset);return 0<pair.Data.length?pair.Data=JSON.parse(pair.Data):pair.Data=null,pair},self.GetTrades=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetTrades(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.SetMaxBarLen=function(n){self.maxBarLen=n},self.GetRecords=function(symbol,period,limit){"number"==typeof symbol?(limit=period,period=symbol,symbol=""):void 0===symbol&&(symbol="",period=-1,limit=0),self.lastRawJSON="";symbol=Module.js_Exchange_GetRecords(eIdx,symbol||"",period=void 0!==period&&-1!=period?period:self.period/1e3,limit="number"!=typeof limit?0:limit);if(!symbol)return null;var records=Vector2Array(symbol),symbol=self.currency+"/"+self.ct+"/"+period.toString();if(void 0===self.cache[symbol])records.length>self.maxBarLen&&(records=records.slice(records.length-self.maxBarLen)),self.cache[symbol]=records;else for(var c=self.cache[symbol],preTime=0<c.length?c[c.length-1].Time:0,i=0;i<records.length;i++)records[i].Time==preTime&&0<c.length?c[c.length-1]=records[i]:records[i].Time>preTime&&(c.push(records[i]),preTime=c[c.length-1].Time,c.length>self.maxBarLen)&&c.shift();let bars=self.cache[symbol];return bars=0<limit&&bars.length>limit?bars.slice(bars.length-limit):bars},self.GetAccount=function(){return self.lastRawJSON="ctpAccount",Module.js_Exchange_GetAccount(eIdx)},self.GetRawJSON=function(){return"ctpAccount"!=self.lastRawJSON?self.lastRawJSON:Module.js_Exchange_GetCTPAccountJSON(eIdx)},self.Buy=function(price,amount){return self.lastRawJSON="",Module.js_Exchange_Buy(eIdx,price,amount,valuesToString(Array.prototype.slice.call(arguments),2))},self.Sell=function(price,amount){return self.lastRawJSON="",Module.js_Exchange_Sell(eIdx,price,amount,valuesToString(Array.prototype.slice.call(arguments),2))},self.CreateOrder=function(symbol,side,price,amount){return self.lastRawJSON="",Module.js_Exchange_CreateOrder(eIdx,symbol,side,price,amount,valuesToString(Array.prototype.slice.call(arguments),4))},self.Log=function(orderType,price,amount){Module.js_Exchange_Log(eIdx,orderType,price,2==orderType?0:amount,valuesToString(Array.prototype.slice.call(arguments),2==orderType?2:3))},self.GetOrders=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetOrders(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.GetHistoryOrders=function(symbol,since,limit){self.lastRawJSON="",void 0===limit&&(limit=0);symbol=Module.js_Exchange_GetHistoryOrders(eIdx,symbol||"",(since=void 0===since?0:since).toString(),limit);return symbol?Vector2Array(symbol):null},self.GetAssets=function(){self.lastRawJSON="";var ret=Module.js_Exchange_GetAssets(eIdx);return ret?Vector2Array(ret):null},self.GetOrder=function(orderId){return self.lastRawJSON="",Module.js_Exchange_GetOrder(eIdx,orderId)},self.CancelOrder=function(orderId){return self.lastRawJSON="",Module.js_Exchange_CancelOrder(eIdx,orderId,valuesToString(Array.prototype.slice.call(arguments),1))},self.SetDirection=function(s){return Module.js_Exchange_SetDirection(eIdx,s)},self.SetMarginLevel=function(symbol,marginLevel){var tmp;return"number"==typeof symbol&&(tmp=marginLevel||"",marginLevel=symbol,symbol=tmp),Module.js_Exchange_SetMarginLevel(eIdx,symbol,marginLevel)},self.SetContractType=function(symbol){var r=Module.js_Exchange_SetContractType(eIdx,symbol);return"string"==typeof r?(self.ct=symbol,JSON.parse(r)):null},self.GetContractType=function(){return self.ct},self.GetPosition=self.GetPositions=function(symbol){self.lastRawJSON="";symbol=Module.js_Exchange_GetPositions(eIdx,symbol||"");return symbol?Vector2Array(symbol):null},self.Go=function(){var args=Array.prototype.slice.call(arguments),ret=self[args[0]].apply(self,args.slice(1));return{wait:function(){return ret}}},self}(i);var gApis={kvdb:{}},__realDate=Date,__cRetryDelay=3e3,runtime=(gApis.RDate=__realDate,gApis.Benchmark=Module.js_Benchmark,gApis._T=function(a,b){return"[trans]"+("string"==typeof b?a+"|"+b:a)+"[/trans]"},gApis._D=function(date,fmt){void 0===fmt&&(fmt="yyyy-MM-dd hh:mm:ss"),"number"==typeof date?date=new __realDate(date):void 0===date&&(date=new __realDate(Module.js_UnixNano()/1e6));var y=date.getFullYear(),yy=(y%100).toString();1==yy.length&&(yy="0"+yy);var M=(M="0"+(date.getMonth()+1)).substring(M.length-2),d=(d="0"+date.getDate()).substring(d.length-2),h=(h="0"+date.getHours()).substring(h.length-2),m=(m="0"+date.getMinutes()).substring(m.length-2),date=(date="0"+date.getSeconds()).substring(date.length-2);return fmt.replace("yyyy",y).replace("MM",M).replace("dd",d).replace("hh",h).replace("mm",m).replace("ss",date).replace("yy",yy)},gApis.Unix=function(){return Module.js_Unix()},gApis.UnixNano=function(){return Module.js_UnixNano()},gApis.Sleep=function(n){Module.js_Sleep(n)},gApis.Log=function(){Module.js_Log(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogError=function(){Module.js_LogError(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogStatus=function(){Module.js_LogStatus(valuesToString(Array.prototype.slice.call(arguments)))},gApis.LogProfit=function(profit){Module.js_LogProfit(profit,valuesToString(Array.prototype.slice.call(arguments),1))},gApis.LogReset=function(keep){Module.js_LogReset(keep=void 0===keep?0:keep)},gApis.EnableLog=function(flag){Module.js_EnableLog(flag=void 0===flag?!0:flag)},gApis.LogProfitReset=function(keep){Module.js_LogProfitReset(keep=void 0===keep?0:keep)},gApis.Date=function(s){return void 0===s&&(s=Module.js_UnixNano()/1e6),new __realDate(s)},gApis.Date.UTC=__realDate.UTC,gApis.Date.parse=__realDate.parse,gApis.Date.now=function(){return Module.js_UnixNano()/1e6},gApis._Cross=function(arr1,arr2){if(arr1.length!==arr2.length)throw"cross array length not equal";for(var n=0,i=arr1.length-1;0<=i&&"number"==typeof arr1[i]&&"number"==typeof arr2[i];i--)if(arr1[i]<arr2[i]){if(0<n)break;n--}else{if(!(arr1[i]>arr2[i]))break;if(n<0)break;n++}return n},gApis._N=function(v,precision){"number"!=typeof precision&&(precision=4);var v=parseFloat(v.toFixed(Math.max(10,precision+5))),s=toNonExponential(v).split(".");return!(0<=precision&&(s.length<2||s[1].length<=precision))&&((s=v<0)&&(v=-v),precision=Math.pow(10,precision),v=Math.floor(v*precision)/precision,s)&&0!=v?-v:v},gApis._C=function(method){for(var r;!(r=method.apply(this,Array.prototype.slice.call(arguments).slice(1)));)gApis.Sleep(__cRetryDelay);return r},gApis._CDelay=function(n){0<n&&(__cRetryDelay=n)},gApis.GetPid=function(){return 1},gApis.GetOS=function(){return"linux/amd64"},gApis.GetLastError=function(){return Module.js_GetLastError()},gApis.SetErrorFilter=function(s){},gApis.MD5=function(s){return Module.js_MD5(s)},gApis.UUID=function(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)},gApis.GetCommand=function(){return""},gApis.GetMeta=function(){return""},gApis.Mail=function(){return!0},gApis.Mail_Go=function(){return!0},gApis.EventLoop=function(){gApis.LogError("sandbox not support EventLoop")},gApis.Dial=function(){gApis.LogError("sandbox not support Dial")},gApis.DBExec=function(){gApis.LogError("sandbox not support DBExec")},gApis.Encode=function(){gApis.LogError("sandbox not support Encode")},gApis.HttpQuery=function(url,data,cookies,headers,isReturnHeader,isAsync){null==cookies&&(cookies=""),null==headers&&(headers=""),void 0===isReturnHeader&&(isReturnHeader=!1);var ret=Module.js_HttpQuery(url);return isAsync?{wait:function(){return ret}}:ret},gApis.JSONParse=function(s){return JSON.parse(s)},gApis.StrDecode=function(s){gApis.LogError("sandbox not support StrDecode")},gApis.IsVirtual=function(){return!0},gApis.EnableLogLocal=function(){},gApis.LogVacuum=function(){},gApis.Version=function(){return"3.6"},gApis._G=function(k,v){if(void 0===k)return 1;if(null==k)gApis.kvdb={};else{if(k=k.toLowerCase(),void 0===v)return void 0===gApis.kvdb[k]?null:gApis.kvdb[k];null==v?delete gApis.kvdb[k]:gApis.kvdb[k]=v}},gApis.Chart=function(js){var self={update:function(cfg){Module.js_Chart_New(utf8_encode(JSON.stringify(cfg)))},add:function(seriesIdx,d,replaceId){var arr=[];"number"!=typeof seriesIdx?arr=seriesIdx:(arr=[seriesIdx,d],void 0!==replaceId&&arr.push(replaceId)),Module.js_Chart_Add(utf8_encode(JSON.stringify(arr)))},reset:function(reverse){Module.js_Chart_Reset("number"!=typeof reverse?0:reverse)}};return self.update(js),self},gApis.KLineChart=function(options){(options=void 0===options?{}:options).__isCandle=!0;function newPlot(shape){return void 0===shape.overlay&&(shape.overlay=scope.overlay),"shape"!=shape.type&&"bgcolor"!=shape.type&&"barcolor"!=shape.type&&(shape.title&&!scope.runtime.titles[shape.title]||(shape.title="<"+(shape.title||"plot")+"_"+scope.runtime.count.toString()+">"),scope.runtime.count+=1,shape.title)&&(scope.runtime.titles[shape.title]=!0),shape}var scope={chart:gApis.Chart(options),bar:{},overlay:options.overlay||!1,preTime:0,runtime:{plots:[],signals:[],titles:{},count:0}};return scope.register=function(name,args,pfn){var dic={},names=[];args.forEach(function(s,i){Array.isArray(s)?(names.push(s[0]),dic[s[0]]={pos:i,val:s[1]}):(names.push(s),dic[s]={pos:i})}),scope[name]=function(){if(!(scope.bar.Time<scope.preTime)){var argv={};for(k in dic)void 0!==dic[k].val&&(argv[k]=dic[k].val);for(var i=0;i<arguments.length;i++)if(i==arguments.length-1&&"object"==typeof arguments[i])for(var k in arguments[i])void 0!==dic[k]&&(argv[k]=arguments[i][k]);else void 0!==dic[names[i]]&&(argv[names[i]]=arguments[i]);return pfn(argv)}}},scope.begin=function(bar){scope.bar=bar},scope.reset=function(remain){scope.chart.reset(remain),scope.preTime=0},scope.close=function(){var data;scope.bar.Time<scope.preTime||(data={timestamp:scope.bar.Time,open:scope.bar.Open,high:scope.bar.High,low:scope.bar.Low,close:scope.bar.Close,volume:scope.bar.Volume},0<scope.runtime.plots.length&&(data.runtime||(data.runtime={}),data.runtime.plots=scope.runtime.plots),0<scope.runtime.signals.length&&(data.runtime||(data.runtime={}),data.runtime.signals=scope.runtime.signals),scope.preTime==scope.bar.Time?scope.chart.add(0,data,-1):scope.chart.add(0,data),scope.preTime=scope.bar.Time,scope.runtime.plots=[],scope.runtime.signals=[],scope.runtime.titles={},scope.runtime.count=0)},scope.register("plot",[["series",NaN],"title","color","linewidth",["style","line"],"trackprice",["histbase",0],["offset",0],["join",!1],"editable","show_last",["display","all"],"overlay"],function(argv,idx){if(!isNaN(argv.series))return scope.runtime.plots.push(newPlot({series:argv.series,overlay:argv.overlay,title:argv.title,join:argv.join,color:argv.color,histbase:argv.histbase,type:argv.style,lineWidth:argv.linewidth,display:argv.display,offset:argv.offset})),scope.runtime.plots.length-1}),scope.register("barcolor",["color","offset","editable","show_last","title",["display","all"]],function(argv,idx){"string"==typeof argv.color&&"all"==argv.display&&scope.runtime.plots.push({type:"barcolor",title:argv.title,color:argv.color,offset:argv.offset,showLast:argv.show_last,display:argv.display})}),scope.register("plotarrow",["series","title",["colorup","#00ff00"],["colordown","#ff0000"],["offset",0],["minheight",5],["maxheight",100],["editable",!0],"show_last",["display","all"],"overlay"],function(argv){"all"!=argv.display||isNaN(argv.series)||scope.runtime.plots.push(newPlot({series:argv.series,title:argv.title,colorup:argv.colorup,colordown:argv.colordown,offset:argv.offset,minheight:argv.minheight,maxheight:argv.maxheight,showLast:argv.show_last,type:"shape",style:"arrow",display:argv.display,overlay:argv.overlay}))}),scope.register("hline",["price","title","color",["linestyle","dashed"],"linewidth","editable",["display","all"],"overlay"],function(argv){return scope.runtime.plots.push(newPlot({title:argv.title,price:argv.price,overlay:argv.overlay,color:argv.color,type:"hline",lineStyle:argv.linestyle,lineWidth:argv.linewidth,display:argv.display})),scope.runtime.plots.length-1}),scope.register("bgcolor",["color","offset","editable","show_last","title",["display","all"],"overlay"],function(argv){"string"==typeof argv.color&&"all"==argv.display&&scope.runtime.plots.push(newPlot({title:argv.title,overlay:argv.overlay,color:argv.color,type:"bgcolor",showLast:argv.show_last,offset:argv.offset}))}),scope.register("plotchar",["series","title","char",["location","abovebar"],"color","offset","text","textcolor","editable",["size","auto"],"show_last","display","overlay"],function(argv){"absolute"!=argv.location&&!argv.series||"absolute"==argv.location&&isNaN(argv.series)||!argv.char||scope.runtime.plots.push(newPlot({overlay:argv.overlay,type:"shape",style:"char",char:argv.char,series:argv.series,location:argv.location,color:argv.color,offset:argv.offset,size:argv.size,text:argv.text,textColor:argv.textcolor}))}),scope.register("plotshape",["series","title","style",["location","abovebar"],"color","offset","text","textcolor","editable",["size","auto"],"show_last","display","overlay"],function(argv){"absolute"!=argv.location&&!argv.series||"absolute"==argv.location&&isNaN(argv.series)||scope.runtime.plots.push(newPlot({type:"shape",overlay:argv.overlay,title:argv.title,size:argv.size,style:argv.style,series:argv.series,location:argv.location,color:argv.color,offset:argv.offset,text:argv.text,textColor:argv.textcolor}))}),scope.register("plotcandle",["open","high","low","close","title","color","wickcolor","editable","show_last","bordercolor",["display","all"],"overlay"],function(argv){"all"==argv.display&&scope.runtime.plots.push(newPlot({price:argv.high,open:argv.open,high:argv.high,low:argv.low,close:argv.close,title:argv.title,color:argv.color,wickColor:argv.wickcolor,showLast:argv.show_last,borderColor:argv.bordercolor,type:"candle",display:argv.display,overlay:argv.overlay}))}),scope.register("fill",["plot1","plot2","color","title","editable","show_last","fillgaps",["display","all"]],function(argv){var dst;0<=argv.plot1&&0<=argv.plot2&&argv.plot1<scope.runtime.plots.length&&argv.plot2<scope.runtime.plots.length&&"all"==argv.display&&void 0!==(dst=scope.runtime.plots[argv.plot1])&&(void 0===dst.fill&&(dst.fill=[]),dst.fill.push({value:scope.runtime.plots[argv.plot2].series,color:argv.color,showLast:argv.show_last}))}),scope.register("signal",["direction","price","qty","id"],function(argv){var task={id:argv.id||argv.direction,qty:argv.qty,avgPrice:argv.price};"buy"==argv.direction||"long"==argv.direction?task.direction="long":"sell"==argv.direction||"short"==argv.direction?task.direction="short":"closesell"==argv.direction||"closeshort"==argv.direction?(task.direction="close",task.closeDirection="short"):"closebuy"!=argv.direction&&"closelong"!=argv.direction||(task.direction="close",task.closeDirection="long"),(task.direction||task.closeDirection)&&scope.runtime.signals.push(task)}),scope},gApis.$={},gApis.ORDER_STATE_PENDING=0,gApis.ORDER_STATE_CLOSED=1,gApis.ORDER_STATE_CANCELED=2,gApis.ORDER_STATE_UNKNOWN=3,gApis.ORDER_TYPE_BUY=0,gApis.ORDER_TYPE_SELL=1,gApis.ORDER_OFFSET_OPEN=0,gApis.ORDER_OFFSET_CLOSE=1,gApis.PD_LONG=0,gApis.PD_SHORT=1,gApis.PD_LONG_YD=2,gApis.PD_SHORT_YD=3,gApis.LOG_TYPE_BUY=0,gApis.LOG_TYPE_SELL=1,gApis.LOG_TYPE_CANCEL=2,gApis.LOG_TYPE_ERROR=3,gApis.LOG_TYPE_PROFIT=4,gApis.LOG_TYPE_LOG=5,gApis.LOG_TYPE_RESTART=6,gApis.PERIOD_M1=60,gApis.PERIOD_M3=180,gApis.PERIOD_M5=300,gApis.PERIOD_M15=900,gApis.PERIOD_M30=1800,gApis.PERIOD_H1=3600,gApis.PERIOD_H2=7200,gApis.PERIOD_H4=14400,gApis.PERIOD_H6=21600,gApis.PERIOD_H12=43200,gApis.PERIOD_D1=86400,gApis.PERIOD_D3=259200,gApis.PERIOD_W1=604800,gApis.exchanges=exchanges,gApis.exchange=exchanges[0],gApis.talib=Module.talib(),gApis.TA=TAInstance(function(name){Module.js_LogTA(name,valuesToString(Array.prototype.slice.call(arguments),1,","))}),null),getMapLines=(gApis.__runtime__=function(obj){runtime=obj},function(source){var endPos,rawTxt,mapLinesPos=source.indexOf("//# sourceMappingObj=");return-1!=mapLinesPos?(rawTxt="",rawTxt=-1==(endPos=source.indexOf("\n",mapLinesPos+1))?source.slice(mapLinesPos+"//# sourceMappingObj=".length):source.slice(mapLinesPos+"//# sourceMappingObj=".length,endPos),JSON.parse(rawTxt)):[]}),countLines=function(s){for(var count=1,i=0;i<s.length;i++)"\n"==s[i]&&count++;return count},tpls=task.Code,scope={},k;for(k in gApis)scope[k]=gApis[k];for(var fullSource="",sourceMapObj=[],i=0;i<tpls.length;i++){var tpl=tpls[i],argsLine="",argDic={},suffix=(tpl[1].forEach(function(pair){argsLine+="var "+pair[0]+" = "+JSON.stringify(pair[1])+";",argDic[pair[0]]=pair[1]}),argsLine+="var __arguments = "+JSON.stringify(argDic)+";","\n;if(typeof(init)==='function')init();"),fileName=tpl[2];if(i==tpls.length-1){if(fileName="__FILE__",void 0!==Module.__ret__){scope.__arguments=argDic,tpl[1].forEach(function(pair){scope[pair[0]]=pair[1]}),Module.__ret__.scope=scope,Module.__ret__.Join=Module.js_Join;continue}suffix+=";;main()\nif(typeof(onexit)==='function'){onexit()}"}sourceMapObj.push({baseLine:countLines(fullSource),codeLine:countLines(tpl[0]),fileName:fileName,mapLines:getMapLines(tpl[0])}),fullSource+="(function(){"+argsLine+tpl[0]+suffix+"})();\n"}var evalScope=function(locals,source){with(locals)eval(source)},errMsg,stacks;try{evalScope(scope,fullSource)}catch(err){"EOF"!=err&&(errMsg=err.toString(),stacks=[errMsg],-1==errMsg.indexOf("line:")&&err.stack&&(console.log("\nStacktrace:"),console.log("===================="),console.log(err.stack),err.stack.split("\n").forEach(function(stackLine){var posSearch=stackLine.indexOf("(eval at evalScope ");if(0<posSearch){var pos=stackLine.indexOf("<anonymous>:",posSearch),posSearch=(0<pos&&(e=stackLine.indexOf(")",pos)),stackLine.substring(0,posSearch).split("\n")),stackLine=stackLine.substring(pos+"<anonymous>:".length,e).split(":");if(0<stackLine.length){for(var vLine=parseInt(stackLine[0]),fileName=null,mapLines=[],pIndex=0;pIndex<sourceMapObj.length;pIndex++)if(vLine>=sourceMapObj[pIndex].baseLine&&vLine<sourceMapObj[pIndex].baseLine+sourceMapObj[pIndex].codeLine){fileName=sourceMapObj[pIndex].fileName,mapLines=sourceMapObj[pIndex].mapLines,vLine-=sourceMapObj[pIndex].baseLine-1;break}if(fileName){for(var pItem=0;pItem<mapLines.length;pItem++)if(vLine>=mapLines[pItem][0]&&vLine<=mapLines[pItem][1]){vLine-=mapLines[pItem][2];break}stacks.push(posSearch[posSearch.length-1]+"("+fileName+":"+vLine.toString()+")")}}}})),Module.js_LogError(valuesToString([stacks.join("\n")])))}try{void 0!==task.Step&&task.Step||Module.js_Close(JSON.stringify(runtime))}catch(e){}},Module.VTask=function(task,httpCache,httpGet,callBack,onEnd,retScope){void 0!==retScope&&(Module.__ret__=retScope),void 0!==httpCache&&httpCache||(httpCache={});var retScope=addFunction(function(a,b,c,d){var jsString,a=UTF8ToString(a),a=(void 0!==httpCache[a]?jsString=httpCache[a]:(jsString=httpGet(a),httpCache[a]=jsString),lengthBytesUTF8(jsString)+1),ptr=_malloc(a);return stringToUTF8(jsString,ptr,a+1),setValue(b,ptr,"i32"),setValue(c,a,"i32"),setValue(d,1,"i32"),0},"iiiii"),progressCallback=addFunction(function(st){callBack(JSON.parse(UTF8ToString(st)))},"vi");ccall("backtest","number",["string","string","pointer","pointer"],[JSON.stringify(task),null,retScope,progressCallback]),"function"==typeof onEnd&&onEnd()},moduleArg}})(),fs,os,process,_,math,Decimal,crypto,httpGet,_session,toUnix,fmtTime,toHTML,pdObj,htmlResult,__m;function md5(text){return crypto.createHash("md5").update(text).digest("hex")}function notify(msgType,msg){var msg=Buffer.from(msg),h=Buffer.allocUnsafe(8);h.writeUInt32BE(msgType,0),h.writeUInt32BE(msg.length,4),_session.write(Buffer.concat([h,msg]))}"object"==typeof exports&&"object"==typeof module?module.exports=VBacktest:"function"==typeof define&&define.amd&&define([],()=>VBacktest),"undefined"!=typeof self&&void 0!==self.onmessage?self.onmessage=function(event){var event=event.data,task=event[0],httpCache=event[1],lastProgress=0,lastSummary="";void 0===VBacktest&&importScripts("env.js","decimal.min.js","underscore-min.js","math.min.js",-1==task.Engine.indexOf("wasm")?"sandbox_cpp.js":"sandbox_cpp_wasm.js"),VBacktest().VTask(task,httpCache,function(path){var r=XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");return r.open("GET",path,!1),r.send(null),r.responseText},function(st){var nowProgress;void 0!==st.TaskStatus&&1==st.TaskStatus&&(st.httpCache=httpCache),1==st.TaskStatus?self.postMessage({ret:st}):(nowProgress=st.Progress.toFixed(1))==lastProgress&&lastSummary===st.statusStr||(lastProgress=nowProgress,lastSummary=st.statusStr,self.postMessage({ret:st}))})}:(fs=require("fs"),os=require("os"),process=require("process"),_=this._,math=this.math,Decimal=this.Decimal,crypto=require("crypto"),httpGet=function(url){var tmpCache=os.tmpdir()+"/cache",tmpCache=(fs.existsSync(tmpCache)||fs.mkdirSync(tmpCache),tmpCache+"/botvs_kline_"+md5(url));return fs.existsSync(tmpCache)?fs.readFileSync(tmpCache,"utf-8"):((url=require("sync-request")("GET",url).getBody("utf8"))&&-1!==url.indexOf(",")&&fs.writeFileSync(tmpCache,url,"utf-8"),url)},"undefined"!=typeof s?(_session=s,VBacktest().VTask(__cfg__,null,httpGet,function(st){notify(st.TaskStatus,JSON.stringify(st))},function(){try{_session.end()}catch(e){}})):(toUnix=function(s){var n=parseInt(new Date(s).getTime()/1e3);return-1==s.indexOf(" ")&&(n-=28800),n},fmtTime=function(date,fmt){void 0===fmt&&(fmt="yyyy-MM-dd hh:mm:ss");var y=date.getFullYear(),yy=(y%100).toString();1==yy.length&&(yy="0"+yy);var M=(M="0"+(date.getMonth()+1)).substring(M.length-2),d=(d="0"+date.getDate()).substring(d.length-2),h=(h="0"+date.getHours()).substring(h.length-2),m=(m="0"+date.getMinutes()).substring(m.length-2),date=(date="0"+date.getSeconds()).substring(date.length-2);return fmt.replace("yyyy",y).replace("MM",M).replace("dd",d).replace("hh",h).replace("mm",m).replace("ss",date).replace("yy",yy)},toHTML=function(data){var html="<table><tr><td>";for(i in data.columns)html+="<td>"+data.columns[i]+"</td>";html+="</tr>";for(var rows=[],i=0;i<data.rows.length;i++){for(var rowSkip="",row=(5<=i&&i<data.rows.length-5&&(i=data.rows.length-5,rowSkip="<tr><td>...</td>"),"<tr><td>"+data.index[i]+"</td>"),j=0;j<data.columns.length;j++)0<rowSkip.length&&(rowSkip+="<td>...</td>"),row+="<td>"+data.rows[i][j]+"</td>";0<rowSkip.length&&rows.push(rowSkip+"</tr>"),rows.push(row+"</tr>")}return html=(html+=rows.join("")+"</table>")+("<p>"+data.rows.length+" rows x "+data.columns.length+" columns<p>")},pdObj=function(data){var p=this;p.index=data.index,p.columns=data.columns,data.columns.forEach(function(c){p[c]=[]}),data.rows.forEach(function(row){row.forEach(function(f,idx){idx<data.columns.length&&p[data.columns[idx]].push(f)})}),p._toHtml=function(){return toHTML(data)}},__ctx.exports.get_bars=function(symbol,unit,start,end,count){void 0===count&&(count=1e3),"string"==typeof(unit=void 0===unit?"1d":unit)&&(ec=unit[unit.length-1],unit=parseInt(unit.slice(0,unit.length-1)),"d"==ec?unit*=1440:"h"==ec?unit*=60:"s"==ec&&(unit/=60));var key,ec=parseInt((new Date).getTime()/1e3),params=(void 0!==end&&(ec=toUnix(end)),void 0!==start?(ts_from=toUnix(start),void 0===end&&(ec=ts_from+100*unit*(count+10))):void 0===end?(ts_from=0,ts_end=0):ts_from=ec-100*unit*(count+10),{symbol:symbol,resolution:unit,from:ts_from,to:ec,size:count}),arr=[];for(key in params)arr.push(encodeURIComponent(key)+"="+encodeURIComponent(params[key]));for(var data=JSON.parse(httpGet("https://q.fmz.com/chart/history?"+arr.join("&"))),rows=[],index=[],i=0;i<data.length;i++)index.push(fmtTime(new Date(1e3*data[i][0]))),rows.push(data[i].slice(1,data[i].length));return new pdObj({index:index,rows:rows,columns:["open","high","low","close","volume"]})},htmlResult=function(s){var s=JSON.parse(s),pnl=[],index=[];return s.Snapshots.forEach(function(ele){var acc=ele[1][0];pnl.push([acc.PnL,100*acc.Utilization]),index.push(fmtTime(new Date(ele[0])))}),columns=["PnL","Utilization(%)"],new pdObj({columns:columns,index:index,rows:pnl})},__m=VBacktest(),void 0===global.talib&&(global.talib=__m.talib(),global.TA=__m.TA,global.plot=function(data,layout){void 0!==data.index&&void 0!==data.columns&&(arr=[],data.columns.forEach(function(c){arr.push({name:c,x:data.index,y:data[c]})}),data=arr),Array.isArray(data)&&0<data.length&&"number"==typeof data[0]&&(obj={x:[],y:data},data.forEach(function(ele,idx){obj.x.push(idx+1)}),data=[obj]),void 0===layout&&(layout={});var arr,obj,timestamp=(new Date).getTime(),timestamp=["<div class='plotly-plot'>","<div id='notebook-plot-"+timestamp+"'></div>","<script>","function plot(){","Plotly.plot('notebook-plot-"+timestamp+"',",JSON.stringify(data),",",JSON.stringify(layout),",",JSON.stringify({displaylogo:!1}),");","}","if(window.Plotly){","plot();","}else{","var head = document.head || document.getElementsByTagName('head')[0];","var s = document.createElement('script');","s.charset='utf-8';","s.src = 'https://www.fmz.com/pkg/plotly-latest.min.js';","s.type = 'text/javascript';","s.async = false;","s.onreadystatechange = s.onload = plot;","head.appendChild(s);","}","<\/script>","</div>"].join("");$$.html(timestamp)}),__ctx.exports.VCtx=function(obj){function periodToMs(s,def){var tmp;return s.length<2||(tmp=parseInt(s.slice(0,s.length-1)),"d"==(s=s[s.length-1])?def=6e4*tmp*60*24:"m"==s?def=6e4*tmp:"h"==s&&(def=36e4*tmp)),def}function dicGet(obj,k,v){return void 0!==obj[k]?obj[k]:v}var k,period=periodToMs(obj.period,36e5),basePeriod=36e5,exchanges=("string"==typeof obj.basePeriod?basePeriod=periodToMs(obj.basePeriod,basePeriod):864e5==period?basePeriod=36e5:36e5==period?basePeriod=18e5:18e5==period?basePeriod=9e5:9e5==period?basePeriod=3e5:3e5==period&&(basePeriod=6e4),[]),feeDef={Huobi:[150,200],OKX:[150,200],Binance:[150,200],Futures_BitMEX:[8,10],Futures_OKX:[30,30],Futures_HuobiDM:[30,30],Futures_CTP:[25,25],Futures_XTP:[30,130]},isCNY=!1,period=(obj.exchanges.forEach(function(e){var arr=e.currency.toUpperCase().split("_"),fee=(1==arr.length&&arr.push(-1!=e.eid.indexOf("CTP")?"CNY":"USD"),[200,200]),v=e.fee,fee=void 0!==v?[1e3*v[0],1e3*v[1]]:feeDef[e.eid]||[200,200];cfg={Balance:dicGet(e,"balance",1e4),BaseCurrency:arr[0],BasePeriod:basePeriod,DepthDeep:5,DepthAmount:20,FaultTolerant:0,PreBarLen:1e3,FeeDenominator:5,FeeMaker:fee[0],FeeTaker:fee[1],FeeMin:dicGet(e,"feeMin",0),Id:e.eid,Label:e.eid,QuoteCurrency:arr[1],SlipPoint:0,Stocks:dicGet(e,"stocks",3)},"Futures_CTP"==e.eid||"Futures_XTP"==e.eid?(cfg.DepthDeep=1,isCNY=!0):"Futures_OKX"!=e.eid&&"Futures_HuobiDM"!=e.eid&&"Bitfinex"!=e.eid&&"Binance"!=e.eid&&("Futures_BitMEX"==e.eid?15!=(v=cfg.BasePeriod/6e4)&&30!=v||(cfg.BasePeriod=3e5):e.eid.indexOf("Futures")),exchanges.push(cfg)}),(options={DataServer:obj.dataServer||(isCNY?"https://q.youquant.com":"https://q.fmz.com"),MaxChartLogs:800,MaxProfitLogs:800,MaxRuntimeLogs:800,NetDelay:200,Period:period,RetFlags:189,UpdatePeriod:5e3}).TimeBegin=toUnix(obj.start),options.TimeEnd=toUnix(obj.end),86400),obj=options.TimeEnd-options.TimeBegin,ctx=(obj/3600<=2?period=60:obj/86400<=2?period=300:obj/86400<30&&(period=3600),options.SnapshotPeriod=1e3*period,options.RetFlags|=256,{});for(k in __m.VTask({Code:[["function main() {}",[],"main"]],Exchanges:exchanges,Options:options,Step:!0},null,httpGet,function(st){},function(){},ctx),ctx.scope)"Date"!=k&&(global[k]=ctx.scope[k]);var realJoin=ctx.Join;return ctx.Join=function(report){var r=realJoin();return report?htmlResult(r):r},ctx}));